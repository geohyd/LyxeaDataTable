import Va from "jquery";
/*! DataTables 2.0.0
 * Â© SpryMedia Ltd - datatables.net/license
 */
var Xt = Va, ge = function(s, g) {
  if (ge.factory(s, g))
    return ge;
  if (this instanceof ge)
    return Xt(s).DataTable(g);
  g = s;
  var x = this, C = g === void 0, B = this.length;
  return C && (g = {}), this.api = function() {
    return new Sr(this);
  }, this.each(function() {
    var O = {}, c = B > 1 ? (
      // optimisation for single table case
      Qs(O, g, !0)
    ) : g, d = 0, t, o = this.getAttribute("id"), r = !1, n = ge.defaults, i = Xt(this);
    if (this.nodeName.toLowerCase() != "table") {
      qn(null, 0, "Non-table node initialisation (" + this.nodeName + ")", 2);
      return;
    }
    Xt(this).trigger("options.dt", c), js(n), uf(n.column), Oa(n, n, !0), Oa(n.column, n.column, !0), Oa(n, Xt.extend(c, i.data()), !0);
    var f = ge.settings;
    for (d = 0, t = f.length; d < t; d++) {
      var l = f[d];
      if (l.nTable == this || l.nTHead && l.nTHead.parentNode == this || l.nTFoot && l.nTFoot.parentNode == this) {
        var u = c.bRetrieve !== void 0 ? c.bRetrieve : n.bRetrieve, h = c.bDestroy !== void 0 ? c.bDestroy : n.bDestroy;
        if (C || u)
          return l.oInstance;
        if (h) {
          new ge.Api(l).destroy();
          break;
        } else {
          qn(l, 0, "Cannot reinitialise DataTable", 3);
          return;
        }
      }
      if (l.sTableId == this.id) {
        f.splice(d, 1);
        break;
      }
    }
    (o === null || o === "") && (o = "DataTables_Table_" + ge.ext._unique++, this.id = o);
    var a = Xt.extend(!0, {}, ge.models.oSettings, {
      sDestroyWidth: i[0].style.width,
      sInstance: o,
      sTableId: o,
      colgroup: Xt("<colgroup>").prependTo(this),
      fastData: function(T, A, F) {
        return ta(a, T, A, F);
      }
    });
    a.nTable = this, a.oInit = c, f.push(a), a.api = new Sr(a), a.oInstance = x.length === 1 ? x : i.dataTable(), js(c), c.aLengthMenu && !c.iDisplayLength && (c.iDisplayLength = Array.isArray(c.aLengthMenu[0]) ? c.aLengthMenu[0][0] : Xt.isPlainObject(c.aLengthMenu[0]) ? c.aLengthMenu[0].value : c.aLengthMenu[0]), c = Qs(Xt.extend(!0, {}, n), c), Ra(a.oFeatures, c, [
      "bPaginate",
      "bLengthChange",
      "bFilter",
      "bSort",
      "bSortMulti",
      "bInfo",
      "bProcessing",
      "bAutoWidth",
      "bSortClasses",
      "bServerSide",
      "bDeferRender"
    ]), Ra(a, c, [
      "ajax",
      "fnFormatNumber",
      "sServerMethod",
      "aaSorting",
      "aaSortingFixed",
      "aLengthMenu",
      "sPaginationType",
      "iStateDuration",
      "bSortCellsTop",
      "iTabIndex",
      "sDom",
      "fnStateLoadCallback",
      "fnStateSaveCallback",
      "renderer",
      "searchDelay",
      "rowId",
      "caption",
      "layout",
      ["iCookieDuration", "iStateDuration"],
      // backwards compat
      ["oSearch", "oPreviousSearch"],
      ["aoSearchCols", "aoPreSearchCols"],
      ["iDisplayLength", "_iDisplayLength"]
    ]), Ra(a.oScroll, c, [
      ["sScrollX", "sX"],
      ["sScrollXInner", "sXInner"],
      ["sScrollY", "sY"],
      ["bScrollCollapse", "bCollapse"]
    ]), Ra(a.oLanguage, c, "fnInfoCallback"), $n(a, "aoDrawCallback", c.fnDrawCallback), $n(a, "aoStateSaveParams", c.fnStateSaveParams), $n(a, "aoStateLoadParams", c.fnStateLoadParams), $n(a, "aoStateLoaded", c.fnStateLoaded), $n(a, "aoRowCallback", c.fnRowCallback), $n(a, "aoRowCreatedCallback", c.fnCreatedRow), $n(a, "aoHeaderCallback", c.fnHeaderCallback), $n(a, "aoFooterCallback", c.fnFooterCallback), $n(a, "aoInitComplete", c.fnInitComplete), $n(a, "aoPreDrawCallback", c.fnPreDrawCallback), a.rowIdFn = li(c.rowId), jh(a);
    var v = a.oClasses;
    Xt.extend(v, ge.ext.classes, c.oClasses), i.addClass(v.table), a.oFeatures.bPaginate || (c.iDisplayStart = 0), a.iInitDisplayStart === void 0 && (a.iInitDisplayStart = c.iDisplayStart, a._iDisplayStart = c.iDisplayStart);
    var y = a.oLanguage;
    Xt.extend(!0, y, c.oLanguage), y.sUrl ? (Xt.ajax({
      dataType: "json",
      url: y.sUrl,
      success: function(T) {
        Oa(n.oLanguage, T), Xt.extend(!0, y, T, a.oInit.oLanguage), Nr(a, null, "i18n", [a]), To(a);
      },
      error: function() {
        qn(a, 0, "i18n file loading error", 21), To(a);
      }
    }), r = !0) : Nr(a, null, "i18n", [a]);
    var p = [], e = this.getElementsByTagName("thead"), m = mf(a, e[0]);
    if (c.aoColumns)
      p = c.aoColumns;
    else if (m.length)
      for (d = 0, t = m[0].length; d < t; d++)
        p.push(null);
    for (d = 0, t = p.length; d < t; d++)
      cf(a);
    Xh(a, c.aoColumnDefs, p, m, function(T, A) {
      p0(a, T, A);
    });
    var w = i.children("tbody").find("tr").eq(0);
    if (w.length) {
      var D = function(T, A) {
        return T.getAttribute("data-" + A) !== null ? A : null;
      };
      Xt(w[0]).children("th, td").each(function(T, A) {
        var F = a.aoColumns[T];
        if (F || qn(a, 0, "Incorrect column count", 18), F.mData === T) {
          var b = D(A, "sort") || D(A, "order"), R = D(A, "filter") || D(A, "search");
          (b !== null || R !== null) && (F.mData = {
            _: T + ".display",
            sort: b !== null ? T + ".@data-" + b : void 0,
            type: b !== null ? T + ".@data-" + b : void 0,
            filter: R !== null ? T + ".@data-" + R : void 0
          }, F._isArrayHost = !0, p0(a, T));
        }
      });
    }
    var I = a.oFeatures, E = function() {
      if (c.aaSorting === void 0) {
        var T = a.aaSorting;
        for (d = 0, t = T.length; d < t; d++)
          T[d][1] = a.aoColumns[d].asSorting[0];
      }
      y0(a), $n(a, "aoDrawCallback", function() {
        (a.bSorted || Zn(a) === "ssp" || I.bDeferRender) && y0(a);
      });
      var A = i.children("caption");
      a.caption && (A.length === 0 && (A = Xt("<caption/>").appendTo(i)), A.html(a.caption)), A.length && (A[0]._captionSide = A.css("caption-side"), a.captionNode = A[0]), e.length === 0 && (e = Xt("<thead/>").appendTo(i)), a.nTHead = e[0], Xt("tr", e).addClass(v.thead.row);
      var F = i.children("tbody");
      F.length === 0 && (F = Xt("<tbody/>").insertAfter(e)), a.nTBody = F[0];
      var b = i.children("tfoot");
      if (b.length === 0 && (b = Xt("<tfoot/>").appendTo(i)), a.nTFoot = b[0], Xt("tr", b).addClass(v.tfoot.row), c.aaData)
        for (d = 0; d < c.aaData.length; d++)
          Za(a, c.aaData[d]);
      else
        Zn(a) == "dom" && P0(a, Xt(a.nTBody).children("tr"));
      a.aiDisplay = a.aiDisplayMaster.slice(), a.bInitialised = !0, r === !1 && To(a);
    };
    $n(a, "aoDrawCallback", zo), c.bStateSave ? (I.bStateSave = !0, ud(a, c, E)) : E();
  }), x = null, this;
};
ge.ext = Vr = {
  /**
   * Buttons. For use with the Buttons extension for DataTables. This is
   * defined here so other extensions can define buttons regardless of load
   * order. It is _not_ used by DataTables core.
   *
   *  @type object
   *  @default {}
   */
  buttons: {},
  /**
   * Element class names
   *
   *  @type object
   *  @default {}
   */
  classes: {},
  /**
   * DataTables build type (expanded by the download builder)
   *
   *  @type string
   */
  builder: "-source-",
  /**
   * Error reporting.
   * 
   * How should DataTables report an error. Can take the value 'alert',
   * 'throw', 'none' or a function.
   *
   *  @type string|function
   *  @default alert
   */
  errMode: "alert",
  /**
   * Legacy so v1 plug-ins don't throw js errors on load
   */
  feature: [],
  /**
   * Feature plug-ins.
   * 
   * This is an object of callbacks which provide the features for DataTables
   * to be initialised via the `layout` option.
   */
  features: {},
  /**
   * Row searching.
   * 
   * This method of searching is complimentary to the default type based
   * searching, and a lot more comprehensive as it allows you complete control
   * over the searching logic. Each element in this array is a function
   * (parameters described below) that is called for every row in the table,
   * and your logic decides if it should be included in the searching data set
   * or not.
   *
   * Searching functions have the following input parameters:
   *
   * 1. `{object}` DataTables settings object: see
   *    {@link DataTable.models.oSettings}
   * 2. `{array|object}` Data for the row to be processed (same as the
   *    original format that was passed in as the data source, or an array
   *    from a DOM data source
   * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which
   *    can be useful to retrieve the `TR` element if you need DOM interaction.
   *
   * And the following return is expected:
   *
   * * {boolean} Include the row in the searched result set (true) or not
   *   (false)
   *
   * Note that as with the main search ability in DataTables, technically this
   * is "filtering", since it is subtractive. However, for consistency in
   * naming we call it searching here.
   *
   *  @type array
   *  @default []
   *
   *  @example
   *    // The following example shows custom search being applied to the
   *    // fourth column (i.e. the data[3] index) based on two input values
   *    // from the end-user, matching the data in a certain range.
   *    $.fn.dataTable.ext.search.push(
   *      function( settings, data, dataIndex ) {
   *        var min = document.getElementById('min').value * 1;
   *        var max = document.getElementById('max').value * 1;
   *        var version = data[3] == "-" ? 0 : data[3]*1;
   *
   *        if ( min == "" && max == "" ) {
   *          return true;
   *        }
   *        else if ( min == "" && version < max ) {
   *          return true;
   *        }
   *        else if ( min < version && "" == max ) {
   *          return true;
   *        }
   *        else if ( min < version && version < max ) {
   *          return true;
   *        }
   *        return false;
   *      }
   *    );
   */
  search: [],
  /**
   * Selector extensions
   *
   * The `selector` option can be used to extend the options available for the
   * selector modifier options (`selector-modifier` object data type) that
   * each of the three built in selector types offer (row, column and cell +
   * their plural counterparts). For example the Select extension uses this
   * mechanism to provide an option to select only rows, columns and cells
   * that have been marked as selected by the end user (`{selected: true}`),
   * which can be used in conjunction with the existing built in selector
   * options.
   *
   * Each property is an array to which functions can be pushed. The functions
   * take three attributes:
   *
   * * Settings object for the host table
   * * Options object (`selector-modifier` object type)
   * * Array of selected item indexes
   *
   * The return is an array of the resulting item indexes after the custom
   * selector has been applied.
   *
   *  @type object
   */
  selector: {
    cell: [],
    column: [],
    row: []
  },
  /**
   * Legacy configuration options. Enable and disable legacy options that
   * are available in DataTables.
   *
   *  @type object
   */
  legacy: {
    /**
     * Enable / disable DataTables 1.9 compatible server-side processing
     * requests
     *
     *  @type boolean
     *  @default null
     */
    ajax: null
  },
  /**
   * Pagination plug-in methods.
   * 
   * Each entry in this object is a function and defines which buttons should
   * be shown by the pagination rendering method that is used for the table:
   * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the
   * buttons are displayed in the document, while the functions here tell it
   * what buttons to display. This is done by returning an array of button
   * descriptions (what each button will do).
   *
   * Pagination types (the four built in options and any additional plug-in
   * options defined here) can be used through the `paginationType`
   * initialisation parameter.
   *
   * The functions defined take two parameters:
   *
   * 1. `{int} page` The current page index
   * 2. `{int} pages` The number of pages in the table
   *
   * Each function is expected to return an array where each element of the
   * array can be one of:
   *
   * * `first` - Jump to first page when activated
   * * `last` - Jump to last page when activated
   * * `previous` - Show previous page when activated
   * * `next` - Show next page when activated
   * * `{int}` - Show page of the index given
   * * `{array}` - A nested array containing the above elements to add a
   *   containing 'DIV' element (might be useful for styling).
   *
   * Note that DataTables v1.9- used this object slightly differently whereby
   * an object with two functions would be defined for each plug-in. That
   * ability is still supported by DataTables 1.10+ to provide backwards
   * compatibility, but this option of use is now decremented and no longer
   * documented in DataTables 1.10+.
   *
   *  @type object
   *  @default {}
   *
   *  @example
   *    // Show previous, next and current page buttons only
   *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {
   *      return [ 'previous', page, 'next' ];
   *    };
   */
  pager: {},
  renderer: {
    pageButton: {},
    header: {}
  },
  /**
   * Ordering plug-ins - custom data source
   * 
   * The extension options for ordering of data available here is complimentary
   * to the default type based ordering that DataTables typically uses. It
   * allows much greater control over the the data that is being used to
   * order a column, but is necessarily therefore more complex.
   * 
   * This type of ordering is useful if you want to do ordering based on data
   * live from the DOM (for example the contents of an 'input' element) rather
   * than just the static string that DataTables knows of.
   * 
   * The way these plug-ins work is that you create an array of the values you
   * wish to be ordering for the column in question and then return that
   * array. The data in the array much be in the index order of the rows in
   * the table (not the currently ordering order!). Which order data gathering
   * function is run here depends on the `dt-init columns.orderDataType`
   * parameter that is used for the column (if any).
   *
   * The functions defined take two parameters:
   *
   * 1. `{object}` DataTables settings object: see
   *    {@link DataTable.models.oSettings}
   * 2. `{int}` Target column index
   *
   * Each function is expected to return an array:
   *
   * * `{array}` Data for the column to be ordering upon
   *
   *  @type array
   *
   *  @example
   *    // Ordering using `input` node values
   *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )
   *    {
   *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
   *        return $('input', td).val();
   *      } );
   *    }
   */
  order: {},
  /**
   * Type based plug-ins.
   *
   * Each column in DataTables has a type assigned to it, either by automatic
   * detection or by direct assignment using the `type` option for the column.
   * The type of a column will effect how it is ordering and search (plug-ins
   * can also make use of the column type if required).
   *
   * @namespace
   */
  type: {
    /**
     * Automatic column class assignment
     */
    className: {},
    /**
     * Type detection functions.
     *
     * The functions defined in this object are used to automatically detect
     * a column's type, making initialisation of DataTables super easy, even
     * when complex data is in the table.
     *
     * The functions defined take two parameters:
     *
        *  1. `{*}` Data from the column cell to be analysed
        *  2. `{settings}` DataTables settings object. This can be used to
        *     perform context specific type detection - for example detection
        *     based on language settings such as using a comma for a decimal
        *     place. Generally speaking the options from the settings will not
        *     be required
     *
     * Each function is expected to return:
     *
     * * `{string|null}` Data type detected, or null if unknown (and thus
     *   pass it on to the other type detection functions.
     *
     *  @type array
     *
     *  @example
     *    // Currency type detection plug-in:
     *    $.fn.dataTable.ext.type.detect.push(
     *      function ( data, settings ) {
     *        // Check the numeric part
     *        if ( ! data.substring(1).match(/[0-9]/) ) {
     *          return null;
     *        }
     *
     *        // Check prefixed by currency
     *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
     *          return 'currency';
     *        }
     *        return null;
     *      }
     *    );
     */
    detect: [],
    /**
     * Automatic renderer assignment
     */
    render: {},
    /**
     * Type based search formatting.
     *
     * The type based searching functions can be used to pre-format the
     * data to be search on. For example, it can be used to strip HTML
     * tags or to de-format telephone numbers for numeric only searching.
     *
     * Note that is a search is not defined for a column of a given type,
     * no search formatting will be performed.
     * 
     * Pre-processing of searching data plug-ins - When you assign the sType
     * for a column (or have it automatically detected for you by DataTables
     * or a type detection plug-in), you will typically be using this for
     * custom sorting, but it can also be used to provide custom searching
     * by allowing you to pre-processing the data and returning the data in
     * the format that should be searched upon. This is done by adding
     * functions this object with a parameter name which matches the sType
     * for that target column. This is the corollary of <i>afnSortData</i>
     * for searching data.
     *
     * The functions defined take a single parameter:
     *
        *  1. `{*}` Data from the column cell to be prepared for searching
     *
     * Each function is expected to return:
     *
     * * `{string|null}` Formatted string that will be used for the searching.
     *
     *  @type object
     *  @default {}
     *
     *  @example
     *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {
     *      return d.replace(/\n/g," ").replace( /<.*?>/g, "" );
     *    }
     */
    search: {},
    /**
     * Type based ordering.
     *
     * The column type tells DataTables what ordering to apply to the table
     * when a column is sorted upon. The order for each type that is defined,
     * is defined by the functions available in this object.
     *
     * Each ordering option can be described by three properties added to
     * this object:
     *
     * * `{type}-pre` - Pre-formatting function
     * * `{type}-asc` - Ascending order function
     * * `{type}-desc` - Descending order function
     *
     * All three can be used together, only `{type}-pre` or only
     * `{type}-asc` and `{type}-desc` together. It is generally recommended
     * that only `{type}-pre` is used, as this provides the optimal
     * implementation in terms of speed, although the others are provided
     * for compatibility with existing Javascript sort functions.
     *
     * `{type}-pre`: Functions defined take a single parameter:
     *
        *  1. `{*}` Data from the column cell to be prepared for ordering
     *
     * And return:
     *
     * * `{*}` Data to be sorted upon
     *
     * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort
     * functions, taking two parameters:
     *
        *  1. `{*}` Data to compare to the second parameter
        *  2. `{*}` Data to compare to the first parameter
     *
     * And returning:
     *
     * * `{*}` Ordering match: <0 if first parameter should be sorted lower
     *   than the second parameter, ===0 if the two parameters are equal and
     *   >0 if the first parameter should be sorted height than the second
     *   parameter.
     * 
     *  @type object
     *  @default {}
     *
     *  @example
     *    // Numeric ordering of formatted numbers with a pre-formatter
     *    $.extend( $.fn.dataTable.ext.type.order, {
     *      "string-pre": function(x) {
     *        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\.]/g, "" );
     *        return parseFloat( a );
     *      }
     *    } );
     *
     *  @example
     *    // Case-sensitive string ordering, with no pre-formatting method
     *    $.extend( $.fn.dataTable.ext.order, {
     *      "string-case-asc": function(x,y) {
     *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
     *      },
     *      "string-case-desc": function(x,y) {
     *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
     *      }
     *    } );
     */
    order: {}
  },
  /**
   * Unique DataTables instance counter
   *
   * @type int
   * @private
   */
  _unique: 0,
  //
  // Depreciated
  // The following properties are retained for backwards compatibility only.
  // The should not be used in new projects and will be removed in a future
  // version
  //
  /**
   * Version check function.
   *  @type function
   *  @depreciated Since 1.10
   */
  fnVersionCheck: ge.fnVersionCheck,
  /**
   * Index for what 'this' index API functions should use
   *  @type int
   *  @deprecated Since v1.10
   */
  iApiIndex: 0,
  /**
   * Software version
   *  @type string
   *  @deprecated Since v1.10
   */
  sVersion: ge.version
};
Xt.extend(Vr, {
  afnFiltering: Vr.search,
  aTypes: Vr.type.detect,
  ofnSearch: Vr.type.search,
  oSort: Vr.type.order,
  afnSortData: Vr.order,
  aoFeatures: Vr.feature,
  oStdClasses: Vr.classes,
  oPagination: Vr.pager
});
Xt.extend(ge.ext.classes, {
  container: "dt-container",
  empty: {
    row: "dt-empty"
  },
  info: {
    container: "dt-info"
  },
  length: {
    container: "dt-length",
    select: "dt-input"
  },
  order: {
    canAsc: "dt-orderable-asc",
    canDesc: "dt-orderable-desc",
    isAsc: "dt-ordering-asc",
    isDesc: "dt-ordering-desc",
    none: "dt-orderable-none",
    position: "sorting_"
  },
  processing: {
    container: "dt-processing"
  },
  scrolling: {
    body: "dt-scroll-body",
    container: "dt-scroll",
    footer: {
      self: "dt-scroll-foot",
      inner: "dt-scroll-footInner"
    },
    header: {
      self: "dt-scroll-head",
      inner: "dt-scroll-headInner"
    }
  },
  search: {
    container: "dt-search",
    input: "dt-input"
  },
  table: "dataTable",
  tbody: {
    cell: "",
    row: ""
  },
  thead: {
    cell: "",
    row: ""
  },
  tfoot: {
    cell: "",
    row: ""
  },
  paging: {
    active: "current",
    button: "dt-paging-button",
    container: "dt-paging",
    disabled: "disabled"
  }
});
var Vr, Sr, Ke, Xr, f0 = {}, kh = /[\r\n\u2028]/g, A0 = /<.*?>/g, Uh = /^\d{2,4}[./-]\d{1,2}[./-]\d{1,2}([T ]{1}\d{1,2}[:.]\d{2}([.:]\d{2})?)?$/, zh = new RegExp("(\\" + ["/", ".", "*", "+", "?", "|", "(", ")", "[", "]", "{", "}", "\\", "$", "^", "-"].join("|\\") + ")", "g"), C0 = /['\u00A0,$Â£â¬Â¥%\u2009\u202F\u20BD\u20a9\u20BArfkÉÎ]/gi, Aa = function(s) {
  return !s || s === !0 || s === "-";
}, of = function(s) {
  var g = parseInt(s, 10);
  return !isNaN(g) && isFinite(s) ? g : null;
}, sf = function(s, g) {
  return f0[g] || (f0[g] = new RegExp(g0(g), "g")), typeof s == "string" && g !== "." ? s.replace(/\./g, "").replace(f0[g], ".") : s;
}, E0 = function(s, g, x) {
  var C = typeof s, B = C === "string";
  return C === "number" || C === "bigint" || Aa(s) ? !0 : (g && B && (s = sf(s, g)), x && B && (s = s.replace(C0, "")), !isNaN(parseFloat(s)) && isFinite(s));
}, Wh = function(s) {
  return Aa(s) || typeof s == "string";
}, ff = function(s, g, x) {
  if (Aa(s))
    return !0;
  if (typeof s == "string" && s.match(/<(input|select)/i))
    return null;
  var C = Wh(s);
  return C && E0(fi(s), g, x) ? !0 : null;
}, Xn = function(s, g, x) {
  var C = [], B = 0, O = s.length;
  if (x !== void 0)
    for (; B < O; B++)
      s[B] && s[B][g] && C.push(s[B][g][x]);
  else
    for (; B < O; B++)
      s[B] && C.push(s[B][g]);
  return C;
}, Gi = function(s, g, x, C) {
  var B = [], O = 0, c = g.length;
  if (C !== void 0)
    for (; O < c; O++)
      s[g[O]][x] && B.push(s[g[O]][x][C]);
  else
    for (; O < c; O++)
      s[g[O]] && B.push(s[g[O]][x]);
  return B;
}, Pa = function(s, g) {
  var x = [], C;
  g === void 0 ? (g = 0, C = s) : (C = g, g = s);
  for (var B = g; B < C; B++)
    x.push(B);
  return x;
}, lf = function(s) {
  for (var g = [], x = 0, C = s.length; x < C; x++)
    s[x] && g.push(s[x]);
  return g;
}, fi = function(s) {
  return s.replace(A0, "").replace(/<script/i, "");
}, oi = function(s) {
  return Array.isArray(s) && (s = s.join(",")), typeof s == "string" ? s.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/"/g, "&quot;") : s;
}, v0 = function(s, g) {
  if (typeof s != "string")
    return s;
  var x = s.normalize("NFD");
  return x.length !== s.length ? (g === !0 ? s + " " : "") + x.replace(/[\u0300-\u036f]/g, "") : x;
}, Hh = function(s) {
  if (s.length < 2)
    return !0;
  for (var g = s.slice().sort(), x = g[0], C = 1, B = g.length; C < B; C++) {
    if (g[C] === x)
      return !1;
    x = g[C];
  }
  return !0;
}, Xa = function(s) {
  if (Array.from && Set)
    return Array.from(new Set(s));
  if (Hh(s))
    return s.slice();
  var g = [], x, C, B = s.length, O, c = 0;
  t:
    for (C = 0; C < B; C++) {
      for (x = s[C], O = 0; O < c; O++)
        if (g[O] === x)
          continue t;
      g.push(x), c++;
    }
  return g;
}, T0 = function(s, g) {
  if (Array.isArray(g))
    for (var x = 0; x < g.length; x++)
      T0(s, g[x]);
  else
    s.push(g);
  return s;
};
function si(s, g) {
  g && g.split(" ").forEach(function(x) {
    x && s.classList.add(x);
  });
}
ge.util = {
  /**
   * Return a string with diacritic characters decomposed
   * @param {*} mixed Function or string to normalize
   * @param {*} both Return original string and the normalized string
   * @returns String or undefined
   */
  diacritics: function(s, g) {
    var x = typeof s;
    if (x !== "function")
      return v0(s, g);
    v0 = s;
  },
  /**
   * Debounce a function
   *
   * @param {function} fn Function to be called
   * @param {integer} freq Call frequency in mS
   * @return {function} Wrapped function
   */
  debounce: function(s, g) {
    var x;
    return function() {
      var C = this, B = arguments;
      clearTimeout(x), x = setTimeout(function() {
        s.apply(C, B);
      }, g || 250);
    };
  },
  /**
   * Throttle the calls to a function. Arguments and context are maintained
   * for the throttled function.
   *
   * @param {function} fn Function to be called
   * @param {integer} freq Call frequency in mS
   * @return {function} Wrapped function
   */
  throttle: function(s, g) {
    var x = g !== void 0 ? g : 200, C, B;
    return function() {
      var O = this, c = +/* @__PURE__ */ new Date(), d = arguments;
      C && c < C + x ? (clearTimeout(B), B = setTimeout(function() {
        C = void 0, s.apply(O, d);
      }, x)) : (C = c, s.apply(O, d));
    };
  },
  /**
   * Escape a string such that it can be used in a regular expression
   *
   *  @param {string} val string to escape
   *  @returns {string} escaped string
   */
  escapeRegex: function(s) {
    return s.replace(zh, "\\$1");
  },
  /**
   * Create a function that will write to a nested object or array
   * @param {*} source JSON notation string
   * @returns Write function
   */
  set: function(s) {
    if (Xt.isPlainObject(s))
      return ge.util.set(s._);
    if (s === null)
      return function() {
      };
    if (typeof s == "function")
      return function(x, C, B) {
        s(x, "set", C, B);
      };
    if (typeof s == "string" && (s.indexOf(".") !== -1 || s.indexOf("[") !== -1 || s.indexOf("(") !== -1)) {
      var g = function(x, C, B) {
        for (var O = Vs(B), c, d = O[O.length - 1], t, o, r, n, i = 0, f = O.length - 1; i < f; i++) {
          if (O[i] === "__proto__" || O[i] === "constructor")
            throw new Error("Cannot set prototype values");
          if (t = O[i].match(Ni), o = O[i].match(ri), t) {
            if (O[i] = O[i].replace(Ni, ""), x[O[i]] = [], c = O.slice(), c.splice(0, i + 1), n = c.join("."), Array.isArray(C))
              for (var l = 0, u = C.length; l < u; l++)
                r = {}, g(r, C[l], n), x[O[i]].push(r);
            else
              x[O[i]] = C;
            return;
          } else
            o && (O[i] = O[i].replace(ri, ""), x = x[O[i]](C));
          (x[O[i]] === null || x[O[i]] === void 0) && (x[O[i]] = {}), x = x[O[i]];
        }
        d.match(ri) ? x = x[d.replace(ri, "")](C) : x[d.replace(Ni, "")] = C;
      };
      return function(x, C) {
        return g(x, C, s);
      };
    } else
      return function(x, C) {
        x[s] = C;
      };
  },
  /**
   * Create a function that will read nested objects from arrays, based on JSON notation
   * @param {*} source JSON notation string
   * @returns Value read
   */
  get: function(s) {
    if (Xt.isPlainObject(s)) {
      var g = {};
      return Xt.each(s, function(C, B) {
        B && (g[C] = ge.util.get(B));
      }), function(C, B, O, c) {
        var d = g[B] || g._;
        return d !== void 0 ? d(C, B, O, c) : C;
      };
    } else {
      if (s === null)
        return function(C) {
          return C;
        };
      if (typeof s == "function")
        return function(C, B, O, c) {
          return s(C, B, O, c);
        };
      if (typeof s == "string" && (s.indexOf(".") !== -1 || s.indexOf("[") !== -1 || s.indexOf("(") !== -1)) {
        var x = function(C, B, O) {
          var c, d, t, o;
          if (O !== "")
            for (var r = Vs(O), n = 0, i = r.length; n < i; n++) {
              if (c = r[n].match(Ni), d = r[n].match(ri), c) {
                if (r[n] = r[n].replace(Ni, ""), r[n] !== "" && (C = C[r[n]]), t = [], r.splice(0, n + 1), o = r.join("."), Array.isArray(C))
                  for (var f = 0, l = C.length; f < l; f++)
                    t.push(x(C[f], B, o));
                var u = c[0].substring(1, c[0].length - 1);
                C = u === "" ? t : t.join(u);
                break;
              } else if (d) {
                r[n] = r[n].replace(ri, ""), C = C[r[n]]();
                continue;
              }
              if (C === null || C[r[n]] === null)
                return null;
              if (C === void 0 || C[r[n]] === void 0)
                return;
              C = C[r[n]];
            }
          return C;
        };
        return function(C, B) {
          return x(C, B, s);
        };
      } else
        return function(C) {
          return C[s];
        };
    }
  },
  stripHtml: function(s) {
    var g = typeof s;
    if (g === "function") {
      fi = s;
      return;
    } else if (g === "string")
      return fi(s);
    return s;
  },
  escapeHtml: function(s) {
    var g = typeof s;
    if (g === "function") {
      oi = s;
      return;
    } else if (g === "string" || Array.isArray(s))
      return oi(s);
    return s;
  },
  unique: Xa
};
function Ro(s) {
  var g = "a aa ai ao as b fn i m o s ", x, C, B = {};
  Xt.each(s, function(O) {
    x = O.match(/^([^A-Z]+?)([A-Z])/), x && g.indexOf(x[1] + " ") !== -1 && (C = O.replace(x[0], x[2].toLowerCase()), B[C] = O, x[1] === "o" && Ro(s[O]));
  }), s._hungarianMap = B;
}
function Oa(s, g, x) {
  s._hungarianMap || Ro(s);
  var C;
  Xt.each(g, function(B) {
    C = s._hungarianMap[B], C !== void 0 && (x || g[C] === void 0) && (C.charAt(0) === "o" ? (g[C] || (g[C] = {}), Xt.extend(!0, g[C], g[B]), Oa(s[C], g[C], x)) : g[C] = g[B]);
  });
}
var Wn = function(s, g, x) {
  s[g] !== void 0 && (s[x] = s[g]);
};
function js(s) {
  Wn(s, "ordering", "bSort"), Wn(s, "orderMulti", "bSortMulti"), Wn(s, "orderClasses", "bSortClasses"), Wn(s, "orderCellsTop", "bSortCellsTop"), Wn(s, "order", "aaSorting"), Wn(s, "orderFixed", "aaSortingFixed"), Wn(s, "paging", "bPaginate"), Wn(s, "pagingType", "sPaginationType"), Wn(s, "pageLength", "iDisplayLength"), Wn(s, "searching", "bFilter"), typeof s.sScrollX == "boolean" && (s.sScrollX = s.sScrollX ? "100%" : ""), typeof s.scrollX == "boolean" && (s.scrollX = s.scrollX ? "100%" : "");
  var g = s.aoSearchCols;
  if (g)
    for (var x = 0, C = g.length; x < C; x++)
      g[x] && Oa(ge.models.oSearch, g[x]);
  s.serverSide && !s.searchDelay && (s.searchDelay = 400);
}
function uf(s) {
  Wn(s, "orderable", "bSortable"), Wn(s, "orderData", "aDataSort"), Wn(s, "orderSequence", "asSorting"), Wn(s, "orderDataType", "sortDataType");
  var g = s.aDataSort;
  typeof g == "number" && !Array.isArray(g) && (s.aDataSort = [g]);
}
function jh(s) {
  if (!ge.__browser) {
    var g = {};
    ge.__browser = g;
    var x = Xt("<div/>").css({
      position: "fixed",
      top: 0,
      left: -1 * window.pageXOffset,
      // allow for scrolling
      height: 1,
      width: 1,
      overflow: "hidden"
    }).append(
      Xt("<div/>").css({
        position: "absolute",
        top: 1,
        left: 1,
        width: 100,
        overflow: "scroll"
      }).append(
        Xt("<div/>").css({
          width: "100%",
          height: 10
        })
      )
    ).appendTo("body"), C = x.children(), B = C.children();
    g.barWidth = C[0].offsetWidth - C[0].clientWidth, g.bScrollbarLeft = Math.round(B.offset().left) !== 1, x.remove();
  }
  Xt.extend(s.oBrowser, ge.__browser), s.oScroll.iBarWidth = ge.__browser.barWidth;
}
function cf(s) {
  var g = ge.defaults.column, x = s.aoColumns.length, C = Xt.extend({}, ge.models.oColumn, g, {
    aDataSort: g.aDataSort ? g.aDataSort : [x],
    mData: g.mData ? g.mData : x,
    idx: x,
    searchFixed: {},
    colEl: Xt("<col>")
  });
  s.aoColumns.push(C);
  var B = s.aoPreSearchCols;
  B[x] = Xt.extend({}, ge.models.oSearch, B[x]);
}
function p0(s, g, x) {
  var C = s.aoColumns[g];
  if (x != null) {
    uf(x), Oa(ge.defaults.column, x, !0), x.mDataProp !== void 0 && !x.mData && (x.mData = x.mDataProp), x.sType && (C._sManualType = x.sType), x.className && !x.sClass && (x.sClass = x.className);
    var B = C.sClass;
    Xt.extend(C, x), Ra(C, x, "sWidth", "sWidthOrig"), B !== C.sClass && (C.sClass = B + " " + C.sClass), x.iDataSort !== void 0 && (C.aDataSort = [x.iDataSort]), Ra(C, x, "aDataSort");
  }
  var O = C.mData, c = li(O);
  if (C.mRender && Array.isArray(C.mRender)) {
    var d = C.mRender.slice(), t = d.shift();
    C.mRender = ge.render[t].apply(window, d);
  }
  C._render = C.mRender ? li(C.mRender) : null;
  var o = function(r) {
    return typeof r == "string" && r.indexOf("@") !== -1;
  };
  C._bAttrSrc = Xt.isPlainObject(O) && (o(O.sort) || o(O.type) || o(O.filter)), C._setter = null, C.fnGetData = function(r, n, i) {
    var f = c(r, n, void 0, i);
    return C._render && n ? C._render(f, n, r, i) : f;
  }, C.fnSetData = function(r, n, i) {
    return Ga(O)(r, n, i);
  }, typeof O != "number" && !C._isArrayHost && (s._rowReadObject = !0), s.oFeatures.bSort || (C.bSortable = !1);
}
function Lo(s) {
  ad(s), Gh(s);
  var g = s.oScroll;
  (g.sY !== "" || g.sX !== "") && wf(s), Nr(s, null, "column-sizing", [s]);
}
function Gh(s) {
  for (var g = s.aoColumns, x = 0; x < g.length; x++) {
    var C = df(s, [x], !1, !1);
    g[x].colEl.css("width", C);
  }
}
function hf(s, g) {
  var x = F0(s, "bVisible");
  return typeof x[g] == "number" ? x[g] : null;
}
function Vi(s, g) {
  var x = F0(s, "bVisible"), C = x.indexOf(g);
  return C !== -1 ? C : null;
}
function No(s) {
  var g = s.aoHeader, x = s.aoColumns, C = 0;
  if (g.length)
    for (var B = 0, O = g[0].length; B < O; B++)
      x[B].bVisible && Xt(g[0][B].cell).css("display") !== "none" && C++;
  return C;
}
function F0(s, g) {
  var x = [];
  return s.aoColumns.map(function(C, B) {
    C[g] && x.push(B);
  }), x;
}
function I0(s) {
  var g = s.aoColumns, x = s.aoData, C = ge.ext.type.detect, B, O, c, d, t, o, r, n, i;
  for (B = 0, O = g.length; B < O; B++) {
    if (r = g[B], i = [], !r.sType && r._sManualType)
      r.sType = r._sManualType;
    else if (!r.sType) {
      for (c = 0, d = C.length; c < d; c++) {
        for (t = 0, o = x.length; t < o && !(x[t] && (i[t] === void 0 && (i[t] = ta(s, t, B, "type")), n = C[c](i[t], s), !n && c !== C.length - 2 || n === "html" && !Aa(i[t]))); t++)
          ;
        if (n) {
          r.sType = n;
          break;
        }
      }
      r.sType || (r.sType = "string");
    }
    var f = Vr.type.className[r.sType];
    f && (Gs(s.aoHeader, B, f), Gs(s.aoFooter, B, f));
    var l = Vr.type.render[r.sType];
    l && !r._render && (r._render = ge.util.get(l), Vh(s, B));
  }
}
function Vh(s, g) {
  for (var x = s.aoData, C = 0; C < x.length; C++)
    if (x[C].nTr) {
      var B = ta(s, C, g, "display");
      x[C].displayData[g] = B, Fo(x[C].anCells[g], B);
    }
}
function Gs(s, g, x) {
  s.forEach(function(C) {
    C[g].unique && si(C[g].cell, x);
  });
}
function Xh(s, g, x, C, B) {
  var O, c, d, t, o, r, n, i = s.aoColumns;
  if (x)
    for (O = 0, c = x.length; O < c; O++)
      x[O] && x[O].name && (i[O].sName = x[O].name);
  if (g)
    for (O = g.length - 1; O >= 0; O--) {
      n = g[O];
      var f = n.target !== void 0 ? n.target : n.targets !== void 0 ? n.targets : n.aTargets;
      for (Array.isArray(f) || (f = [f]), d = 0, t = f.length; d < t; d++) {
        var l = f[d];
        if (typeof l == "number" && l >= 0) {
          for (; i.length <= l; )
            cf(s);
          B(l, n);
        } else if (typeof l == "number" && l < 0)
          B(i.length + l, n);
        else if (typeof l == "string")
          for (o = 0, r = i.length; o < r; o++)
            l.indexOf(":name") !== -1 ? i[o].sName === l.replace(":name", "") && B(o, n) : C.forEach(function(u) {
              var h = Xt(u[o].cell);
              l.match(/^[a-z][\w-]*$/i) && (l = "." + l), (l === "_all" || h.is(l)) && B(o, n);
            });
      }
    }
  if (x)
    for (O = 0, c = x.length; O < c; O++)
      B(O, x[O]);
}
function df(s, g, x, C) {
  Array.isArray(g) || (g = D0(g));
  for (var B = 0, O, c = s.aoColumns, d = 0, t = g.length; d < t; d++) {
    var o = c[g[d]], r = x ? o.sWidthOrig : o.sWidth;
    if (!(!C && o.bVisible === !1)) {
      if (r == null)
        return null;
      if (typeof r == "number")
        O = "px", B += r;
      else {
        var n = r.match(/([\d\.]+)([^\d]*)/);
        n && (B += n[1] * 1, O = n.length === 3 ? n[2] : "px");
      }
    }
  }
  return B + O;
}
function D0(s) {
  var g = Xt(s).closest("[data-dt-column]").attr("data-dt-column");
  return g ? g.split(",").map(function(x) {
    return x * 1;
  }) : [];
}
function Za(s, g, x, C) {
  var B = s.aoData.length, O = Xt.extend(!0, {}, ge.models.oRow, {
    src: x ? "dom" : "data",
    idx: B
  });
  O._aData = g, s.aoData.push(O);
  for (var c = s.aoColumns, d = 0, t = c.length; d < t; d++)
    c[d].sType = null;
  s.aiDisplayMaster.push(B);
  var o = s.rowIdFn(g);
  return o !== void 0 && (s.aIds[o] = O), (x || !s.oFeatures.bDeferRender) && pf(s, B, x, C), B;
}
function P0(s, g) {
  var x;
  return g instanceof Xt || (g = Xt(g)), g.map(function(C, B) {
    return x = vf(s, B), Za(s, x.data, B, x.cells);
  });
}
function ta(s, g, x, C) {
  C === "search" ? C = "filter" : C === "order" && (C = "sort");
  var B = s.iDraw, O = s.aoColumns[x], c = s.aoData[g]._aData, d = O.sDefaultContent, t = O.fnGetData(c, C, {
    settings: s,
    row: g,
    col: x
  });
  if (C !== "display" && t && typeof t == "object" && t.nodeName && (t = t.innerHTML), t === void 0)
    return s.iDrawError != B && d === null && (qn(s, 0, "Requested unknown parameter " + (typeof O.mData == "function" ? "{function}" : "'" + O.mData + "'") + " for row " + g + ", column " + x, 4), s.iDrawError = B), d;
  if ((t === c || t === null) && d !== null && C !== void 0)
    t = d;
  else if (typeof t == "function")
    return t.call(c);
  if (t === null && C === "display")
    return "";
  if (C === "filter") {
    var o = ge.ext.type.search;
    o[O.sType] && (t = o[O.sType](t));
  }
  return t;
}
function Zh(s, g, x, C) {
  var B = s.aoColumns[x], O = s.aoData[g]._aData;
  B.fnSetData(O, C, {
    settings: s,
    row: g,
    col: x
  });
}
function Fo(s, g) {
  g && typeof g == "object" && g.nodeName ? Xt(s).empty().append(g) : s.innerHTML = g;
}
var Ni = /\[.*?\]$/, ri = /\(\)$/;
function Vs(s) {
  var g = s.match(/(\\.|[^.])+/g) || [""];
  return g.map(function(x) {
    return x.replace(/\\\./g, ".");
  });
}
var li = ge.util.get, Ga = ge.util.set;
function Xs(s) {
  return Xn(s.aoData, "_aData");
}
function O0(s) {
  s.aoData.length = 0, s.aiDisplayMaster.length = 0, s.aiDisplay.length = 0, s.aIds = {};
}
function Mo(s, g, x, C) {
  var B = s.aoData[g], O, c;
  if (B._aSortData = null, B._aFilterData = null, B.displayData = null, x === "dom" || (!x || x === "auto") && B.src === "dom")
    B._aData = vf(
      s,
      B,
      C,
      C === void 0 ? void 0 : B._aData
    ).data;
  else {
    var d = B.anCells, t = B0(s, g);
    if (d)
      if (C !== void 0)
        Fo(d[C], t[C]);
      else
        for (O = 0, c = d.length; O < c; O++)
          Fo(d[O], t[O]);
  }
  var o = s.aoColumns;
  if (C !== void 0)
    o[C].sType = null, o[C].maxLenString = null;
  else {
    for (O = 0, c = o.length; O < c; O++)
      o[O].sType = null, o[O].maxLenString = null;
    gf(s, B);
  }
}
function vf(s, g, x, C) {
  var B = [], O = g.firstChild, c, d, t = 0, o, r = s.aoColumns, n = s._rowReadObject;
  C = C !== void 0 ? C : n ? {} : [];
  var i = function(v, y) {
    if (typeof v == "string") {
      var p = v.indexOf("@");
      if (p !== -1) {
        var e = v.substring(p + 1), m = Ga(v);
        m(C, y.getAttribute(e));
      }
    }
  }, f = function(v) {
    if (x === void 0 || x === t)
      if (d = r[t], o = v.innerHTML.trim(), d && d._bAttrSrc) {
        var y = Ga(d.mData._);
        y(C, o), i(d.mData.sort, v), i(d.mData.type, v), i(d.mData.filter, v);
      } else
        n ? (d._setter || (d._setter = Ga(d.mData)), d._setter(C, o)) : C[t] = o;
    t++;
  };
  if (O)
    for (; O; )
      c = O.nodeName.toUpperCase(), (c == "TD" || c == "TH") && (f(O), B.push(O)), O = O.nextSibling;
  else {
    B = g.anCells;
    for (var l = 0, u = B.length; l < u; l++)
      f(B[l]);
  }
  var h = g.firstChild ? g : g.nTr;
  if (h) {
    var a = h.getAttribute("id");
    a && Ga(s.rowId)(C, a);
  }
  return {
    data: C,
    cells: B
  };
}
function B0(s, g) {
  let x = s.aoData[g], C = s.aoColumns;
  if (!x.displayData) {
    x.displayData = [];
    for (var B = 0, O = C.length; B < O; B++)
      x.displayData.push(
        ta(s, g, B, "display")
      );
  }
  return x.displayData;
}
function pf(s, g, x, C) {
  var B = s.aoData[g], O = B._aData, c = [], d, t, o, r, n, i, f = s.oClasses.tbody.row;
  if (B.nTr === null) {
    for (d = x || document.createElement("tr"), B.nTr = d, B.anCells = c, si(d, f), d._DT_RowIndex = g, gf(s, B), r = 0, n = s.aoColumns.length; r < n; r++) {
      o = s.aoColumns[r], i = !x, t = i ? document.createElement(o.sCellType) : C[r], t || qn(s, 0, "Incorrect column count", 18), t._DT_CellIndex = {
        row: g,
        column: r
      }, c.push(t);
      var l = B0(s, g);
      (i || (o.mRender || o.mData !== r) && (!Xt.isPlainObject(o.mData) || o.mData._ !== r + ".display")) && Fo(t, l[r]), o.bVisible && !x ? d.appendChild(t) : !o.bVisible && x && t.parentNode.removeChild(t), o.fnCreatedCell && o.fnCreatedCell.call(
        s.oInstance,
        t,
        ta(s, g, r),
        O,
        g,
        r
      );
    }
    Nr(s, "aoRowCreatedCallback", "row-created", [d, O, g, c]);
  } else
    si(B.nTr, f);
}
function gf(s, g) {
  var x = g.nTr, C = g._aData;
  if (x) {
    var B = s.rowIdFn(C);
    if (B && (x.id = B), C.DT_RowClass) {
      var O = C.DT_RowClass.split(" ");
      g.__rowc = g.__rowc ? Xa(g.__rowc.concat(O)) : O, Xt(x).removeClass(g.__rowc.join(" ")).addClass(C.DT_RowClass);
    }
    C.DT_RowAttr && Xt(x).attr(C.DT_RowAttr), C.DT_RowData && Xt(x).data(C.DT_RowData);
  }
}
function Zs(s, g) {
  var x = s.oClasses, C = s.aoColumns, B, O, c, d = g === "header" ? s.nTHead : s.nTFoot, t = g === "header" ? "sTitle" : g;
  if (d) {
    if (Xt("th, td", d).length === 0 && (g === "header" || Xn(s.aoColumns, t).join("")))
      for (c = Xt("<tr/>").appendTo(d), B = 0, O = C.length; B < O; B++)
        Xt("<th/>").html(C[B][t] || "").appendTo(c);
    var o = mf(s, d, !0);
    g === "header" ? s.aoHeader = o : s.aoFooter = o, Xt(d).children("tr").attr("role", "row"), Xt(d).children("tr").children("th, td").each(function() {
      Po(s, g)(
        s,
        Xt(this),
        x
      );
    });
  }
}
function yf(s, g, x) {
  var C, B, O, c = [], d = [], t = s.aoColumns, o = t.length, r, n;
  if (g) {
    for (x || (x = Pa(o).filter(function(f) {
      return t[f].bVisible;
    })), C = 0; C < g.length; C++)
      c[C] = g[C].slice().filter(function(f, l) {
        return x.includes(l);
      }), d.push([]);
    for (C = 0; C < c.length; C++)
      for (B = 0; B < c[C].length; B++)
        if (r = 1, n = 1, d[C][B] === void 0) {
          for (O = c[C][B].cell; c[C + r] !== void 0 && c[C][B].cell == c[C + r][B].cell; )
            d[C + r][B] = null, r++;
          for (; c[C][B + n] !== void 0 && c[C][B].cell == c[C][B + n].cell; ) {
            for (var i = 0; i < r; i++)
              d[C + i][B + n] = null;
            n++;
          }
          d[C][B] = {
            cell: O,
            colspan: n,
            rowspan: r,
            title: Xt("span.dt-column-title", O).html()
          };
        }
    return d;
  }
}
function Io(s, g) {
  for (var x = yf(s, g), C, B, O = 0; O < g.length; O++) {
    if (C = g[O].row, C)
      for (; B = C.firstChild; )
        C.removeChild(B);
    for (var c = 0; c < x[O].length; c++) {
      var d = x[O][c];
      d && Xt(d.cell).appendTo(C).attr("rowspan", d.rowspan).attr("colspan", d.colspan);
    }
  }
}
function ci(s, g) {
  Jh(s);
  var x = Nr(s, "aoPreDrawCallback", "preDraw", [s]);
  if (x.indexOf(!1) !== -1) {
    _n(s, !1);
    return;
  }
  var C = [], B = 0, O = Zn(s) == "ssp", c = s.aiDisplay, d = s._iDisplayStart, t = s.fnDisplayEnd(), o = s.aoColumns, r = Xt(s.nTBody);
  if (s.bDrawing = !0, !O)
    s.iDraw++;
  else if (!s.bDestroying && !g) {
    s.iDraw === 0 && r.empty().append(Ys(s)), Qh(s);
    return;
  }
  if (c.length !== 0)
    for (var n = O ? 0 : d, i = O ? s.aoData.length : t, f = n; f < i; f++) {
      var l = c[f], u = s.aoData[l];
      u.nTr === null && pf(s, l);
      for (var h = u.nTr, a = 0; a < o.length; a++) {
        var v = o[a], y = u.anCells[a];
        si(y, Vr.type.className[v.sType]), si(y, v.sClass), si(y, s.oClasses.tbody.cell);
      }
      Nr(
        s,
        "aoRowCallback",
        null,
        [h, u._aData, B, f, l]
      ), C.push(h), B++;
    }
  else
    C[0] = Ys(s);
  Nr(s, "aoHeaderCallback", "header", [
    Xt(s.nTHead).children("tr")[0],
    Xs(s),
    d,
    t,
    c
  ]), Nr(s, "aoFooterCallback", "footer", [
    Xt(s.nTFoot).children("tr")[0],
    Xs(s),
    d,
    t,
    c
  ]), r.children().detach(), r.append(Xt(C)), Xt(s.nTableWrapper).toggleClass("dt-empty-footer", Xt("tr", s.nTFoot).length === 0), Nr(s, "aoDrawCallback", "draw", [s], !0), s.bSorted = !1, s.bFiltered = !1, s.bDrawing = !1;
}
function ui(s, g, x) {
  var C = s.oFeatures, B = C.bSort, O = C.bFilter;
  (x === void 0 || x === !0) && (B && N0(s), O ? ji(s, s.oPreviousSearch) : s.aiDisplay = s.aiDisplayMaster.slice()), g !== !0 && (s._iDisplayStart = 0), s._drawHold = g, ci(s), s._drawHold = !1;
}
function Ys(s) {
  var g = s.oLanguage, x = g.sZeroRecords, C = Zn(s);
  return s.iDraw <= 1 && (C === "ajax" || C === "ssp") ? x = g.sLoadingRecords : g.sEmptyTable && s.fnRecordsTotal() === 0 && (x = g.sEmptyTable), Xt("<tr/>").append(Xt("<td />", {
    colSpan: No(s),
    class: s.oClasses.empty.row
  }).html(x))[0];
}
function Ks(s, g, x) {
  var C = {};
  Xt.each(g, function(t, o) {
    if (o !== null) {
      var r = t.replace(/([A-Z])/g, " $1").split(" ");
      C[r[0]] || (C[r[0]] = {});
      var n = r.length === 1 ? "full" : r[1].toLowerCase(), i = C[r[0]];
      Xt.isPlainObject(o) ? o.contents ? i[n] = o : i[n] = {
        contents: Object.keys(o).map(function(f) {
          return {
            feature: f,
            opts: o[f]
          };
        })
      } : i[n] = {
        contents: o
      }, Array.isArray(i[n].contents) || (i[n].contents = [i[n].contents]);
    }
  });
  var B = Object.keys(C).map(function(t) {
    return t.indexOf(x) !== 0 ? null : {
      name: t,
      val: C[t]
    };
  }).filter(function(t) {
    return t !== null;
  });
  B.sort(function(t, o) {
    var r = t.name.replace(/[^0-9]/g, "") * 1, n = o.name.replace(/[^0-9]/g, "") * 1;
    return n - r;
  }), x === "bottom" && B.reverse();
  for (var O = [], c = 0, d = B.length; c < d; c++)
    B[c].val.full && (O.push({ full: B[c].val.full }), Js(s, O[O.length - 1]), delete B[c].val.full), Object.keys(B[c].val).length && (O.push(B[c].val), Js(s, O[O.length - 1]));
  return O;
}
function Js(s, g) {
  var x = function(B, O) {
    return Vr.features[B] || qn(s, 0, "Unknown feature: " + B), Vr.features[B].apply(this, [s, O]);
  }, C = function(B) {
    for (var O = g[B].contents, c = 0, d = O.length; c < d; c++)
      if (O[c]) {
        if (typeof O[c] == "string")
          O[c] = x(O[c], null);
        else if (Xt.isPlainObject(O[c]))
          O[c] = x(O[c].feature, O[c].opts);
        else if (typeof O[c].node == "function")
          O[c] = O[c].node(s);
        else if (typeof O[c] == "function") {
          var t = O[c](s);
          O[c] = typeof t.node == "function" ? t.node() : t;
        }
      } else
        continue;
  };
  Xt.each(g, function(B) {
    C(B);
  });
}
function Yh(s) {
  var g = s.oClasses, x = Xt(s.nTable), C = Xt("<div/>").attr({
    id: s.sTableId + "_wrapper",
    class: g.container
  }).insertBefore(x);
  s.nTableWrapper = C[0];
  var B = Ks(s, s.layout, "top"), O = Ks(s, s.layout, "bottom"), c = Po(s, "layout");
  s.sDom ? Kh(s, s.sDom, C) : (B.forEach(function(d) {
    c(s, C, d);
  }), c(s, C, {
    full: {
      table: !0,
      contents: [bf(s)]
    }
  }), O.forEach(function(d) {
    c(s, C, d);
  })), nd(s);
}
function Kh(s, g, x) {
  for (var C = g.match(/(".*?")|('.*?')|./g), B, O, c, d, t, o = 0; o < C.length; o++) {
    if (B = null, O = C[o], O == "<") {
      if (c = Xt("<div/>"), d = C[o + 1], d[0] == "'" || d[0] == '"') {
        t = d.replace(/['"]/g, "");
        var r = "", n;
        if (t.indexOf(".") != -1) {
          var i = t.split(".");
          r = i[0], n = i[1];
        } else
          t[0] == "#" ? r = t : n = t;
        c.attr("id", r.substring(1)).addClass(n), o++;
      }
      x.append(c), x = c;
    } else
      O == ">" ? x = x.parent() : O == "t" ? B = bf(s) : ge.ext.feature.forEach(function(f) {
        O == f.cFeature && (B = f.fnInit(s));
      });
    B && x.append(B);
  }
}
function mf(s, g, x) {
  var C = s.aoColumns, B = Xt(g).children("tr"), O, c, d, t, o, r, n, i, f, l, u = g && g.nodeName.toLowerCase() === "thead", h = [], a, v = function(w, D, I) {
    for (var E = w[D]; E[I]; )
      I++;
    return I;
  };
  for (d = 0, r = B.length; d < r; d++)
    h.push([]);
  for (d = 0, r = B.length; d < r; d++)
    for (O = B[d], i = 0, c = O.firstChild; c; ) {
      if (c.nodeName.toUpperCase() == "TD" || c.nodeName.toUpperCase() == "TH") {
        var y = [];
        if (f = c.getAttribute("colspan") * 1, l = c.getAttribute("rowspan") * 1, f = !f || f === 0 || f === 1 ? 1 : f, l = !l || l === 0 || l === 1 ? 1 : l, n = v(h, d, i), a = f === 1, x) {
          if (a) {
            p0(s, n, Xt(c).data());
            var p = C[n], e = c.getAttribute("width") || null, m = c.style.width.match(/width:\s*(\d+[pxem%]+)/);
            m && (e = m[1]), p.sWidthOrig = p.sWidth || e, u ? (p.sTitle !== null && !p.autoTitle && (c.innerHTML = p.sTitle), !p.sTitle && a && (p.sTitle = c.innerHTML.replace(/<.*?>/g, ""), p.autoTitle = !0)) : p.footer && (c.innerHTML = p.footer), p.ariaTitle || (p.ariaTitle = Xt(c).attr("aria-label") || p.sTitle), p.className && Xt(c).addClass(p.className);
          }
          Xt("span.dt-column-title", c).length === 0 && Xt("<span>").addClass("dt-column-title").append(c.childNodes).appendTo(c), u && Xt("span.dt-column-order", c).length === 0 && Xt("<span>").addClass("dt-column-order").appendTo(c);
        }
        for (o = 0; o < f; o++) {
          for (t = 0; t < l; t++)
            h[d + t][n + o] = {
              cell: c,
              unique: a
            }, h[d + t].row = O;
          y.push(n + o);
        }
        c.setAttribute("data-dt-column", Xa(y).join(","));
      }
      c = c.nextSibling;
    }
  return h;
}
function Jh(s) {
  var g = Zn(s) == "ssp", x = s.iInitDisplayStart;
  x !== void 0 && x !== -1 && (s._iDisplayStart = g ? x : x >= s.fnRecordsDisplay() ? 0 : x, s.iInitDisplayStart = -1);
}
function R0(s, g, x) {
  var C, B = s.ajax, O = s.oInstance, c = function(o) {
    var r = s.jqXHR ? s.jqXHR.status : null;
    (o === null || typeof r == "number" && r == 204) && (o = {}, ko(s, o, []));
    var n = o.error || o.sError;
    n && qn(s, 0, n), s.json = o, Nr(s, null, "xhr", [s, o, s.jqXHR], !0), x(o);
  };
  if (Xt.isPlainObject(B) && B.data) {
    C = B.data;
    var d = typeof C == "function" ? C(g, s) : (
      // fn can manipulate data or return
      C
    );
    g = typeof C == "function" && d ? d : Xt.extend(!0, g, d), delete B.data;
  }
  var t = {
    url: typeof B == "string" ? B : "",
    data: g,
    success: c,
    dataType: "json",
    cache: !1,
    type: s.sServerMethod,
    error: function(o, r) {
      var n = Nr(s, null, "xhr", [s, null, s.jqXHR], !0);
      n.indexOf(!0) === -1 && (r == "parsererror" ? qn(s, 0, "Invalid JSON response", 1) : o.readyState === 4 && qn(s, 0, "Ajax error", 7)), _n(s, !1);
    }
  };
  Xt.isPlainObject(B) && Xt.extend(t, B), s.oAjaxData = g, Nr(s, null, "preXhr", [s, g, t], !0), typeof B == "function" ? s.jqXHR = B.call(O, g, c, s) : B.url === "" ? c({}) : (s.jqXHR = Xt.ajax(t), C && (B.data = C));
}
function Qh(s) {
  s.iDraw++, _n(s, !0), R0(
    s,
    $h(s),
    function(g) {
      qh(s, g);
    }
  );
}
function $h(s) {
  var g = s.aoColumns, x = s.oFeatures, C = s.oPreviousSearch, B = s.aoPreSearchCols, O = function(c, d) {
    return typeof g[c][d] == "function" ? "function" : g[c][d];
  };
  return {
    draw: s.iDraw,
    columns: g.map(function(c, d) {
      return {
        data: O(d, "mData"),
        name: c.sName,
        searchable: c.bSearchable,
        orderable: c.bSortable,
        search: {
          value: B[d].search,
          regex: B[d].regex,
          fixed: Object.keys(c.searchFixed).map(function(t) {
            return {
              name: t,
              term: c.searchFixed[t].toString()
            };
          })
        }
      };
    }),
    order: Uo(s).map(function(c) {
      return {
        column: c.col,
        dir: c.dir,
        name: O(c.col, "sName")
      };
    }),
    start: s._iDisplayStart,
    length: x.bPaginate ? s._iDisplayLength : -1,
    search: {
      value: C.search,
      regex: C.regex,
      fixed: Object.keys(s.searchFixed).map(function(c) {
        return {
          name: c,
          term: s.searchFixed[c].toString()
        };
      })
    }
  };
}
function qh(s, g) {
  var x = ko(s, g), C = l0(s, "draw", g), B = l0(s, "recordsTotal", g), O = l0(s, "recordsFiltered", g);
  if (C !== void 0) {
    if (C * 1 < s.iDraw)
      return;
    s.iDraw = C * 1;
  }
  x || (x = []), O0(s), s._iRecordsTotal = parseInt(B, 10), s._iRecordsDisplay = parseInt(O, 10);
  for (var c = 0, d = x.length; c < d; c++)
    Za(s, x[c]);
  s.aiDisplay = s.aiDisplayMaster.slice(), ci(s, !0), Do(s), _n(s, !1);
}
function ko(s, g, x) {
  var C = "data";
  if (Xt.isPlainObject(s.ajax) && s.ajax.dataSrc !== void 0) {
    var B = s.ajax.dataSrc;
    typeof B == "string" || typeof B == "function" ? C = B : B.data !== void 0 && (C = B.data);
  }
  if (!x)
    return C === "data" ? g.aaData || g[C] : C !== "" ? li(C)(g) : g;
  Ga(C)(g, x);
}
function l0(s, g, x) {
  var C = Xt.isPlainObject(s.ajax) ? s.ajax.dataSrc : null;
  if (C && C[g])
    return li(C[g])(x);
  var B = "";
  return g === "draw" ? B = "sEcho" : g === "recordsTotal" ? B = "iTotalRecords" : g === "recordsFiltered" && (B = "iTotalDisplayRecords"), x[B] !== void 0 ? x[B] : x[g];
}
function ji(s, g) {
  var x = s.aoPreSearchCols;
  if (I0(s), Zn(s) != "ssp") {
    rd(s), s.aiDisplay = s.aiDisplayMaster.slice(), wo(s.aiDisplay, s, g.search, g), Xt.each(s.searchFixed, function(O, c) {
      wo(s.aiDisplay, s, c, {});
    });
    for (var C = 0; C < x.length; C++) {
      var B = x[C];
      wo(
        s.aiDisplay,
        s,
        B.search,
        B,
        C
      ), Xt.each(s.aoColumns[C].searchFixed, function(O, c) {
        wo(s.aiDisplay, s, c, {}, C);
      });
    }
    _h(s);
  }
  s.bFiltered = !0, Nr(s, null, "search", [s]);
}
function _h(s) {
  for (var g = ge.ext.search, x = s.aiDisplay, C, B, O = 0, c = g.length; O < c; O++) {
    for (var d = [], t = 0, o = x.length; t < o; t++)
      B = x[t], C = s.aoData[B], g[O](s, C._aFilterData, B, C._aData, t) && d.push(B);
    x.length = 0, x.push.apply(x, d);
  }
}
function wo(s, g, x, C, B) {
  if (x !== "")
    for (var O = 0, c = typeof x == "function" ? x : null, d = x instanceof RegExp ? x : c ? null : td(x, C); O < s.length; ) {
      var t = g.aoData[s[O]], o = B === void 0 ? t._sFilterRow : t._aFilterData[B];
      (c && !c(o, t._aData, s[O], B) || d && !d.test(o)) && (s.splice(O, 1), O--), O++;
    }
}
function td(s, g) {
  var x = [], C = Xt.extend({}, {
    boundary: !1,
    caseInsensitive: !0,
    exact: !1,
    regex: !1,
    smart: !0
  }, g);
  if (typeof s != "string" && (s = s.toString()), C.exact)
    return new RegExp(
      "^" + g0(s) + "$",
      C.caseInsensitive ? "i" : ""
    );
  if (s = C.regex ? s : g0(s), C.smart) {
    var B = s.match(/!?["\u201C][^"\u201D]+["\u201D]|[^ ]+/g) || [""], O = B.map(function(t) {
      var o = !1, r;
      return t.charAt(0) === "!" && (o = !0, t = t.substring(1)), t.charAt(0) === '"' ? (r = t.match(/^"(.*)"$/), t = r ? r[1] : t) : t.charAt(0) === "â" && (r = t.match(/^\u201C(.*)\u201D$/), t = r ? r[1] : t), o && (t.length > 1 && x.push("(?!" + t + ")"), t = ""), t.replace('"', "");
    }), c = x.length ? x.join("") : "", d = C.boundary ? "\\b" : "";
    s = "^(?=.*?" + d + O.join(")(?=.*?" + d) + ")(" + c + ".)*$";
  }
  return new RegExp(s, C.caseInsensitive ? "i" : "");
}
var g0 = ge.util.escapeRegex, Eo = Xt("<div>")[0], ed = Eo.textContent !== void 0;
function rd(s) {
  for (var g = s.aoColumns, x = s.aoData, C, B, O, c, d, t, o = !1, r = 0; r < x.length; r++)
    if (x[r] && (t = x[r], !t._aFilterData)) {
      for (c = [], B = 0, O = g.length; B < O; B++)
        C = g[B], C.bSearchable ? (d = ta(s, r, B, "filter"), d === null && (d = ""), typeof d != "string" && d.toString && (d = d.toString())) : d = "", d.indexOf && d.indexOf("&") !== -1 && (Eo.innerHTML = d, d = ed ? Eo.textContent : Eo.innerText), d.replace && (d = d.replace(/[\r\n\u2028]/g, "")), c.push(d);
      t._aFilterData = c, t._sFilterRow = c.join("  "), o = !0;
    }
  return o;
}
function To(s) {
  var g, x = s.iInitDisplayStart;
  if (!s.bInitialised) {
    setTimeout(function() {
      To(s);
    }, 200);
    return;
  }
  Zs(s, "header"), Zs(s, "footer"), Io(s, s.aoHeader), Io(s, s.aoFooter), Yh(s), od(s), Sf(s), _n(s, !0), Nr(s, null, "preInit", [s], !0), ui(s);
  var C = Zn(s);
  C != "ssp" && (C == "ajax" ? R0(s, {}, function(B) {
    var O = ko(s, B);
    for (g = 0; g < O.length; g++)
      Za(s, O[g]);
    s.iInitDisplayStart = x, ui(s), _n(s, !1), Do(s);
  }) : (Do(s), _n(s, !1)));
}
function Do(s) {
  if (!s._bInitComplete) {
    var g = [s, s.json];
    s._bInitComplete = !0, Lo(s), Nr(s, null, "plugin-init", g, !0), Nr(s, "aoInitComplete", "init", g, !0);
  }
}
function xf(s, g) {
  var x = parseInt(g, 10);
  s._iDisplayLength = x, Ef(s), Nr(s, null, "length", [s, x]);
}
function L0(s, g, x) {
  var C = s._iDisplayStart, B = s._iDisplayLength, O = s.fnRecordsDisplay();
  if (O === 0 || B === -1)
    C = 0;
  else if (typeof g == "number")
    C = g * B, C > O && (C = 0);
  else if (g == "first")
    C = 0;
  else if (g == "previous")
    C = B >= 0 ? C - B : 0, C < 0 && (C = 0);
  else if (g == "next")
    C + B < O && (C += B);
  else if (g == "last")
    C = Math.floor((O - 1) / B) * B;
  else {
    if (g === "ellipsis")
      return;
    qn(s, 0, "Unknown paging action: " + g, 5);
  }
  var c = s._iDisplayStart !== C;
  return s._iDisplayStart = C, Nr(s, null, c ? "page" : "page-nc", [s]), c && x && ci(s), c;
}
function nd(s) {
  var g = s.nTable;
  if (s.oFeatures.bProcessing) {
    var x = Xt("<div/>", {
      id: s.sTableId + "_processing",
      class: s.oClasses.processing.container,
      role: "status"
    }).html(s.oLanguage.sProcessing).append("<div><div></div><div></div><div></div><div></div></div>").insertBefore(g);
    Xt(g).on("processing.dt.DT", function(C, B, O) {
      x.css("display", O ? "block" : "none");
    });
  }
}
function _n(s, g) {
  Nr(s, null, "processing", [s, g]);
}
function bf(s) {
  var g = Xt(s.nTable), x = s.oScroll;
  if (x.sX === "" && x.sY === "")
    return s.nTable;
  var C = x.sX, B = x.sY, O = s.oClasses.scrolling, c = s.captionNode, d = c ? c._captionSide : null, t = Xt(g[0].cloneNode(!1)), o = Xt(g[0].cloneNode(!1)), r = g.children("tfoot"), n = "<div/>", i = function(v) {
    return v ? Ba(v) : null;
  };
  r.length || (r = null);
  var f = Xt(n, { class: O.container }).append(
    Xt(n, { class: O.header.self }).css({
      overflow: "hidden",
      position: "relative",
      border: 0,
      width: C ? i(C) : "100%"
    }).append(
      Xt(n, { class: O.header.inner }).css({
        "box-sizing": "content-box",
        width: x.sXInner || "100%"
      }).append(
        t.removeAttr("id").css("margin-left", 0).append(d === "top" ? c : null).append(
          g.children("thead")
        )
      )
    )
  ).append(
    Xt(n, { class: O.body }).css({
      position: "relative",
      overflow: "auto",
      width: i(C)
    }).append(g)
  );
  r && f.append(
    Xt(n, { class: O.footer.self }).css({
      overflow: "hidden",
      border: 0,
      width: C ? i(C) : "100%"
    }).append(
      Xt(n, { class: O.footer.inner }).append(
        o.removeAttr("id").css("margin-left", 0).append(d === "bottom" ? c : null).append(
          g.children("tfoot")
        )
      )
    )
  );
  var l = f.children(), u = l[0], h = l[1], a = r ? l[2] : null;
  return Xt(h).on("scroll.DT", function() {
    var v = this.scrollLeft;
    u.scrollLeft = v, r && (a.scrollLeft = v);
  }), Xt("th, td", u).on("focus", function() {
    var v = u.scrollLeft;
    h.scrollLeft = v, r && (h.scrollLeft = v);
  }), Xt(h).css("max-height", B), x.bCollapse || Xt(h).css("height", B), s.nScrollHead = u, s.nScrollBody = h, s.nScrollFoot = a, s.aoDrawCallback.push(wf), f[0];
}
function wf(s) {
  var g = s.oScroll, x = g.iBarWidth, C = Xt(s.nScrollHead), B = C.children("div"), O = B.children("table"), c = s.nScrollBody, d = Xt(c), t = Xt(s.nScrollFoot), o = t.children("div"), r = o.children("table"), n = Xt(s.nTHead), i = Xt(s.nTable), f = s.nTFoot && Xt("th, td", s.nTFoot).length ? Xt(s.nTFoot) : null, l = s.oBrowser, u, h, a = c.scrollHeight > c.clientHeight;
  if (s.scrollBarVis !== a && s.scrollBarVis !== void 0) {
    s.scrollBarVis = a, Lo(s);
    return;
  } else
    s.scrollBarVis = a;
  if (i.children("thead, tfoot").remove(), u = n.clone().prependTo(i), u.find("th, td").removeAttr("tabindex"), u.find("[id]").removeAttr("id"), f && (h = f.clone().prependTo(i), h.find("[id]").removeAttr("id")), s.aiDisplay.length) {
    var v = i.find("tbody tr").eq(0).find("th, td").map(function() {
      return Xt(this).outerWidth();
    });
    Xt("col", s.colgroup).each(function(m) {
      var w = this.style.width.replace("px", "");
      w !== v[m] && (this.style.width = v[m] + "px");
    });
  }
  O.find("colgroup").remove(), O.append(s.colgroup.clone()), f && (r.find("colgroup").remove(), r.append(s.colgroup.clone())), Xt("th, td", u).each(function() {
    Xt(this).children().wrapAll('<div class="dt-scroll-sizing">');
  }), f && Xt("th, td", h).each(function() {
    Xt(this).children().wrapAll('<div class="dt-scroll-sizing">');
  });
  var y = Math.floor(i.height()) > c.clientHeight || d.css("overflow-y") == "scroll", p = "padding" + (l.bScrollbarLeft ? "Left" : "Right"), e = i.outerWidth();
  O.css("width", Ba(e)), B.css("width", Ba(e)).css(p, y ? x + "px" : "0px"), f && (r.css("width", Ba(e)), o.css("width", Ba(e)).css(p, y ? x + "px" : "0px")), i.children("colgroup").prependTo(i), d.trigger("scroll"), (s.bSorted || s.bFiltered) && !s._drawHold && (c.scrollTop = 0);
}
function ad(s) {
  if (s.oFeatures.bAutoWidth) {
    var g = s.nTable, x = s.aoColumns, C = s.oScroll, B = C.sY, O = C.sX, c = C.sXInner, d = F0(s, "bVisible"), t = g.getAttribute("width"), o = g.parentNode, r, n, i, f = g.style.width;
    f && f.indexOf("%") !== -1 && (t = f), Nr(
      s,
      null,
      "column-calc",
      { visible: d },
      !1
    );
    var l = Xt(g.cloneNode()).css("visibility", "hidden").removeAttr("id");
    l.append("<tbody>");
    var u = Xt("<tr/>").appendTo(l.find("tbody"));
    for (l.append(Xt(s.nTHead).clone()).append(Xt(s.nTFoot).clone()), l.find("tfoot th, tfoot td").css("width", ""), l.find("thead th, thead td").each(function() {
      var I = df(s, this, !0, !1);
      I ? (this.style.width = I, O && Xt(this).append(Xt("<div/>").css({
        width: I,
        margin: 0,
        padding: 0,
        border: 0,
        height: 1
      }))) : this.style.width = "";
    }), r = 0; r < d.length; r++) {
      i = d[r], n = x[i];
      var h = id(s, i), a = Vr.type.className[n.sType], v = h + n.sContentPadding, y = h.indexOf("<") === -1 ? document.createTextNode(v) : v;
      Xt("<td/>").addClass(a).addClass(n.sClass).append(y).appendTo(u);
    }
    Xt("[name]", l).removeAttr("name");
    var p = Xt("<div/>").css(
      O || B ? {
        position: "absolute",
        top: 0,
        left: 0,
        height: 1,
        right: 0,
        overflow: "hidden"
      } : {}
    ).append(l).appendTo(o);
    O && c ? l.width(c) : O ? (l.css("width", "auto"), l.removeAttr("width"), l.width() < o.clientWidth && t && l.width(o.clientWidth)) : B ? l.width(o.clientWidth) : t && l.width(t);
    var e = 0, m = l.find("tbody tr").eq(0).children();
    for (r = 0; r < d.length; r++) {
      var w = m[r].getBoundingClientRect().width;
      e += w, x[d[r]].sWidth = Ba(w);
    }
    if (g.style.width = Ba(e), p.remove(), t && (g.style.width = Ba(t)), (t || O) && !s._reszEvt) {
      var D = function() {
        Xt(window).on("resize.DT-" + s.sInstance, ge.util.throttle(function() {
          s.bDestroying || Lo(s);
        }));
      };
      D(), s._reszEvt = !0;
    }
  }
}
function id(s, g) {
  var x = s.aoColumns[g];
  if (!x.maxLenString) {
    for (var C, B = "", O = -1, c = 0, d = s.aiDisplayMaster.length; c < d; c++) {
      var t = s.aiDisplayMaster[c], o = B0(s, t)[g], r = o && typeof o == "object" && o.nodeType ? o.innerHTML : o + "";
      r = r.replace(/id=".*?"/g, "").replace(/name=".*?"/g, ""), C = fi(r).replace(/&nbsp;/g, " "), C.length > O && (B = r, O = C.length);
    }
    x.maxLenString = B;
  }
  return x.maxLenString;
}
function Ba(s) {
  return s === null ? "0px" : typeof s == "number" ? s < 0 ? "0px" : s + "px" : s.match(/\d$/) ? s + "px" : s;
}
function Sf(s) {
  var g = s.aoColumns;
  for (s.colgroup.empty(), ia = 0; ia < g.length; ia++)
    g[ia].bVisible && s.colgroup.append(g[ia].colEl);
}
function od(s) {
  var g = s.nTHead, x = g.querySelectorAll("tr"), C = s.bSortCellsTop, B = ':not([data-dt-order="disable"]):not([data-dt-order="icon-only"])';
  C === !0 ? g = x[0] : C === !1 && (g = x[x.length - 1]), Af(
    s,
    g,
    g === s.nTHead ? "tr" + B + " th" + B + ", tr" + B + " td" + B : "th" + B + ", td" + B
  );
  var O = [];
  Ui(s, O, s.aaSorting), s.aaSorting = O;
}
function Af(s, g, x, C, B) {
  Cf(g, x, function(O) {
    var c = C === void 0 ? D0(O.target) : [C];
    c.length && (_n(s, !0), setTimeout(function() {
      for (var d = 0, t = c.length; d < t; d++) {
        var o = O.shiftKey || d > 0;
        fd(s, c[d], o);
      }
      N0(s), sd(s), ui(s, !1, !1), _n(s, !1), B && B();
    }, 0));
  });
}
function sd(s) {
  var g = s.aiDisplay, x = s.aiDisplayMaster;
  g.sort(function(C, B) {
    return x.indexOf(C) - x.indexOf(B);
  });
}
function Ui(s, g, x) {
  var C = function(O) {
    if (Xt.isPlainObject(O)) {
      if (O.idx !== void 0)
        g.push([O.idx, O.dir]);
      else if (O.name) {
        var c = Xn(s.aoColumns, "sName"), d = c.indexOf(O.name);
        d !== -1 && g.push([d, O.dir]);
      }
    } else
      g.push(O);
  };
  if (Xt.isPlainObject(x))
    C(x);
  else if (x.length && typeof x[0] == "number")
    C(x);
  else if (x.length)
    for (var B = 0; B < x.length; B++)
      C(x[B]);
}
function Uo(s) {
  var g, x, C, B = [], O = ge.ext.type.order, c = s.aoColumns, d, t, o, r, n = s.aaSortingFixed, i = Xt.isPlainObject(n), f = [];
  if (!s.oFeatures.bSort)
    return B;
  for (Array.isArray(n) && Ui(s, f, n), i && n.pre && Ui(s, f, n.pre), Ui(s, f, s.aaSorting), i && n.post && Ui(s, f, n.post), g = 0; g < f.length; g++)
    if (r = f[g][0], c[r])
      for (d = c[r].aDataSort, x = 0, C = d.length; x < C; x++)
        t = d[x], o = c[t].sType || "string", f[g]._idx === void 0 && (f[g]._idx = c[t].asSorting.indexOf(f[g][1])), f[g][1] && B.push({
          src: r,
          col: t,
          dir: f[g][1],
          index: f[g]._idx,
          type: o,
          formatter: O[o + "-pre"],
          sorter: O[o + "-" + f[g][1]]
        });
  return B;
}
function N0(s, g, x) {
  var C, B, O, c = [], d = ge.ext.type.order, t = s.aoData, o, r = s.aiDisplayMaster, n;
  if (I0(s), g !== void 0) {
    var i = s.aoColumns[g];
    n = [{
      src: g,
      col: g,
      dir: x,
      index: 0,
      type: i.sType,
      formatter: d[i.sType + "-pre"],
      sorter: d[i.sType + "-" + x]
    }], r = r.slice();
  } else
    n = Uo(s);
  for (C = 0, B = n.length; C < B; C++)
    o = n[C], ld(s, o.col);
  if (Zn(s) != "ssp" && n.length !== 0) {
    for (C = 0, O = r.length; C < O; C++)
      c[C] = C;
    n.length && n[0].dir === "desc" && c.reverse(), r.sort(function(f, l) {
      var u, h, a, v, y, p = n.length, e = t[f]._aSortData, m = t[l]._aSortData;
      for (a = 0; a < p; a++)
        if (y = n[a], u = e[y.col], h = m[y.col], y.sorter) {
          if (v = y.sorter(u, h), v !== 0)
            return v;
        } else if (v = u < h ? -1 : u > h ? 1 : 0, v !== 0)
          return y.dir === "asc" ? v : -v;
      return u = c[f], h = c[l], u < h ? -1 : u > h ? 1 : 0;
    });
  } else
    n.length === 0 && r.sort(function(f, l) {
      return f < l ? -1 : f > l ? 1 : 0;
    });
  return g === void 0 && (s.bSorted = !0, Nr(s, null, "order", [s, n])), r;
}
function fd(s, g, x) {
  var C = s.aoColumns[g], B = s.aaSorting, O = C.asSorting, c, d = function(o, r) {
    var n = o._idx;
    return n === void 0 && (n = O.indexOf(o[1])), n + 1 < O.length ? n + 1 : r ? null : 0;
  };
  if (C.bSortable)
    if (typeof B[0] == "number" && (B = s.aaSorting = [B]), x && s.oFeatures.bSortMulti) {
      var t = Xn(B, "0").indexOf(g);
      t !== -1 ? (c = d(B[t], !0), c === null && B.length === 1 && (c = 0), c === null ? B.splice(t, 1) : (B[t][1] = O[c], B[t]._idx = c)) : (B.push([g, O[0], 0]), B[B.length - 1]._idx = 0);
    } else
      B.length && B[0][0] == g ? (c = d(B[0]), B.length = 1, B[0][1] = O[c], B[0]._idx = c) : (B.length = 0, B.push([g, O[0]]), B[0]._idx = 0);
}
function y0(s) {
  var g = s.aLastSort, x = s.oClasses.order.position, C = Uo(s), B = s.oFeatures, O, c, d;
  if (B.bSort && B.bSortClasses) {
    for (O = 0, c = g.length; O < c; O++)
      d = g[O].src, Xt(Xn(s.aoData, "anCells", d)).removeClass(x + (O < 2 ? O + 1 : 3));
    for (O = 0, c = C.length; O < c; O++)
      d = C[O].src, Xt(Xn(s.aoData, "anCells", d)).addClass(x + (O < 2 ? O + 1 : 3));
  }
  s.aLastSort = C;
}
function ld(s, g) {
  var x = s.aoColumns[g], C = ge.ext.order[x.sSortDataType], B;
  C && (B = C.call(
    s.oInstance,
    s,
    g,
    Vi(s, g)
  ));
  for (var O, c, d = ge.ext.type.order[x.sType + "-pre"], t = s.aoData, o = 0; o < t.length; o++)
    t[o] && (O = t[o], O._aSortData || (O._aSortData = []), (!O._aSortData[g] || C) && (c = C ? B[o] : (
      // If there was a custom sort function, use data from there
      ta(s, o, g, "sort")
    ), O._aSortData[g] = d ? d(c, s) : c));
}
function zo(s) {
  if (!s._bLoadingState) {
    var g = {
      time: +/* @__PURE__ */ new Date(),
      start: s._iDisplayStart,
      length: s._iDisplayLength,
      order: Xt.extend(!0, [], s.aaSorting),
      search: Xt.extend({}, s.oPreviousSearch),
      columns: s.aoColumns.map(function(x, C) {
        return {
          visible: x.bVisible,
          search: Xt.extend({}, s.aoPreSearchCols[C])
        };
      })
    };
    s.oSavedState = g, Nr(s, "aoStateSaveParams", "stateSaveParams", [s, g]), s.oFeatures.bStateSave && !s.bDestroying && s.fnStateSaveCallback.call(s.oInstance, s, g);
  }
}
function ud(s, g, x) {
  if (!s.oFeatures.bStateSave) {
    x();
    return;
  }
  var C = function(O) {
    m0(s, O, x);
  }, B = s.fnStateLoadCallback.call(s.oInstance, s, C);
  return B !== void 0 && m0(s, B, x), !0;
}
function m0(s, g, x) {
  var C, B, O = s.aoColumns;
  s._bLoadingState = !0;
  var c = s._bInitComplete ? new ge.Api(s) : null;
  if (!g || !g.time) {
    s._bLoadingState = !1, x();
    return;
  }
  var d = s.iStateDuration;
  if (d > 0 && g.time < +/* @__PURE__ */ new Date() - d * 1e3) {
    s._bLoadingState = !1, x();
    return;
  }
  var t = Nr(s, "aoStateLoadParams", "stateLoadParams", [s, g]);
  if (t.indexOf(!1) !== -1) {
    s._bLoadingState = !1, x();
    return;
  }
  if (g.columns && O.length !== g.columns.length) {
    s._bLoadingState = !1, x();
    return;
  }
  if (s.oLoadedState = Xt.extend(!0, {}, g), Nr(s, null, "stateLoadInit", [s, g], !0), g.length !== void 0 && (c ? c.page.len(g.length) : s._iDisplayLength = g.length), g.start !== void 0 && (c === null ? (s._iDisplayStart = g.start, s.iInitDisplayStart = g.start) : L0(s, g.start / s._iDisplayLength)), g.order !== void 0 && (s.aaSorting = [], Xt.each(g.order, function(r, n) {
    s.aaSorting.push(
      n[0] >= O.length ? [0, n[1]] : n
    );
  })), g.search !== void 0 && Xt.extend(s.oPreviousSearch, g.search), g.columns) {
    for (C = 0, B = g.columns.length; C < B; C++) {
      var o = g.columns[C];
      o.visible !== void 0 && (c ? c.column(C).visible(o.visible, !1) : O[C].bVisible = o.visible), o.search !== void 0 && Xt.extend(s.aoPreSearchCols[C], o.search);
    }
    c && c.columns.adjust();
  }
  s._bLoadingState = !1, Nr(s, "aoStateLoaded", "stateLoaded", [s, g]), x();
}
function qn(s, g, x, C) {
  if (x = "DataTables warning: " + (s ? "table id=" + s.sTableId + " - " : "") + x, C && (x += ". For more information about this error, please see https://datatables.net/tn/" + C), g)
    window.console && console.log && console.log(x);
  else {
    var B = ge.ext, O = B.sErrMode || B.errMode;
    if (s && Nr(s, null, "dt-error", [s, C, x], !0), O == "alert")
      alert(x);
    else {
      if (O == "throw")
        throw new Error(x);
      typeof O == "function" && O(s, C, x);
    }
  }
}
function Ra(s, g, x, C) {
  if (Array.isArray(x)) {
    Xt.each(x, function(B, O) {
      Array.isArray(O) ? Ra(s, g, O[0], O[1]) : Ra(s, g, O);
    });
    return;
  }
  C === void 0 && (C = x), g[x] !== void 0 && (s[C] = g[x]);
}
function Qs(s, g, x) {
  var C;
  for (var B in g)
    Object.prototype.hasOwnProperty.call(g, B) && (C = g[B], Xt.isPlainObject(C) ? (Xt.isPlainObject(s[B]) || (s[B] = {}), Xt.extend(!0, s[B], C)) : x && B !== "data" && B !== "aaData" && Array.isArray(C) ? s[B] = C.slice() : s[B] = C);
  return s;
}
function Cf(s, g, x) {
  Xt(s).on("click.DT", g, function(C) {
    x(C);
  }).on("keypress.DT", g, function(C) {
    C.which === 13 && (C.preventDefault(), x(C));
  }).on("selectstart.DT", g, function() {
    return !1;
  });
}
function $n(s, g, x) {
  x && s[g].push(x);
}
function Nr(s, g, x, C, B) {
  var O = [];
  if (g && (O = s[g].slice().reverse().map(function(t) {
    return t.apply(s.oInstance, C);
  })), x !== null) {
    var c = Xt.Event(x + ".dt"), d = Xt(s.nTable);
    c.dt = s.api, d[B ? "trigger" : "triggerHandler"](c, C), B && d.parents("body").length === 0 && Xt("body").trigger(c, C), O.push(c.result);
  }
  return O;
}
function Ef(s) {
  var g = s._iDisplayStart, x = s.fnDisplayEnd(), C = s._iDisplayLength;
  g >= x && (g = x - C), g -= g % C, (C === -1 || g < 0) && (g = 0), s._iDisplayStart = g;
}
function Po(s, g) {
  var x = s.renderer, C = ge.ext.renderer[g];
  return Xt.isPlainObject(x) && x[g] ? C[x[g]] || C._ : typeof x == "string" && C[x] || C._;
}
function Zn(s) {
  return s.oFeatures.bServerSide ? "ssp" : s.ajax ? "ajax" : "dom";
}
function M0(s, g, x) {
  var C = s.fnFormatNumber, B = s._iDisplayStart + 1, O = s._iDisplayLength, c = s.fnRecordsDisplay(), d = s.fnRecordsTotal(), t = O === -1;
  return g.replace(/_START_/g, C.call(s, B)).replace(/_END_/g, C.call(s, s.fnDisplayEnd())).replace(/_MAX_/g, C.call(s, d)).replace(/_TOTAL_/g, C.call(s, c)).replace(/_PAGE_/g, C.call(s, t ? 1 : Math.ceil(B / O))).replace(/_PAGES_/g, C.call(s, t ? 1 : Math.ceil(c / O))).replace(/_ENTRIES_/g, s.api.i18n("entries", "", x)).replace(/_ENTRIES-MAX_/g, s.api.i18n("entries", "", d)).replace(/_ENTRIES-TOTAL_/g, s.api.i18n("entries", "", c));
}
var k0 = [], Ln = Array.prototype, cd = function(s) {
  var g, x, C = ge.settings, B = Xn(C, "nTable");
  if (s) {
    if (s.nTable && s.oFeatures)
      return [s];
    if (s.nodeName && s.nodeName.toLowerCase() === "table")
      return g = B.indexOf(s), g !== -1 ? [C[g]] : null;
    if (s && typeof s.settings == "function")
      return s.settings().toArray();
    typeof s == "string" ? x = Xt(s).get() : s instanceof Xt && (x = s.get());
  } else
    return [];
  if (x)
    return C.filter(function(O, c) {
      return x.includes(B[c]);
    });
};
Sr = function(s, g) {
  if (!(this instanceof Sr))
    return new Sr(s, g);
  var x = [], C = function(c) {
    var d = cd(c);
    d && x.push.apply(x, d);
  };
  if (Array.isArray(s))
    for (var B = 0, O = s.length; B < O; B++)
      C(s[B]);
  else
    C(s);
  this.context = x.length > 1 ? Xa(x) : x, g && this.push.apply(this, g), this.selector = {
    rows: null,
    cols: null,
    opts: null
  }, Sr.extend(this, this, k0);
};
ge.Api = Sr;
Xt.extend(Sr.prototype, {
  any: function() {
    return this.count() !== 0;
  },
  context: [],
  // array of table settings objects
  count: function() {
    return this.flatten().length;
  },
  each: function(s) {
    for (var g = 0, x = this.length; g < x; g++)
      s.call(this, this[g], g, this);
    return this;
  },
  eq: function(s) {
    var g = this.context;
    return g.length > s ? new Sr(g[s], this[s]) : null;
  },
  filter: function(s) {
    var g = Ln.filter.call(this, s, this);
    return new Sr(this.context, g);
  },
  flatten: function() {
    var s = [];
    return new Sr(this.context, s.concat.apply(s, this.toArray()));
  },
  get: function(s) {
    return this[s];
  },
  join: Ln.join,
  includes: function(s) {
    return this.indexOf(s) !== -1;
  },
  indexOf: Ln.indexOf,
  iterator: function(s, g, x, C) {
    var B = [], O, c, d, t, o, r = this.context, n, i, f, l = this.selector;
    for (typeof s == "string" && (C = x, x = g, g = s, s = !1), c = 0, d = r.length; c < d; c++) {
      var u = new Sr(r[c]);
      if (g === "table")
        O = x.call(u, r[c], c), O !== void 0 && B.push(O);
      else if (g === "columns" || g === "rows")
        O = x.call(u, r[c], this[c], c), O !== void 0 && B.push(O);
      else if (g === "every" || g === "column" || g === "column-rows" || g === "row" || g === "cell")
        for (i = this[c], g === "column-rows" && (n = Wo(r[c], l.opts)), t = 0, o = i.length; t < o; t++)
          f = i[t], g === "cell" ? O = x.call(u, r[c], f.row, f.column, c, t) : O = x.call(u, r[c], f, c, t, n), O !== void 0 && B.push(O);
    }
    if (B.length || C) {
      var h = new Sr(r, s ? B.concat.apply([], B) : B), a = h.selector;
      return a.rows = l.rows, a.cols = l.cols, a.opts = l.opts, h;
    }
    return this;
  },
  lastIndexOf: Ln.lastIndexOf,
  length: 0,
  map: function(s) {
    var g = Ln.map.call(this, s, this);
    return new Sr(this.context, g);
  },
  pluck: function(s) {
    var g = ge.util.get(s);
    return this.map(function(x) {
      return g(x);
    });
  },
  pop: Ln.pop,
  push: Ln.push,
  reduce: Ln.reduce,
  reduceRight: Ln.reduceRight,
  reverse: Ln.reverse,
  // Object with rows, columns and opts
  selector: null,
  shift: Ln.shift,
  slice: function() {
    return new Sr(this.context, this);
  },
  sort: Ln.sort,
  splice: Ln.splice,
  toArray: function() {
    return Ln.slice.call(this);
  },
  to$: function() {
    return Xt(this);
  },
  toJQuery: function() {
    return Xt(this);
  },
  unique: function() {
    return new Sr(this.context, Xa(this.toArray()));
  },
  unshift: Ln.unshift
});
function hd(s, g, x) {
  return function() {
    var C = g.apply(s || this, arguments);
    return Sr.extend(C, C, x.methodExt), C;
  };
}
function dd(s, g) {
  for (var x = 0, C = s.length; x < C; x++)
    if (s[x].name === g)
      return s[x];
  return null;
}
window.__apiStruct = k0;
Sr.extend = function(s, g, x) {
  if (!(!x.length || !g || !(g instanceof Sr) && !g.__dt_wrapper)) {
    var C, B, O;
    for (C = 0, B = x.length; C < B; C++)
      O = x[C], g[O.name] = O.type === "function" ? hd(s, O.val, O) : O.type === "object" ? {} : O.val, g[O.name].__dt_wrapper = !0, Sr.extend(s, g[O.name], O.propExt);
  }
};
Sr.register = Ke = function(s, g) {
  if (Array.isArray(s)) {
    for (var x = 0, C = s.length; x < C; x++)
      Sr.register(s[x], g);
    return;
  }
  var B, O, c = s.split("."), d = k0, t, o;
  for (B = 0, O = c.length; B < O; B++) {
    o = c[B].indexOf("()") !== -1, t = o ? c[B].replace("()", "") : c[B];
    var r = dd(d, t);
    r || (r = {
      name: t,
      val: {},
      methodExt: [],
      propExt: [],
      type: "object"
    }, d.push(r)), B === O - 1 ? (r.val = g, r.type = typeof g == "function" ? "function" : Xt.isPlainObject(g) ? "object" : "other") : d = o ? r.methodExt : r.propExt;
  }
};
Sr.registerPlural = Xr = function(s, g, x) {
  Sr.register(s, x), Sr.register(g, function() {
    var C = x.apply(this, arguments);
    return C === this ? this : C instanceof Sr ? C.length ? Array.isArray(C[0]) ? new Sr(C.context, C[0]) : (
      // Array results are 'enhanced'
      C[0]
    ) : void 0 : C;
  });
};
var Tf = function(s, g) {
  if (Array.isArray(s)) {
    var x = [];
    return s.forEach(function(B) {
      var O = Tf(B, g);
      x.push.apply(x, O);
    }), x.filter(function(B) {
      return B;
    });
  }
  if (typeof s == "number")
    return [g[s]];
  var C = g.map(function(B) {
    return B.nTable;
  });
  return Xt(C).filter(s).map(function() {
    var B = C.indexOf(this);
    return g[B];
  }).toArray();
};
Ke("tables()", function(s) {
  return s != null ? new Sr(Tf(s, this.context)) : this;
});
Ke("table()", function(s) {
  var g = this.tables(s), x = g.context;
  return x.length ? new Sr(x[0]) : g;
});
[
  ["nodes", "node", "nTable"],
  ["body", "body", "nTBody"],
  ["header", "header", "nTHead"],
  ["footer", "footer", "nTFoot"]
].forEach(function(s) {
  Xr(
    "tables()." + s[0] + "()",
    "table()." + s[1] + "()",
    function() {
      return this.iterator("table", function(g) {
        return g[s[2]];
      }, 1);
    }
  );
});
[
  ["header", "aoHeader"],
  ["footer", "aoFooter"]
].forEach(function(s) {
  Ke("table()." + s[0] + ".structure()", function(g) {
    var x = this.columns(g).indexes().flatten(), C = this.context[0];
    return yf(C, C[s[1]], x);
  });
});
Xr("tables().containers()", "table().container()", function() {
  return this.iterator("table", function(s) {
    return s.nTableWrapper;
  }, 1);
});
Ke("tables().every()", function(s) {
  var g = this;
  return this.iterator("table", function(x, C) {
    s.call(g.table(C), C);
  });
});
Ke("caption()", function(s, g) {
  var x = this.context;
  if (s === void 0) {
    var C = x[0].captionNode;
    return C && x.length ? C.innerHTML : null;
  }
  return this.iterator("table", function(B) {
    var O = Xt(B.nTable), c = Xt(B.captionNode), d = Xt(B.nTableWrapper);
    if (c.length || (c = Xt("<caption/>").html(s), B.captionNode = c[0], g || (O.prepend(c), g = c.css("caption-side"))), c.html(s), g && (c.css("caption-side", g), c[0]._captionSide = g), d.find("div.dataTables_scroll").length) {
      var t = g === "top" ? "Head" : "Foot";
      d.find("div.dataTables_scroll" + t + " table").prepend(c);
    } else
      O.prepend(c);
  }, 1);
});
Ke("caption.node()", function() {
  var s = this.context;
  return s.length ? s[0].captionNode : null;
});
Ke("draw()", function(s) {
  return this.iterator("table", function(g) {
    s === "page" ? ci(g) : (typeof s == "string" && (s = s !== "full-hold"), ui(g, s === !1));
  });
});
Ke("page()", function(s) {
  return s === void 0 ? this.page.info().page : this.iterator("table", function(g) {
    L0(g, s);
  });
});
Ke("page.info()", function() {
  if (this.context.length !== 0) {
    var s = this.context[0], g = s._iDisplayStart, x = s.oFeatures.bPaginate ? s._iDisplayLength : -1, C = s.fnRecordsDisplay(), B = x === -1;
    return {
      page: B ? 0 : Math.floor(g / x),
      pages: B ? 1 : Math.ceil(C / x),
      start: g,
      end: s.fnDisplayEnd(),
      length: x,
      recordsTotal: s.fnRecordsTotal(),
      recordsDisplay: C,
      serverSide: Zn(s) === "ssp"
    };
  }
});
Ke("page.len()", function(s) {
  return s === void 0 ? this.context.length !== 0 ? this.context[0]._iDisplayLength : void 0 : this.iterator("table", function(g) {
    xf(g, s);
  });
});
var Ff = function(s, g, x) {
  if (x) {
    var C = new Sr(s);
    C.one("draw", function() {
      x(C.ajax.json());
    });
  }
  if (Zn(s) == "ssp")
    ui(s, g);
  else {
    _n(s, !0);
    var B = s.jqXHR;
    B && B.readyState !== 4 && B.abort(), R0(s, {}, function(O) {
      O0(s);
      for (var c = ko(s, O), d = 0, t = c.length; d < t; d++)
        Za(s, c[d]);
      ui(s, g), Do(s), _n(s, !1);
    });
  }
};
Ke("ajax.json()", function() {
  var s = this.context;
  if (s.length > 0)
    return s[0].json;
});
Ke("ajax.params()", function() {
  var s = this.context;
  if (s.length > 0)
    return s[0].oAjaxData;
});
Ke("ajax.reload()", function(s, g) {
  return this.iterator("table", function(x) {
    Ff(x, g === !1, s);
  });
});
Ke("ajax.url()", function(s) {
  var g = this.context;
  return s === void 0 ? g.length === 0 ? void 0 : (g = g[0], Xt.isPlainObject(g.ajax) ? g.ajax.url : g.ajax) : this.iterator("table", function(x) {
    Xt.isPlainObject(x.ajax) ? x.ajax.url = s : x.ajax = s;
  });
});
Ke("ajax.url().load()", function(s, g) {
  return this.iterator("table", function(x) {
    Ff(x, g === !1, s);
  });
});
var U0 = function(s, g, x, C, B) {
  var O = [], c, d, t, o, r, n, i = typeof g;
  for ((!g || i === "string" || i === "function" || g.length === void 0) && (g = [g]), t = 0, o = g.length; t < o; t++)
    for (d = g[t] && g[t].split && !g[t].match(/[[(:]/) ? g[t].split(",") : [g[t]], r = 0, n = d.length; r < n; r++)
      c = x(typeof d[r] == "string" ? d[r].trim() : d[r]), c = c.filter(function(l) {
        return l != null;
      }), c && c.length && (O = O.concat(c));
  var f = Vr.selector[s];
  if (f.length)
    for (t = 0, o = f.length; t < o; t++)
      O = f[t](C, B, O);
  return Xa(O);
}, z0 = function(s) {
  return s || (s = {}), s.filter && s.search === void 0 && (s.search = s.filter), Xt.extend({
    search: "none",
    order: "current",
    page: "all"
  }, s);
}, W0 = function(s) {
  let g = new Sr(s.context[0]);
  return s.length && g.push(s[0]), g.selector = s.selector, g.length && g[0].length > 1 && g[0].splice(1), g;
}, Wo = function(s, g) {
  var x, C, B, O = [], c = s.aiDisplay, d = s.aiDisplayMaster, t = g.search, o = g.order, r = g.page;
  if (Zn(s) == "ssp")
    return t === "removed" ? [] : Pa(0, d.length);
  if (r == "current")
    for (x = s._iDisplayStart, C = s.fnDisplayEnd(); x < C; x++)
      O.push(c[x]);
  else if (o == "current" || o == "applied") {
    if (t == "none")
      O = d.slice();
    else if (t == "applied")
      O = c.slice();
    else if (t == "removed") {
      var n = {};
      for (x = 0, C = c.length; x < C; x++)
        n[c[x]] = null;
      d.forEach(function(f) {
        Object.prototype.hasOwnProperty.call(n, f) || O.push(f);
      });
    }
  } else if (o == "index" || o == "original")
    for (x = 0, C = s.aoData.length; x < C; x++)
      s.aoData[x] && (t == "none" ? O.push(x) : (B = c.indexOf(x), (B === -1 && t == "removed" || B >= 0 && t == "applied") && O.push(x)));
  else if (typeof o == "number") {
    var i = N0(s, o, "asc");
    if (t === "none")
      O = i;
    else
      for (x = 0; x < i.length; x++)
        B = c.indexOf(i[x]), (B === -1 && t == "removed" || B >= 0 && t == "applied") && O.push(i[x]);
  }
  return O;
}, vd = function(s, g, x) {
  var C, B = function(d) {
    var t = of(d), o = s.aoData;
    if (t !== null && !x)
      return [t];
    if (C || (C = Wo(s, x)), t !== null && C.indexOf(t) !== -1)
      return [t];
    if (d == null || d === "")
      return C;
    if (typeof d == "function")
      return C.map(function(u) {
        var h = o[u];
        return d(u, h._aData, h.nTr) ? u : null;
      });
    if (d.nodeName) {
      var r = d._DT_RowIndex, n = d._DT_CellIndex;
      if (r !== void 0)
        return o[r] && o[r].nTr === d ? [r] : [];
      if (n)
        return o[n.row] && o[n.row].nTr === d.parentNode ? [n.row] : [];
      var i = Xt(d).closest("*[data-dt-row]");
      return i.length ? [i.data("dt-row")] : [];
    }
    if (typeof d == "string" && d.charAt(0) === "#") {
      var f = s.aIds[d.replace(/^#/, "")];
      if (f !== void 0)
        return [f.idx];
    }
    var l = lf(
      Gi(s.aoData, C, "nTr")
    );
    return Xt(l).filter(d).map(function() {
      return this._DT_RowIndex;
    }).toArray();
  }, O = U0("row", g, B, s, x);
  if (x.order === "current" || x.order === "applied") {
    var c = s.aiDisplayMaster;
    O.sort(function(d, t) {
      return c.indexOf(d) - c.indexOf(t);
    });
  }
  return O;
};
Ke("rows()", function(s, g) {
  s === void 0 ? s = "" : Xt.isPlainObject(s) && (g = s, s = ""), g = z0(g);
  var x = this.iterator("table", function(C) {
    return vd(C, s, g);
  }, 1);
  return x.selector.rows = s, x.selector.opts = g, x;
});
Ke("rows().nodes()", function() {
  return this.iterator("row", function(s, g) {
    return s.aoData[g].nTr || void 0;
  }, 1);
});
Ke("rows().data()", function() {
  return this.iterator(!0, "rows", function(s, g) {
    return Gi(s.aoData, g, "_aData");
  }, 1);
});
Xr("rows().cache()", "row().cache()", function(s) {
  return this.iterator("row", function(g, x) {
    var C = g.aoData[x];
    return s === "search" ? C._aFilterData : C._aSortData;
  }, 1);
});
Xr("rows().invalidate()", "row().invalidate()", function(s) {
  return this.iterator("row", function(g, x) {
    Mo(g, x, s);
  });
});
Xr("rows().indexes()", "row().index()", function() {
  return this.iterator("row", function(s, g) {
    return g;
  }, 1);
});
Xr("rows().ids()", "row().id()", function(s) {
  for (var g = [], x = this.context, C = 0, B = x.length; C < B; C++)
    for (var O = 0, c = this[C].length; O < c; O++) {
      var d = x[C].rowIdFn(x[C].aoData[this[C][O]]._aData);
      g.push((s === !0 ? "#" : "") + d);
    }
  return new Sr(x, g);
});
Xr("rows().remove()", "row().remove()", function() {
  return this.iterator("row", function(s, g) {
    var x = s.aoData, C = x[g], B = s.aiDisplayMaster.indexOf(g);
    B !== -1 && s.aiDisplayMaster.splice(B, 1), B = s.aiDisplay.indexOf(g), B !== -1 && s.aiDisplay.splice(B, 1), s._iRecordsDisplay > 0 && s._iRecordsDisplay--, Ef(s);
    var O = s.rowIdFn(C._aData);
    O !== void 0 && delete s.aIds[O], x[g] = null;
  }), this;
});
Ke("rows.add()", function(s) {
  var g = this.iterator("table", function(C) {
    var B, O, c, d = [];
    for (O = 0, c = s.length; O < c; O++)
      B = s[O], B.nodeName && B.nodeName.toUpperCase() === "TR" ? d.push(P0(C, B)[0]) : d.push(Za(C, B));
    return d;
  }, 1), x = this.rows(-1);
  return x.pop(), x.push.apply(x, g), x;
});
Ke("row()", function(s, g) {
  return W0(this.rows(s, g));
});
Ke("row().data()", function(s) {
  var g = this.context;
  if (s === void 0)
    return g.length && this.length && this[0].length ? g[0].aoData[this[0]]._aData : void 0;
  var x = g[0].aoData[this[0]];
  return x._aData = s, Array.isArray(s) && x.nTr && x.nTr.id && Ga(g[0].rowId)(s, x.nTr.id), Mo(g[0], this[0], "data"), this;
});
Ke("row().node()", function() {
  var s = this.context;
  return s.length && this.length && this[0].length && s[0].aoData[this[0]].nTr || null;
});
Ke("row.add()", function(s) {
  s instanceof Xt && s.length && (s = s[0]);
  var g = this.iterator("table", function(x) {
    return s.nodeName && s.nodeName.toUpperCase() === "TR" ? P0(x, s)[0] : Za(x, s);
  });
  return this.row(g[0]);
});
Xt(document).on("plugin-init.dt", function(s, g) {
  var x = new Sr(g);
  x.on("stateSaveParams.DT", function(C, B, O) {
    for (var c = B.rowIdFn, d = B.aiDisplayMaster, t = [], o = 0; o < d.length; o++) {
      var r = d[o], n = B.aoData[r];
      n._detailsShow && t.push("#" + c(n._aData));
    }
    O.childRows = t;
  }), x.on("stateLoaded.DT", function(C, B, O) {
    $s(x, O);
  }), $s(x, x.state.loaded());
});
var $s = function(s, g) {
  g && g.childRows && s.rows(g.childRows.map(function(x) {
    return x.replace(/:/g, "\\:");
  })).every(function() {
    Nr(s.settings()[0], null, "requestChild", [this]);
  });
}, pd = function(s, g, x, C) {
  var B = [], O = function(c, d) {
    if (Array.isArray(c) || c instanceof Xt) {
      for (var t = 0, o = c.length; t < o; t++)
        O(c[t], d);
      return;
    }
    if (c.nodeName && c.nodeName.toLowerCase() === "tr")
      c.setAttribute("data-dt-row", g.idx), B.push(c);
    else {
      var r = Xt("<tr><td></td></tr>").attr("data-dt-row", g.idx).addClass(d);
      Xt("td", r).addClass(d).html(c)[0].colSpan = No(s), B.push(r[0]);
    }
  };
  O(x, C), g._details && g._details.detach(), g._details = Xt(B), g._detailsShow && g._details.insertAfter(g.nTr);
}, If = ge.util.throttle(
  function(s) {
    zo(s[0]);
  },
  500
), H0 = function(s, g) {
  var x = s.context;
  if (x.length) {
    var C = x[0].aoData[g !== void 0 ? g : s[0]];
    C && C._details && (C._details.remove(), C._detailsShow = void 0, C._details = void 0, Xt(C.nTr).removeClass("dt-hasChild"), If(x));
  }
}, Df = function(s, g) {
  var x = s.context;
  if (x.length && s.length) {
    var C = x[0].aoData[s[0]];
    C._details && (C._detailsShow = g, g ? (C._details.insertAfter(C.nTr), Xt(C.nTr).addClass("dt-hasChild")) : (C._details.detach(), Xt(C.nTr).removeClass("dt-hasChild")), Nr(x[0], null, "childRow", [g, s.row(s[0])]), gd(x[0]), If(x));
  }
}, gd = function(s) {
  var g = new Sr(s), x = ".dt.DT_details", C = "draw" + x, B = "column-sizing" + x, O = "destroy" + x, c = s.aoData;
  g.off(C + " " + B + " " + O), Xn(c, "_details").length > 0 && (g.on(C, function(d, t) {
    s === t && g.rows({ page: "current" }).eq(0).each(function(o) {
      var r = c[o];
      r._detailsShow && r._details.insertAfter(r.nTr);
    });
  }), g.on(B, function(d, t) {
    if (s === t)
      for (var o, r = No(t), n = 0, i = c.length; n < i; n++)
        o = c[n], o._details && o._details.each(function() {
          var f = Xt(this).children("td");
          f.length == 1 && f.attr("colspan", r);
        });
  }), g.on(O, function(d, t) {
    if (s === t)
      for (var o = 0, r = c.length; o < r; o++)
        c[o]._details && H0(g, o);
  }));
}, yd = "", Xi = yd + "row().child", Ho = Xi + "()";
Ke(Ho, function(s, g) {
  var x = this.context;
  return s === void 0 ? x.length && this.length ? x[0].aoData[this[0]]._details : void 0 : (s === !0 ? this.child.show() : s === !1 ? H0(this) : x.length && this.length && pd(x[0], x[0].aoData[this[0]], s, g), this);
});
Ke([
  Xi + ".show()",
  Ho + ".show()"
  // only when `child()` was called with parameters (without
], function() {
  return Df(this, !0), this;
});
Ke([
  Xi + ".hide()",
  Ho + ".hide()"
  // only when `child()` was called with parameters (without
], function() {
  return Df(this, !1), this;
});
Ke([
  Xi + ".remove()",
  Ho + ".remove()"
  // only when `child()` was called with parameters (without
], function() {
  return H0(this), this;
});
Ke(Xi + ".isShown()", function() {
  var s = this.context;
  return s.length && this.length && s[0].aoData[this[0]]._detailsShow || !1;
});
var md = /^([^:]+):(name|title|visIdx|visible)$/, j0 = function(s, g, x, C, B, O) {
  for (var c = [], d = 0, t = B.length; d < t; d++)
    c.push(ta(s, B[d], g, O));
  return c;
}, xd = function(s, g, x) {
  var C = s.aoColumns, B = Xn(C, "sName"), O = Xn(C, "sTitle"), c = ge.util.get("[].[].cell")(s.aoHeader), d = Xa(T0([], c)), t = function(o) {
    var r = of(o);
    if (o === "")
      return Pa(C.length);
    if (r !== null)
      return [
        r >= 0 ? r : (
          // Count from left
          C.length + r
        )
        // Count from right (+ because its a negative value)
      ];
    if (typeof o == "function") {
      var n = Wo(s, x);
      return C.map(function(a, v) {
        return o(
          v,
          j0(s, v, 0, 0, n)
        ) ? v : null;
      });
    }
    var i = typeof o == "string" ? o.match(md) : "";
    if (i)
      switch (i[2]) {
        case "visIdx":
        case "visible":
          var f = parseInt(i[1], 10);
          if (f < 0) {
            var l = C.map(function(a, v) {
              return a.bVisible ? v : null;
            });
            return [l[l.length + f]];
          }
          return [hf(s, f)];
        case "name":
          return B.map(function(a, v) {
            return a === i[1] ? v : null;
          });
        case "title":
          return O.map(function(a, v) {
            return a === i[1] ? v : null;
          });
        default:
          return [];
      }
    if (o.nodeName && o._DT_CellIndex)
      return [o._DT_CellIndex.column];
    var u = Xt(d).filter(o).map(function() {
      return D0(this);
    }).toArray();
    if (u.length || !o.nodeName)
      return u;
    var h = Xt(o).closest("*[data-dt-column]");
    return h.length ? [h.data("dt-column")] : [];
  };
  return U0("column", g, t, s, x);
}, bd = function(s, g, x) {
  var C = s.aoColumns, B = C[g], O = s.aoData, c, d, t, o;
  if (x === void 0)
    return B.bVisible;
  if (B.bVisible === x)
    return !1;
  if (x) {
    var r = Xn(C, "bVisible").indexOf(!0, g + 1);
    for (d = 0, t = O.length; d < t; d++)
      O[d] && (o = O[d].nTr, c = O[d].anCells, o && o.insertBefore(c[g], c[r] || null));
  } else
    Xt(Xn(s.aoData, "anCells", g)).detach();
  return B.bVisible = x, Sf(s), !0;
};
Ke("columns()", function(s, g) {
  s === void 0 ? s = "" : Xt.isPlainObject(s) && (g = s, s = ""), g = z0(g);
  var x = this.iterator("table", function(C) {
    return xd(C, s, g);
  }, 1);
  return x.selector.cols = s, x.selector.opts = g, x;
});
Xr("columns().header()", "column().header()", function(s) {
  return this.iterator("column", function(g, x) {
    var C = g.aoHeader, B = s !== void 0 ? s : g.bSortCellsTop ? 0 : C.length - 1;
    return C[B][x].cell;
  }, 1);
});
Xr("columns().footer()", "column().footer()", function(s) {
  return this.iterator("column", function(g, x) {
    var C = g.aoFooter;
    return C.length ? g.aoFooter[s !== void 0 ? s : 0][x].cell : null;
  }, 1);
});
Xr("columns().data()", "column().data()", function() {
  return this.iterator("column-rows", j0, 1);
});
Xr("columns().render()", "column().render()", function(s) {
  return this.iterator("column-rows", function(g, x, C, B, O) {
    return j0(g, x, C, B, O, s);
  }, 1);
});
Xr("columns().dataSrc()", "column().dataSrc()", function() {
  return this.iterator("column", function(s, g) {
    return s.aoColumns[g].mData;
  }, 1);
});
Xr("columns().cache()", "column().cache()", function(s) {
  return this.iterator("column-rows", function(g, x, C, B, O) {
    return Gi(
      g.aoData,
      O,
      s === "search" ? "_aFilterData" : "_aSortData",
      x
    );
  }, 1);
});
Xr("columns().init()", "column().init()", function() {
  return this.iterator("column", function(s, g) {
    return s.aoColumns[g];
  }, 1);
});
Xr("columns().nodes()", "column().nodes()", function() {
  return this.iterator("column-rows", function(s, g, x, C, B) {
    return Gi(s.aoData, B, "anCells", g);
  }, 1);
});
Xr("columns().titles()", "column().title()", function(s, g) {
  return this.iterator("column", function(x, C) {
    typeof s == "number" && (g = s, s = void 0);
    var B = Xt("span.dt-column-title", this.column(C).header(g));
    return s !== void 0 ? (B.html(s), this) : B.html();
  }, 1);
});
Xr("columns().types()", "column().type()", function() {
  return this.iterator("column", function(s, g) {
    var x = s.aoColumns[g].sType;
    return x || I0(s), x;
  }, 1);
});
Xr("columns().visible()", "column().visible()", function(s, g) {
  var x = this, C = [], B = this.iterator("column", function(O, c) {
    if (s === void 0)
      return O.aoColumns[c].bVisible;
    bd(O, c, s) && C.push(c);
  });
  return s !== void 0 && this.iterator("table", function(O) {
    Io(O, O.aoHeader), Io(O, O.aoFooter), O.aiDisplay.length || Xt(O.nTBody).find("td[colspan]").attr("colspan", No(O)), zo(O), x.iterator("column", function(c, d) {
      C.includes(d) && Nr(c, null, "column-visibility", [c, d, s, g]);
    }), C.length && (g === void 0 || g) && x.columns.adjust();
  }), B;
});
Xr("columns().widths()", "column().width()", function() {
  var s = this.columns(":visible").count(), g = Xt("<tr>").html("<td>" + Array(s).join("</td><td>") + "</td>");
  Xt(this.table().body()).append(g);
  var x = g.children().map(function() {
    return Xt(this).outerWidth();
  });
  return g.remove(), this.iterator("column", function(C, B) {
    var O = Vi(C, B);
    return O !== null ? x[O] : 0;
  }, 1);
});
Xr("columns().indexes()", "column().index()", function(s) {
  return this.iterator("column", function(g, x) {
    return s === "visible" ? Vi(g, x) : x;
  }, 1);
});
Ke("columns.adjust()", function() {
  return this.iterator("table", function(s) {
    Lo(s);
  }, 1);
});
Ke("column.index()", function(s, g) {
  if (this.context.length !== 0) {
    var x = this.context[0];
    if (s === "fromVisible" || s === "toData")
      return hf(x, g);
    if (s === "fromData" || s === "toVisible")
      return Vi(x, g);
  }
});
Ke("column()", function(s, g) {
  return W0(this.columns(s, g));
});
var wd = function(s, g, x) {
  var C = s.aoData, B = Wo(s, x), O = lf(Gi(C, B, "anCells")), c = Xt(T0([], O)), d, t = s.aoColumns.length, o, r, n, i, f, l, u = function(h) {
    var a = typeof h == "function";
    if (h == null || a) {
      for (o = [], r = 0, n = B.length; r < n; r++)
        for (d = B[r], i = 0; i < t; i++)
          f = {
            row: d,
            column: i
          }, a ? (l = C[d], h(f, ta(s, d, i), l.anCells ? l.anCells[i] : null) && o.push(f)) : o.push(f);
      return o;
    }
    if (Xt.isPlainObject(h))
      return h.column !== void 0 && h.row !== void 0 && B.indexOf(h.row) !== -1 ? [h] : [];
    var v = c.filter(h).map(function(y, p) {
      return {
        // use a new object, in case someone changes the values
        row: p._DT_CellIndex.row,
        column: p._DT_CellIndex.column
      };
    }).toArray();
    return v.length || !h.nodeName ? v : (l = Xt(h).closest("*[data-dt-row]"), l.length ? [{
      row: l.data("dt-row"),
      column: l.data("dt-column")
    }] : []);
  };
  return U0("cell", g, u, s, x);
};
Ke("cells()", function(s, g, x) {
  if (Xt.isPlainObject(s) && (s.row === void 0 ? (x = s, s = null) : (x = g, g = null)), Xt.isPlainObject(g) && (x = g, g = null), g == null)
    return this.iterator("table", function(i) {
      return wd(i, s, z0(x));
    });
  var C = x ? {
    page: x.page,
    order: x.order,
    search: x.search
  } : {}, B = this.columns(g, C), O = this.rows(s, C), c, d, t, o, r = this.iterator("table", function(i, f) {
    var l = [];
    for (c = 0, d = O[f].length; c < d; c++)
      for (t = 0, o = B[f].length; t < o; t++)
        l.push({
          row: O[f][c],
          column: B[f][t]
        });
    return l;
  }, 1), n = x && x.selected ? this.cells(r, x) : r;
  return Xt.extend(n.selector, {
    cols: g,
    rows: s,
    opts: x
  }), n;
});
Xr("cells().nodes()", "cell().node()", function() {
  return this.iterator("cell", function(s, g, x) {
    var C = s.aoData[g];
    return C && C.anCells ? C.anCells[x] : void 0;
  }, 1);
});
Ke("cells().data()", function() {
  return this.iterator("cell", function(s, g, x) {
    return ta(s, g, x);
  }, 1);
});
Xr("cells().cache()", "cell().cache()", function(s) {
  return s = s === "search" ? "_aFilterData" : "_aSortData", this.iterator("cell", function(g, x, C) {
    return g.aoData[x][s][C];
  }, 1);
});
Xr("cells().render()", "cell().render()", function(s) {
  return this.iterator("cell", function(g, x, C) {
    return ta(g, x, C, s);
  }, 1);
});
Xr("cells().indexes()", "cell().index()", function() {
  return this.iterator("cell", function(s, g, x) {
    return {
      row: g,
      column: x,
      columnVisible: Vi(s, x)
    };
  }, 1);
});
Xr("cells().invalidate()", "cell().invalidate()", function(s) {
  return this.iterator("cell", function(g, x, C) {
    Mo(g, x, s, C);
  });
});
Ke("cell()", function(s, g, x) {
  return W0(this.cells(s, g, x));
});
Ke("cell().data()", function(s) {
  var g = this.context, x = this[0];
  return s === void 0 ? g.length && x.length ? ta(g[0], x[0].row, x[0].column) : void 0 : (Zh(g[0], x[0].row, x[0].column, s), Mo(g[0], x[0].row, "data", x[0].column), this);
});
Ke("order()", function(s, g) {
  var x = this.context, C = Array.prototype.slice.call(arguments);
  return s === void 0 ? x.length !== 0 ? x[0].aaSorting : void 0 : (typeof s == "number" ? s = [[s, g]] : C.length > 1 && (s = C), this.iterator("table", function(B) {
    B.aaSorting = Array.isArray(s) ? s.slice() : s;
  }));
});
Ke("order.listener()", function(s, g, x) {
  return this.iterator("table", function(C) {
    Af(C, s, {}, g, x);
  });
});
Ke("order.fixed()", function(s) {
  if (!s) {
    var g = this.context, x = g.length ? g[0].aaSortingFixed : void 0;
    return Array.isArray(x) ? { pre: x } : x;
  }
  return this.iterator("table", function(C) {
    C.aaSortingFixed = Xt.extend(!0, {}, s);
  });
});
Ke([
  "columns().order()",
  "column().order()"
], function(s) {
  var g = this;
  return s ? this.iterator("table", function(x, C) {
    x.aaSorting = g[C].map(function(B) {
      return [B, s];
    });
  }) : this.iterator("column", function(x, C) {
    for (var B = Uo(x), O = 0, c = B.length; O < c; O++)
      if (B[O].col === C)
        return B[O].dir;
    return null;
  }, 1);
});
Xr("columns().orderable()", "column().orderable()", function(s) {
  return this.iterator("column", function(g, x) {
    var C = g.aoColumns[x];
    return s ? C.asSorting : C.bSortable;
  }, 1);
});
Ke("processing()", function(s) {
  return this.iterator("table", function(g) {
    _n(g, s);
  });
});
Ke("search()", function(s, g, x, C) {
  var B = this.context;
  return s === void 0 ? B.length !== 0 ? B[0].oPreviousSearch.search : void 0 : this.iterator("table", function(O) {
    O.oFeatures.bFilter && (typeof g == "object" ? ji(O, Xt.extend(O.oPreviousSearch, g, {
      search: s
    })) : ji(O, Xt.extend(O.oPreviousSearch, {
      search: s,
      regex: g === null ? !1 : g,
      smart: x === null ? !0 : x,
      caseInsensitive: C === null ? !0 : C
    })));
  });
});
Ke("search.fixed()", function(s, g) {
  var x = this.iterator(!0, "table", function(C) {
    var B = C.searchFixed;
    if (s) {
      if (g === void 0)
        return B[s];
      g === null ? delete B[s] : B[s] = g;
    } else
      return Object.keys(B);
    return this;
  });
  return s !== void 0 && g === void 0 ? x[0] : x;
});
Xr(
  "columns().search()",
  "column().search()",
  function(s, g, x, C) {
    return this.iterator("column", function(B, O) {
      var c = B.aoPreSearchCols;
      if (s === void 0)
        return c[O].search;
      B.oFeatures.bFilter && (typeof g == "object" ? Xt.extend(c[O], g, {
        search: s
      }) : Xt.extend(c[O], {
        search: s,
        regex: g === null ? !1 : g,
        smart: x === null ? !0 : x,
        caseInsensitive: C === null ? !0 : C
      }), ji(B, B.oPreviousSearch));
    });
  }
);
Ke(
  [
    "columns().search.fixed()",
    "column().search.fixed()"
  ],
  function(s, g) {
    var x = this.iterator(!0, "column", function(C, B) {
      var O = C.aoColumns[B].searchFixed;
      if (s) {
        if (g === void 0)
          return O[s];
        g === null ? delete O[s] : O[s] = g;
      } else
        return Object.keys(O);
      return this;
    });
    return s !== void 0 && g === void 0 ? x[0] : x;
  }
);
Ke("state()", function(s, g) {
  if (!s)
    return this.context.length ? this.context[0].oSavedState : null;
  var x = Xt.extend(!0, {}, s);
  return this.iterator("table", function(C) {
    g !== !1 && (x.time = +/* @__PURE__ */ new Date() + 100), m0(C, x, function() {
    });
  });
});
Ke("state.clear()", function() {
  return this.iterator("table", function(s) {
    s.fnStateSaveCallback.call(s.oInstance, s, {});
  });
});
Ke("state.loaded()", function() {
  return this.context.length ? this.context[0].oLoadedState : null;
});
Ke("state.save()", function() {
  return this.iterator("table", function(s) {
    zo(s);
  });
});
ge.use = function(s, g) {
  g === "lib" || s.fn ? Xt = s : g == "win" || s.document ? (window = s, document = s.document) : (g === "datetime" || s.type === "DateTime") && (ge.DateTime = s);
};
ge.factory = function(s, g) {
  var x = !1;
  return s && s.document && (window = s, document = s.document), g && g.fn && g.fn.jquery && (Xt = g, x = !0), x;
};
ge.versionCheck = function(s, g) {
  for (var x = g ? g.split(".") : ge.version.split("."), C = s.split("."), B, O, c = 0, d = C.length; c < d; c++)
    if (B = parseInt(x[c], 10) || 0, O = parseInt(C[c], 10) || 0, B !== O)
      return B > O;
  return !0;
};
ge.isDataTable = function(s) {
  var g = Xt(s).get(0), x = !1;
  return s instanceof ge.Api ? !0 : (Xt.each(ge.settings, function(C, B) {
    var O = B.nScrollHead ? Xt("table", B.nScrollHead)[0] : null, c = B.nScrollFoot ? Xt("table", B.nScrollFoot)[0] : null;
    (B.nTable === g || O === g || c === g) && (x = !0);
  }), x);
};
ge.tables = function(s) {
  var g = !1;
  Xt.isPlainObject(s) && (g = s.api, s = s.visible);
  var x = ge.settings.filter(function(C) {
    return !!(!s || s && Xt(C.nTable).is(":visible"));
  }).map(function(C) {
    return C.nTable;
  });
  return g ? new Sr(x) : x;
};
ge.camelToHungarian = Oa;
Ke("$()", function(s, g) {
  var x = this.rows(g).nodes(), C = Xt(x);
  return Xt([].concat(
    C.filter(s).toArray(),
    C.find(s).toArray()
  ));
});
Xt.each(["on", "one", "off"], function(s, g) {
  Ke(g + "()", function() {
    var x = Array.prototype.slice.call(arguments);
    x[0] = x[0].split(/\s/).map(function(B) {
      return B.match(/\.dt\b/) ? B : B + ".dt";
    }).join(" ");
    var C = Xt(this.tables().nodes());
    return C[g].apply(C, x), this;
  });
});
Ke("clear()", function() {
  return this.iterator("table", function(s) {
    O0(s);
  });
});
Ke("error()", function(s) {
  return this.iterator("table", function(g) {
    qn(g, 0, s);
  });
});
Ke("settings()", function() {
  return new Sr(this.context, this.context);
});
Ke("init()", function() {
  var s = this.context;
  return s.length ? s[0].oInit : null;
});
Ke("data()", function() {
  return this.iterator("table", function(s) {
    return Xn(s.aoData, "_aData");
  }).flatten();
});
Ke("trigger()", function(s, g, x) {
  return this.iterator("table", function(C) {
    return Nr(C, null, s, g, x);
  }).flatten();
});
Ke("ready()", function(s) {
  var g = this.context;
  return s ? this.tables().every(function() {
    this.context[0]._bInitComplete ? s.call(this) : this.on("init", function() {
      s.call(this);
    });
  }) : g.length ? g[0]._bInitComplete || !1 : null;
});
Ke("destroy()", function(s) {
  return s = s || !1, this.iterator("table", function(g) {
    var x = g.oClasses, C = g.nTable, B = g.nTBody, O = g.nTHead, c = g.nTFoot, d = Xt(C), t = Xt(B), o = Xt(g.nTableWrapper), r = g.aoData.map(function(h) {
      return h ? h.nTr : null;
    }), n = x.order;
    g.bDestroying = !0, Nr(g, "aoDestroyCallback", "destroy", [g], !0), s || new Sr(g).columns().visible(!0), o.off(".DT").find(":not(tbody *)").off(".DT"), Xt(window).off(".DT-" + g.sInstance), C != O.parentNode && (d.children("thead").detach(), d.append(O)), c && C != c.parentNode && (d.children("tfoot").detach(), d.append(c)), g.aaSorting = [], g.aaSortingFixed = [], y0(g), Xt("th, td", O).removeClass(
      n.canAsc + " " + n.canDesc + " " + n.isAsc + " " + n.isDesc
    ).css("width", ""), t.children().detach(), t.append(r);
    var i = g.nTableWrapper.parentNode, f = g.nTableWrapper.nextSibling, l = s ? "remove" : "detach";
    d[l](), o[l](), !s && i && (i.insertBefore(C, f), d.css("width", g.sDestroyWidth).removeClass(x.table));
    var u = ge.settings.indexOf(g);
    u !== -1 && ge.settings.splice(u, 1);
  });
});
Xt.each(["column", "row", "cell"], function(s, g) {
  Ke(g + "s().every()", function(x) {
    var C = this.selector.opts, B = this, O, c = 0;
    return this.iterator("every", function(d, t, o) {
      O = B[g](t, C), g === "cell" ? x.call(O, O[0][0].row, O[0][0].column, o, c) : x.call(O, t, o, c), c++;
    });
  });
});
Ke("i18n()", function(s, g, x) {
  var C = this.context[0], B = li(s)(C.oLanguage);
  return B === void 0 && (B = g), Xt.isPlainObject(B) && (B = x !== void 0 && B[x] !== void 0 ? B[x] : B._), typeof B == "string" ? B.replace("%d", x) : B;
});
ge.version = "2.0.0";
ge.settings = [];
ge.models = {};
ge.models.oSearch = {
  /**
   * Flag to indicate if the filtering should be case insensitive or not
   */
  caseInsensitive: !0,
  /**
   * Applied search term
   */
  search: "",
  /**
   * Flag to indicate if the search term should be interpreted as a
   * regular expression (true) or not (false) and therefore and special
   * regex characters escaped.
   */
  regex: !1,
  /**
   * Flag to indicate if DataTables is to use its smart filtering or not.
   */
  smart: !0,
  /**
   * Flag to indicate if DataTables should only trigger a search when
   * the return key is pressed.
   */
  return: !1
};
ge.models.oRow = {
  /**
   * TR element for the row
   */
  nTr: null,
  /**
   * Array of TD elements for each row. This is null until the row has been
   * created.
   */
  anCells: null,
  /**
   * Data object from the original data source for the row. This is either
   * an array if using the traditional form of DataTables, or an object if
   * using mData options. The exact type will depend on the passed in
   * data from the data source, or will be an array if using DOM a data
   * source.
   */
  _aData: [],
  /**
   * Sorting data cache - this array is ostensibly the same length as the
   * number of columns (although each index is generated only as it is
   * needed), and holds the data that is used for sorting each column in the
   * row. We do this cache generation at the start of the sort in order that
   * the formatting of the sort data need be done only once for each cell
   * per sort. This array should not be read from or written to by anything
   * other than the master sorting methods.
   */
  _aSortData: null,
  /**
   * Per cell filtering data cache. As per the sort data cache, used to
   * increase the performance of the filtering in DataTables
   */
  _aFilterData: null,
  /**
   * Filtering data cache. This is the same as the cell filtering cache, but
   * in this case a string rather than an array. This is easily computed with
   * a join on `_aFilterData`, but is provided as a cache so the join isn't
   * needed on every search (memory traded for performance)
   */
  _sFilterRow: null,
  /**
   * Denote if the original data source was from the DOM, or the data source
   * object. This is used for invalidating data, so DataTables can
   * automatically read data from the original source, unless uninstructed
   * otherwise.
   */
  src: null,
  /**
   * Index in the aoData array. This saves an indexOf lookup when we have the
   * object, but want to know the index
   */
  idx: -1,
  /**
   * Cached display value
   */
  displayData: null
};
ge.models.oColumn = {
  /**
   * Column index.
   */
  idx: null,
  /**
   * A list of the columns that sorting should occur on when this column
   * is sorted. That this property is an array allows multi-column sorting
   * to be defined for a column (for example first name / last name columns
   * would benefit from this). The values are integers pointing to the
   * columns to be sorted on (typically it will be a single integer pointing
   * at itself, but that doesn't need to be the case).
   */
  aDataSort: null,
  /**
   * Define the sorting directions that are applied to the column, in sequence
   * as the column is repeatedly sorted upon - i.e. the first value is used
   * as the sorting direction when the column if first sorted (clicked on).
   * Sort it again (click again) and it will move on to the next index.
   * Repeat until loop.
   */
  asSorting: null,
  /**
   * Flag to indicate if the column is searchable, and thus should be included
   * in the filtering or not.
   */
  bSearchable: null,
  /**
   * Flag to indicate if the column is sortable or not.
   */
  bSortable: null,
  /**
   * Flag to indicate if the column is currently visible in the table or not
   */
  bVisible: null,
  /**
   * Store for manual type assignment using the `column.type` option. This
   * is held in store so we can manipulate the column's `sType` property.
   */
  _sManualType: null,
  /**
   * Flag to indicate if HTML5 data attributes should be used as the data
   * source for filtering or sorting. True is either are.
   */
  _bAttrSrc: !1,
  /**
   * Developer definable function that is called whenever a cell is created (Ajax source,
   * etc) or processed for input (DOM source). This can be used as a compliment to mRender
   * allowing you to modify the DOM element (add background colour for example) when the
   * element is available.
   */
  fnCreatedCell: null,
  /**
   * Function to get data from a cell in a column. You should <b>never</b>
   * access data directly through _aData internally in DataTables - always use
   * the method attached to this property. It allows mData to function as
   * required. This function is automatically assigned by the column
   * initialisation method
   */
  fnGetData: null,
  /**
   * Function to set data for a cell in the column. You should <b>never</b>
   * set the data directly to _aData internally in DataTables - always use
   * this method. It allows mData to function as required. This function
   * is automatically assigned by the column initialisation method
   */
  fnSetData: null,
  /**
   * Property to read the value for the cells in the column from the data
   * source array / object. If null, then the default content is used, if a
   * function is given then the return from the function is used.
   */
  mData: null,
  /**
   * Partner property to mData which is used (only when defined) to get
   * the data - i.e. it is basically the same as mData, but without the
   * 'set' option, and also the data fed to it is the result from mData.
   * This is the rendering method to match the data method of mData.
   */
  mRender: null,
  /**
   * The class to apply to all TD elements in the table's TBODY for the column
   */
  sClass: null,
  /**
   * When DataTables calculates the column widths to assign to each column,
   * it finds the longest string in each column and then constructs a
   * temporary table and reads the widths from that. The problem with this
   * is that "mmm" is much wider then "iiii", but the latter is a longer
   * string - thus the calculation can go wrong (doing it properly and putting
   * it into an DOM object and measuring that is horribly(!) slow). Thus as
   * a "work around" we provide this option. It will append its value to the
   * text that is found to be the longest string for the column - i.e. padding.
   */
  sContentPadding: null,
  /**
   * Allows a default value to be given for a column's data, and will be used
   * whenever a null data source is encountered (this can be because mData
   * is set to null, or because the data source itself is null).
   */
  sDefaultContent: null,
  /**
   * Name for the column, allowing reference to the column by name as well as
   * by index (needs a lookup to work by name).
   */
  sName: null,
  /**
   * Custom sorting data type - defines which of the available plug-ins in
   * afnSortData the custom sorting will use - if any is defined.
   */
  sSortDataType: "std",
  /**
   * Class to be applied to the header element when sorting on this column
   */
  sSortingClass: null,
  /**
   * Title of the column - what is seen in the TH element (nTh).
   */
  sTitle: null,
  /**
   * Column sorting and filtering type
   */
  sType: null,
  /**
   * Width of the column
   */
  sWidth: null,
  /**
   * Width of the column when it was first "encountered"
   */
  sWidthOrig: null,
  /** Cached string which is the longest in the column */
  maxLenString: null,
  /**
   * Store for named searches
   */
  searchFixed: null
};
ge.defaults = {
  /**
   * An array of data to use for the table, passed in at initialisation which
   * will be used in preference to any data which is already in the DOM. This is
   * particularly useful for constructing tables purely in Javascript, for
   * example with a custom Ajax call.
   */
  aaData: null,
  /**
   * If ordering is enabled, then DataTables will perform a first pass sort on
   * initialisation. You can define which column(s) the sort is performed
   * upon, and the sorting direction, with this variable. The `sorting` array
   * should contain an array for each column to be sorted initially containing
   * the column's index and a direction string ('asc' or 'desc').
   */
  aaSorting: [[0, "asc"]],
  /**
   * This parameter is basically identical to the `sorting` parameter, but
   * cannot be overridden by user interaction with the table. What this means
   * is that you could have a column (visible or hidden) which the sorting
   * will always be forced on first - any sorting after that (from the user)
   * will then be performed as required. This can be useful for grouping rows
   * together.
   */
  aaSortingFixed: [],
  /**
   * DataTables can be instructed to load data to display in the table from a
   * Ajax source. This option defines how that Ajax call is made and where to.
   *
   * The `ajax` property has three different modes of operation, depending on
   * how it is defined. These are:
   *
   * * `string` - Set the URL from where the data should be loaded from.
   * * `object` - Define properties for `jQuery.ajax`.
   * * `function` - Custom data get function
   *
   * `string`
   * --------
   *
   * As a string, the `ajax` property simply defines the URL from which
   * DataTables will load data.
   *
   * `object`
   * --------
   *
   * As an object, the parameters in the object are passed to
   * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control
   * of the Ajax request. DataTables has a number of default parameters which
   * you can override using this option. Please refer to the jQuery
   * documentation for a full description of the options available, although
   * the following parameters provide additional options in DataTables or
   * require special consideration:
   *
   * * `data` - As with jQuery, `data` can be provided as an object, but it
   *   can also be used as a function to manipulate the data DataTables sends
   *   to the server. The function takes a single parameter, an object of
   *   parameters with the values that DataTables has readied for sending. An
   *   object may be returned which will be merged into the DataTables
   *   defaults, or you can add the items to the object that was passed in and
   *   not return anything from the function. This supersedes `fnServerParams`
   *   from DataTables 1.9-.
   *
   * * `dataSrc` - By default DataTables will look for the property `data` (or
   *   `aaData` for compatibility with DataTables 1.9-) when obtaining data
   *   from an Ajax source or for server-side processing - this parameter
   *   allows that property to be changed. You can use Javascript dotted
   *   object notation to get a data source for multiple levels of nesting, or
   *   it my be used as a function. As a function it takes a single parameter,
   *   the JSON returned from the server, which can be manipulated as
   *   required, with the returned value being that used by DataTables as the
   *   data source for the table.
   *
   * * `success` - Should not be overridden it is used internally in
   *   DataTables. To manipulate / transform the data returned by the server
   *   use `ajax.dataSrc`, or use `ajax` as a function (see below).
   *
   * `function`
   * ----------
   *
   * As a function, making the Ajax call is left up to yourself allowing
   * complete control of the Ajax request. Indeed, if desired, a method other
   * than Ajax could be used to obtain the required data, such as Web storage
   * or an AIR database.
   *
   * The function is given four parameters and no return is required. The
   * parameters are:
   *
   * 1. _object_ - Data to send to the server
   * 2. _function_ - Callback function that must be executed when the required
   *    data has been obtained. That data should be passed into the callback
   *    as the only parameter
   * 3. _object_ - DataTables settings object for the table
   */
  ajax: null,
  /**
   * This parameter allows you to readily specify the entries in the length drop
   * down menu that DataTables shows when pagination is enabled. It can be
   * either a 1D array of options which will be used for both the displayed
   * option and the value, or a 2D array which will use the array in the first
   * position as the value, and the array in the second position as the
   * displayed options (useful for language strings such as 'All').
   *
   * Note that the `pageLength` property will be automatically set to the
   * first value given in this array, unless `pageLength` is also provided.
   */
  aLengthMenu: [10, 25, 50, 100],
  /**
   * The `columns` option in the initialisation parameter allows you to define
   * details about the way individual columns behave. For a full list of
   * column options that can be set, please see
   * {@link DataTable.defaults.column}. Note that if you use `columns` to
   * define your columns, you must have an entry in the array for every single
   * column that you have in your table (these can be null if you don't which
   * to specify any options).
   */
  aoColumns: null,
  /**
   * Very similar to `columns`, `columnDefs` allows you to target a specific
   * column, multiple columns, or all columns, using the `targets` property of
   * each object in the array. This allows great flexibility when creating
   * tables, as the `columnDefs` arrays can be of any length, targeting the
   * columns you specifically want. `columnDefs` may use any of the column
   * options available: {@link DataTable.defaults.column}, but it _must_
   * have `targets` defined in each object in the array. Values in the `targets`
   * array may be:
   *   <ul>
   *     <li>a string - class name will be matched on the TH for the column</li>
   *     <li>0 or a positive integer - column index counting from the left</li>
   *     <li>a negative integer - column index counting from the right</li>
   *     <li>the string "_all" - all columns (i.e. assign a default)</li>
   *   </ul>
   */
  aoColumnDefs: null,
  /**
   * Basically the same as `search`, this parameter defines the individual column
   * filtering state at initialisation time. The array must be of the same size
   * as the number of columns, and each element be an object with the parameters
   * `search` and `escapeRegex` (the latter is optional). 'null' is also
   * accepted and the default will be used.
   */
  aoSearchCols: [],
  /**
   * Enable or disable automatic column width calculation. This can be disabled
   * as an optimisation (it takes some time to calculate the widths) if the
   * tables widths are passed in using `columns`.
   */
  bAutoWidth: !0,
  /**
   * Deferred rendering can provide DataTables with a huge speed boost when you
   * are using an Ajax or JS data source for the table. This option, when set to
   * true, will cause DataTables to defer the creation of the table elements for
   * each row until they are needed for a draw - saving a significant amount of
   * time.
   */
  bDeferRender: !0,
  /**
   * Replace a DataTable which matches the given selector and replace it with
   * one which has the properties of the new initialisation object passed. If no
   * table matches the selector, then the new DataTable will be constructed as
   * per normal.
   */
  bDestroy: !1,
  /**
   * Enable or disable filtering of data. Filtering in DataTables is "smart" in
   * that it allows the end user to input multiple words (space separated) and
   * will match a row containing those words, even if not in the order that was
   * specified (this allow matching across multiple columns). Note that if you
   * wish to use filtering in DataTables this must remain 'true' - to remove the
   * default filtering input box and retain filtering abilities, please use
   * {@link DataTable.defaults.dom}.
   */
  bFilter: !0,
  /**
   * Used only for compatiblity with DT1
   * @deprecated
   */
  bInfo: !0,
  /**
   * Used only for compatiblity with DT1
   * @deprecated
   */
  bLengthChange: !0,
  /**
   * Enable or disable pagination.
   */
  bPaginate: !0,
  /**
   * Enable or disable the display of a 'processing' indicator when the table is
   * being processed (e.g. a sort). This is particularly useful for tables with
   * large amounts of data where it can take a noticeable amount of time to sort
   * the entries.
   */
  bProcessing: !1,
  /**
   * Retrieve the DataTables object for the given selector. Note that if the
   * table has already been initialised, this parameter will cause DataTables
   * to simply return the object that has already been set up - it will not take
   * account of any changes you might have made to the initialisation object
   * passed to DataTables (setting this parameter to true is an acknowledgement
   * that you understand this). `destroy` can be used to reinitialise a table if
   * you need.
   */
  bRetrieve: !1,
  /**
   * When vertical (y) scrolling is enabled, DataTables will force the height of
   * the table's viewport to the given height at all times (useful for layout).
   * However, this can look odd when filtering data down to a small data set,
   * and the footer is left "floating" further down. This parameter (when
   * enabled) will cause DataTables to collapse the table's viewport down when
   * the result set will fit within the given Y height.
   */
  bScrollCollapse: !1,
  /**
   * Configure DataTables to use server-side processing. Note that the
   * `ajax` parameter must also be given in order to give DataTables a
   * source to obtain the required data for each draw.
   */
  bServerSide: !1,
  /**
   * Enable or disable sorting of columns. Sorting of individual columns can be
   * disabled by the `sortable` option for each column.
   */
  bSort: !0,
  /**
   * Enable or display DataTables' ability to sort multiple columns at the
   * same time (activated by shift-click by the user).
   */
  bSortMulti: !0,
  /**
   * Allows control over whether DataTables should use the top (true) unique
   * cell that is found for a single column, or the bottom (false - default).
   * This is useful when using complex headers.
   */
  bSortCellsTop: null,
  /**
   * Enable or disable the addition of the classes `sorting\_1`, `sorting\_2` and
   * `sorting\_3` to the columns which are currently being sorted on. This is
   * presented as a feature switch as it can increase processing time (while
   * classes are removed and added) so for large data sets you might want to
   * turn this off.
   */
  bSortClasses: !0,
  /**
   * Enable or disable state saving. When enabled HTML5 `localStorage` will be
   * used to save table display information such as pagination information,
   * display length, filtering and sorting. As such when the end user reloads
   * the page the display display will match what thy had previously set up.
   */
  bStateSave: !1,
  /**
   * This function is called when a TR element is created (and all TD child
   * elements have been inserted), or registered if using a DOM source, allowing
   * manipulation of the TR element (adding classes etc).
   */
  fnCreatedRow: null,
  /**
   * This function is called on every 'draw' event, and allows you to
   * dynamically modify any aspect you want about the created DOM.
   */
  fnDrawCallback: null,
  /**
   * Identical to fnHeaderCallback() but for the table footer this function
   * allows you to modify the table footer on every 'draw' event.
   */
  fnFooterCallback: null,
  /**
   * When rendering large numbers in the information element for the table
   * (i.e. "Showing 1 to 10 of 57 entries") DataTables will render large numbers
   * to have a comma separator for the 'thousands' units (e.g. 1 million is
   * rendered as "1,000,000") to help readability for the end user. This
   * function will override the default method DataTables uses.
   */
  fnFormatNumber: function(s) {
    return s.toString().replace(
      /\B(?=(\d{3})+(?!\d))/g,
      this.oLanguage.sThousands
    );
  },
  /**
   * This function is called on every 'draw' event, and allows you to
   * dynamically modify the header row. This can be used to calculate and
   * display useful information about the table.
   */
  fnHeaderCallback: null,
  /**
   * The information element can be used to convey information about the current
   * state of the table. Although the internationalisation options presented by
   * DataTables are quite capable of dealing with most customisations, there may
   * be times where you wish to customise the string further. This callback
   * allows you to do exactly that.
   */
  fnInfoCallback: null,
  /**
   * Called when the table has been initialised. Normally DataTables will
   * initialise sequentially and there will be no need for this function,
   * however, this does not hold true when using external language information
   * since that is obtained using an async XHR call.
   */
  fnInitComplete: null,
  /**
   * Called at the very start of each table draw and can be used to cancel the
   * draw by returning false, any other return (including undefined) results in
   * the full draw occurring).
   */
  fnPreDrawCallback: null,
  /**
   * This function allows you to 'post process' each row after it have been
   * generated for each table draw, but before it is rendered on screen. This
   * function might be used for setting the row class name etc.
   */
  fnRowCallback: null,
  /**
   * Load the table state. With this function you can define from where, and how, the
   * state of a table is loaded. By default DataTables will load from `localStorage`
   * but you might wish to use a server-side database or cookies.
   */
  fnStateLoadCallback: function(s) {
    try {
      return JSON.parse(
        (s.iStateDuration === -1 ? sessionStorage : localStorage).getItem(
          "DataTables_" + s.sInstance + "_" + location.pathname
        )
      );
    } catch {
      return {};
    }
  },
  /**
   * Callback which allows modification of the saved state prior to loading that state.
   * This callback is called when the table is loading state from the stored data, but
   * prior to the settings object being modified by the saved state. Note that for
   * plug-in authors, you should use the `stateLoadParams` event to load parameters for
   * a plug-in.
   */
  fnStateLoadParams: null,
  /**
   * Callback that is called when the state has been loaded from the state saving method
   * and the DataTables settings object has been modified as a result of the loaded state.
   */
  fnStateLoaded: null,
  /**
   * Save the table state. This function allows you to define where and how the state
   * information for the table is stored By default DataTables will use `localStorage`
   * but you might wish to use a server-side database or cookies.
   */
  fnStateSaveCallback: function(s, g) {
    try {
      (s.iStateDuration === -1 ? sessionStorage : localStorage).setItem(
        "DataTables_" + s.sInstance + "_" + location.pathname,
        JSON.stringify(g)
      );
    } catch {
    }
  },
  /**
   * Callback which allows modification of the state to be saved. Called when the table
   * has changed state a new state save is required. This method allows modification of
   * the state saving object prior to actually doing the save, including addition or
   * other state properties or modification. Note that for plug-in authors, you should
   * use the `stateSaveParams` event to save parameters for a plug-in.
   */
  fnStateSaveParams: null,
  /**
   * Duration for which the saved state information is considered valid. After this period
   * has elapsed the state will be returned to the default.
   * Value is given in seconds.
   */
  iStateDuration: 7200,
  /**
   * Number of rows to display on a single page when using pagination. If
   * feature enabled (`lengthChange`) then the end user will be able to override
   * this to a custom setting using a pop-up menu.
   */
  iDisplayLength: 10,
  /**
   * Define the starting point for data display when using DataTables with
   * pagination. Note that this parameter is the number of records, rather than
   * the page number, so if you have 10 records per page and want to start on
   * the third page, it should be "20".
   */
  iDisplayStart: 0,
  /**
   * By default DataTables allows keyboard navigation of the table (sorting, paging,
   * and filtering) by adding a `tabindex` attribute to the required elements. This
   * allows you to tab through the controls and press the enter key to activate them.
   * The tabindex is default 0, meaning that the tab follows the flow of the document.
   * You can overrule this using this parameter if you wish. Use a value of -1 to
   * disable built-in keyboard navigation.
   */
  iTabIndex: 0,
  /**
   * Classes that DataTables assigns to the various components and features
   * that it adds to the HTML table. This allows classes to be configured
   * during initialisation in addition to through the static
   * {@link DataTable.ext.oStdClasses} object).
   */
  oClasses: {},
  /**
   * All strings that DataTables uses in the user interface that it creates
   * are defined in this object, allowing you to modified them individually or
   * completely replace them all as required.
   */
  oLanguage: {
    /**
     * Strings that are used for WAI-ARIA labels and controls only (these are not
     * actually visible on the page, but will be read by screenreaders, and thus
     * must be internationalised as well).
     */
    oAria: {
      /**
       * ARIA label that is added to the table headers when the column may be sorted
       */
      orderable: ": Activate to sort",
      /**
       * ARIA label that is added to the table headers when the column is currently being sorted
       */
      orderableReverse: ": Activate to invert sorting",
      /**
       * ARIA label that is added to the table headers when the column is currently being 
       * sorted and next step is to remove sorting
       */
      orderableRemove: ": Activate to remove sorting",
      paginate: {
        first: "First",
        last: "Last",
        next: "Next",
        previous: "Previous"
      }
    },
    /**
     * Pagination string used by DataTables for the built-in pagination
     * control types.
     */
    oPaginate: {
      /**
       * Label and character for first page button
       */
      sFirst: "Â«",
      /**
       * Last page button
       */
      sLast: "Â»",
      /**
       * Next page button
       */
      sNext: "âº",
      /**
       * Previous page button
       */
      sPrevious: "â¹"
    },
    /**
     * Plural object for the data type the table is showing
     */
    entries: {
      _: "entries",
      1: "entry"
    },
    /**
     * This string is shown in preference to `zeroRecords` when the table is
     * empty of data (regardless of filtering). Note that this is an optional
     * parameter - if it is not given, the value of `zeroRecords` will be used
     * instead (either the default or given value).
     */
    sEmptyTable: "No data available in table",
    /**
     * This string gives information to the end user about the information
     * that is current on display on the page. The following tokens can be
     * used in the string and will be dynamically replaced as the table
     * display updates. This tokens can be placed anywhere in the string, or
     * removed as needed by the language requires:
     *
     * * `\_START\_` - Display index of the first record on the current page
     * * `\_END\_` - Display index of the last record on the current page
     * * `\_TOTAL\_` - Number of records in the table after filtering
     * * `\_MAX\_` - Number of records in the table without filtering
     * * `\_PAGE\_` - Current page number
     * * `\_PAGES\_` - Total number of pages of data in the table
     */
    sInfo: "Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_",
    /**
     * Display information string for when the table is empty. Typically the
     * format of this string should match `info`.
     */
    sInfoEmpty: "Showing 0 to 0 of 0 _ENTRIES-TOTAL_",
    /**
     * When a user filters the information in a table, this string is appended
     * to the information (`info`) to give an idea of how strong the filtering
     * is. The variable _MAX_ is dynamically updated.
     */
    sInfoFiltered: "(filtered from _MAX_ total _ENTRIES-MAX_)",
    /**
     * If can be useful to append extra information to the info string at times,
     * and this variable does exactly that. This information will be appended to
     * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are
     * being used) at all times.
     */
    sInfoPostFix: "",
    /**
     * This decimal place operator is a little different from the other
     * language options since DataTables doesn't output floating point
     * numbers, so it won't ever use this for display of a number. Rather,
     * what this parameter does is modify the sort methods of the table so
     * that numbers which are in a format which has a character other than
     * a period (`.`) as a decimal place will be sorted numerically.
     *
     * Note that numbers with different decimal places cannot be shown in
     * the same table and still be sortable, the table must be consistent.
     * However, multiple different tables on the page can use different
     * decimal place characters.
     */
    sDecimal: "",
    /**
     * DataTables has a build in number formatter (`formatNumber`) which is
     * used to format large numbers that are used in the table information.
     * By default a comma is used, but this can be trivially changed to any
     * character you wish with this parameter.
     */
    sThousands: ",",
    /**
     * Detail the action that will be taken when the drop down menu for the
     * pagination length option is changed. The '_MENU_' variable is replaced
     * with a default select list of 10, 25, 50 and 100, and can be replaced
     * with a custom select box if required.
     */
    sLengthMenu: "_MENU_ _ENTRIES_ per page",
    /**
     * When using Ajax sourced data and during the first draw when DataTables is
     * gathering the data, this message is shown in an empty row in the table to
     * indicate to the end user the the data is being loaded. Note that this
     * parameter is not used when loading data by server-side processing, just
     * Ajax sourced data with client-side processing.
     */
    sLoadingRecords: "Loading...",
    /**
     * Text which is displayed when the table is processing a user action
     * (usually a sort command or similar).
     */
    sProcessing: "",
    /**
     * Details the actions that will be taken when the user types into the
     * filtering input text box. The variable "_INPUT_", if used in the string,
     * is replaced with the HTML text box for the filtering input allowing
     * control over where it appears in the string. If "_INPUT_" is not given
     * then the input box is appended to the string automatically.
     */
    sSearch: "Search:",
    /**
     * Assign a `placeholder` attribute to the search `input` element
     *  @type string
     *  @default 
     *
     *  @dtopt Language
     *  @name DataTable.defaults.language.searchPlaceholder
     */
    sSearchPlaceholder: "",
    /**
     * All of the language information can be stored in a file on the
     * server-side, which DataTables will look up if this parameter is passed.
     * It must store the URL of the language file, which is in a JSON format,
     * and the object has the same properties as the oLanguage object in the
     * initialiser object (i.e. the above parameters). Please refer to one of
     * the example language files to see how this works in action.
     */
    sUrl: "",
    /**
     * Text shown inside the table records when the is no information to be
     * displayed after filtering. `emptyTable` is shown when there is simply no
     * information in the table at all (regardless of filtering).
     */
    sZeroRecords: "No matching records found"
  },
  /**
   * This parameter allows you to have define the global filtering state at
   * initialisation time. As an object the `search` parameter must be
   * defined, but all other parameters are optional. When `regex` is true,
   * the search string will be treated as a regular expression, when false
   * (default) it will be treated as a straight string. When `smart`
   * DataTables will use it's smart filtering methods (to word match at
   * any point in the data), when false this will not be done.
   */
  oSearch: Xt.extend({}, ge.models.oSearch),
  /**
   * Table and control layout. This replaces the legacy `dom` option.
   */
  layout: {
    topStart: "pageLength",
    topEnd: "search",
    bottomStart: "info",
    bottomEnd: "paging"
  },
  /**
   * Legacy DOM layout option
   */
  sDom: null,
  /**
   * Search delay option. This will throttle full table searches that use the
   * DataTables provided search input element (it does not effect calls to
   * `dt-api search()`, providing a delay before the search is made.
   */
  searchDelay: null,
  /**
   * DataTables features six different built-in options for the buttons to
   * display for pagination control:
   *
   * * `numbers` - Page number buttons only
   * * `simple` - 'Previous' and 'Next' buttons only
   * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers
   * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons
   * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers
   * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers
   */
  sPaginationType: "full_numbers",
  /**
   * Enable horizontal scrolling. When a table is too wide to fit into a
   * certain layout, or you have a large number of columns in the table, you
   * can enable x-scrolling to show the table in a viewport, which can be
   * scrolled. This property can be `true` which will allow the table to
   * scroll horizontally when needed, or any CSS unit, or a number (in which
   * case it will be treated as a pixel measurement). Setting as simply `true`
   * is recommended.
   */
  sScrollX: "",
  /**
   * This property can be used to force a DataTable to use more width than it
   * might otherwise do when x-scrolling is enabled. For example if you have a
   * table which requires to be well spaced, this parameter is useful for
   * "over-sizing" the table, and thus forcing scrolling. This property can by
   * any CSS unit, or a number (in which case it will be treated as a pixel
   * measurement).
   */
  sScrollXInner: "",
  /**
   * Enable vertical scrolling. Vertical scrolling will constrain the DataTable
   * to the given height, and enable scrolling for any data which overflows the
   * current viewport. This can be used as an alternative to paging to display
   * a lot of data in a small area (although paging and scrolling can both be
   * enabled at the same time). This property can be any CSS unit, or a number
   * (in which case it will be treated as a pixel measurement).
   */
  sScrollY: "",
  /**
   * __Deprecated__ The functionality provided by this parameter has now been
   * superseded by that provided through `ajax`, which should be used instead.
   *
   * Set the HTTP method that is used to make the Ajax call for server-side
   * processing or Ajax sourced data.
   */
  sServerMethod: "GET",
  /**
   * DataTables makes use of renderers when displaying HTML elements for
   * a table. These renderers can be added or modified by plug-ins to
   * generate suitable mark-up for a site. For example the Bootstrap
   * integration plug-in for DataTables uses a paging button renderer to
   * display pagination buttons in the mark-up required by Bootstrap.
   *
   * For further information about the renderers available see
   * DataTable.ext.renderer
   */
  renderer: null,
  /**
   * Set the data property name that DataTables should use to get a row's id
   * to set as the `id` property in the node.
   */
  rowId: "DT_RowId",
  /**
   * Caption value
   */
  caption: null
};
Ro(ge.defaults);
ge.defaults.column = {
  /**
   * Define which column(s) an order will occur on for this column. This
   * allows a column's ordering to take multiple columns into account when
   * doing a sort or use the data from a different column. For example first
   * name / last name columns make sense to do a multi-column sort over the
   * two columns.
   */
  aDataSort: null,
  iDataSort: -1,
  ariaTitle: "",
  /**
   * You can control the default ordering direction, and even alter the
   * behaviour of the sort handler (i.e. only allow ascending ordering etc)
   * using this parameter.
   */
  asSorting: ["asc", "desc", ""],
  /**
   * Enable or disable filtering on the data in this column.
   */
  bSearchable: !0,
  /**
   * Enable or disable ordering on this column.
   */
  bSortable: !0,
  /**
   * Enable or disable the display of this column.
   */
  bVisible: !0,
  /**
   * Developer definable function that is called whenever a cell is created (Ajax source,
   * etc) or processed for input (DOM source). This can be used as a compliment to mRender
   * allowing you to modify the DOM element (add background colour for example) when the
   * element is available.
   */
  fnCreatedCell: null,
  /**
   * This property can be used to read data from any data source property,
   * including deeply nested objects / properties. `data` can be given in a
   * number of different ways which effect its behaviour:
   *
   * * `integer` - treated as an array index for the data source. This is the
   *   default that DataTables uses (incrementally increased for each column).
   * * `string` - read an object property from the data source. There are
   *   three 'special' options that can be used in the string to alter how
   *   DataTables reads the data from the source object:
   *    * `.` - Dotted Javascript notation. Just as you use a `.` in
   *      Javascript to read from nested objects, so to can the options
   *      specified in `data`. For example: `browser.version` or
   *      `browser.name`. If your object parameter name contains a period, use
   *      `\\` to escape it - i.e. `first\\.name`.
   *    * `[]` - Array notation. DataTables can automatically combine data
   *      from and array source, joining the data with the characters provided
   *      between the two brackets. For example: `name[, ]` would provide a
   *      comma-space separated list from the source array. If no characters
   *      are provided between the brackets, the original array source is
   *      returned.
   *    * `()` - Function notation. Adding `()` to the end of a parameter will
   *      execute a function of the name given. For example: `browser()` for a
   *      simple function on the data source, `browser.version()` for a
   *      function in a nested property or even `browser().version` to get an
   *      object property if the function called returns an object. Note that
   *      function notation is recommended for use in `render` rather than
   *      `data` as it is much simpler to use as a renderer.
   * * `null` - use the original data source for the row rather than plucking
   *   data directly from it. This action has effects on two other
   *   initialisation options:
   *    * `defaultContent` - When null is given as the `data` option and
   *      `defaultContent` is specified for the column, the value defined by
   *      `defaultContent` will be used for the cell.
   *    * `render` - When null is used for the `data` option and the `render`
   *      option is specified for the column, the whole data source for the
   *      row is used for the renderer.
   * * `function` - the function given will be executed whenever DataTables
   *   needs to set or get the data for a cell in the column. The function
   *   takes three parameters:
   *    * Parameters:
   *      * `{array|object}` The data source for the row
   *      * `{string}` The type call data requested - this will be 'set' when
   *        setting data or 'filter', 'display', 'type', 'sort' or undefined
   *        when gathering data. Note that when `undefined` is given for the
   *        type DataTables expects to get the raw data for the object back<
   *      * `{*}` Data to set when the second parameter is 'set'.
   *    * Return:
   *      * The return value from the function is not required when 'set' is
   *        the type of call, but otherwise the return is what will be used
   *        for the data requested.
   *
   * Note that `data` is a getter and setter option. If you just require
   * formatting of data for output, you will likely want to use `render` which
   * is simply a getter and thus simpler to use.
   *
   * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The
   * name change reflects the flexibility of this property and is consistent
   * with the naming of mRender. If 'mDataProp' is given, then it will still
   * be used by DataTables, as it automatically maps the old name to the new
   * if required.
   */
  mData: null,
  /**
   * This property is the rendering partner to `data` and it is suggested that
   * when you want to manipulate data for display (including filtering,
   * sorting etc) without altering the underlying data for the table, use this
   * property. `render` can be considered to be the the read only companion to
   * `data` which is read / write (then as such more complex). Like `data`
   * this option can be given in a number of different ways to effect its
   * behaviour:
   *
   * * `integer` - treated as an array index for the data source. This is the
   *   default that DataTables uses (incrementally increased for each column).
   * * `string` - read an object property from the data source. There are
   *   three 'special' options that can be used in the string to alter how
   *   DataTables reads the data from the source object:
   *    * `.` - Dotted Javascript notation. Just as you use a `.` in
   *      Javascript to read from nested objects, so to can the options
   *      specified in `data`. For example: `browser.version` or
   *      `browser.name`. If your object parameter name contains a period, use
   *      `\\` to escape it - i.e. `first\\.name`.
   *    * `[]` - Array notation. DataTables can automatically combine data
   *      from and array source, joining the data with the characters provided
   *      between the two brackets. For example: `name[, ]` would provide a
   *      comma-space separated list from the source array. If no characters
   *      are provided between the brackets, the original array source is
   *      returned.
   *    * `()` - Function notation. Adding `()` to the end of a parameter will
   *      execute a function of the name given. For example: `browser()` for a
   *      simple function on the data source, `browser.version()` for a
   *      function in a nested property or even `browser().version` to get an
   *      object property if the function called returns an object.
   * * `object` - use different data for the different data types requested by
   *   DataTables ('filter', 'display', 'type' or 'sort'). The property names
   *   of the object is the data type the property refers to and the value can
   *   defined using an integer, string or function using the same rules as
   *   `render` normally does. Note that an `_` option _must_ be specified.
   *   This is the default value to use if you haven't specified a value for
   *   the data type requested by DataTables.
   * * `function` - the function given will be executed whenever DataTables
   *   needs to set or get the data for a cell in the column. The function
   *   takes three parameters:
   *    * Parameters:
   *      * {array|object} The data source for the row (based on `data`)
   *      * {string} The type call data requested - this will be 'filter',
   *        'display', 'type' or 'sort'.
   *      * {array|object} The full data source for the row (not based on
   *        `data`)
   *    * Return:
   *      * The return value from the function is what will be used for the
   *        data requested.
   */
  mRender: null,
  /**
   * Change the cell type created for the column - either TD cells or TH cells. This
   * can be useful as TH cells have semantic meaning in the table body, allowing them
   * to act as a header for a row (you may wish to add scope='row' to the TH elements).
   */
  sCellType: "td",
  /**
   * Class to give to each cell in this column.
   */
  sClass: "",
  /**
   * When DataTables calculates the column widths to assign to each column,
   * it finds the longest string in each column and then constructs a
   * temporary table and reads the widths from that. The problem with this
   * is that "mmm" is much wider then "iiii", but the latter is a longer
   * string - thus the calculation can go wrong (doing it properly and putting
   * it into an DOM object and measuring that is horribly(!) slow). Thus as
   * a "work around" we provide this option. It will append its value to the
   * text that is found to be the longest string for the column - i.e. padding.
   * Generally you shouldn't need this!
   */
  sContentPadding: "",
  /**
   * Allows a default value to be given for a column's data, and will be used
   * whenever a null data source is encountered (this can be because `data`
   * is set to null, or because the data source itself is null).
   */
  sDefaultContent: null,
  /**
   * This parameter is only used in DataTables' server-side processing. It can
   * be exceptionally useful to know what columns are being displayed on the
   * client side, and to map these to database fields. When defined, the names
   * also allow DataTables to reorder information from the server if it comes
   * back in an unexpected order (i.e. if you switch your columns around on the
   * client-side, your server-side code does not also need updating).
   */
  sName: "",
  /**
   * Defines a data source type for the ordering which can be used to read
   * real-time information from the table (updating the internally cached
   * version) prior to ordering. This allows ordering to occur on user
   * editable elements such as form inputs.
   */
  sSortDataType: "std",
  /**
   * The title of this column.
   */
  sTitle: null,
  /**
   * The type allows you to specify how the data for this column will be
   * ordered. Four types (string, numeric, date and html (which will strip
   * HTML tags before ordering)) are currently available. Note that only date
   * formats understood by Javascript's Date() object will be accepted as type
   * date. For example: "Mar 26, 2008 5:03 PM". May take the values: 'string',
   * 'numeric', 'date' or 'html' (by default). Further types can be adding
   * through plug-ins.
   */
  sType: null,
  /**
   * Defining the width of the column, this parameter may take any CSS value
   * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not
   * been given a specific width through this interface ensuring that the table
   * remains readable.
   */
  sWidth: null
};
Ro(ge.defaults.column);
ge.models.oSettings = {
  /**
   * Primary features of DataTables and their enablement state.
   */
  oFeatures: {
    /**
     * Flag to say if DataTables should automatically try to calculate the
     * optimum table and columns widths (true) or not (false).
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bAutoWidth: null,
    /**
     * Delay the creation of TR and TD elements until they are actually
     * needed by a driven page draw. This can give a significant speed
     * increase for Ajax source and Javascript source data, but makes no
     * difference at all for DOM and server-side processing tables.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bDeferRender: null,
    /**
     * Enable filtering on the table or not. Note that if this is disabled
     * then there is no filtering at all on the table, including fnFilter.
     * To just remove the filtering input use sDom and remove the 'f' option.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bFilter: null,
    /**
     * Used only for compatiblity with DT1
     * @deprecated
     */
    bInfo: !0,
    /**
     * Used only for compatiblity with DT1
     * @deprecated
     */
    bLengthChange: !0,
    /**
     * Pagination enabled or not. Note that if this is disabled then length
     * changing must also be disabled.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bPaginate: null,
    /**
     * Processing indicator enable flag whenever DataTables is enacting a
     * user request - typically an Ajax request for server-side processing.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bProcessing: null,
    /**
     * Server-side processing enabled flag - when enabled DataTables will
     * get all data from the server for every draw - there is no filtering,
     * sorting or paging done on the client-side.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bServerSide: null,
    /**
     * Sorting enablement flag.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bSort: null,
    /**
     * Multi-column sorting
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bSortMulti: null,
    /**
     * Apply a class to the columns which are being sorted to provide a
     * visual highlight or not. This can slow things down when enabled since
     * there is a lot of DOM interaction.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bSortClasses: null,
    /**
     * State saving enablement flag.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bStateSave: null
  },
  /**
   * Scrolling settings for a table.
   */
  oScroll: {
    /**
     * When the table is shorter in height than sScrollY, collapse the
     * table container down to the height of the table (when true).
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    bCollapse: null,
    /**
     * Width of the scrollbar for the web-browser's platform. Calculated
     * during table initialisation.
     */
    iBarWidth: 0,
    /**
     * Viewport width for horizontal scrolling. Horizontal scrolling is
     * disabled if an empty string.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    sX: null,
    /**
     * Width to expand the table to when using x-scrolling. Typically you
     * should not need to use this.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     *  @deprecated
     */
    sXInner: null,
    /**
     * Viewport height for vertical scrolling. Vertical scrolling is disabled
     * if an empty string.
     * Note that this parameter will be set by the initialisation routine. To
     * set a default use {@link DataTable.defaults}.
     */
    sY: null
  },
  /**
   * Language information for the table.
   */
  oLanguage: {
    /**
     * Information callback function. See
     * {@link DataTable.defaults.fnInfoCallback}
     */
    fnInfoCallback: null
  },
  /**
   * Browser support parameters
   */
  oBrowser: {
    /**
     * Determine if the vertical scrollbar is on the right or left of the
     * scrolling container - needed for rtl language layout, although not
     * all browsers move the scrollbar (Safari).
     */
    bScrollbarLeft: !1,
    /**
     * Browser scrollbar width
     */
    barWidth: 0
  },
  ajax: null,
  /**
   * Array referencing the nodes which are used for the features. The
   * parameters of this object match what is allowed by sDom - i.e.
   *   <ul>
   *     <li>'l' - Length changing</li>
   *     <li>'f' - Filtering input</li>
   *     <li>'t' - The table!</li>
   *     <li>'i' - Information</li>
   *     <li>'p' - Pagination</li>
   *     <li>'r' - pRocessing</li>
   *   </ul>
   */
  aanFeatures: [],
  /**
   * Store data information - see {@link DataTable.models.oRow} for detailed
   * information.
   */
  aoData: [],
  /**
   * Array of indexes which are in the current display (after filtering etc)
   */
  aiDisplay: [],
  /**
   * Array of indexes for display - no filtering
   */
  aiDisplayMaster: [],
  /**
   * Map of row ids to data indexes
   */
  aIds: {},
  /**
   * Store information about each column that is in use
   */
  aoColumns: [],
  /**
   * Store information about the table's header
   */
  aoHeader: [],
  /**
   * Store information about the table's footer
   */
  aoFooter: [],
  /**
   * Store the applied global search information in case we want to force a
   * research or compare the old search to a new one.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  oPreviousSearch: {},
  /**
   * Store for named searches
   */
  searchFixed: {},
  /**
   * Store the applied search for each column - see
   * {@link DataTable.models.oSearch} for the format that is used for the
   * filtering information for each column.
   */
  aoPreSearchCols: [],
  /**
   * Sorting that is applied to the table. Note that the inner arrays are
   * used in the following manner:
   * <ul>
   *   <li>Index 0 - column number</li>
   *   <li>Index 1 - current sorting direction</li>
   * </ul>
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  aaSorting: null,
  /**
   * Sorting that is always applied to the table (i.e. prefixed in front of
   * aaSorting).
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  aaSortingFixed: [],
  /**
   * If restoring a table - we should restore its width
   */
  sDestroyWidth: 0,
  /**
   * Callback functions array for every time a row is inserted (i.e. on a draw).
   */
  aoRowCallback: [],
  /**
   * Callback functions for the header on each draw.
   */
  aoHeaderCallback: [],
  /**
   * Callback function for the footer on each draw.
   */
  aoFooterCallback: [],
  /**
   * Array of callback functions for draw callback functions
   */
  aoDrawCallback: [],
  /**
   * Array of callback functions for row created function
   */
  aoRowCreatedCallback: [],
  /**
   * Callback functions for just before the table is redrawn. A return of
   * false will be used to cancel the draw.
   */
  aoPreDrawCallback: [],
  /**
   * Callback functions for when the table has been initialised.
   */
  aoInitComplete: [],
  /**
   * Callbacks for modifying the settings to be stored for state saving, prior to
   * saving state.
   */
  aoStateSaveParams: [],
  /**
   * Callbacks for modifying the settings that have been stored for state saving
   * prior to using the stored values to restore the state.
   */
  aoStateLoadParams: [],
  /**
   * Callbacks for operating on the settings object once the saved state has been
   * loaded
   */
  aoStateLoaded: [],
  /**
   * Cache the table ID for quick access
   */
  sTableId: "",
  /**
   * The TABLE node for the main table
   */
  nTable: null,
  /**
   * Permanent ref to the thead element
   */
  nTHead: null,
  /**
   * Permanent ref to the tfoot element - if it exists
   */
  nTFoot: null,
  /**
   * Permanent ref to the tbody element
   */
  nTBody: null,
  /**
   * Cache the wrapper node (contains all DataTables controlled elements)
   */
  nTableWrapper: null,
  /**
   * Indicate if all required information has been read in
   */
  bInitialised: !1,
  /**
   * Information about open rows. Each object in the array has the parameters
   * 'nTr' and 'nParent'
   */
  aoOpenRows: [],
  /**
   * Dictate the positioning of DataTables' control elements - see
   * {@link DataTable.model.oInit.sDom}.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  sDom: null,
  /**
   * Search delay (in mS)
   */
  searchDelay: null,
  /**
   * Which type of pagination should be used.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  sPaginationType: "two_button",
  /**
   * Number of paging controls on the page. Only used for backwards compatibility
   */
  pagingControls: 0,
  /**
   * The state duration (for `stateSave`) in seconds.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  iStateDuration: 0,
  /**
   * Array of callback functions for state saving. Each array element is an
   * object with the following parameters:
   *   <ul>
   *     <li>function:fn - function to call. Takes two parameters, oSettings
   *       and the JSON string to save that has been thus far created. Returns
   *       a JSON string to be inserted into a json object
   *       (i.e. '"param": [ 0, 1, 2]')</li>
   *     <li>string:sName - name of callback</li>
   *   </ul>
   */
  aoStateSave: [],
  /**
   * Array of callback functions for state loading. Each array element is an
   * object with the following parameters:
   *   <ul>
   *     <li>function:fn - function to call. Takes two parameters, oSettings
   *       and the object stored. May return false to cancel state loading</li>
   *     <li>string:sName - name of callback</li>
   *   </ul>
   */
  aoStateLoad: [],
  /**
   * State that was saved. Useful for back reference
   */
  oSavedState: null,
  /**
   * State that was loaded. Useful for back reference
   */
  oLoadedState: null,
  /**
   * Note if draw should be blocked while getting data
   */
  bAjaxDataGet: !0,
  /**
   * The last jQuery XHR object that was used for server-side data gathering.
   * This can be used for working with the XHR information in one of the
   * callbacks
   */
  jqXHR: null,
  /**
   * JSON returned from the server in the last Ajax request
   */
  json: void 0,
  /**
   * Data submitted as part of the last Ajax request
   */
  oAjaxData: void 0,
  /**
   * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if
   * required).
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  sServerMethod: null,
  /**
   * Format numbers for display.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  fnFormatNumber: null,
  /**
   * List of options that can be used for the user selectable length menu.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  aLengthMenu: null,
  /**
   * Counter for the draws that the table does. Also used as a tracker for
   * server-side processing
   */
  iDraw: 0,
  /**
   * Indicate if a redraw is being done - useful for Ajax
   */
  bDrawing: !1,
  /**
   * Draw index (iDraw) of the last error when parsing the returned data
   */
  iDrawError: -1,
  /**
   * Paging display length
   */
  _iDisplayLength: 10,
  /**
   * Paging start point - aiDisplay index
   */
  _iDisplayStart: 0,
  /**
   * Server-side processing - number of records in the result set
   * (i.e. before filtering), Use fnRecordsTotal rather than
   * this property to get the value of the number of records, regardless of
   * the server-side processing setting.
   */
  _iRecordsTotal: 0,
  /**
   * Server-side processing - number of records in the current display set
   * (i.e. after filtering). Use fnRecordsDisplay rather than
   * this property to get the value of the number of records, regardless of
   * the server-side processing setting.
   */
  _iRecordsDisplay: 0,
  /**
   * The classes to use for the table
   */
  oClasses: {},
  /**
   * Flag attached to the settings object so you can check in the draw
   * callback if filtering has been done in the draw. Deprecated in favour of
   * events.
   *  @deprecated
   */
  bFiltered: !1,
  /**
   * Flag attached to the settings object so you can check in the draw
   * callback if sorting has been done in the draw. Deprecated in favour of
   * events.
   *  @deprecated
   */
  bSorted: !1,
  /**
   * Indicate that if multiple rows are in the header and there is more than
   * one unique cell per column, if the top one (true) or bottom one (false)
   * should be used for sorting / title by DataTables.
   * Note that this parameter will be set by the initialisation routine. To
   * set a default use {@link DataTable.defaults}.
   */
  bSortCellsTop: null,
  /**
   * Initialisation object that is used for the table
   */
  oInit: null,
  /**
   * Destroy callback functions - for plug-ins to attach themselves to the
   * destroy so they can clean up markup and events.
   */
  aoDestroyCallback: [],
  /**
   * Get the number of records in the current record set, before filtering
   */
  fnRecordsTotal: function() {
    return Zn(this) == "ssp" ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length;
  },
  /**
   * Get the number of records in the current record set, after filtering
   */
  fnRecordsDisplay: function() {
    return Zn(this) == "ssp" ? this._iRecordsDisplay * 1 : this.aiDisplay.length;
  },
  /**
   * Get the display end point - aiDisplay index
   */
  fnDisplayEnd: function() {
    var s = this._iDisplayLength, g = this._iDisplayStart, x = g + s, C = this.aiDisplay.length, B = this.oFeatures, O = B.bPaginate;
    return B.bServerSide ? O === !1 || s === -1 ? g + C : Math.min(g + s, this._iRecordsDisplay) : !O || x > C || s === -1 ? C : x;
  },
  /**
   * The DataTables object for this table
   */
  oInstance: null,
  /**
   * Unique identifier for each instance of the DataTables object. If there
   * is an ID on the table node, then it takes that value, otherwise an
   * incrementing internal counter is used.
   */
  sInstance: null,
  /**
   * tabindex attribute value that is added to DataTables control elements, allowing
   * keyboard navigation of the table and its controls.
   */
  iTabIndex: 0,
  /**
   * DIV container for the footer scrolling table if scrolling
   */
  nScrollHead: null,
  /**
   * DIV container for the footer scrolling table if scrolling
   */
  nScrollFoot: null,
  /**
   * Last applied sort
   */
  aLastSort: [],
  /**
   * Stored plug-in instances
   */
  oPlugins: {},
  /**
   * Function used to get a row's id from the row's data
   */
  rowIdFn: null,
  /**
   * Data location where to store a row's id
   */
  rowId: null,
  caption: "",
  captionNode: null,
  colgroup: null
};
ge.ext = Vr = {
  /**
   * Buttons. For use with the Buttons extension for DataTables. This is
   * defined here so other extensions can define buttons regardless of load
   * order. It is _not_ used by DataTables core.
   *
   *  @type object
   *  @default {}
   */
  buttons: {},
  /**
   * Element class names
   *
   *  @type object
   *  @default {}
   */
  classes: {},
  /**
   * DataTables build type (expanded by the download builder)
   *
   *  @type string
   */
  builder: "-source-",
  /**
   * Error reporting.
   * 
   * How should DataTables report an error. Can take the value 'alert',
   * 'throw', 'none' or a function.
   *
   *  @type string|function
   *  @default alert
   */
  errMode: "alert",
  /**
   * Legacy so v1 plug-ins don't throw js errors on load
   */
  feature: [],
  /**
   * Feature plug-ins.
   * 
   * This is an object of callbacks which provide the features for DataTables
   * to be initialised via the `layout` option.
   */
  features: {},
  /**
   * Row searching.
   * 
   * This method of searching is complimentary to the default type based
   * searching, and a lot more comprehensive as it allows you complete control
   * over the searching logic. Each element in this array is a function
   * (parameters described below) that is called for every row in the table,
   * and your logic decides if it should be included in the searching data set
   * or not.
   *
   * Searching functions have the following input parameters:
   *
   * 1. `{object}` DataTables settings object: see
   *    {@link DataTable.models.oSettings}
   * 2. `{array|object}` Data for the row to be processed (same as the
   *    original format that was passed in as the data source, or an array
   *    from a DOM data source
   * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which
   *    can be useful to retrieve the `TR` element if you need DOM interaction.
   *
   * And the following return is expected:
   *
   * * {boolean} Include the row in the searched result set (true) or not
   *   (false)
   *
   * Note that as with the main search ability in DataTables, technically this
   * is "filtering", since it is subtractive. However, for consistency in
   * naming we call it searching here.
   *
   *  @type array
   *  @default []
   *
   *  @example
   *    // The following example shows custom search being applied to the
   *    // fourth column (i.e. the data[3] index) based on two input values
   *    // from the end-user, matching the data in a certain range.
   *    $.fn.dataTable.ext.search.push(
   *      function( settings, data, dataIndex ) {
   *        var min = document.getElementById('min').value * 1;
   *        var max = document.getElementById('max').value * 1;
   *        var version = data[3] == "-" ? 0 : data[3]*1;
   *
   *        if ( min == "" && max == "" ) {
   *          return true;
   *        }
   *        else if ( min == "" && version < max ) {
   *          return true;
   *        }
   *        else if ( min < version && "" == max ) {
   *          return true;
   *        }
   *        else if ( min < version && version < max ) {
   *          return true;
   *        }
   *        return false;
   *      }
   *    );
   */
  search: [],
  /**
   * Selector extensions
   *
   * The `selector` option can be used to extend the options available for the
   * selector modifier options (`selector-modifier` object data type) that
   * each of the three built in selector types offer (row, column and cell +
   * their plural counterparts). For example the Select extension uses this
   * mechanism to provide an option to select only rows, columns and cells
   * that have been marked as selected by the end user (`{selected: true}`),
   * which can be used in conjunction with the existing built in selector
   * options.
   *
   * Each property is an array to which functions can be pushed. The functions
   * take three attributes:
   *
   * * Settings object for the host table
   * * Options object (`selector-modifier` object type)
   * * Array of selected item indexes
   *
   * The return is an array of the resulting item indexes after the custom
   * selector has been applied.
   *
   *  @type object
   */
  selector: {
    cell: [],
    column: [],
    row: []
  },
  /**
   * Legacy configuration options. Enable and disable legacy options that
   * are available in DataTables.
   *
   *  @type object
   */
  legacy: {
    /**
     * Enable / disable DataTables 1.9 compatible server-side processing
     * requests
     *
     *  @type boolean
     *  @default null
     */
    ajax: null
  },
  /**
   * Pagination plug-in methods.
   * 
   * Each entry in this object is a function and defines which buttons should
   * be shown by the pagination rendering method that is used for the table:
   * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the
   * buttons are displayed in the document, while the functions here tell it
   * what buttons to display. This is done by returning an array of button
   * descriptions (what each button will do).
   *
   * Pagination types (the four built in options and any additional plug-in
   * options defined here) can be used through the `paginationType`
   * initialisation parameter.
   *
   * The functions defined take two parameters:
   *
   * 1. `{int} page` The current page index
   * 2. `{int} pages` The number of pages in the table
   *
   * Each function is expected to return an array where each element of the
   * array can be one of:
   *
   * * `first` - Jump to first page when activated
   * * `last` - Jump to last page when activated
   * * `previous` - Show previous page when activated
   * * `next` - Show next page when activated
   * * `{int}` - Show page of the index given
   * * `{array}` - A nested array containing the above elements to add a
   *   containing 'DIV' element (might be useful for styling).
   *
   * Note that DataTables v1.9- used this object slightly differently whereby
   * an object with two functions would be defined for each plug-in. That
   * ability is still supported by DataTables 1.10+ to provide backwards
   * compatibility, but this option of use is now decremented and no longer
   * documented in DataTables 1.10+.
   *
   *  @type object
   *  @default {}
   *
   *  @example
   *    // Show previous, next and current page buttons only
   *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {
   *      return [ 'previous', page, 'next' ];
   *    };
   */
  pager: {},
  renderer: {
    pageButton: {},
    header: {}
  },
  /**
   * Ordering plug-ins - custom data source
   * 
   * The extension options for ordering of data available here is complimentary
   * to the default type based ordering that DataTables typically uses. It
   * allows much greater control over the the data that is being used to
   * order a column, but is necessarily therefore more complex.
   * 
   * This type of ordering is useful if you want to do ordering based on data
   * live from the DOM (for example the contents of an 'input' element) rather
   * than just the static string that DataTables knows of.
   * 
   * The way these plug-ins work is that you create an array of the values you
   * wish to be ordering for the column in question and then return that
   * array. The data in the array much be in the index order of the rows in
   * the table (not the currently ordering order!). Which order data gathering
   * function is run here depends on the `dt-init columns.orderDataType`
   * parameter that is used for the column (if any).
   *
   * The functions defined take two parameters:
   *
   * 1. `{object}` DataTables settings object: see
   *    {@link DataTable.models.oSettings}
   * 2. `{int}` Target column index
   *
   * Each function is expected to return an array:
   *
   * * `{array}` Data for the column to be ordering upon
   *
   *  @type array
   *
   *  @example
   *    // Ordering using `input` node values
   *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )
   *    {
   *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {
   *        return $('input', td).val();
   *      } );
   *    }
   */
  order: {},
  /**
   * Type based plug-ins.
   *
   * Each column in DataTables has a type assigned to it, either by automatic
   * detection or by direct assignment using the `type` option for the column.
   * The type of a column will effect how it is ordering and search (plug-ins
   * can also make use of the column type if required).
   *
   * @namespace
   */
  type: {
    /**
     * Automatic column class assignment
     */
    className: {},
    /**
     * Type detection functions.
     *
     * The functions defined in this object are used to automatically detect
     * a column's type, making initialisation of DataTables super easy, even
     * when complex data is in the table.
     *
     * The functions defined take two parameters:
     *
        *  1. `{*}` Data from the column cell to be analysed
        *  2. `{settings}` DataTables settings object. This can be used to
        *     perform context specific type detection - for example detection
        *     based on language settings such as using a comma for a decimal
        *     place. Generally speaking the options from the settings will not
        *     be required
     *
     * Each function is expected to return:
     *
     * * `{string|null}` Data type detected, or null if unknown (and thus
     *   pass it on to the other type detection functions.
     *
     *  @type array
     *
     *  @example
     *    // Currency type detection plug-in:
     *    $.fn.dataTable.ext.type.detect.push(
     *      function ( data, settings ) {
     *        // Check the numeric part
     *        if ( ! data.substring(1).match(/[0-9]/) ) {
     *          return null;
     *        }
     *
     *        // Check prefixed by currency
     *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {
     *          return 'currency';
     *        }
     *        return null;
     *      }
     *    );
     */
    detect: [],
    /**
     * Automatic renderer assignment
     */
    render: {},
    /**
     * Type based search formatting.
     *
     * The type based searching functions can be used to pre-format the
     * data to be search on. For example, it can be used to strip HTML
     * tags or to de-format telephone numbers for numeric only searching.
     *
     * Note that is a search is not defined for a column of a given type,
     * no search formatting will be performed.
     * 
     * Pre-processing of searching data plug-ins - When you assign the sType
     * for a column (or have it automatically detected for you by DataTables
     * or a type detection plug-in), you will typically be using this for
     * custom sorting, but it can also be used to provide custom searching
     * by allowing you to pre-processing the data and returning the data in
     * the format that should be searched upon. This is done by adding
     * functions this object with a parameter name which matches the sType
     * for that target column. This is the corollary of <i>afnSortData</i>
     * for searching data.
     *
     * The functions defined take a single parameter:
     *
        *  1. `{*}` Data from the column cell to be prepared for searching
     *
     * Each function is expected to return:
     *
     * * `{string|null}` Formatted string that will be used for the searching.
     *
     *  @type object
     *  @default {}
     *
     *  @example
     *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {
     *      return d.replace(/\n/g," ").replace( /<.*?>/g, "" );
     *    }
     */
    search: {},
    /**
     * Type based ordering.
     *
     * The column type tells DataTables what ordering to apply to the table
     * when a column is sorted upon. The order for each type that is defined,
     * is defined by the functions available in this object.
     *
     * Each ordering option can be described by three properties added to
     * this object:
     *
     * * `{type}-pre` - Pre-formatting function
     * * `{type}-asc` - Ascending order function
     * * `{type}-desc` - Descending order function
     *
     * All three can be used together, only `{type}-pre` or only
     * `{type}-asc` and `{type}-desc` together. It is generally recommended
     * that only `{type}-pre` is used, as this provides the optimal
     * implementation in terms of speed, although the others are provided
     * for compatibility with existing Javascript sort functions.
     *
     * `{type}-pre`: Functions defined take a single parameter:
     *
        *  1. `{*}` Data from the column cell to be prepared for ordering
     *
     * And return:
     *
     * * `{*}` Data to be sorted upon
     *
     * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort
     * functions, taking two parameters:
     *
        *  1. `{*}` Data to compare to the second parameter
        *  2. `{*}` Data to compare to the first parameter
     *
     * And returning:
     *
     * * `{*}` Ordering match: <0 if first parameter should be sorted lower
     *   than the second parameter, ===0 if the two parameters are equal and
     *   >0 if the first parameter should be sorted height than the second
     *   parameter.
     * 
     *  @type object
     *  @default {}
     *
     *  @example
     *    // Numeric ordering of formatted numbers with a pre-formatter
     *    $.extend( $.fn.dataTable.ext.type.order, {
     *      "string-pre": function(x) {
     *        a = (a === "-" || a === "") ? 0 : a.replace( /[^\d\-\.]/g, "" );
     *        return parseFloat( a );
     *      }
     *    } );
     *
     *  @example
     *    // Case-sensitive string ordering, with no pre-formatting method
     *    $.extend( $.fn.dataTable.ext.order, {
     *      "string-case-asc": function(x,y) {
     *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));
     *      },
     *      "string-case-desc": function(x,y) {
     *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));
     *      }
     *    } );
     */
    order: {}
  },
  /**
   * Unique DataTables instance counter
   *
   * @type int
   * @private
   */
  _unique: 0,
  //
  // Depreciated
  // The following properties are retained for backwards compatibility only.
  // The should not be used in new projects and will be removed in a future
  // version
  //
  /**
   * Version check function.
   *  @type function
   *  @depreciated Since 1.10
   */
  fnVersionCheck: ge.fnVersionCheck,
  /**
   * Index for what 'this' index API functions should use
   *  @type int
   *  @deprecated Since v1.10
   */
  iApiIndex: 0,
  /**
   * Software version
   *  @type string
   *  @deprecated Since v1.10
   */
  sVersion: ge.version
};
Xt.extend(Vr, {
  afnFiltering: Vr.search,
  aTypes: Vr.type.detect,
  ofnSearch: Vr.type.search,
  oSort: Vr.type.order,
  afnSortData: Vr.order,
  aoFeatures: Vr.feature,
  oStdClasses: Vr.classes,
  oPagination: Vr.pager
});
Xt.extend(ge.ext.classes, {
  container: "dt-container",
  empty: {
    row: "dt-empty"
  },
  info: {
    container: "dt-info"
  },
  length: {
    container: "dt-length",
    select: "dt-input"
  },
  order: {
    canAsc: "dt-orderable-asc",
    canDesc: "dt-orderable-desc",
    isAsc: "dt-ordering-asc",
    isDesc: "dt-ordering-desc",
    none: "dt-orderable-none",
    position: "sorting_"
  },
  processing: {
    container: "dt-processing"
  },
  scrolling: {
    body: "dt-scroll-body",
    container: "dt-scroll",
    footer: {
      self: "dt-scroll-foot",
      inner: "dt-scroll-footInner"
    },
    header: {
      self: "dt-scroll-head",
      inner: "dt-scroll-headInner"
    }
  },
  search: {
    container: "dt-search",
    input: "dt-input"
  },
  table: "dataTable",
  tbody: {
    cell: "",
    row: ""
  },
  thead: {
    cell: "",
    row: ""
  },
  tfoot: {
    cell: "",
    row: ""
  },
  paging: {
    active: "current",
    button: "dt-paging-button",
    container: "dt-paging",
    disabled: "disabled"
  }
});
var Sd = ge.ext.pager;
Xt.extend(Sd, {
  simple: function() {
    return ["previous", "next"];
  },
  full: function() {
    return ["first", "previous", "next", "last"];
  },
  numbers: function() {
    return ["numbers"];
  },
  simple_numbers: function() {
    return ["previous", "numbers", "next"];
  },
  full_numbers: function() {
    return ["first", "previous", "numbers", "next", "last"];
  },
  first_last: function() {
    return ["first", "last"];
  },
  first_last_numbers: function() {
    return ["first", "numbers", "last"];
  },
  // For testing and plug-ins to use
  _numbers: Lf,
  // Number of number buttons - legacy, use `numbers` option for paging feature
  numbers_length: 7
});
Xt.extend(!0, ge.ext.renderer, {
  pagingButton: {
    _: function(s, g, x, C, B) {
      var O = s.oClasses.paging, c = [O.button], d;
      return C && c.push(O.active), B && c.push(O.disabled), g === "ellipsis" ? d = Xt('<span class="ellipsis"></span>').html(x)[0] : d = Xt("<button>", {
        class: c.join(" "),
        role: "link",
        type: "button"
      }).html(x), {
        display: d,
        clicker: d
      };
    }
  },
  pagingContainer: {
    _: function(s, g) {
      return g;
    }
  }
});
var jo = function(s, g) {
  return function(x) {
    return Aa(x) || typeof x != "string" || (x = x.replace(kh, " "), s && (x = fi(x)), g && (x = v0(x, !0))), x;
  };
};
function Pf(s) {
  return s.replace(/[\W]/g, "_");
}
function qs(s, g, x, C, B) {
  return window.moment ? s[g](B) : window.luxon ? s[x](B) : C ? s[C](B) : s;
}
var _s = !1;
function Oo(s, g, x) {
  var C;
  if (window.moment) {
    if (C = window.moment.utc(s, g, x, !0), !C.isValid())
      return null;
  } else if (window.luxon) {
    if (C = g && typeof s == "string" ? window.luxon.DateTime.fromFormat(s, g) : window.luxon.DateTime.fromISO(s), !C.isValid)
      return null;
    C.setLocale(x);
  } else
    g ? (_s || alert("DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17"), _s = !0) : C = new Date(s);
  return C;
}
function u0(s) {
  return function(g, x, C, B) {
    arguments.length === 0 ? (C = "en", x = null, g = null) : arguments.length === 1 ? (C = "en", x = g, g = null) : arguments.length === 2 && (C = x, x = g, g = null);
    var O = "datetime" + (x ? "-" + Pf(x) : "");
    return ge.ext.type.order[O] || ge.type(O, {
      detect: function(c) {
        return c === O ? O : !1;
      },
      order: {
        pre: function(c) {
          return c.valueOf();
        }
      },
      className: "dt-right"
    }), function(c, d) {
      if (c == null)
        if (B === "--now") {
          var t = /* @__PURE__ */ new Date();
          c = new Date(Date.UTC(
            t.getFullYear(),
            t.getMonth(),
            t.getDate(),
            t.getHours(),
            t.getMinutes(),
            t.getSeconds()
          ));
        } else
          c = "";
      if (d === "type")
        return O;
      if (c === "")
        return d !== "sort" ? "" : Oo("0000-01-01 00:00:00", null, C);
      if (x !== null && g === x && d !== "sort" && d !== "type" && !(c instanceof Date))
        return c;
      var o = Oo(c, g, C);
      if (o === null)
        return c;
      if (d === "sort")
        return o;
      var r = x === null ? qs(o, "toDate", "toJSDate", "")[s]() : qs(o, "format", "toFormat", "toISOString", x);
      return d === "display" ? oi(r) : r;
    };
  };
}
var Of = ",", Bf = ".";
if (window.Intl !== void 0)
  try {
    for (var Mi = new Intl.NumberFormat().formatToParts(100000.1), ia = 0; ia < Mi.length; ia++)
      Mi[ia].type === "group" ? Of = Mi[ia].value : Mi[ia].type === "decimal" && (Bf = Mi[ia].value);
  } catch {
  }
ge.datetime = function(s, g) {
  var x = "datetime-detect-" + Pf(s);
  g || (g = "en"), ge.ext.type.order[x] || ge.type(x, {
    detect: function(C) {
      var B = Oo(C, s, g);
      return C === "" || B ? x : !1;
    },
    order: {
      pre: function(C) {
        return Oo(C, s, g) || 0;
      }
    },
    className: "dt-right"
  });
};
ge.render = {
  date: u0("toLocaleDateString"),
  datetime: u0("toLocaleString"),
  time: u0("toLocaleTimeString"),
  number: function(s, g, x, C, B) {
    return s == null && (s = Of), g == null && (g = Bf), {
      display: function(O) {
        if (typeof O != "number" && typeof O != "string" || O === "" || O === null)
          return O;
        var c = O < 0 ? "-" : "", d = parseFloat(O), t = Math.abs(d);
        if (t >= 1e11 || t < 1e-4 && t !== 0) {
          var o = d.toExponential(x).split(/e\+?/);
          return o[0] + " x 10<sup>" + o[1] + "</sup>";
        }
        if (isNaN(d))
          return oi(O);
        d = d.toFixed(x), O = Math.abs(d);
        var r = parseInt(O, 10), n = x ? g + (O - r).toFixed(x).substring(2) : "";
        return r === 0 && parseFloat(n) === 0 && (c = ""), c + (C || "") + r.toString().replace(
          /\B(?=(\d{3})+(?!\d))/g,
          s
        ) + n + (B || "");
      }
    };
  },
  text: function() {
    return {
      display: oi,
      filter: oi
    };
  }
};
var Nn = ge.ext.type;
ge.type = function(s, g, x) {
  if (!g)
    return {
      className: Nn.className[s],
      detect: Nn.detect.find(function(c) {
        return c.name === s;
      }),
      order: {
        pre: Nn.order[s + "-pre"],
        asc: Nn.order[s + "-asc"],
        desc: Nn.order[s + "-desc"]
      },
      render: Nn.render[s],
      search: Nn.search[s]
    };
  var C = function(c, d) {
    Nn[c][s] = d;
  }, B = function(c) {
    var d = function(o, r) {
      var n = c(o, r);
      return n === !0 ? s : n;
    };
    Object.defineProperty(d, "name", { value: s });
    var t = Nn.detect.findIndex(function(o) {
      return o.name === s;
    });
    t === -1 ? Nn.detect.unshift(d) : Nn.detect.splice(t, 1, d);
  }, O = function(c) {
    Nn.order[s + "-pre"] = c.pre, Nn.order[s + "-asc"] = c.asc, Nn.order[s + "-desc"] = c.desc;
  };
  x || (x = g, g = null), g === "className" ? C("className", x) : g === "detect" ? B(x) : g === "order" ? O(x) : g === "render" ? C("render", x) : g === "search" ? C("search", x) : g || (x.className && C("className", x.className), x.detect !== void 0 && B(x.detect), x.order && O(x.order), x.render !== void 0 && C("render", x.render), x.search !== void 0 && C("search", x.search));
};
ge.types = function() {
  return Nn.detect.map(function(s) {
    return s.name;
  });
};
ge.type("string", {
  detect: function() {
    return "string";
  },
  order: {
    pre: function(s) {
      return Aa(s) ? "" : typeof s == "string" ? s.toLowerCase() : s.toString ? s.toString() : "";
    }
  },
  search: jo(!1, !0)
});
ge.type("html", {
  detect: function(s) {
    return Aa(s) || typeof s == "string" && s.indexOf("<") !== -1 ? "html" : null;
  },
  order: {
    pre: function(s) {
      return Aa(s) ? "" : s.replace ? fi(s).trim().toLowerCase() : s + "";
    }
  },
  search: jo(!0, !0)
});
ge.type("date", {
  className: "dt-type-date",
  detect: function(s) {
    if (s && !(s instanceof Date) && !Uh.test(s))
      return null;
    var g = Date.parse(s);
    return g !== null && !isNaN(g) || Aa(s) ? "date" : null;
  },
  order: {
    pre: function(s) {
      var g = Date.parse(s);
      return isNaN(g) ? -1 / 0 : g;
    }
  }
});
ge.type("html-num-fmt", {
  className: "dt-type-numeric",
  detect: function(s, g) {
    var x = g.oLanguage.sDecimal;
    return ff(s, x, !0) ? "html-num-fmt" : null;
  },
  order: {
    pre: function(s, g) {
      var x = g.oLanguage.sDecimal;
      return Go(s, x, A0, C0);
    }
  },
  search: jo(!0, !0)
});
ge.type("html-num", {
  className: "dt-type-numeric",
  detect: function(s, g) {
    var x = g.oLanguage.sDecimal;
    return ff(s, x) ? "html-num" : null;
  },
  order: {
    pre: function(s, g) {
      var x = g.oLanguage.sDecimal;
      return Go(s, x, A0);
    }
  },
  search: jo(!0, !0)
});
ge.type("num-fmt", {
  className: "dt-type-numeric",
  detect: function(s, g) {
    var x = g.oLanguage.sDecimal;
    return E0(s, x, !0) ? "num-fmt" : null;
  },
  order: {
    pre: function(s, g) {
      var x = g.oLanguage.sDecimal;
      return Go(s, x, C0);
    }
  }
});
ge.type("num", {
  className: "dt-type-numeric",
  detect: function(s, g) {
    var x = g.oLanguage.sDecimal;
    return E0(s, x) ? "num" : null;
  },
  order: {
    pre: function(s, g) {
      var x = g.oLanguage.sDecimal;
      return Go(s, x);
    }
  }
});
var Go = function(s, g, x, C) {
  if (s !== 0 && (!s || s === "-"))
    return -1 / 0;
  var B = typeof s;
  return B === "number" || B === "bigint" ? s : (g && (s = sf(s, g)), s.replace && (x && (s = s.replace(x, "")), C && (s = s.replace(C, ""))), s * 1);
};
Xt.extend(!0, ge.ext.renderer, {
  footer: {
    _: function(s, g, x) {
      g.addClass(x.tfoot.cell);
    }
  },
  header: {
    _: function(s, g, x) {
      g.addClass(x.thead.cell), s.oFeatures.bSort || g.addClass(x.order.none);
      var C = s.bSortCellsTop, B = g.closest("thead").find("tr"), O = g.parent().index();
      // Cells and rows which have the attribute to disable the icons
      g.attr("data-dt-order") === "disable" || g.parent().attr("data-dt-order") === "disable" || // Legacy support for `orderCellsTop`. If it is set, then cells
      // which are not in the top or bottom row of the header (depending
      // on the value) do not get the sorting classes applied to them
      C === !0 && O !== 0 || C === !1 && O !== B.length - 1 || Xt(s.nTable).on("order.dt.DT", function(c, d, t) {
        if (s === d) {
          var o = x.order, r = d.api.columns(g), n = s.aoColumns[r.flatten()[0]], i = r.orderable().includes(!0), f = "", l = r.indexes(), u = r.orderable(!0).flatten(), h = t.map(function(e) {
            return e.col;
          }).join(",");
          g.removeClass(
            o.isAsc + " " + o.isDesc
          ).toggleClass(o.none, !i).toggleClass(o.canAsc, i && u.includes("asc")).toggleClass(o.canDesc, i && u.includes("desc"));
          var a = h.indexOf(l.toArray().join(","));
          if (a !== -1) {
            var v = r.order();
            g.addClass(
              v.includes("asc") ? o.isAsc : "" + v.includes("desc") ? o.isDesc : ""
            );
          }
          if (a === 0 && h.length === l.count()) {
            var y = t[0], p = n.asSorting;
            g.attr("aria-sort", y.dir === "asc" ? "ascending" : "descending"), f = p[y.index + 1] ? "Reverse" : "Remove";
          } else
            g.removeAttr("aria-sort");
          g.attr(
            "aria-label",
            i ? n.ariaTitle + d.api.i18n("oAria.orderable" + f) : n.ariaTitle
          ), i && (g.find(".dt-column-title").attr("role", "button"), g.attr("tabindex", 0));
        }
      });
    }
  },
  layout: {
    _: function(s, g, x) {
      var C = Xt("<div/>").addClass("dt-layout-row").appendTo(g);
      Xt.each(x, function(B, O) {
        var c = O.table ? "" : "dt-" + B + " ";
        O.table && C.addClass("dt-layout-table"), Xt("<div/>").attr({
          id: O.id || null,
          class: "dt-layout-cell " + c + (O.className || "")
        }).append(O.contents).appendTo(C);
      });
    }
  }
});
ge.feature = {};
ge.feature.register = function(s, g, x) {
  ge.ext.features[s] = g, x && Vr.feature.push({
    cFeature: x,
    fnInit: g
  });
};
ge.feature.register("info", function(s, g) {
  if (!s.oFeatures.bInfo)
    return null;
  var x = s.oLanguage, C = s.sTableId, B = Xt("<div/>", {
    class: s.oClasses.info.container
  });
  return g = Xt.extend({
    callback: x.fnInfoCallback,
    empty: x.sInfoEmpty,
    postfix: x.sInfoPostFix,
    search: x.sInfoFiltered,
    text: x.sInfo
  }, g), s.aoDrawCallback.push(function(O) {
    Ad(O, g, B);
  }), Xt("#" + C + "_info", s.nWrapper).length || (B.attr({
    "aria-live": "polite",
    id: C + "_info",
    role: "status"
  }), Xt(s.nTable).attr("aria-describedby", C + "_info")), B;
}, "i");
function Ad(s, g, x) {
  var C = s._iDisplayStart + 1, B = s.fnDisplayEnd(), O = s.fnRecordsTotal(), c = s.fnRecordsDisplay(), d = c ? g.text : g.empty;
  c !== O && (d += " " + g.search), d += g.postfix, d = M0(s, d), g.callback && (d = g.callback.call(
    s.oInstance,
    s,
    C,
    B,
    O,
    c,
    d
  )), x.html(d), Nr(s, null, "info", [s, x[0], d]);
}
var c0 = 0;
ge.feature.register("search", function(s, g) {
  if (!s.oFeatures.bFilter)
    return null;
  var x = s.oClasses.search, C = s.sTableId, B = s.oLanguage, O = s.oPreviousSearch, c = '<input type="search" class="' + x.input + '"/>';
  g = Xt.extend({
    placeholder: B.sSearchPlaceholder,
    text: B.sSearch
  }, g), g.text.indexOf("_INPUT_") === -1 && (g.text += "_INPUT_"), g.text = M0(s, g.text);
  var d = g.text.match(/_INPUT_$/), t = g.text.match(/^_INPUT_/), o = g.text.replace(/_INPUT_/, ""), r = "<label>" + g.text + "</label>";
  t ? r = "_INPUT_<label>" + o + "</label>" : d && (r = "<label>" + o + "</label>_INPUT_");
  var n = Xt("<div>").addClass(x.container).append(r.replace(/_INPUT_/, c));
  n.find("label").attr("for", "dt-search-" + c0), n.find("input").attr("id", "dt-search-" + c0), c0++;
  var i = function(u) {
    var h = this.value;
    O.return && u.key !== "Enter" || h != O.search && (O.search = h, ji(s, O), s._iDisplayStart = 0, ci(s));
  }, f = s.searchDelay !== null ? s.searchDelay : 0, l = Xt("input", n).val(O.search).attr("placeholder", g.placeholder).on(
    "keyup.DT search.DT input.DT paste.DT cut.DT",
    f ? ge.util.debounce(i, f) : i
  ).on("mouseup.DT", function(u) {
    setTimeout(function() {
      i.call(l[0], u);
    }, 10);
  }).on("keypress.DT", function(u) {
    if (u.keyCode == 13)
      return !1;
  }).attr("aria-controls", C);
  return Xt(s.nTable).on("search.dt.DT", function(u, h) {
    s === h && l[0] !== document.activeElement && l.val(
      typeof O.search != "function" ? O.search : ""
    );
  }), n;
}, "f");
ge.feature.register("paging", function(s, g) {
  if (!s.oFeatures.bPaginate)
    return null;
  g = Xt.extend({
    numbers: ge.ext.pager.numbers_length,
    type: s.sPaginationType
  }, g);
  var x = Xt("<div/>").addClass(s.oClasses.paging.container + " paging_" + g.type), C = function() {
    Rf(s, x, g);
  };
  return s.aoDrawCallback.push(C), Xt(s.nTable).on("column-sizing.dt.DT", C), x;
}, "p");
function Rf(s, g, x) {
  if (s._bInitComplete) {
    for (var C = ge.ext.pager[x.type], B = s.oLanguage.oAria.paginate || {}, O = s._iDisplayStart, c = s._iDisplayLength, d = s.fnRecordsDisplay(), t = c === -1, o = t ? 0 : Math.ceil(O / c), r = t ? 1 : Math.ceil(d / c), n = C().map(function(y) {
      return y === "numbers" ? Lf(o, r, x.numbers) : y;
    }).flat(), i = [], f = 0; f < n.length; f++) {
      var l = n[f], u = Cd(s, l, o, r), h = Po(s, "pagingButton")(
        s,
        l,
        u.display,
        u.active,
        u.disabled
      );
      Xt(h.clicker).attr({
        "aria-controls": s.sTableId,
        "aria-disabled": u.disabled ? "true" : null,
        "aria-current": u.active ? "page" : null,
        "aria-label": B[l],
        "data-dt-idx": l,
        tabIndex: u.disabled ? -1 : s.iTabIndex
      }), typeof l != "number" && Xt(h.clicker).addClass(l), Cf(
        h.clicker,
        { action: l },
        function(y) {
          y.preventDefault(), L0(s, y.data.action, !0);
        }
      ), i.push(h.display);
    }
    var a = Po(s, "pagingContainer")(
      s,
      i
    ), v = g.find(document.activeElement).data("dt-idx");
    g.empty().append(a), v !== void 0 && g.find("[data-dt-idx=" + v + "]").trigger("focus"), i.length && // any buttons
    x.numbers > 1 && // prevent infinite
    Xt(g).outerHeight() >= Xt(i[0]).outerHeight() * 2 - 10 && Rf(s, g, Xt.extend({}, x, { numbers: x.numbers - 2 }));
  }
}
function Cd(s, g, x, C) {
  var B = s.oLanguage.oPaginate, O = {
    display: "",
    active: !1,
    disabled: !1
  };
  switch (g) {
    case "ellipsis":
      O.display = "&#x2026;", O.disabled = !0;
      break;
    case "first":
      O.display = B.sFirst, x === 0 && (O.disabled = !0);
      break;
    case "previous":
      O.display = B.sPrevious, x === 0 && (O.disabled = !0);
      break;
    case "next":
      O.display = B.sNext, (C === 0 || x === C - 1) && (O.disabled = !0);
      break;
    case "last":
      O.display = B.sLast, (C === 0 || x === C - 1) && (O.disabled = !0);
      break;
    default:
      typeof g == "number" && (O.display = s.fnFormatNumber(g + 1), x === g && (O.active = !0));
      break;
  }
  return O;
}
function Lf(s, g, x) {
  var C = [], B = Math.floor(x / 2);
  return g <= x ? C = Pa(0, g) : x === 1 ? C = [s] : x === 3 ? s <= 1 ? C = [0, 1, "ellipsis"] : s >= g - 2 ? (C = Pa(g - 2, g), C.unshift("ellipsis")) : C = ["ellipsis", s, "ellipsis"] : s <= B ? (C = Pa(0, x - 2), C.push("ellipsis", g - 1)) : s >= g - 1 - B ? (C = Pa(g - (x - 2), g), C.unshift(0, "ellipsis")) : (C = Pa(s - B + 2, s + B - 1), C.push("ellipsis", g - 1), C.unshift(0, "ellipsis")), C;
}
var h0 = 0;
ge.feature.register("pageLength", function(s, g) {
  var x = s.oFeatures;
  if (!x.bPaginate || !x.bLengthChange)
    return null;
  g = Xt.extend({
    menu: s.aLengthMenu,
    text: s.oLanguage.sLengthMenu
  }, g);
  var C = s.oClasses.length, B = s.sTableId, O = g.menu, c = [], d = [], t;
  if (Array.isArray(O[0]))
    c = O[0], d = O[1];
  else
    for (t = 0; t < O.length; t++)
      Xt.isPlainObject(O[t]) ? (c.push(O[t].value), d.push(O[t].label)) : (c.push(O[t]), d.push(O[t]));
  var o = g.text.match(/_MENU_$/), r = g.text.match(/^_MENU_/), n = g.text.replace(/_MENU_/, ""), i = "<label>" + g.text + "</label>";
  r ? i = "_MENU_<label>" + n + "</label>" : o && (i = "<label>" + n + "</label>_MENU_");
  var f = Xt("<div/>").addClass(C.container).append(
    i.replace("_MENU_", "<span></span>")
  ), l = [];
  f.find("label")[0].childNodes.forEach(function(a) {
    a.nodeType === Node.TEXT_NODE && l.push({
      el: a,
      text: a.textContent
    });
  });
  var u = function(a) {
    l.forEach(function(v) {
      v.el.textContent = M0(s, v.text, a);
    });
  }, h = Xt("<select/>", {
    name: B + "_length",
    "aria-controls": B,
    class: C.select
  });
  for (t = 0; t < c.length; t++)
    h[0][t] = new Option(
      typeof d[t] == "number" ? s.fnFormatNumber(d[t]) : d[t],
      c[t]
    );
  return f.find("label").attr("for", "dt-length-" + h0), h.attr("id", "dt-length-" + h0), h0++, f.find("span").replaceWith(h), Xt("select", f).val(s._iDisplayLength).on("change.DT", function() {
    xf(s, Xt(this).val()), ci(s);
  }), Xt(s.nTable).on("length.dt.DT", function(a, v, y) {
    s === v && (Xt("select", f).val(y), u(y));
  }), u(s._iDisplayLength), f;
}, "l");
Xt.fn.dataTable = ge;
ge.$ = Xt;
Xt.fn.dataTableSettings = ge.settings;
Xt.fn.dataTableExt = ge.ext;
Xt.fn.DataTable = function(s) {
  return Xt(this).dataTable(s).api();
};
Xt.each(ge, function(s, g) {
  Xt.fn.DataTable[s] = g;
});
/*! FixedHeader 4.0.0
 * Â© SpryMedia Ltd - datatables.net/license
 */
let fr = Va;
var Ed = 0, La = function(s, g) {
  if (!ge.versionCheck("2"))
    throw "Warning: FixedHeader requires DataTables 2 or newer";
  if (!(this instanceof La))
    throw "FixedHeader must be initialised with the 'new' keyword.";
  g === !0 && (g = {}), s = new ge.Api(s), this.c = fr.extend(!0, {}, La.defaults, g), this.s = {
    dt: s,
    position: {
      theadTop: 0,
      tbodyTop: 0,
      tfootTop: 0,
      tfootBottom: 0,
      width: 0,
      left: 0,
      tfootHeight: 0,
      theadHeight: 0,
      windowHeight: fr(window).height(),
      visible: !0
    },
    headerMode: null,
    footerMode: null,
    autoWidth: s.settings()[0].oFeatures.bAutoWidth,
    namespace: ".dtfc" + Ed++,
    scrollLeft: {
      header: -1,
      footer: -1
    },
    enable: !0,
    autoDisable: !1
  }, this.dom = {
    floatingHeader: null,
    thead: fr(s.table().header()),
    tbody: fr(s.table().body()),
    tfoot: fr(s.table().footer()),
    header: {
      host: null,
      floating: null,
      floatingParent: fr('<div class="dtfh-floatingparent"><div></div></div>'),
      placeholder: null
    },
    footer: {
      host: null,
      floating: null,
      floatingParent: fr('<div class="dtfh-floatingparent"><div></div></div>'),
      placeholder: null
    }
  }, this.dom.header.host = this.dom.thead.parent(), this.dom.footer.host = this.dom.tfoot.parent();
  var x = s.settings()[0];
  if (x._fixedHeader)
    throw "FixedHeader already initialised on table " + x.nTable.id;
  x._fixedHeader = this, this._constructor();
};
fr.extend(La.prototype, {
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * API methods
   */
  /**
   * Kill off FH and any events
   */
  destroy: function() {
    var s = this.dom;
    this.s.dt.off(".dtfc"), fr(window).off(this.s.namespace), s.header.rightBlocker && s.header.rightBlocker.remove(), s.header.leftBlocker && s.header.leftBlocker.remove(), s.footer.rightBlocker && s.footer.rightBlocker.remove(), s.footer.leftBlocker && s.footer.leftBlocker.remove(), this.c.header && this._modeChange("in-place", "header", !0), this.c.footer && s.tfoot.length && this._modeChange("in-place", "footer", !0);
  },
  /**
   * Enable / disable the fixed elements
   *
   * @param  {boolean} enable `true` to enable, `false` to disable
   */
  enable: function(s, g, x) {
    this.s.enable = s, this.s.enableType = x, (g || g === void 0) && (this._positions(), this._scroll(!0));
  },
  /**
   * Get enabled status
   */
  enabled: function() {
    return this.s.enable;
  },
  /**
   * Set header offset
   *
   * @param  {int} new value for headerOffset
   */
  headerOffset: function(s) {
    return s !== void 0 && (this.c.headerOffset = s, this.update()), this.c.headerOffset;
  },
  /**
   * Set footer offset
   *
   * @param  {int} new value for footerOffset
   */
  footerOffset: function(s) {
    return s !== void 0 && (this.c.footerOffset = s, this.update()), this.c.footerOffset;
  },
  /**
   * Recalculate the position of the fixed elements and force them into place
   */
  update: function(s) {
    var g = this.s.dt.table().node();
    !this.s.enable && !this.s.autoDisable || (fr(g).is(":visible") ? (this.s.autoDisable = !1, this.enable(!0, !1)) : (this.s.autoDisable = !0, this.enable(!1, !1)), fr(g).children("thead").length !== 0 && (this._positions(), this._scroll(s !== void 0 ? s : !0)));
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Constructor
   */
  /**
   * FixedHeader constructor - adding the required event listeners and
   * simple initialisation
   *
   * @private
   */
  _constructor: function() {
    var s = this, g = this.s.dt;
    fr(window).on("scroll" + this.s.namespace, function() {
      s._scroll();
    }).on(
      "resize" + this.s.namespace,
      ge.util.throttle(function() {
        s.s.position.windowHeight = fr(window).height(), s.update();
      }, 50)
    );
    var x = fr(".fh-fixedHeader");
    !this.c.headerOffset && x.length && (this.c.headerOffset = x.outerHeight());
    var C = fr(".fh-fixedFooter");
    !this.c.footerOffset && C.length && (this.c.footerOffset = C.outerHeight()), g.on(
      "column-reorder.dt.dtfc column-visibility.dt.dtfc column-sizing.dt.dtfc responsive-display.dt.dtfc",
      function(B, O) {
        s.update();
      }
    ).on("draw.dt.dtfc", function(B, O) {
      s.update(O !== g.settings()[0]);
    }), g.on("destroy.dtfc", function() {
      s.destroy();
    }), this._positions(), this._scroll();
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Private methods
   */
  /**
   * Clone a fixed item to act as a place holder for the original element
   * which is moved into a clone of the table element, and moved around the
   * document to give the fixed effect.
   *
   * @param  {string}  item  'header' or 'footer'
   * @param  {boolean} force Force the clone to happen, or allow automatic
   *   decision (reuse existing if available)
   * @private
   */
  _clone: function(s, g) {
    var x = this, C = this.s.dt, B = this.dom[s], O = s === "header" ? this.dom.thead : this.dom.tfoot;
    if (!(s === "footer" && this._scrollEnabled()))
      if (!g && B.floating)
        B.floating.removeClass(
          "fixedHeader-floating fixedHeader-locked"
        );
      else {
        B.floating && (B.placeholder !== null && B.placeholder.remove(), B.floating.children().detach(), B.floating.remove());
        var c = fr(C.table().node()), d = fr(c.parent()), t = this._scrollEnabled();
        B.floating = fr(C.table().node().cloneNode(!1)).attr("aria-hidden", "true").css({
          top: 0,
          left: 0
        }).removeAttr("id"), B.floatingParent.css({
          width: d[0].offsetWidth,
          overflow: "hidden",
          height: "fit-content",
          position: "fixed",
          left: t ? c.offset().left + d.scrollLeft() : 0
        }).css(
          s === "header" ? {
            top: this.c.headerOffset,
            bottom: ""
          } : {
            top: "",
            bottom: this.c.footerOffset
          }
        ).addClass(
          s === "footer" ? "dtfh-floatingparent-foot" : "dtfh-floatingparent-head"
        ).appendTo("body").children().eq(0).append(B.floating), this._stickyPosition(B.floating, "-");
        var o = function() {
          var l = d.scrollLeft();
          x.s.scrollLeft = { footer: l, header: l }, B.floatingParent.scrollLeft(x.s.scrollLeft.header);
        };
        o(), d.off("scroll.dtfh").on("scroll.dtfh", o), B.floatingParent.children().css({
          width: "fit-content",
          paddingRight: x.s.dt.settings()[0].oBrowser.barWidth
        });
        let f = fr(
          s === "footer" ? "div.dtfc-bottom-blocker" : "div.dtfc-top-blocker",
          C.table().container()
        );
        f.length && f.clone().appendTo(B.floatingParent).css({
          position: "fixed",
          right: f.width()
        }), B.placeholder = O.clone(!1), B.placeholder.find("*[id]").removeAttr("id"), B.host.prepend(B.placeholder), B.floating.append(O);
        for (var r = B.placeholder.parent().find("colgroup").clone().appendTo(B.floating).find("col"), n = this.s.dt.columns({ visible: !0 }).widths(), i = 0; i < n.length; i++)
          r.eq(i).css("width", n[i]);
      }
  },
  /**
   * This method sets the sticky position of the header elements to match fixed columns
   * @param {JQuery<HTMLElement>} el
   * @param {string} sign
   */
  _stickyPosition: function(s, g) {
    if (this._scrollEnabled()) {
      var x = this, C = fr(x.s.dt.table().node()).css("direction") === "rtl";
      s.find("th").each(function() {
        if (fr(this).css("position") === "sticky") {
          var B = fr(this).css("right"), O = fr(this).css("left"), c;
          B !== "auto" && !C ? (c = +B.replace(/px/g, ""), fr(this).css("right", c > 0 ? c : 0)) : O !== "auto" && C && (c = +O.replace(/px/g, ""), fr(this).css("left", c > 0 ? c : 0));
        }
      });
    }
  },
  /**
   * Reposition the floating elements to take account of horizontal page
   * scroll
   *
   * @param  {string} item       The `header` or `footer`
   * @param  {int}    scrollLeft Document scrollLeft
   * @private
   */
  _horizontal: function(s, g) {
    var x = this.dom[s], C = this.s.scrollLeft;
    if (x.floating && C[s] !== g) {
      if (this._scrollEnabled()) {
        var B = fr(
          fr(this.s.dt.table().node()).parent()
        ).scrollLeft();
        x.floating.scrollLeft(B), x.floatingParent.scrollLeft(B);
      }
      C[s] = g;
    }
  },
  /**
   * Change from one display mode to another. Each fixed item can be in one
   * of:
   *
   * * `in-place` - In the main DataTable
   * * `in` - Floating over the DataTable
   * * `below` - (Header only) Fixed to the bottom of the table body
   * * `above` - (Footer only) Fixed to the top of the table body
   *
   * @param  {string}  mode        Mode that the item should be shown in
   * @param  {string}  item        'header' or 'footer'
   * @param  {boolean} forceChange Force a redraw of the mode, even if already
   *     in that mode.
   * @private
   */
  _modeChange: function(s, g, x) {
    var C = this.dom[g], B = this.s.position, O = this._scrollEnabled();
    if (!(g === "footer" && O)) {
      var c = function(y) {
        C.floating[0].style.setProperty("width", y + "px", "important"), O || C.floatingParent[0].style.setProperty("width", y + "px", "important");
      }, d = this.dom[g === "footer" ? "tfoot" : "thead"], t = fr.contains(d[0], document.activeElement) ? document.activeElement : null, o = fr(fr(this.s.dt.table().node()).parent());
      if (s === "in-place")
        C.placeholder && (C.placeholder.remove(), C.placeholder = null), g === "header" ? C.host.prepend(d) : C.host.append(d), C.floating && (C.floating.remove(), C.floating = null, this._stickyPosition(C.host, "+")), C.floatingParent && (C.floatingParent.find("div.dtfc-top-blocker").remove(), C.floatingParent.remove()), fr(fr(C.host.parent()).parent()).scrollLeft(
          o.scrollLeft()
        );
      else if (s === "in") {
        this._clone(g, x);
        var r = o.offset(), n = fr(document).scrollTop(), i = fr(window).height(), f = n + i, l = O ? r.top : B.tbodyTop, u = O ? r.top + o.outerHeight() : B.tfootTop, h;
        g === "footer" ? h = l > f ? B.tfootHeight : l + B.tfootHeight - f : h = n + this.c.headerOffset + B.theadHeight - u;
        var a = g === "header" ? "top" : "bottom", v = this.c[g + "Offset"] - (h > 0 ? h : 0);
        C.floating.addClass("fixedHeader-floating"), C.floatingParent.css(a, v).css({
          left: B.left,
          "z-index": 3
        }), c(B.width), g === "footer" && C.floating.css("top", "");
      } else
        s === "below" ? (this._clone(g, x), C.floating.addClass("fixedHeader-locked"), C.floatingParent.css({
          position: "absolute",
          top: B.tfootTop - B.theadHeight,
          left: B.left + "px"
        }), c(B.width)) : s === "above" && (this._clone(g, x), C.floating.addClass("fixedHeader-locked"), C.floatingParent.css({
          position: "absolute",
          top: B.tbodyTop,
          left: B.left + "px"
        }), c(B.width));
      t && t !== document.activeElement && setTimeout(function() {
        t.focus();
      }, 10), this.s.scrollLeft.header = -1, this.s.scrollLeft.footer = -1, this.s[g + "Mode"] = s;
    }
  },
  /**
   * Cache the positional information that is required for the mode
   * calculations that FixedHeader performs.
   *
   * @private
   */
  _positions: function() {
    var s = this.s.dt, g = s.table(), x = this.s.position, C = this.dom, B = fr(g.node()), O = this._scrollEnabled(), c = fr(s.table().header()), d = fr(s.table().footer()), t = C.tbody, o = B.parent();
    x.visible = B.is(":visible"), x.width = B.outerWidth(), x.left = B.offset().left, x.theadTop = c.offset().top, x.tbodyTop = O ? o.offset().top : t.offset().top, x.tbodyHeight = O ? o.outerHeight() : t.outerHeight(), x.theadHeight = c.outerHeight(), x.theadBottom = x.theadTop + x.theadHeight, x.tfootTop = x.tbodyTop + x.tbodyHeight, d.length ? (x.tfootBottom = x.tfootTop + d.outerHeight(), x.tfootHeight = d.outerHeight()) : (x.tfootBottom = x.tfootTop, x.tfootHeight = 0);
  },
  /**
   * Mode calculation - determine what mode the fixed items should be placed
   * into.
   *
   * @param  {boolean} forceChange Force a redraw of the mode, even if already
   *     in that mode.
   * @private
   */
  _scroll: function(s) {
    if (!this.s.dt.settings()[0].bDestroying) {
      var g = this._scrollEnabled(), x = fr(this.s.dt.table().node()).parent(), C = x.offset(), B = x.outerHeight(), O = fr(document).scrollLeft(), c = fr(document).scrollTop(), d = fr(window).height(), t = d + c, o = this.s.position, r, n, i = g ? C.top : o.tbodyTop, f = g ? C.left : o.left, l = g ? C.top + B : o.tfootTop, u = g ? x.outerWidth() : o.tbodyWidth;
      this.c.header && (this.s.enable ? !o.visible || c + this.c.headerOffset + o.theadHeight <= i ? r = "in-place" : /* The scrolling plus the header offset plus the height of the header is lower than the top of the body */ c + this.c.headerOffset + o.theadHeight > i && // And the scrolling at the top plus the header offset is above the bottom of the body
      c + this.c.headerOffset + o.theadHeight < l ? (r = "in", c + this.c.headerOffset + o.theadHeight > l || this.dom.header.floatingParent === void 0 ? s = !0 : this.dom.header.floatingParent.css({
        top: this.c.headerOffset,
        position: "fixed"
      }).children().eq(0).append(this.dom.header.floating)) : r = "below" : r = "in-place", (s || r !== this.s.headerMode) && this._modeChange(r, "header", s), this._horizontal("header", O));
      var h = {
        offset: { top: 0, left: 0 },
        height: 0
      }, a = {
        offset: { top: 0, left: 0 },
        height: 0
      };
      if (this.c.footer && this.dom.tfoot.length && this.dom.tfoot.find("th, td").length) {
        this.s.enable ? !o.visible || o.tfootBottom + this.c.footerOffset <= t ? n = "in-place" : l + o.tfootHeight + this.c.footerOffset > t && i + this.c.footerOffset < t ? (n = "in", s = !0) : n = "above" : n = "in-place", (s || n !== this.s.footerMode) && this._modeChange(n, "footer", s), this._horizontal("footer", O);
        var v = function(m) {
          return {
            offset: m.offset(),
            height: m.outerHeight()
          };
        };
        if (h = this.dom.header.floating ? v(this.dom.header.floating) : v(this.dom.thead), a = this.dom.footer.floating ? v(this.dom.footer.floating) : v(this.dom.tfoot), g && a.offset.top > c) {
          var y = c - C.top, p = t + // If the gap between the top of the scrollbody and the window is more than
          //  the height of the header then the top of the table is still visible so add that gap
          // Doing this has effectively calculated the height from the top of the table to the bottom of the current page
          (y > -h.height ? y : 0) - // Take from that
          // The top of the header plus
          (h.offset.top + // The header height if the standard header is present
          (y < -h.height ? h.height : 0) + // And the height of the footer
          a.height);
          p < 0 && (p = 0), x.outerHeight(p), Math.round(x.outerHeight()) >= Math.round(p) ? fr(this.dom.tfoot.parent()).addClass("fixedHeader-floating") : fr(this.dom.tfoot.parent()).removeClass(
            "fixedHeader-floating"
          );
        }
      }
      if (this.dom.header.floating && this.dom.header.floatingParent.css("left", f - O), this.dom.footer.floating && this.dom.footer.floatingParent.css("left", f - O), this.s.dt.settings()[0]._fixedColumns !== void 0) {
        var e = function(m, w, D) {
          if (D === void 0) {
            var I = fr(
              "div.dtfc-" + m + "-" + w + "-blocker"
            );
            D = I.length === 0 ? null : I.clone().css("z-index", 1);
          }
          return D !== null && (r === "in" || r === "below" ? D.appendTo("body").css({
            top: w === "top" ? h.offset.top : a.offset.top,
            left: m === "right" ? f + u - D.width() : f
          }) : D.detach()), D;
        };
        this.dom.header.rightBlocker = e(
          "right",
          "top",
          this.dom.header.rightBlocker
        ), this.dom.header.leftBlocker = e(
          "left",
          "top",
          this.dom.header.leftBlocker
        ), this.dom.footer.rightBlocker = e(
          "right",
          "bottom",
          this.dom.footer.rightBlocker
        ), this.dom.footer.leftBlocker = e(
          "left",
          "bottom",
          this.dom.footer.leftBlocker
        );
      }
    }
  },
  /**
   * Function to check if scrolling is enabled on the table or not
   * @returns Boolean value indicating if scrolling on the table is enabled or not
   */
  _scrollEnabled: function() {
    var s = this.s.dt.settings()[0].oScroll;
    return s.sY !== "" || s.sX !== "";
  }
});
La.version = "4.0.0";
La.defaults = {
  header: !0,
  footer: !1,
  headerOffset: 0,
  footerOffset: 0
};
fr.fn.dataTable.FixedHeader = La;
fr.fn.DataTable.FixedHeader = La;
fr(document).on("init.dt.dtfh", function(s, g, x) {
  if (s.namespace === "dt") {
    var C = g.oInit.fixedHeader, B = ge.defaults.fixedHeader;
    if ((C || B) && !g._fixedHeader) {
      var O = fr.extend({}, B, C);
      C !== !1 && new La(g, O);
    }
  }
});
ge.Api.register("fixedHeader()", function() {
});
ge.Api.register("fixedHeader.adjust()", function() {
  return this.iterator("table", function(s) {
    var g = s._fixedHeader;
    g && g.update();
  });
});
ge.Api.register("fixedHeader.enable()", function(s) {
  return this.iterator("table", function(g) {
    var x = g._fixedHeader;
    s = s !== void 0 ? s : !0, x && s !== x.enabled() && x.enable(s);
  });
});
ge.Api.register("fixedHeader.enabled()", function() {
  if (this.context.length) {
    var s = this.context[0]._fixedHeader;
    if (s)
      return s.enabled();
  }
  return !1;
});
ge.Api.register("fixedHeader.disable()", function() {
  return this.iterator("table", function(s) {
    var g = s._fixedHeader;
    g && g.enabled() && g.enable(!1);
  });
});
fr.each(["header", "footer"], function(s, g) {
  ge.Api.register("fixedHeader." + g + "Offset()", function(x) {
    var C = this.context;
    return x === void 0 ? C.length && C[0]._fixedHeader ? C[0]._fixedHeader[g + "Offset"]() : void 0 : this.iterator("table", function(B) {
      var O = B._fixedHeader;
      O && O[g + "Offset"](x);
    });
  });
});
var zi = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
function Td(s) {
  return s && s.__esModule && Object.prototype.hasOwnProperty.call(s, "default") ? s.default : s;
}
function So(s) {
  throw new Error('Could not dynamically require "' + s + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}
var Nf = { exports: {} };
/*!

JSZip v3.10.1 - A JavaScript class for generating and reading zip files
<http://stuartk.com/jszip>

(c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.

JSZip uses the library pako released under the MIT license :
https://github.com/nodeca/pako/blob/main/LICENSE
*/
(function(s, g) {
  (function(x) {
    s.exports = x();
  })(function() {
    return function x(C, B, O) {
      function c(o, r) {
        if (!B[o]) {
          if (!C[o]) {
            var n = typeof So == "function" && So;
            if (!r && n)
              return n(o, !0);
            if (d)
              return d(o, !0);
            var i = new Error("Cannot find module '" + o + "'");
            throw i.code = "MODULE_NOT_FOUND", i;
          }
          var f = B[o] = { exports: {} };
          C[o][0].call(f.exports, function(l) {
            var u = C[o][1][l];
            return c(u || l);
          }, f, f.exports, x, C, B, O);
        }
        return B[o].exports;
      }
      for (var d = typeof So == "function" && So, t = 0; t < O.length; t++)
        c(O[t]);
      return c;
    }({ 1: [function(x, C, B) {
      var O = x("./utils"), c = x("./support"), d = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
      B.encode = function(t) {
        for (var o, r, n, i, f, l, u, h = [], a = 0, v = t.length, y = v, p = O.getTypeOf(t) !== "string"; a < t.length; )
          y = v - a, n = p ? (o = t[a++], r = a < v ? t[a++] : 0, a < v ? t[a++] : 0) : (o = t.charCodeAt(a++), r = a < v ? t.charCodeAt(a++) : 0, a < v ? t.charCodeAt(a++) : 0), i = o >> 2, f = (3 & o) << 4 | r >> 4, l = 1 < y ? (15 & r) << 2 | n >> 6 : 64, u = 2 < y ? 63 & n : 64, h.push(d.charAt(i) + d.charAt(f) + d.charAt(l) + d.charAt(u));
        return h.join("");
      }, B.decode = function(t) {
        var o, r, n, i, f, l, u = 0, h = 0, a = "data:";
        if (t.substr(0, a.length) === a)
          throw new Error("Invalid base64 input, it looks like a data url.");
        var v, y = 3 * (t = t.replace(/[^A-Za-z0-9+/=]/g, "")).length / 4;
        if (t.charAt(t.length - 1) === d.charAt(64) && y--, t.charAt(t.length - 2) === d.charAt(64) && y--, y % 1 != 0)
          throw new Error("Invalid base64 input, bad content length.");
        for (v = c.uint8array ? new Uint8Array(0 | y) : new Array(0 | y); u < t.length; )
          o = d.indexOf(t.charAt(u++)) << 2 | (i = d.indexOf(t.charAt(u++))) >> 4, r = (15 & i) << 4 | (f = d.indexOf(t.charAt(u++))) >> 2, n = (3 & f) << 6 | (l = d.indexOf(t.charAt(u++))), v[h++] = o, f !== 64 && (v[h++] = r), l !== 64 && (v[h++] = n);
        return v;
      };
    }, { "./support": 30, "./utils": 32 }], 2: [function(x, C, B) {
      var O = x("./external"), c = x("./stream/DataWorker"), d = x("./stream/Crc32Probe"), t = x("./stream/DataLengthProbe");
      function o(r, n, i, f, l) {
        this.compressedSize = r, this.uncompressedSize = n, this.crc32 = i, this.compression = f, this.compressedContent = l;
      }
      o.prototype = { getContentWorker: function() {
        var r = new c(O.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new t("data_length")), n = this;
        return r.on("end", function() {
          if (this.streamInfo.data_length !== n.uncompressedSize)
            throw new Error("Bug : uncompressed data size mismatch");
        }), r;
      }, getCompressedWorker: function() {
        return new c(O.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression);
      } }, o.createWorkerFrom = function(r, n, i) {
        return r.pipe(new d()).pipe(new t("uncompressedSize")).pipe(n.compressWorker(i)).pipe(new t("compressedSize")).withStreamInfo("compression", n);
      }, C.exports = o;
    }, { "./external": 6, "./stream/Crc32Probe": 25, "./stream/DataLengthProbe": 26, "./stream/DataWorker": 27 }], 3: [function(x, C, B) {
      var O = x("./stream/GenericWorker");
      B.STORE = { magic: "\0\0", compressWorker: function() {
        return new O("STORE compression");
      }, uncompressWorker: function() {
        return new O("STORE decompression");
      } }, B.DEFLATE = x("./flate");
    }, { "./flate": 7, "./stream/GenericWorker": 28 }], 4: [function(x, C, B) {
      var O = x("./utils"), c = function() {
        for (var d, t = [], o = 0; o < 256; o++) {
          d = o;
          for (var r = 0; r < 8; r++)
            d = 1 & d ? 3988292384 ^ d >>> 1 : d >>> 1;
          t[o] = d;
        }
        return t;
      }();
      C.exports = function(d, t) {
        return d !== void 0 && d.length ? O.getTypeOf(d) !== "string" ? function(o, r, n, i) {
          var f = c, l = i + n;
          o ^= -1;
          for (var u = i; u < l; u++)
            o = o >>> 8 ^ f[255 & (o ^ r[u])];
          return -1 ^ o;
        }(0 | t, d, d.length, 0) : function(o, r, n, i) {
          var f = c, l = i + n;
          o ^= -1;
          for (var u = i; u < l; u++)
            o = o >>> 8 ^ f[255 & (o ^ r.charCodeAt(u))];
          return -1 ^ o;
        }(0 | t, d, d.length, 0) : 0;
      };
    }, { "./utils": 32 }], 5: [function(x, C, B) {
      B.base64 = !1, B.binary = !1, B.dir = !1, B.createFolders = !0, B.date = null, B.compression = null, B.compressionOptions = null, B.comment = null, B.unixPermissions = null, B.dosPermissions = null;
    }, {}], 6: [function(x, C, B) {
      var O = null;
      O = typeof Promise < "u" ? Promise : x("lie"), C.exports = { Promise: O };
    }, { lie: 37 }], 7: [function(x, C, B) {
      var O = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Uint32Array < "u", c = x("pako"), d = x("./utils"), t = x("./stream/GenericWorker"), o = O ? "uint8array" : "array";
      function r(n, i) {
        t.call(this, "FlateWorker/" + n), this._pako = null, this._pakoAction = n, this._pakoOptions = i, this.meta = {};
      }
      B.magic = "\b\0", d.inherits(r, t), r.prototype.processChunk = function(n) {
        this.meta = n.meta, this._pako === null && this._createPako(), this._pako.push(d.transformTo(o, n.data), !1);
      }, r.prototype.flush = function() {
        t.prototype.flush.call(this), this._pako === null && this._createPako(), this._pako.push([], !0);
      }, r.prototype.cleanUp = function() {
        t.prototype.cleanUp.call(this), this._pako = null;
      }, r.prototype._createPako = function() {
        this._pako = new c[this._pakoAction]({ raw: !0, level: this._pakoOptions.level || -1 });
        var n = this;
        this._pako.onData = function(i) {
          n.push({ data: i, meta: n.meta });
        };
      }, B.compressWorker = function(n) {
        return new r("Deflate", n);
      }, B.uncompressWorker = function() {
        return new r("Inflate", {});
      };
    }, { "./stream/GenericWorker": 28, "./utils": 32, pako: 38 }], 8: [function(x, C, B) {
      function O(f, l) {
        var u, h = "";
        for (u = 0; u < l; u++)
          h += String.fromCharCode(255 & f), f >>>= 8;
        return h;
      }
      function c(f, l, u, h, a, v) {
        var y, p, e = f.file, m = f.compression, w = v !== o.utf8encode, D = d.transformTo("string", v(e.name)), I = d.transformTo("string", o.utf8encode(e.name)), E = e.comment, T = d.transformTo("string", v(E)), A = d.transformTo("string", o.utf8encode(E)), F = I.length !== e.name.length, b = A.length !== E.length, R = "", N = "", U = "", W = e.dir, J = e.date, ht = { crc32: 0, compressedSize: 0, uncompressedSize: 0 };
        l && !u || (ht.crc32 = f.crc32, ht.compressedSize = f.compressedSize, ht.uncompressedSize = f.uncompressedSize);
        var K = 0;
        l && (K |= 8), w || !F && !b || (K |= 2048);
        var nt = 0, xt = 0;
        W && (nt |= 16), a === "UNIX" ? (xt = 798, nt |= function(Tt, It) {
          var Lt = Tt;
          return Tt || (Lt = It ? 16893 : 33204), (65535 & Lt) << 16;
        }(e.unixPermissions, W)) : (xt = 20, nt |= function(Tt) {
          return 63 & (Tt || 0);
        }(e.dosPermissions)), y = J.getUTCHours(), y <<= 6, y |= J.getUTCMinutes(), y <<= 5, y |= J.getUTCSeconds() / 2, p = J.getUTCFullYear() - 1980, p <<= 4, p |= J.getUTCMonth() + 1, p <<= 5, p |= J.getUTCDate(), F && (N = O(1, 1) + O(r(D), 4) + I, R += "up" + O(N.length, 2) + N), b && (U = O(1, 1) + O(r(T), 4) + A, R += "uc" + O(U.length, 2) + U);
        var bt = "";
        return bt += `
\0`, bt += O(K, 2), bt += m.magic, bt += O(y, 2), bt += O(p, 2), bt += O(ht.crc32, 4), bt += O(ht.compressedSize, 4), bt += O(ht.uncompressedSize, 4), bt += O(D.length, 2), bt += O(R.length, 2), { fileRecord: n.LOCAL_FILE_HEADER + bt + D + R, dirRecord: n.CENTRAL_FILE_HEADER + O(xt, 2) + bt + O(T.length, 2) + "\0\0\0\0" + O(nt, 4) + O(h, 4) + D + R + T };
      }
      var d = x("../utils"), t = x("../stream/GenericWorker"), o = x("../utf8"), r = x("../crc32"), n = x("../signature");
      function i(f, l, u, h) {
        t.call(this, "ZipFileWorker"), this.bytesWritten = 0, this.zipComment = l, this.zipPlatform = u, this.encodeFileName = h, this.streamFiles = f, this.accumulate = !1, this.contentBuffer = [], this.dirRecords = [], this.currentSourceOffset = 0, this.entriesCount = 0, this.currentFile = null, this._sources = [];
      }
      d.inherits(i, t), i.prototype.push = function(f) {
        var l = f.meta.percent || 0, u = this.entriesCount, h = this._sources.length;
        this.accumulate ? this.contentBuffer.push(f) : (this.bytesWritten += f.data.length, t.prototype.push.call(this, { data: f.data, meta: { currentFile: this.currentFile, percent: u ? (l + 100 * (u - h - 1)) / u : 100 } }));
      }, i.prototype.openedSource = function(f) {
        this.currentSourceOffset = this.bytesWritten, this.currentFile = f.file.name;
        var l = this.streamFiles && !f.file.dir;
        if (l) {
          var u = c(f, l, !1, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
          this.push({ data: u.fileRecord, meta: { percent: 0 } });
        } else
          this.accumulate = !0;
      }, i.prototype.closedSource = function(f) {
        this.accumulate = !1;
        var l = this.streamFiles && !f.file.dir, u = c(f, l, !0, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
        if (this.dirRecords.push(u.dirRecord), l)
          this.push({ data: function(h) {
            return n.DATA_DESCRIPTOR + O(h.crc32, 4) + O(h.compressedSize, 4) + O(h.uncompressedSize, 4);
          }(f), meta: { percent: 100 } });
        else
          for (this.push({ data: u.fileRecord, meta: { percent: 0 } }); this.contentBuffer.length; )
            this.push(this.contentBuffer.shift());
        this.currentFile = null;
      }, i.prototype.flush = function() {
        for (var f = this.bytesWritten, l = 0; l < this.dirRecords.length; l++)
          this.push({ data: this.dirRecords[l], meta: { percent: 100 } });
        var u = this.bytesWritten - f, h = function(a, v, y, p, e) {
          var m = d.transformTo("string", e(p));
          return n.CENTRAL_DIRECTORY_END + "\0\0\0\0" + O(a, 2) + O(a, 2) + O(v, 4) + O(y, 4) + O(m.length, 2) + m;
        }(this.dirRecords.length, u, f, this.zipComment, this.encodeFileName);
        this.push({ data: h, meta: { percent: 100 } });
      }, i.prototype.prepareNextSource = function() {
        this.previous = this._sources.shift(), this.openedSource(this.previous.streamInfo), this.isPaused ? this.previous.pause() : this.previous.resume();
      }, i.prototype.registerPrevious = function(f) {
        this._sources.push(f);
        var l = this;
        return f.on("data", function(u) {
          l.processChunk(u);
        }), f.on("end", function() {
          l.closedSource(l.previous.streamInfo), l._sources.length ? l.prepareNextSource() : l.end();
        }), f.on("error", function(u) {
          l.error(u);
        }), this;
      }, i.prototype.resume = function() {
        return !!t.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(), !0) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(), !0));
      }, i.prototype.error = function(f) {
        var l = this._sources;
        if (!t.prototype.error.call(this, f))
          return !1;
        for (var u = 0; u < l.length; u++)
          try {
            l[u].error(f);
          } catch {
          }
        return !0;
      }, i.prototype.lock = function() {
        t.prototype.lock.call(this);
        for (var f = this._sources, l = 0; l < f.length; l++)
          f[l].lock();
      }, C.exports = i;
    }, { "../crc32": 4, "../signature": 23, "../stream/GenericWorker": 28, "../utf8": 31, "../utils": 32 }], 9: [function(x, C, B) {
      var O = x("../compressions"), c = x("./ZipFileWorker");
      B.generateWorker = function(d, t, o) {
        var r = new c(t.streamFiles, o, t.platform, t.encodeFileName), n = 0;
        try {
          d.forEach(function(i, f) {
            n++;
            var l = function(v, y) {
              var p = v || y, e = O[p];
              if (!e)
                throw new Error(p + " is not a valid compression method !");
              return e;
            }(f.options.compression, t.compression), u = f.options.compressionOptions || t.compressionOptions || {}, h = f.dir, a = f.date;
            f._compressWorker(l, u).withStreamInfo("file", { name: i, dir: h, date: a, comment: f.comment || "", unixPermissions: f.unixPermissions, dosPermissions: f.dosPermissions }).pipe(r);
          }), r.entriesCount = n;
        } catch (i) {
          r.error(i);
        }
        return r;
      };
    }, { "../compressions": 3, "./ZipFileWorker": 8 }], 10: [function(x, C, B) {
      function O() {
        if (!(this instanceof O))
          return new O();
        if (arguments.length)
          throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
        this.files = /* @__PURE__ */ Object.create(null), this.comment = null, this.root = "", this.clone = function() {
          var c = new O();
          for (var d in this)
            typeof this[d] != "function" && (c[d] = this[d]);
          return c;
        };
      }
      (O.prototype = x("./object")).loadAsync = x("./load"), O.support = x("./support"), O.defaults = x("./defaults"), O.version = "3.10.1", O.loadAsync = function(c, d) {
        return new O().loadAsync(c, d);
      }, O.external = x("./external"), C.exports = O;
    }, { "./defaults": 5, "./external": 6, "./load": 11, "./object": 15, "./support": 30 }], 11: [function(x, C, B) {
      var O = x("./utils"), c = x("./external"), d = x("./utf8"), t = x("./zipEntries"), o = x("./stream/Crc32Probe"), r = x("./nodejsUtils");
      function n(i) {
        return new c.Promise(function(f, l) {
          var u = i.decompressed.getContentWorker().pipe(new o());
          u.on("error", function(h) {
            l(h);
          }).on("end", function() {
            u.streamInfo.crc32 !== i.decompressed.crc32 ? l(new Error("Corrupted zip : CRC32 mismatch")) : f();
          }).resume();
        });
      }
      C.exports = function(i, f) {
        var l = this;
        return f = O.extend(f || {}, { base64: !1, checkCRC32: !1, optimizedBinaryString: !1, createFolders: !1, decodeFileName: d.utf8decode }), r.isNode && r.isStream(i) ? c.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")) : O.prepareContent("the loaded zip file", i, !0, f.optimizedBinaryString, f.base64).then(function(u) {
          var h = new t(f);
          return h.load(u), h;
        }).then(function(u) {
          var h = [c.Promise.resolve(u)], a = u.files;
          if (f.checkCRC32)
            for (var v = 0; v < a.length; v++)
              h.push(n(a[v]));
          return c.Promise.all(h);
        }).then(function(u) {
          for (var h = u.shift(), a = h.files, v = 0; v < a.length; v++) {
            var y = a[v], p = y.fileNameStr, e = O.resolve(y.fileNameStr);
            l.file(e, y.decompressed, { binary: !0, optimizedBinaryString: !0, date: y.date, dir: y.dir, comment: y.fileCommentStr.length ? y.fileCommentStr : null, unixPermissions: y.unixPermissions, dosPermissions: y.dosPermissions, createFolders: f.createFolders }), y.dir || (l.file(e).unsafeOriginalName = p);
          }
          return h.zipComment.length && (l.comment = h.zipComment), l;
        });
      };
    }, { "./external": 6, "./nodejsUtils": 14, "./stream/Crc32Probe": 25, "./utf8": 31, "./utils": 32, "./zipEntries": 33 }], 12: [function(x, C, B) {
      var O = x("../utils"), c = x("../stream/GenericWorker");
      function d(t, o) {
        c.call(this, "Nodejs stream input adapter for " + t), this._upstreamEnded = !1, this._bindStream(o);
      }
      O.inherits(d, c), d.prototype._bindStream = function(t) {
        var o = this;
        (this._stream = t).pause(), t.on("data", function(r) {
          o.push({ data: r, meta: { percent: 0 } });
        }).on("error", function(r) {
          o.isPaused ? this.generatedError = r : o.error(r);
        }).on("end", function() {
          o.isPaused ? o._upstreamEnded = !0 : o.end();
        });
      }, d.prototype.pause = function() {
        return !!c.prototype.pause.call(this) && (this._stream.pause(), !0);
      }, d.prototype.resume = function() {
        return !!c.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), !0);
      }, C.exports = d;
    }, { "../stream/GenericWorker": 28, "../utils": 32 }], 13: [function(x, C, B) {
      var O = x("readable-stream").Readable;
      function c(d, t, o) {
        O.call(this, t), this._helper = d;
        var r = this;
        d.on("data", function(n, i) {
          r.push(n) || r._helper.pause(), o && o(i);
        }).on("error", function(n) {
          r.emit("error", n);
        }).on("end", function() {
          r.push(null);
        });
      }
      x("../utils").inherits(c, O), c.prototype._read = function() {
        this._helper.resume();
      }, C.exports = c;
    }, { "../utils": 32, "readable-stream": 16 }], 14: [function(x, C, B) {
      C.exports = { isNode: typeof Buffer < "u", newBufferFrom: function(O, c) {
        if (Buffer.from && Buffer.from !== Uint8Array.from)
          return Buffer.from(O, c);
        if (typeof O == "number")
          throw new Error('The "data" argument must not be a number');
        return new Buffer(O, c);
      }, allocBuffer: function(O) {
        if (Buffer.alloc)
          return Buffer.alloc(O);
        var c = new Buffer(O);
        return c.fill(0), c;
      }, isBuffer: function(O) {
        return Buffer.isBuffer(O);
      }, isStream: function(O) {
        return O && typeof O.on == "function" && typeof O.pause == "function" && typeof O.resume == "function";
      } };
    }, {}], 15: [function(x, C, B) {
      function O(e, m, w) {
        var D, I = d.getTypeOf(m), E = d.extend(w || {}, r);
        E.date = E.date || /* @__PURE__ */ new Date(), E.compression !== null && (E.compression = E.compression.toUpperCase()), typeof E.unixPermissions == "string" && (E.unixPermissions = parseInt(E.unixPermissions, 8)), E.unixPermissions && 16384 & E.unixPermissions && (E.dir = !0), E.dosPermissions && 16 & E.dosPermissions && (E.dir = !0), E.dir && (e = a(e)), E.createFolders && (D = h(e)) && v.call(this, D, !0);
        var T = I === "string" && E.binary === !1 && E.base64 === !1;
        w && w.binary !== void 0 || (E.binary = !T), (m instanceof n && m.uncompressedSize === 0 || E.dir || !m || m.length === 0) && (E.base64 = !1, E.binary = !0, m = "", E.compression = "STORE", I = "string");
        var A = null;
        A = m instanceof n || m instanceof t ? m : l.isNode && l.isStream(m) ? new u(e, m) : d.prepareContent(e, m, E.binary, E.optimizedBinaryString, E.base64);
        var F = new i(e, A, E);
        this.files[e] = F;
      }
      var c = x("./utf8"), d = x("./utils"), t = x("./stream/GenericWorker"), o = x("./stream/StreamHelper"), r = x("./defaults"), n = x("./compressedObject"), i = x("./zipObject"), f = x("./generate"), l = x("./nodejsUtils"), u = x("./nodejs/NodejsStreamInputAdapter"), h = function(e) {
        e.slice(-1) === "/" && (e = e.substring(0, e.length - 1));
        var m = e.lastIndexOf("/");
        return 0 < m ? e.substring(0, m) : "";
      }, a = function(e) {
        return e.slice(-1) !== "/" && (e += "/"), e;
      }, v = function(e, m) {
        return m = m !== void 0 ? m : r.createFolders, e = a(e), this.files[e] || O.call(this, e, null, { dir: !0, createFolders: m }), this.files[e];
      };
      function y(e) {
        return Object.prototype.toString.call(e) === "[object RegExp]";
      }
      var p = { load: function() {
        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
      }, forEach: function(e) {
        var m, w, D;
        for (m in this.files)
          D = this.files[m], (w = m.slice(this.root.length, m.length)) && m.slice(0, this.root.length) === this.root && e(w, D);
      }, filter: function(e) {
        var m = [];
        return this.forEach(function(w, D) {
          e(w, D) && m.push(D);
        }), m;
      }, file: function(e, m, w) {
        if (arguments.length !== 1)
          return e = this.root + e, O.call(this, e, m, w), this;
        if (y(e)) {
          var D = e;
          return this.filter(function(E, T) {
            return !T.dir && D.test(E);
          });
        }
        var I = this.files[this.root + e];
        return I && !I.dir ? I : null;
      }, folder: function(e) {
        if (!e)
          return this;
        if (y(e))
          return this.filter(function(I, E) {
            return E.dir && e.test(I);
          });
        var m = this.root + e, w = v.call(this, m), D = this.clone();
        return D.root = w.name, D;
      }, remove: function(e) {
        e = this.root + e;
        var m = this.files[e];
        if (m || (e.slice(-1) !== "/" && (e += "/"), m = this.files[e]), m && !m.dir)
          delete this.files[e];
        else
          for (var w = this.filter(function(I, E) {
            return E.name.slice(0, e.length) === e;
          }), D = 0; D < w.length; D++)
            delete this.files[w[D].name];
        return this;
      }, generate: function() {
        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
      }, generateInternalStream: function(e) {
        var m, w = {};
        try {
          if ((w = d.extend(e || {}, { streamFiles: !1, compression: "STORE", compressionOptions: null, type: "", platform: "DOS", comment: null, mimeType: "application/zip", encodeFileName: c.utf8encode })).type = w.type.toLowerCase(), w.compression = w.compression.toUpperCase(), w.type === "binarystring" && (w.type = "string"), !w.type)
            throw new Error("No output type specified.");
          d.checkSupport(w.type), w.platform !== "darwin" && w.platform !== "freebsd" && w.platform !== "linux" && w.platform !== "sunos" || (w.platform = "UNIX"), w.platform === "win32" && (w.platform = "DOS");
          var D = w.comment || this.comment || "";
          m = f.generateWorker(this, w, D);
        } catch (I) {
          (m = new t("error")).error(I);
        }
        return new o(m, w.type || "string", w.mimeType);
      }, generateAsync: function(e, m) {
        return this.generateInternalStream(e).accumulate(m);
      }, generateNodeStream: function(e, m) {
        return (e = e || {}).type || (e.type = "nodebuffer"), this.generateInternalStream(e).toNodejsStream(m);
      } };
      C.exports = p;
    }, { "./compressedObject": 2, "./defaults": 5, "./generate": 9, "./nodejs/NodejsStreamInputAdapter": 12, "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31, "./utils": 32, "./zipObject": 35 }], 16: [function(x, C, B) {
      C.exports = x("stream");
    }, { stream: void 0 }], 17: [function(x, C, B) {
      var O = x("./DataReader");
      function c(d) {
        O.call(this, d);
        for (var t = 0; t < this.data.length; t++)
          d[t] = 255 & d[t];
      }
      x("../utils").inherits(c, O), c.prototype.byteAt = function(d) {
        return this.data[this.zero + d];
      }, c.prototype.lastIndexOfSignature = function(d) {
        for (var t = d.charCodeAt(0), o = d.charCodeAt(1), r = d.charCodeAt(2), n = d.charCodeAt(3), i = this.length - 4; 0 <= i; --i)
          if (this.data[i] === t && this.data[i + 1] === o && this.data[i + 2] === r && this.data[i + 3] === n)
            return i - this.zero;
        return -1;
      }, c.prototype.readAndCheckSignature = function(d) {
        var t = d.charCodeAt(0), o = d.charCodeAt(1), r = d.charCodeAt(2), n = d.charCodeAt(3), i = this.readData(4);
        return t === i[0] && o === i[1] && r === i[2] && n === i[3];
      }, c.prototype.readData = function(d) {
        if (this.checkOffset(d), d === 0)
          return [];
        var t = this.data.slice(this.zero + this.index, this.zero + this.index + d);
        return this.index += d, t;
      }, C.exports = c;
    }, { "../utils": 32, "./DataReader": 18 }], 18: [function(x, C, B) {
      var O = x("../utils");
      function c(d) {
        this.data = d, this.length = d.length, this.index = 0, this.zero = 0;
      }
      c.prototype = { checkOffset: function(d) {
        this.checkIndex(this.index + d);
      }, checkIndex: function(d) {
        if (this.length < this.zero + d || d < 0)
          throw new Error("End of data reached (data length = " + this.length + ", asked index = " + d + "). Corrupted zip ?");
      }, setIndex: function(d) {
        this.checkIndex(d), this.index = d;
      }, skip: function(d) {
        this.setIndex(this.index + d);
      }, byteAt: function() {
      }, readInt: function(d) {
        var t, o = 0;
        for (this.checkOffset(d), t = this.index + d - 1; t >= this.index; t--)
          o = (o << 8) + this.byteAt(t);
        return this.index += d, o;
      }, readString: function(d) {
        return O.transformTo("string", this.readData(d));
      }, readData: function() {
      }, lastIndexOfSignature: function() {
      }, readAndCheckSignature: function() {
      }, readDate: function() {
        var d = this.readInt(4);
        return new Date(Date.UTC(1980 + (d >> 25 & 127), (d >> 21 & 15) - 1, d >> 16 & 31, d >> 11 & 31, d >> 5 & 63, (31 & d) << 1));
      } }, C.exports = c;
    }, { "../utils": 32 }], 19: [function(x, C, B) {
      var O = x("./Uint8ArrayReader");
      function c(d) {
        O.call(this, d);
      }
      x("../utils").inherits(c, O), c.prototype.readData = function(d) {
        this.checkOffset(d);
        var t = this.data.slice(this.zero + this.index, this.zero + this.index + d);
        return this.index += d, t;
      }, C.exports = c;
    }, { "../utils": 32, "./Uint8ArrayReader": 21 }], 20: [function(x, C, B) {
      var O = x("./DataReader");
      function c(d) {
        O.call(this, d);
      }
      x("../utils").inherits(c, O), c.prototype.byteAt = function(d) {
        return this.data.charCodeAt(this.zero + d);
      }, c.prototype.lastIndexOfSignature = function(d) {
        return this.data.lastIndexOf(d) - this.zero;
      }, c.prototype.readAndCheckSignature = function(d) {
        return d === this.readData(4);
      }, c.prototype.readData = function(d) {
        this.checkOffset(d);
        var t = this.data.slice(this.zero + this.index, this.zero + this.index + d);
        return this.index += d, t;
      }, C.exports = c;
    }, { "../utils": 32, "./DataReader": 18 }], 21: [function(x, C, B) {
      var O = x("./ArrayReader");
      function c(d) {
        O.call(this, d);
      }
      x("../utils").inherits(c, O), c.prototype.readData = function(d) {
        if (this.checkOffset(d), d === 0)
          return new Uint8Array(0);
        var t = this.data.subarray(this.zero + this.index, this.zero + this.index + d);
        return this.index += d, t;
      }, C.exports = c;
    }, { "../utils": 32, "./ArrayReader": 17 }], 22: [function(x, C, B) {
      var O = x("../utils"), c = x("../support"), d = x("./ArrayReader"), t = x("./StringReader"), o = x("./NodeBufferReader"), r = x("./Uint8ArrayReader");
      C.exports = function(n) {
        var i = O.getTypeOf(n);
        return O.checkSupport(i), i !== "string" || c.uint8array ? i === "nodebuffer" ? new o(n) : c.uint8array ? new r(O.transformTo("uint8array", n)) : new d(O.transformTo("array", n)) : new t(n);
      };
    }, { "../support": 30, "../utils": 32, "./ArrayReader": 17, "./NodeBufferReader": 19, "./StringReader": 20, "./Uint8ArrayReader": 21 }], 23: [function(x, C, B) {
      B.LOCAL_FILE_HEADER = "PK", B.CENTRAL_FILE_HEADER = "PK", B.CENTRAL_DIRECTORY_END = "PK", B.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x07", B.ZIP64_CENTRAL_DIRECTORY_END = "PK", B.DATA_DESCRIPTOR = "PK\x07\b";
    }, {}], 24: [function(x, C, B) {
      var O = x("./GenericWorker"), c = x("../utils");
      function d(t) {
        O.call(this, "ConvertWorker to " + t), this.destType = t;
      }
      c.inherits(d, O), d.prototype.processChunk = function(t) {
        this.push({ data: c.transformTo(this.destType, t.data), meta: t.meta });
      }, C.exports = d;
    }, { "../utils": 32, "./GenericWorker": 28 }], 25: [function(x, C, B) {
      var O = x("./GenericWorker"), c = x("../crc32");
      function d() {
        O.call(this, "Crc32Probe"), this.withStreamInfo("crc32", 0);
      }
      x("../utils").inherits(d, O), d.prototype.processChunk = function(t) {
        this.streamInfo.crc32 = c(t.data, this.streamInfo.crc32 || 0), this.push(t);
      }, C.exports = d;
    }, { "../crc32": 4, "../utils": 32, "./GenericWorker": 28 }], 26: [function(x, C, B) {
      var O = x("../utils"), c = x("./GenericWorker");
      function d(t) {
        c.call(this, "DataLengthProbe for " + t), this.propName = t, this.withStreamInfo(t, 0);
      }
      O.inherits(d, c), d.prototype.processChunk = function(t) {
        if (t) {
          var o = this.streamInfo[this.propName] || 0;
          this.streamInfo[this.propName] = o + t.data.length;
        }
        c.prototype.processChunk.call(this, t);
      }, C.exports = d;
    }, { "../utils": 32, "./GenericWorker": 28 }], 27: [function(x, C, B) {
      var O = x("../utils"), c = x("./GenericWorker");
      function d(t) {
        c.call(this, "DataWorker");
        var o = this;
        this.dataIsReady = !1, this.index = 0, this.max = 0, this.data = null, this.type = "", this._tickScheduled = !1, t.then(function(r) {
          o.dataIsReady = !0, o.data = r, o.max = r && r.length || 0, o.type = O.getTypeOf(r), o.isPaused || o._tickAndRepeat();
        }, function(r) {
          o.error(r);
        });
      }
      O.inherits(d, c), d.prototype.cleanUp = function() {
        c.prototype.cleanUp.call(this), this.data = null;
      }, d.prototype.resume = function() {
        return !!c.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = !0, O.delay(this._tickAndRepeat, [], this)), !0);
      }, d.prototype._tickAndRepeat = function() {
        this._tickScheduled = !1, this.isPaused || this.isFinished || (this._tick(), this.isFinished || (O.delay(this._tickAndRepeat, [], this), this._tickScheduled = !0));
      }, d.prototype._tick = function() {
        if (this.isPaused || this.isFinished)
          return !1;
        var t = null, o = Math.min(this.max, this.index + 16384);
        if (this.index >= this.max)
          return this.end();
        switch (this.type) {
          case "string":
            t = this.data.substring(this.index, o);
            break;
          case "uint8array":
            t = this.data.subarray(this.index, o);
            break;
          case "array":
          case "nodebuffer":
            t = this.data.slice(this.index, o);
        }
        return this.index = o, this.push({ data: t, meta: { percent: this.max ? this.index / this.max * 100 : 0 } });
      }, C.exports = d;
    }, { "../utils": 32, "./GenericWorker": 28 }], 28: [function(x, C, B) {
      function O(c) {
        this.name = c || "default", this.streamInfo = {}, this.generatedError = null, this.extraStreamInfo = {}, this.isPaused = !0, this.isFinished = !1, this.isLocked = !1, this._listeners = { data: [], end: [], error: [] }, this.previous = null;
      }
      O.prototype = { push: function(c) {
        this.emit("data", c);
      }, end: function() {
        if (this.isFinished)
          return !1;
        this.flush();
        try {
          this.emit("end"), this.cleanUp(), this.isFinished = !0;
        } catch (c) {
          this.emit("error", c);
        }
        return !0;
      }, error: function(c) {
        return !this.isFinished && (this.isPaused ? this.generatedError = c : (this.isFinished = !0, this.emit("error", c), this.previous && this.previous.error(c), this.cleanUp()), !0);
      }, on: function(c, d) {
        return this._listeners[c].push(d), this;
      }, cleanUp: function() {
        this.streamInfo = this.generatedError = this.extraStreamInfo = null, this._listeners = [];
      }, emit: function(c, d) {
        if (this._listeners[c])
          for (var t = 0; t < this._listeners[c].length; t++)
            this._listeners[c][t].call(this, d);
      }, pipe: function(c) {
        return c.registerPrevious(this);
      }, registerPrevious: function(c) {
        if (this.isLocked)
          throw new Error("The stream '" + this + "' has already been used.");
        this.streamInfo = c.streamInfo, this.mergeStreamInfo(), this.previous = c;
        var d = this;
        return c.on("data", function(t) {
          d.processChunk(t);
        }), c.on("end", function() {
          d.end();
        }), c.on("error", function(t) {
          d.error(t);
        }), this;
      }, pause: function() {
        return !this.isPaused && !this.isFinished && (this.isPaused = !0, this.previous && this.previous.pause(), !0);
      }, resume: function() {
        if (!this.isPaused || this.isFinished)
          return !1;
        var c = this.isPaused = !1;
        return this.generatedError && (this.error(this.generatedError), c = !0), this.previous && this.previous.resume(), !c;
      }, flush: function() {
      }, processChunk: function(c) {
        this.push(c);
      }, withStreamInfo: function(c, d) {
        return this.extraStreamInfo[c] = d, this.mergeStreamInfo(), this;
      }, mergeStreamInfo: function() {
        for (var c in this.extraStreamInfo)
          Object.prototype.hasOwnProperty.call(this.extraStreamInfo, c) && (this.streamInfo[c] = this.extraStreamInfo[c]);
      }, lock: function() {
        if (this.isLocked)
          throw new Error("The stream '" + this + "' has already been used.");
        this.isLocked = !0, this.previous && this.previous.lock();
      }, toString: function() {
        var c = "Worker " + this.name;
        return this.previous ? this.previous + " -> " + c : c;
      } }, C.exports = O;
    }, {}], 29: [function(x, C, B) {
      var O = x("../utils"), c = x("./ConvertWorker"), d = x("./GenericWorker"), t = x("../base64"), o = x("../support"), r = x("../external"), n = null;
      if (o.nodestream)
        try {
          n = x("../nodejs/NodejsStreamOutputAdapter");
        } catch {
        }
      function i(l, u) {
        return new r.Promise(function(h, a) {
          var v = [], y = l._internalType, p = l._outputType, e = l._mimeType;
          l.on("data", function(m, w) {
            v.push(m), u && u(w);
          }).on("error", function(m) {
            v = [], a(m);
          }).on("end", function() {
            try {
              var m = function(w, D, I) {
                switch (w) {
                  case "blob":
                    return O.newBlob(O.transformTo("arraybuffer", D), I);
                  case "base64":
                    return t.encode(D);
                  default:
                    return O.transformTo(w, D);
                }
              }(p, function(w, D) {
                var I, E = 0, T = null, A = 0;
                for (I = 0; I < D.length; I++)
                  A += D[I].length;
                switch (w) {
                  case "string":
                    return D.join("");
                  case "array":
                    return Array.prototype.concat.apply([], D);
                  case "uint8array":
                    for (T = new Uint8Array(A), I = 0; I < D.length; I++)
                      T.set(D[I], E), E += D[I].length;
                    return T;
                  case "nodebuffer":
                    return Buffer.concat(D);
                  default:
                    throw new Error("concat : unsupported type '" + w + "'");
                }
              }(y, v), e);
              h(m);
            } catch (w) {
              a(w);
            }
            v = [];
          }).resume();
        });
      }
      function f(l, u, h) {
        var a = u;
        switch (u) {
          case "blob":
          case "arraybuffer":
            a = "uint8array";
            break;
          case "base64":
            a = "string";
        }
        try {
          this._internalType = a, this._outputType = u, this._mimeType = h, O.checkSupport(a), this._worker = l.pipe(new c(a)), l.lock();
        } catch (v) {
          this._worker = new d("error"), this._worker.error(v);
        }
      }
      f.prototype = { accumulate: function(l) {
        return i(this, l);
      }, on: function(l, u) {
        var h = this;
        return l === "data" ? this._worker.on(l, function(a) {
          u.call(h, a.data, a.meta);
        }) : this._worker.on(l, function() {
          O.delay(u, arguments, h);
        }), this;
      }, resume: function() {
        return O.delay(this._worker.resume, [], this._worker), this;
      }, pause: function() {
        return this._worker.pause(), this;
      }, toNodejsStream: function(l) {
        if (O.checkSupport("nodestream"), this._outputType !== "nodebuffer")
          throw new Error(this._outputType + " is not supported by this method");
        return new n(this, { objectMode: this._outputType !== "nodebuffer" }, l);
      } }, C.exports = f;
    }, { "../base64": 1, "../external": 6, "../nodejs/NodejsStreamOutputAdapter": 13, "../support": 30, "../utils": 32, "./ConvertWorker": 24, "./GenericWorker": 28 }], 30: [function(x, C, B) {
      if (B.base64 = !0, B.array = !0, B.string = !0, B.arraybuffer = typeof ArrayBuffer < "u" && typeof Uint8Array < "u", B.nodebuffer = typeof Buffer < "u", B.uint8array = typeof Uint8Array < "u", typeof ArrayBuffer > "u")
        B.blob = !1;
      else {
        var O = new ArrayBuffer(0);
        try {
          B.blob = new Blob([O], { type: "application/zip" }).size === 0;
        } catch {
          try {
            var c = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
            c.append(O), B.blob = c.getBlob("application/zip").size === 0;
          } catch {
            B.blob = !1;
          }
        }
      }
      try {
        B.nodestream = !!x("readable-stream").Readable;
      } catch {
        B.nodestream = !1;
      }
    }, { "readable-stream": 16 }], 31: [function(x, C, B) {
      for (var O = x("./utils"), c = x("./support"), d = x("./nodejsUtils"), t = x("./stream/GenericWorker"), o = new Array(256), r = 0; r < 256; r++)
        o[r] = 252 <= r ? 6 : 248 <= r ? 5 : 240 <= r ? 4 : 224 <= r ? 3 : 192 <= r ? 2 : 1;
      o[254] = o[254] = 1;
      function n() {
        t.call(this, "utf-8 decode"), this.leftOver = null;
      }
      function i() {
        t.call(this, "utf-8 encode");
      }
      B.utf8encode = function(f) {
        return c.nodebuffer ? d.newBufferFrom(f, "utf-8") : function(l) {
          var u, h, a, v, y, p = l.length, e = 0;
          for (v = 0; v < p; v++)
            (64512 & (h = l.charCodeAt(v))) == 55296 && v + 1 < p && (64512 & (a = l.charCodeAt(v + 1))) == 56320 && (h = 65536 + (h - 55296 << 10) + (a - 56320), v++), e += h < 128 ? 1 : h < 2048 ? 2 : h < 65536 ? 3 : 4;
          for (u = c.uint8array ? new Uint8Array(e) : new Array(e), v = y = 0; y < e; v++)
            (64512 & (h = l.charCodeAt(v))) == 55296 && v + 1 < p && (64512 & (a = l.charCodeAt(v + 1))) == 56320 && (h = 65536 + (h - 55296 << 10) + (a - 56320), v++), h < 128 ? u[y++] = h : (h < 2048 ? u[y++] = 192 | h >>> 6 : (h < 65536 ? u[y++] = 224 | h >>> 12 : (u[y++] = 240 | h >>> 18, u[y++] = 128 | h >>> 12 & 63), u[y++] = 128 | h >>> 6 & 63), u[y++] = 128 | 63 & h);
          return u;
        }(f);
      }, B.utf8decode = function(f) {
        return c.nodebuffer ? O.transformTo("nodebuffer", f).toString("utf-8") : function(l) {
          var u, h, a, v, y = l.length, p = new Array(2 * y);
          for (u = h = 0; u < y; )
            if ((a = l[u++]) < 128)
              p[h++] = a;
            else if (4 < (v = o[a]))
              p[h++] = 65533, u += v - 1;
            else {
              for (a &= v === 2 ? 31 : v === 3 ? 15 : 7; 1 < v && u < y; )
                a = a << 6 | 63 & l[u++], v--;
              1 < v ? p[h++] = 65533 : a < 65536 ? p[h++] = a : (a -= 65536, p[h++] = 55296 | a >> 10 & 1023, p[h++] = 56320 | 1023 & a);
            }
          return p.length !== h && (p.subarray ? p = p.subarray(0, h) : p.length = h), O.applyFromCharCode(p);
        }(f = O.transformTo(c.uint8array ? "uint8array" : "array", f));
      }, O.inherits(n, t), n.prototype.processChunk = function(f) {
        var l = O.transformTo(c.uint8array ? "uint8array" : "array", f.data);
        if (this.leftOver && this.leftOver.length) {
          if (c.uint8array) {
            var u = l;
            (l = new Uint8Array(u.length + this.leftOver.length)).set(this.leftOver, 0), l.set(u, this.leftOver.length);
          } else
            l = this.leftOver.concat(l);
          this.leftOver = null;
        }
        var h = function(v, y) {
          var p;
          for ((y = y || v.length) > v.length && (y = v.length), p = y - 1; 0 <= p && (192 & v[p]) == 128; )
            p--;
          return p < 0 || p === 0 ? y : p + o[v[p]] > y ? p : y;
        }(l), a = l;
        h !== l.length && (c.uint8array ? (a = l.subarray(0, h), this.leftOver = l.subarray(h, l.length)) : (a = l.slice(0, h), this.leftOver = l.slice(h, l.length))), this.push({ data: B.utf8decode(a), meta: f.meta });
      }, n.prototype.flush = function() {
        this.leftOver && this.leftOver.length && (this.push({ data: B.utf8decode(this.leftOver), meta: {} }), this.leftOver = null);
      }, B.Utf8DecodeWorker = n, O.inherits(i, t), i.prototype.processChunk = function(f) {
        this.push({ data: B.utf8encode(f.data), meta: f.meta });
      }, B.Utf8EncodeWorker = i;
    }, { "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./support": 30, "./utils": 32 }], 32: [function(x, C, B) {
      var O = x("./support"), c = x("./base64"), d = x("./nodejsUtils"), t = x("./external");
      function o(u) {
        return u;
      }
      function r(u, h) {
        for (var a = 0; a < u.length; ++a)
          h[a] = 255 & u.charCodeAt(a);
        return h;
      }
      x("setimmediate"), B.newBlob = function(u, h) {
        B.checkSupport("blob");
        try {
          return new Blob([u], { type: h });
        } catch {
          try {
            var a = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
            return a.append(u), a.getBlob(h);
          } catch {
            throw new Error("Bug : can't construct the Blob.");
          }
        }
      };
      var n = { stringifyByChunk: function(u, h, a) {
        var v = [], y = 0, p = u.length;
        if (p <= a)
          return String.fromCharCode.apply(null, u);
        for (; y < p; )
          h === "array" || h === "nodebuffer" ? v.push(String.fromCharCode.apply(null, u.slice(y, Math.min(y + a, p)))) : v.push(String.fromCharCode.apply(null, u.subarray(y, Math.min(y + a, p)))), y += a;
        return v.join("");
      }, stringifyByChar: function(u) {
        for (var h = "", a = 0; a < u.length; a++)
          h += String.fromCharCode(u[a]);
        return h;
      }, applyCanBeUsed: { uint8array: function() {
        try {
          return O.uint8array && String.fromCharCode.apply(null, new Uint8Array(1)).length === 1;
        } catch {
          return !1;
        }
      }(), nodebuffer: function() {
        try {
          return O.nodebuffer && String.fromCharCode.apply(null, d.allocBuffer(1)).length === 1;
        } catch {
          return !1;
        }
      }() } };
      function i(u) {
        var h = 65536, a = B.getTypeOf(u), v = !0;
        if (a === "uint8array" ? v = n.applyCanBeUsed.uint8array : a === "nodebuffer" && (v = n.applyCanBeUsed.nodebuffer), v)
          for (; 1 < h; )
            try {
              return n.stringifyByChunk(u, a, h);
            } catch {
              h = Math.floor(h / 2);
            }
        return n.stringifyByChar(u);
      }
      function f(u, h) {
        for (var a = 0; a < u.length; a++)
          h[a] = u[a];
        return h;
      }
      B.applyFromCharCode = i;
      var l = {};
      l.string = { string: o, array: function(u) {
        return r(u, new Array(u.length));
      }, arraybuffer: function(u) {
        return l.string.uint8array(u).buffer;
      }, uint8array: function(u) {
        return r(u, new Uint8Array(u.length));
      }, nodebuffer: function(u) {
        return r(u, d.allocBuffer(u.length));
      } }, l.array = { string: i, array: o, arraybuffer: function(u) {
        return new Uint8Array(u).buffer;
      }, uint8array: function(u) {
        return new Uint8Array(u);
      }, nodebuffer: function(u) {
        return d.newBufferFrom(u);
      } }, l.arraybuffer = { string: function(u) {
        return i(new Uint8Array(u));
      }, array: function(u) {
        return f(new Uint8Array(u), new Array(u.byteLength));
      }, arraybuffer: o, uint8array: function(u) {
        return new Uint8Array(u);
      }, nodebuffer: function(u) {
        return d.newBufferFrom(new Uint8Array(u));
      } }, l.uint8array = { string: i, array: function(u) {
        return f(u, new Array(u.length));
      }, arraybuffer: function(u) {
        return u.buffer;
      }, uint8array: o, nodebuffer: function(u) {
        return d.newBufferFrom(u);
      } }, l.nodebuffer = { string: i, array: function(u) {
        return f(u, new Array(u.length));
      }, arraybuffer: function(u) {
        return l.nodebuffer.uint8array(u).buffer;
      }, uint8array: function(u) {
        return f(u, new Uint8Array(u.length));
      }, nodebuffer: o }, B.transformTo = function(u, h) {
        if (h = h || "", !u)
          return h;
        B.checkSupport(u);
        var a = B.getTypeOf(h);
        return l[a][u](h);
      }, B.resolve = function(u) {
        for (var h = u.split("/"), a = [], v = 0; v < h.length; v++) {
          var y = h[v];
          y === "." || y === "" && v !== 0 && v !== h.length - 1 || (y === ".." ? a.pop() : a.push(y));
        }
        return a.join("/");
      }, B.getTypeOf = function(u) {
        return typeof u == "string" ? "string" : Object.prototype.toString.call(u) === "[object Array]" ? "array" : O.nodebuffer && d.isBuffer(u) ? "nodebuffer" : O.uint8array && u instanceof Uint8Array ? "uint8array" : O.arraybuffer && u instanceof ArrayBuffer ? "arraybuffer" : void 0;
      }, B.checkSupport = function(u) {
        if (!O[u.toLowerCase()])
          throw new Error(u + " is not supported by this platform");
      }, B.MAX_VALUE_16BITS = 65535, B.MAX_VALUE_32BITS = -1, B.pretty = function(u) {
        var h, a, v = "";
        for (a = 0; a < (u || "").length; a++)
          v += "\\x" + ((h = u.charCodeAt(a)) < 16 ? "0" : "") + h.toString(16).toUpperCase();
        return v;
      }, B.delay = function(u, h, a) {
        setImmediate(function() {
          u.apply(a || null, h || []);
        });
      }, B.inherits = function(u, h) {
        function a() {
        }
        a.prototype = h.prototype, u.prototype = new a();
      }, B.extend = function() {
        var u, h, a = {};
        for (u = 0; u < arguments.length; u++)
          for (h in arguments[u])
            Object.prototype.hasOwnProperty.call(arguments[u], h) && a[h] === void 0 && (a[h] = arguments[u][h]);
        return a;
      }, B.prepareContent = function(u, h, a, v, y) {
        return t.Promise.resolve(h).then(function(p) {
          return O.blob && (p instanceof Blob || ["[object File]", "[object Blob]"].indexOf(Object.prototype.toString.call(p)) !== -1) && typeof FileReader < "u" ? new t.Promise(function(e, m) {
            var w = new FileReader();
            w.onload = function(D) {
              e(D.target.result);
            }, w.onerror = function(D) {
              m(D.target.error);
            }, w.readAsArrayBuffer(p);
          }) : p;
        }).then(function(p) {
          var e = B.getTypeOf(p);
          return e ? (e === "arraybuffer" ? p = B.transformTo("uint8array", p) : e === "string" && (y ? p = c.decode(p) : a && v !== !0 && (p = function(m) {
            return r(m, O.uint8array ? new Uint8Array(m.length) : new Array(m.length));
          }(p))), p) : t.Promise.reject(new Error("Can't read the data of '" + u + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"));
        });
      };
    }, { "./base64": 1, "./external": 6, "./nodejsUtils": 14, "./support": 30, setimmediate: 54 }], 33: [function(x, C, B) {
      var O = x("./reader/readerFor"), c = x("./utils"), d = x("./signature"), t = x("./zipEntry"), o = x("./support");
      function r(n) {
        this.files = [], this.loadOptions = n;
      }
      r.prototype = { checkSignature: function(n) {
        if (!this.reader.readAndCheckSignature(n)) {
          this.reader.index -= 4;
          var i = this.reader.readString(4);
          throw new Error("Corrupted zip or bug: unexpected signature (" + c.pretty(i) + ", expected " + c.pretty(n) + ")");
        }
      }, isSignature: function(n, i) {
        var f = this.reader.index;
        this.reader.setIndex(n);
        var l = this.reader.readString(4) === i;
        return this.reader.setIndex(f), l;
      }, readBlockEndOfCentral: function() {
        this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), this.zipCommentLength = this.reader.readInt(2);
        var n = this.reader.readData(this.zipCommentLength), i = o.uint8array ? "uint8array" : "array", f = c.transformTo(i, n);
        this.zipComment = this.loadOptions.decodeFileName(f);
      }, readBlockZip64EndOfCentral: function() {
        this.zip64EndOfCentralSize = this.reader.readInt(8), this.reader.skip(4), this.diskNumber = this.reader.readInt(4), this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};
        for (var n, i, f, l = this.zip64EndOfCentralSize - 44; 0 < l; )
          n = this.reader.readInt(2), i = this.reader.readInt(4), f = this.reader.readData(i), this.zip64ExtensibleData[n] = { id: n, length: i, value: f };
      }, readBlockZip64EndOfCentralLocator: function() {
        if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), this.disksCount = this.reader.readInt(4), 1 < this.disksCount)
          throw new Error("Multi-volumes zip are not supported");
      }, readLocalFiles: function() {
        var n, i;
        for (n = 0; n < this.files.length; n++)
          i = this.files[n], this.reader.setIndex(i.localHeaderOffset), this.checkSignature(d.LOCAL_FILE_HEADER), i.readLocalPart(this.reader), i.handleUTF8(), i.processAttributes();
      }, readCentralDir: function() {
        var n;
        for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(d.CENTRAL_FILE_HEADER); )
          (n = new t({ zip64: this.zip64 }, this.loadOptions)).readCentralPart(this.reader), this.files.push(n);
        if (this.centralDirRecords !== this.files.length && this.centralDirRecords !== 0 && this.files.length === 0)
          throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length);
      }, readEndOfCentral: function() {
        var n = this.reader.lastIndexOfSignature(d.CENTRAL_DIRECTORY_END);
        if (n < 0)
          throw this.isSignature(0, d.LOCAL_FILE_HEADER) ? new Error("Corrupted zip: can't find end of central directory") : new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html");
        this.reader.setIndex(n);
        var i = n;
        if (this.checkSignature(d.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), this.diskNumber === c.MAX_VALUE_16BITS || this.diskWithCentralDirStart === c.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === c.MAX_VALUE_16BITS || this.centralDirRecords === c.MAX_VALUE_16BITS || this.centralDirSize === c.MAX_VALUE_32BITS || this.centralDirOffset === c.MAX_VALUE_32BITS) {
          if (this.zip64 = !0, (n = this.reader.lastIndexOfSignature(d.ZIP64_CENTRAL_DIRECTORY_LOCATOR)) < 0)
            throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
          if (this.reader.setIndex(n), this.checkSignature(d.ZIP64_CENTRAL_DIRECTORY_LOCATOR), this.readBlockZip64EndOfCentralLocator(), !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, d.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(d.ZIP64_CENTRAL_DIRECTORY_END), this.relativeOffsetEndOfZip64CentralDir < 0))
            throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
          this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(d.ZIP64_CENTRAL_DIRECTORY_END), this.readBlockZip64EndOfCentral();
        }
        var f = this.centralDirOffset + this.centralDirSize;
        this.zip64 && (f += 20, f += 12 + this.zip64EndOfCentralSize);
        var l = i - f;
        if (0 < l)
          this.isSignature(i, d.CENTRAL_FILE_HEADER) || (this.reader.zero = l);
        else if (l < 0)
          throw new Error("Corrupted zip: missing " + Math.abs(l) + " bytes.");
      }, prepareReader: function(n) {
        this.reader = O(n);
      }, load: function(n) {
        this.prepareReader(n), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles();
      } }, C.exports = r;
    }, { "./reader/readerFor": 22, "./signature": 23, "./support": 30, "./utils": 32, "./zipEntry": 34 }], 34: [function(x, C, B) {
      var O = x("./reader/readerFor"), c = x("./utils"), d = x("./compressedObject"), t = x("./crc32"), o = x("./utf8"), r = x("./compressions"), n = x("./support");
      function i(f, l) {
        this.options = f, this.loadOptions = l;
      }
      i.prototype = { isEncrypted: function() {
        return (1 & this.bitFlag) == 1;
      }, useUTF8: function() {
        return (2048 & this.bitFlag) == 2048;
      }, readLocalPart: function(f) {
        var l, u;
        if (f.skip(22), this.fileNameLength = f.readInt(2), u = f.readInt(2), this.fileName = f.readData(this.fileNameLength), f.skip(u), this.compressedSize === -1 || this.uncompressedSize === -1)
          throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");
        if ((l = function(h) {
          for (var a in r)
            if (Object.prototype.hasOwnProperty.call(r, a) && r[a].magic === h)
              return r[a];
          return null;
        }(this.compressionMethod)) === null)
          throw new Error("Corrupted zip : compression " + c.pretty(this.compressionMethod) + " unknown (inner file : " + c.transformTo("string", this.fileName) + ")");
        this.decompressed = new d(this.compressedSize, this.uncompressedSize, this.crc32, l, f.readData(this.compressedSize));
      }, readCentralPart: function(f) {
        this.versionMadeBy = f.readInt(2), f.skip(2), this.bitFlag = f.readInt(2), this.compressionMethod = f.readString(2), this.date = f.readDate(), this.crc32 = f.readInt(4), this.compressedSize = f.readInt(4), this.uncompressedSize = f.readInt(4);
        var l = f.readInt(2);
        if (this.extraFieldsLength = f.readInt(2), this.fileCommentLength = f.readInt(2), this.diskNumberStart = f.readInt(2), this.internalFileAttributes = f.readInt(2), this.externalFileAttributes = f.readInt(4), this.localHeaderOffset = f.readInt(4), this.isEncrypted())
          throw new Error("Encrypted zip are not supported");
        f.skip(l), this.readExtraFields(f), this.parseZIP64ExtraField(f), this.fileComment = f.readData(this.fileCommentLength);
      }, processAttributes: function() {
        this.unixPermissions = null, this.dosPermissions = null;
        var f = this.versionMadeBy >> 8;
        this.dir = !!(16 & this.externalFileAttributes), f == 0 && (this.dosPermissions = 63 & this.externalFileAttributes), f == 3 && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || this.fileNameStr.slice(-1) !== "/" || (this.dir = !0);
      }, parseZIP64ExtraField: function() {
        if (this.extraFields[1]) {
          var f = O(this.extraFields[1].value);
          this.uncompressedSize === c.MAX_VALUE_32BITS && (this.uncompressedSize = f.readInt(8)), this.compressedSize === c.MAX_VALUE_32BITS && (this.compressedSize = f.readInt(8)), this.localHeaderOffset === c.MAX_VALUE_32BITS && (this.localHeaderOffset = f.readInt(8)), this.diskNumberStart === c.MAX_VALUE_32BITS && (this.diskNumberStart = f.readInt(4));
        }
      }, readExtraFields: function(f) {
        var l, u, h, a = f.index + this.extraFieldsLength;
        for (this.extraFields || (this.extraFields = {}); f.index + 4 < a; )
          l = f.readInt(2), u = f.readInt(2), h = f.readData(u), this.extraFields[l] = { id: l, length: u, value: h };
        f.setIndex(a);
      }, handleUTF8: function() {
        var f = n.uint8array ? "uint8array" : "array";
        if (this.useUTF8())
          this.fileNameStr = o.utf8decode(this.fileName), this.fileCommentStr = o.utf8decode(this.fileComment);
        else {
          var l = this.findExtraFieldUnicodePath();
          if (l !== null)
            this.fileNameStr = l;
          else {
            var u = c.transformTo(f, this.fileName);
            this.fileNameStr = this.loadOptions.decodeFileName(u);
          }
          var h = this.findExtraFieldUnicodeComment();
          if (h !== null)
            this.fileCommentStr = h;
          else {
            var a = c.transformTo(f, this.fileComment);
            this.fileCommentStr = this.loadOptions.decodeFileName(a);
          }
        }
      }, findExtraFieldUnicodePath: function() {
        var f = this.extraFields[28789];
        if (f) {
          var l = O(f.value);
          return l.readInt(1) !== 1 || t(this.fileName) !== l.readInt(4) ? null : o.utf8decode(l.readData(f.length - 5));
        }
        return null;
      }, findExtraFieldUnicodeComment: function() {
        var f = this.extraFields[25461];
        if (f) {
          var l = O(f.value);
          return l.readInt(1) !== 1 || t(this.fileComment) !== l.readInt(4) ? null : o.utf8decode(l.readData(f.length - 5));
        }
        return null;
      } }, C.exports = i;
    }, { "./compressedObject": 2, "./compressions": 3, "./crc32": 4, "./reader/readerFor": 22, "./support": 30, "./utf8": 31, "./utils": 32 }], 35: [function(x, C, B) {
      function O(l, u, h) {
        this.name = l, this.dir = h.dir, this.date = h.date, this.comment = h.comment, this.unixPermissions = h.unixPermissions, this.dosPermissions = h.dosPermissions, this._data = u, this._dataBinary = h.binary, this.options = { compression: h.compression, compressionOptions: h.compressionOptions };
      }
      var c = x("./stream/StreamHelper"), d = x("./stream/DataWorker"), t = x("./utf8"), o = x("./compressedObject"), r = x("./stream/GenericWorker");
      O.prototype = { internalStream: function(l) {
        var u = null, h = "string";
        try {
          if (!l)
            throw new Error("No output type specified.");
          var a = (h = l.toLowerCase()) === "string" || h === "text";
          h !== "binarystring" && h !== "text" || (h = "string"), u = this._decompressWorker();
          var v = !this._dataBinary;
          v && !a && (u = u.pipe(new t.Utf8EncodeWorker())), !v && a && (u = u.pipe(new t.Utf8DecodeWorker()));
        } catch (y) {
          (u = new r("error")).error(y);
        }
        return new c(u, h, "");
      }, async: function(l, u) {
        return this.internalStream(l).accumulate(u);
      }, nodeStream: function(l, u) {
        return this.internalStream(l || "nodebuffer").toNodejsStream(u);
      }, _compressWorker: function(l, u) {
        if (this._data instanceof o && this._data.compression.magic === l.magic)
          return this._data.getCompressedWorker();
        var h = this._decompressWorker();
        return this._dataBinary || (h = h.pipe(new t.Utf8EncodeWorker())), o.createWorkerFrom(h, l, u);
      }, _decompressWorker: function() {
        return this._data instanceof o ? this._data.getContentWorker() : this._data instanceof r ? this._data : new d(this._data);
      } };
      for (var n = ["asText", "asBinary", "asNodeBuffer", "asUint8Array", "asArrayBuffer"], i = function() {
        throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
      }, f = 0; f < n.length; f++)
        O.prototype[n[f]] = i;
      C.exports = O;
    }, { "./compressedObject": 2, "./stream/DataWorker": 27, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31 }], 36: [function(x, C, B) {
      (function(O) {
        var c, d, t = O.MutationObserver || O.WebKitMutationObserver;
        if (t) {
          var o = 0, r = new t(l), n = O.document.createTextNode("");
          r.observe(n, { characterData: !0 }), c = function() {
            n.data = o = ++o % 2;
          };
        } else if (O.setImmediate || O.MessageChannel === void 0)
          c = "document" in O && "onreadystatechange" in O.document.createElement("script") ? function() {
            var u = O.document.createElement("script");
            u.onreadystatechange = function() {
              l(), u.onreadystatechange = null, u.parentNode.removeChild(u), u = null;
            }, O.document.documentElement.appendChild(u);
          } : function() {
            setTimeout(l, 0);
          };
        else {
          var i = new O.MessageChannel();
          i.port1.onmessage = l, c = function() {
            i.port2.postMessage(0);
          };
        }
        var f = [];
        function l() {
          var u, h;
          d = !0;
          for (var a = f.length; a; ) {
            for (h = f, f = [], u = -1; ++u < a; )
              h[u]();
            a = f.length;
          }
          d = !1;
        }
        C.exports = function(u) {
          f.push(u) !== 1 || d || c();
        };
      }).call(this, typeof zi < "u" ? zi : typeof self < "u" ? self : typeof window < "u" ? window : {});
    }, {}], 37: [function(x, C, B) {
      var O = x("immediate");
      function c() {
      }
      var d = {}, t = ["REJECTED"], o = ["FULFILLED"], r = ["PENDING"];
      function n(a) {
        if (typeof a != "function")
          throw new TypeError("resolver must be a function");
        this.state = r, this.queue = [], this.outcome = void 0, a !== c && u(this, a);
      }
      function i(a, v, y) {
        this.promise = a, typeof v == "function" && (this.onFulfilled = v, this.callFulfilled = this.otherCallFulfilled), typeof y == "function" && (this.onRejected = y, this.callRejected = this.otherCallRejected);
      }
      function f(a, v, y) {
        O(function() {
          var p;
          try {
            p = v(y);
          } catch (e) {
            return d.reject(a, e);
          }
          p === a ? d.reject(a, new TypeError("Cannot resolve promise with itself")) : d.resolve(a, p);
        });
      }
      function l(a) {
        var v = a && a.then;
        if (a && (typeof a == "object" || typeof a == "function") && typeof v == "function")
          return function() {
            v.apply(a, arguments);
          };
      }
      function u(a, v) {
        var y = !1;
        function p(w) {
          y || (y = !0, d.reject(a, w));
        }
        function e(w) {
          y || (y = !0, d.resolve(a, w));
        }
        var m = h(function() {
          v(e, p);
        });
        m.status === "error" && p(m.value);
      }
      function h(a, v) {
        var y = {};
        try {
          y.value = a(v), y.status = "success";
        } catch (p) {
          y.status = "error", y.value = p;
        }
        return y;
      }
      (C.exports = n).prototype.finally = function(a) {
        if (typeof a != "function")
          return this;
        var v = this.constructor;
        return this.then(function(y) {
          return v.resolve(a()).then(function() {
            return y;
          });
        }, function(y) {
          return v.resolve(a()).then(function() {
            throw y;
          });
        });
      }, n.prototype.catch = function(a) {
        return this.then(null, a);
      }, n.prototype.then = function(a, v) {
        if (typeof a != "function" && this.state === o || typeof v != "function" && this.state === t)
          return this;
        var y = new this.constructor(c);
        return this.state !== r ? f(y, this.state === o ? a : v, this.outcome) : this.queue.push(new i(y, a, v)), y;
      }, i.prototype.callFulfilled = function(a) {
        d.resolve(this.promise, a);
      }, i.prototype.otherCallFulfilled = function(a) {
        f(this.promise, this.onFulfilled, a);
      }, i.prototype.callRejected = function(a) {
        d.reject(this.promise, a);
      }, i.prototype.otherCallRejected = function(a) {
        f(this.promise, this.onRejected, a);
      }, d.resolve = function(a, v) {
        var y = h(l, v);
        if (y.status === "error")
          return d.reject(a, y.value);
        var p = y.value;
        if (p)
          u(a, p);
        else {
          a.state = o, a.outcome = v;
          for (var e = -1, m = a.queue.length; ++e < m; )
            a.queue[e].callFulfilled(v);
        }
        return a;
      }, d.reject = function(a, v) {
        a.state = t, a.outcome = v;
        for (var y = -1, p = a.queue.length; ++y < p; )
          a.queue[y].callRejected(v);
        return a;
      }, n.resolve = function(a) {
        return a instanceof this ? a : d.resolve(new this(c), a);
      }, n.reject = function(a) {
        var v = new this(c);
        return d.reject(v, a);
      }, n.all = function(a) {
        var v = this;
        if (Object.prototype.toString.call(a) !== "[object Array]")
          return this.reject(new TypeError("must be an array"));
        var y = a.length, p = !1;
        if (!y)
          return this.resolve([]);
        for (var e = new Array(y), m = 0, w = -1, D = new this(c); ++w < y; )
          I(a[w], w);
        return D;
        function I(E, T) {
          v.resolve(E).then(function(A) {
            e[T] = A, ++m !== y || p || (p = !0, d.resolve(D, e));
          }, function(A) {
            p || (p = !0, d.reject(D, A));
          });
        }
      }, n.race = function(a) {
        var v = this;
        if (Object.prototype.toString.call(a) !== "[object Array]")
          return this.reject(new TypeError("must be an array"));
        var y = a.length, p = !1;
        if (!y)
          return this.resolve([]);
        for (var e = -1, m = new this(c); ++e < y; )
          w = a[e], v.resolve(w).then(function(D) {
            p || (p = !0, d.resolve(m, D));
          }, function(D) {
            p || (p = !0, d.reject(m, D));
          });
        var w;
        return m;
      };
    }, { immediate: 36 }], 38: [function(x, C, B) {
      var O = {};
      (0, x("./lib/utils/common").assign)(O, x("./lib/deflate"), x("./lib/inflate"), x("./lib/zlib/constants")), C.exports = O;
    }, { "./lib/deflate": 39, "./lib/inflate": 40, "./lib/utils/common": 41, "./lib/zlib/constants": 44 }], 39: [function(x, C, B) {
      var O = x("./zlib/deflate"), c = x("./utils/common"), d = x("./utils/strings"), t = x("./zlib/messages"), o = x("./zlib/zstream"), r = Object.prototype.toString, n = 0, i = -1, f = 0, l = 8;
      function u(a) {
        if (!(this instanceof u))
          return new u(a);
        this.options = c.assign({ level: i, method: l, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: f, to: "" }, a || {});
        var v = this.options;
        v.raw && 0 < v.windowBits ? v.windowBits = -v.windowBits : v.gzip && 0 < v.windowBits && v.windowBits < 16 && (v.windowBits += 16), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new o(), this.strm.avail_out = 0;
        var y = O.deflateInit2(this.strm, v.level, v.method, v.windowBits, v.memLevel, v.strategy);
        if (y !== n)
          throw new Error(t[y]);
        if (v.header && O.deflateSetHeader(this.strm, v.header), v.dictionary) {
          var p;
          if (p = typeof v.dictionary == "string" ? d.string2buf(v.dictionary) : r.call(v.dictionary) === "[object ArrayBuffer]" ? new Uint8Array(v.dictionary) : v.dictionary, (y = O.deflateSetDictionary(this.strm, p)) !== n)
            throw new Error(t[y]);
          this._dict_set = !0;
        }
      }
      function h(a, v) {
        var y = new u(v);
        if (y.push(a, !0), y.err)
          throw y.msg || t[y.err];
        return y.result;
      }
      u.prototype.push = function(a, v) {
        var y, p, e = this.strm, m = this.options.chunkSize;
        if (this.ended)
          return !1;
        p = v === ~~v ? v : v === !0 ? 4 : 0, typeof a == "string" ? e.input = d.string2buf(a) : r.call(a) === "[object ArrayBuffer]" ? e.input = new Uint8Array(a) : e.input = a, e.next_in = 0, e.avail_in = e.input.length;
        do {
          if (e.avail_out === 0 && (e.output = new c.Buf8(m), e.next_out = 0, e.avail_out = m), (y = O.deflate(e, p)) !== 1 && y !== n)
            return this.onEnd(y), !(this.ended = !0);
          e.avail_out !== 0 && (e.avail_in !== 0 || p !== 4 && p !== 2) || (this.options.to === "string" ? this.onData(d.buf2binstring(c.shrinkBuf(e.output, e.next_out))) : this.onData(c.shrinkBuf(e.output, e.next_out)));
        } while ((0 < e.avail_in || e.avail_out === 0) && y !== 1);
        return p === 4 ? (y = O.deflateEnd(this.strm), this.onEnd(y), this.ended = !0, y === n) : p !== 2 || (this.onEnd(n), !(e.avail_out = 0));
      }, u.prototype.onData = function(a) {
        this.chunks.push(a);
      }, u.prototype.onEnd = function(a) {
        a === n && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = c.flattenChunks(this.chunks)), this.chunks = [], this.err = a, this.msg = this.strm.msg;
      }, B.Deflate = u, B.deflate = h, B.deflateRaw = function(a, v) {
        return (v = v || {}).raw = !0, h(a, v);
      }, B.gzip = function(a, v) {
        return (v = v || {}).gzip = !0, h(a, v);
      };
    }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/deflate": 46, "./zlib/messages": 51, "./zlib/zstream": 53 }], 40: [function(x, C, B) {
      var O = x("./zlib/inflate"), c = x("./utils/common"), d = x("./utils/strings"), t = x("./zlib/constants"), o = x("./zlib/messages"), r = x("./zlib/zstream"), n = x("./zlib/gzheader"), i = Object.prototype.toString;
      function f(u) {
        if (!(this instanceof f))
          return new f(u);
        this.options = c.assign({ chunkSize: 16384, windowBits: 0, to: "" }, u || {});
        var h = this.options;
        h.raw && 0 <= h.windowBits && h.windowBits < 16 && (h.windowBits = -h.windowBits, h.windowBits === 0 && (h.windowBits = -15)), !(0 <= h.windowBits && h.windowBits < 16) || u && u.windowBits || (h.windowBits += 32), 15 < h.windowBits && h.windowBits < 48 && !(15 & h.windowBits) && (h.windowBits |= 15), this.err = 0, this.msg = "", this.ended = !1, this.chunks = [], this.strm = new r(), this.strm.avail_out = 0;
        var a = O.inflateInit2(this.strm, h.windowBits);
        if (a !== t.Z_OK)
          throw new Error(o[a]);
        this.header = new n(), O.inflateGetHeader(this.strm, this.header);
      }
      function l(u, h) {
        var a = new f(h);
        if (a.push(u, !0), a.err)
          throw a.msg || o[a.err];
        return a.result;
      }
      f.prototype.push = function(u, h) {
        var a, v, y, p, e, m, w = this.strm, D = this.options.chunkSize, I = this.options.dictionary, E = !1;
        if (this.ended)
          return !1;
        v = h === ~~h ? h : h === !0 ? t.Z_FINISH : t.Z_NO_FLUSH, typeof u == "string" ? w.input = d.binstring2buf(u) : i.call(u) === "[object ArrayBuffer]" ? w.input = new Uint8Array(u) : w.input = u, w.next_in = 0, w.avail_in = w.input.length;
        do {
          if (w.avail_out === 0 && (w.output = new c.Buf8(D), w.next_out = 0, w.avail_out = D), (a = O.inflate(w, t.Z_NO_FLUSH)) === t.Z_NEED_DICT && I && (m = typeof I == "string" ? d.string2buf(I) : i.call(I) === "[object ArrayBuffer]" ? new Uint8Array(I) : I, a = O.inflateSetDictionary(this.strm, m)), a === t.Z_BUF_ERROR && E === !0 && (a = t.Z_OK, E = !1), a !== t.Z_STREAM_END && a !== t.Z_OK)
            return this.onEnd(a), !(this.ended = !0);
          w.next_out && (w.avail_out !== 0 && a !== t.Z_STREAM_END && (w.avail_in !== 0 || v !== t.Z_FINISH && v !== t.Z_SYNC_FLUSH) || (this.options.to === "string" ? (y = d.utf8border(w.output, w.next_out), p = w.next_out - y, e = d.buf2string(w.output, y), w.next_out = p, w.avail_out = D - p, p && c.arraySet(w.output, w.output, y, p, 0), this.onData(e)) : this.onData(c.shrinkBuf(w.output, w.next_out)))), w.avail_in === 0 && w.avail_out === 0 && (E = !0);
        } while ((0 < w.avail_in || w.avail_out === 0) && a !== t.Z_STREAM_END);
        return a === t.Z_STREAM_END && (v = t.Z_FINISH), v === t.Z_FINISH ? (a = O.inflateEnd(this.strm), this.onEnd(a), this.ended = !0, a === t.Z_OK) : v !== t.Z_SYNC_FLUSH || (this.onEnd(t.Z_OK), !(w.avail_out = 0));
      }, f.prototype.onData = function(u) {
        this.chunks.push(u);
      }, f.prototype.onEnd = function(u) {
        u === t.Z_OK && (this.options.to === "string" ? this.result = this.chunks.join("") : this.result = c.flattenChunks(this.chunks)), this.chunks = [], this.err = u, this.msg = this.strm.msg;
      }, B.Inflate = f, B.inflate = l, B.inflateRaw = function(u, h) {
        return (h = h || {}).raw = !0, l(u, h);
      }, B.ungzip = l;
    }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/constants": 44, "./zlib/gzheader": 47, "./zlib/inflate": 49, "./zlib/messages": 51, "./zlib/zstream": 53 }], 41: [function(x, C, B) {
      var O = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Int32Array < "u";
      B.assign = function(t) {
        for (var o = Array.prototype.slice.call(arguments, 1); o.length; ) {
          var r = o.shift();
          if (r) {
            if (typeof r != "object")
              throw new TypeError(r + "must be non-object");
            for (var n in r)
              r.hasOwnProperty(n) && (t[n] = r[n]);
          }
        }
        return t;
      }, B.shrinkBuf = function(t, o) {
        return t.length === o ? t : t.subarray ? t.subarray(0, o) : (t.length = o, t);
      };
      var c = { arraySet: function(t, o, r, n, i) {
        if (o.subarray && t.subarray)
          t.set(o.subarray(r, r + n), i);
        else
          for (var f = 0; f < n; f++)
            t[i + f] = o[r + f];
      }, flattenChunks: function(t) {
        var o, r, n, i, f, l;
        for (o = n = 0, r = t.length; o < r; o++)
          n += t[o].length;
        for (l = new Uint8Array(n), o = i = 0, r = t.length; o < r; o++)
          f = t[o], l.set(f, i), i += f.length;
        return l;
      } }, d = { arraySet: function(t, o, r, n, i) {
        for (var f = 0; f < n; f++)
          t[i + f] = o[r + f];
      }, flattenChunks: function(t) {
        return [].concat.apply([], t);
      } };
      B.setTyped = function(t) {
        t ? (B.Buf8 = Uint8Array, B.Buf16 = Uint16Array, B.Buf32 = Int32Array, B.assign(B, c)) : (B.Buf8 = Array, B.Buf16 = Array, B.Buf32 = Array, B.assign(B, d));
      }, B.setTyped(O);
    }, {}], 42: [function(x, C, B) {
      var O = x("./common"), c = !0, d = !0;
      try {
        String.fromCharCode.apply(null, [0]);
      } catch {
        c = !1;
      }
      try {
        String.fromCharCode.apply(null, new Uint8Array(1));
      } catch {
        d = !1;
      }
      for (var t = new O.Buf8(256), o = 0; o < 256; o++)
        t[o] = 252 <= o ? 6 : 248 <= o ? 5 : 240 <= o ? 4 : 224 <= o ? 3 : 192 <= o ? 2 : 1;
      function r(n, i) {
        if (i < 65537 && (n.subarray && d || !n.subarray && c))
          return String.fromCharCode.apply(null, O.shrinkBuf(n, i));
        for (var f = "", l = 0; l < i; l++)
          f += String.fromCharCode(n[l]);
        return f;
      }
      t[254] = t[254] = 1, B.string2buf = function(n) {
        var i, f, l, u, h, a = n.length, v = 0;
        for (u = 0; u < a; u++)
          (64512 & (f = n.charCodeAt(u))) == 55296 && u + 1 < a && (64512 & (l = n.charCodeAt(u + 1))) == 56320 && (f = 65536 + (f - 55296 << 10) + (l - 56320), u++), v += f < 128 ? 1 : f < 2048 ? 2 : f < 65536 ? 3 : 4;
        for (i = new O.Buf8(v), u = h = 0; h < v; u++)
          (64512 & (f = n.charCodeAt(u))) == 55296 && u + 1 < a && (64512 & (l = n.charCodeAt(u + 1))) == 56320 && (f = 65536 + (f - 55296 << 10) + (l - 56320), u++), f < 128 ? i[h++] = f : (f < 2048 ? i[h++] = 192 | f >>> 6 : (f < 65536 ? i[h++] = 224 | f >>> 12 : (i[h++] = 240 | f >>> 18, i[h++] = 128 | f >>> 12 & 63), i[h++] = 128 | f >>> 6 & 63), i[h++] = 128 | 63 & f);
        return i;
      }, B.buf2binstring = function(n) {
        return r(n, n.length);
      }, B.binstring2buf = function(n) {
        for (var i = new O.Buf8(n.length), f = 0, l = i.length; f < l; f++)
          i[f] = n.charCodeAt(f);
        return i;
      }, B.buf2string = function(n, i) {
        var f, l, u, h, a = i || n.length, v = new Array(2 * a);
        for (f = l = 0; f < a; )
          if ((u = n[f++]) < 128)
            v[l++] = u;
          else if (4 < (h = t[u]))
            v[l++] = 65533, f += h - 1;
          else {
            for (u &= h === 2 ? 31 : h === 3 ? 15 : 7; 1 < h && f < a; )
              u = u << 6 | 63 & n[f++], h--;
            1 < h ? v[l++] = 65533 : u < 65536 ? v[l++] = u : (u -= 65536, v[l++] = 55296 | u >> 10 & 1023, v[l++] = 56320 | 1023 & u);
          }
        return r(v, l);
      }, B.utf8border = function(n, i) {
        var f;
        for ((i = i || n.length) > n.length && (i = n.length), f = i - 1; 0 <= f && (192 & n[f]) == 128; )
          f--;
        return f < 0 || f === 0 ? i : f + t[n[f]] > i ? f : i;
      };
    }, { "./common": 41 }], 43: [function(x, C, B) {
      C.exports = function(O, c, d, t) {
        for (var o = 65535 & O | 0, r = O >>> 16 & 65535 | 0, n = 0; d !== 0; ) {
          for (d -= n = 2e3 < d ? 2e3 : d; r = r + (o = o + c[t++] | 0) | 0, --n; )
            ;
          o %= 65521, r %= 65521;
        }
        return o | r << 16 | 0;
      };
    }, {}], 44: [function(x, C, B) {
      C.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
    }, {}], 45: [function(x, C, B) {
      var O = function() {
        for (var c, d = [], t = 0; t < 256; t++) {
          c = t;
          for (var o = 0; o < 8; o++)
            c = 1 & c ? 3988292384 ^ c >>> 1 : c >>> 1;
          d[t] = c;
        }
        return d;
      }();
      C.exports = function(c, d, t, o) {
        var r = O, n = o + t;
        c ^= -1;
        for (var i = o; i < n; i++)
          c = c >>> 8 ^ r[255 & (c ^ d[i])];
        return -1 ^ c;
      };
    }, {}], 46: [function(x, C, B) {
      var O, c = x("../utils/common"), d = x("./trees"), t = x("./adler32"), o = x("./crc32"), r = x("./messages"), n = 0, i = 4, f = 0, l = -2, u = -1, h = 4, a = 2, v = 8, y = 9, p = 286, e = 30, m = 19, w = 2 * p + 1, D = 15, I = 3, E = 258, T = E + I + 1, A = 42, F = 113, b = 1, R = 2, N = 3, U = 4;
      function W(G, Et) {
        return G.msg = r[Et], Et;
      }
      function J(G) {
        return (G << 1) - (4 < G ? 9 : 0);
      }
      function ht(G) {
        for (var Et = G.length; 0 <= --Et; )
          G[Et] = 0;
      }
      function K(G) {
        var Et = G.state, k = Et.pending;
        k > G.avail_out && (k = G.avail_out), k !== 0 && (c.arraySet(G.output, Et.pending_buf, Et.pending_out, k, G.next_out), G.next_out += k, Et.pending_out += k, G.total_out += k, G.avail_out -= k, Et.pending -= k, Et.pending === 0 && (Et.pending_out = 0));
      }
      function nt(G, Et) {
        d._tr_flush_block(G, 0 <= G.block_start ? G.block_start : -1, G.strstart - G.block_start, Et), G.block_start = G.strstart, K(G.strm);
      }
      function xt(G, Et) {
        G.pending_buf[G.pending++] = Et;
      }
      function bt(G, Et) {
        G.pending_buf[G.pending++] = Et >>> 8 & 255, G.pending_buf[G.pending++] = 255 & Et;
      }
      function Tt(G, Et) {
        var k, S, L = G.max_chain_length, V = G.strstart, it = G.prev_length, tt = G.nice_match, _ = G.strstart > G.w_size - T ? G.strstart - (G.w_size - T) : 0, At = G.window, Rt = G.w_mask, Yt = G.prev, Gt = G.strstart + E, Dt = At[V + it - 1], ae = At[V + it];
        G.prev_length >= G.good_match && (L >>= 2), tt > G.lookahead && (tt = G.lookahead);
        do
          if (At[(k = Et) + it] === ae && At[k + it - 1] === Dt && At[k] === At[V] && At[++k] === At[V + 1]) {
            V += 2, k++;
            do
              ;
            while (At[++V] === At[++k] && At[++V] === At[++k] && At[++V] === At[++k] && At[++V] === At[++k] && At[++V] === At[++k] && At[++V] === At[++k] && At[++V] === At[++k] && At[++V] === At[++k] && V < Gt);
            if (S = E - (Gt - V), V = Gt - E, it < S) {
              if (G.match_start = Et, tt <= (it = S))
                break;
              Dt = At[V + it - 1], ae = At[V + it];
            }
          }
        while ((Et = Yt[Et & Rt]) > _ && --L != 0);
        return it <= G.lookahead ? it : G.lookahead;
      }
      function It(G) {
        var Et, k, S, L, V, it, tt, _, At, Rt, Yt = G.w_size;
        do {
          if (L = G.window_size - G.lookahead - G.strstart, G.strstart >= Yt + (Yt - T)) {
            for (c.arraySet(G.window, G.window, Yt, Yt, 0), G.match_start -= Yt, G.strstart -= Yt, G.block_start -= Yt, Et = k = G.hash_size; S = G.head[--Et], G.head[Et] = Yt <= S ? S - Yt : 0, --k; )
              ;
            for (Et = k = Yt; S = G.prev[--Et], G.prev[Et] = Yt <= S ? S - Yt : 0, --k; )
              ;
            L += Yt;
          }
          if (G.strm.avail_in === 0)
            break;
          if (it = G.strm, tt = G.window, _ = G.strstart + G.lookahead, At = L, Rt = void 0, Rt = it.avail_in, At < Rt && (Rt = At), k = Rt === 0 ? 0 : (it.avail_in -= Rt, c.arraySet(tt, it.input, it.next_in, Rt, _), it.state.wrap === 1 ? it.adler = t(it.adler, tt, Rt, _) : it.state.wrap === 2 && (it.adler = o(it.adler, tt, Rt, _)), it.next_in += Rt, it.total_in += Rt, Rt), G.lookahead += k, G.lookahead + G.insert >= I)
            for (V = G.strstart - G.insert, G.ins_h = G.window[V], G.ins_h = (G.ins_h << G.hash_shift ^ G.window[V + 1]) & G.hash_mask; G.insert && (G.ins_h = (G.ins_h << G.hash_shift ^ G.window[V + I - 1]) & G.hash_mask, G.prev[V & G.w_mask] = G.head[G.ins_h], G.head[G.ins_h] = V, V++, G.insert--, !(G.lookahead + G.insert < I)); )
              ;
        } while (G.lookahead < T && G.strm.avail_in !== 0);
      }
      function Lt(G, Et) {
        for (var k, S; ; ) {
          if (G.lookahead < T) {
            if (It(G), G.lookahead < T && Et === n)
              return b;
            if (G.lookahead === 0)
              break;
          }
          if (k = 0, G.lookahead >= I && (G.ins_h = (G.ins_h << G.hash_shift ^ G.window[G.strstart + I - 1]) & G.hash_mask, k = G.prev[G.strstart & G.w_mask] = G.head[G.ins_h], G.head[G.ins_h] = G.strstart), k !== 0 && G.strstart - k <= G.w_size - T && (G.match_length = Tt(G, k)), G.match_length >= I)
            if (S = d._tr_tally(G, G.strstart - G.match_start, G.match_length - I), G.lookahead -= G.match_length, G.match_length <= G.max_lazy_match && G.lookahead >= I) {
              for (G.match_length--; G.strstart++, G.ins_h = (G.ins_h << G.hash_shift ^ G.window[G.strstart + I - 1]) & G.hash_mask, k = G.prev[G.strstart & G.w_mask] = G.head[G.ins_h], G.head[G.ins_h] = G.strstart, --G.match_length != 0; )
                ;
              G.strstart++;
            } else
              G.strstart += G.match_length, G.match_length = 0, G.ins_h = G.window[G.strstart], G.ins_h = (G.ins_h << G.hash_shift ^ G.window[G.strstart + 1]) & G.hash_mask;
          else
            S = d._tr_tally(G, 0, G.window[G.strstart]), G.lookahead--, G.strstart++;
          if (S && (nt(G, !1), G.strm.avail_out === 0))
            return b;
        }
        return G.insert = G.strstart < I - 1 ? G.strstart : I - 1, Et === i ? (nt(G, !0), G.strm.avail_out === 0 ? N : U) : G.last_lit && (nt(G, !1), G.strm.avail_out === 0) ? b : R;
      }
      function Ut(G, Et) {
        for (var k, S, L; ; ) {
          if (G.lookahead < T) {
            if (It(G), G.lookahead < T && Et === n)
              return b;
            if (G.lookahead === 0)
              break;
          }
          if (k = 0, G.lookahead >= I && (G.ins_h = (G.ins_h << G.hash_shift ^ G.window[G.strstart + I - 1]) & G.hash_mask, k = G.prev[G.strstart & G.w_mask] = G.head[G.ins_h], G.head[G.ins_h] = G.strstart), G.prev_length = G.match_length, G.prev_match = G.match_start, G.match_length = I - 1, k !== 0 && G.prev_length < G.max_lazy_match && G.strstart - k <= G.w_size - T && (G.match_length = Tt(G, k), G.match_length <= 5 && (G.strategy === 1 || G.match_length === I && 4096 < G.strstart - G.match_start) && (G.match_length = I - 1)), G.prev_length >= I && G.match_length <= G.prev_length) {
            for (L = G.strstart + G.lookahead - I, S = d._tr_tally(G, G.strstart - 1 - G.prev_match, G.prev_length - I), G.lookahead -= G.prev_length - 1, G.prev_length -= 2; ++G.strstart <= L && (G.ins_h = (G.ins_h << G.hash_shift ^ G.window[G.strstart + I - 1]) & G.hash_mask, k = G.prev[G.strstart & G.w_mask] = G.head[G.ins_h], G.head[G.ins_h] = G.strstart), --G.prev_length != 0; )
              ;
            if (G.match_available = 0, G.match_length = I - 1, G.strstart++, S && (nt(G, !1), G.strm.avail_out === 0))
              return b;
          } else if (G.match_available) {
            if ((S = d._tr_tally(G, 0, G.window[G.strstart - 1])) && nt(G, !1), G.strstart++, G.lookahead--, G.strm.avail_out === 0)
              return b;
          } else
            G.match_available = 1, G.strstart++, G.lookahead--;
        }
        return G.match_available && (S = d._tr_tally(G, 0, G.window[G.strstart - 1]), G.match_available = 0), G.insert = G.strstart < I - 1 ? G.strstart : I - 1, Et === i ? (nt(G, !0), G.strm.avail_out === 0 ? N : U) : G.last_lit && (nt(G, !1), G.strm.avail_out === 0) ? b : R;
      }
      function $(G, Et, k, S, L) {
        this.good_length = G, this.max_lazy = Et, this.nice_length = k, this.max_chain = S, this.func = L;
      }
      function gt() {
        this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = v, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new c.Buf16(2 * w), this.dyn_dtree = new c.Buf16(2 * (2 * e + 1)), this.bl_tree = new c.Buf16(2 * (2 * m + 1)), ht(this.dyn_ltree), ht(this.dyn_dtree), ht(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new c.Buf16(D + 1), this.heap = new c.Buf16(2 * p + 1), ht(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new c.Buf16(2 * p + 1), ht(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
      }
      function ut(G) {
        var Et;
        return G && G.state ? (G.total_in = G.total_out = 0, G.data_type = a, (Et = G.state).pending = 0, Et.pending_out = 0, Et.wrap < 0 && (Et.wrap = -Et.wrap), Et.status = Et.wrap ? A : F, G.adler = Et.wrap === 2 ? 0 : 1, Et.last_flush = n, d._tr_init(Et), f) : W(G, l);
      }
      function st(G) {
        var Et = ut(G);
        return Et === f && function(k) {
          k.window_size = 2 * k.w_size, ht(k.head), k.max_lazy_match = O[k.level].max_lazy, k.good_match = O[k.level].good_length, k.nice_match = O[k.level].nice_length, k.max_chain_length = O[k.level].max_chain, k.strstart = 0, k.block_start = 0, k.lookahead = 0, k.insert = 0, k.match_length = k.prev_length = I - 1, k.match_available = 0, k.ins_h = 0;
        }(G.state), Et;
      }
      function yt(G, Et, k, S, L, V) {
        if (!G)
          return l;
        var it = 1;
        if (Et === u && (Et = 6), S < 0 ? (it = 0, S = -S) : 15 < S && (it = 2, S -= 16), L < 1 || y < L || k !== v || S < 8 || 15 < S || Et < 0 || 9 < Et || V < 0 || h < V)
          return W(G, l);
        S === 8 && (S = 9);
        var tt = new gt();
        return (G.state = tt).strm = G, tt.wrap = it, tt.gzhead = null, tt.w_bits = S, tt.w_size = 1 << tt.w_bits, tt.w_mask = tt.w_size - 1, tt.hash_bits = L + 7, tt.hash_size = 1 << tt.hash_bits, tt.hash_mask = tt.hash_size - 1, tt.hash_shift = ~~((tt.hash_bits + I - 1) / I), tt.window = new c.Buf8(2 * tt.w_size), tt.head = new c.Buf16(tt.hash_size), tt.prev = new c.Buf16(tt.w_size), tt.lit_bufsize = 1 << L + 6, tt.pending_buf_size = 4 * tt.lit_bufsize, tt.pending_buf = new c.Buf8(tt.pending_buf_size), tt.d_buf = 1 * tt.lit_bufsize, tt.l_buf = 3 * tt.lit_bufsize, tt.level = Et, tt.strategy = V, tt.method = k, st(G);
      }
      O = [new $(0, 0, 0, 0, function(G, Et) {
        var k = 65535;
        for (k > G.pending_buf_size - 5 && (k = G.pending_buf_size - 5); ; ) {
          if (G.lookahead <= 1) {
            if (It(G), G.lookahead === 0 && Et === n)
              return b;
            if (G.lookahead === 0)
              break;
          }
          G.strstart += G.lookahead, G.lookahead = 0;
          var S = G.block_start + k;
          if ((G.strstart === 0 || G.strstart >= S) && (G.lookahead = G.strstart - S, G.strstart = S, nt(G, !1), G.strm.avail_out === 0) || G.strstart - G.block_start >= G.w_size - T && (nt(G, !1), G.strm.avail_out === 0))
            return b;
        }
        return G.insert = 0, Et === i ? (nt(G, !0), G.strm.avail_out === 0 ? N : U) : (G.strstart > G.block_start && (nt(G, !1), G.strm.avail_out), b);
      }), new $(4, 4, 8, 4, Lt), new $(4, 5, 16, 8, Lt), new $(4, 6, 32, 32, Lt), new $(4, 4, 16, 16, Ut), new $(8, 16, 32, 32, Ut), new $(8, 16, 128, 128, Ut), new $(8, 32, 128, 256, Ut), new $(32, 128, 258, 1024, Ut), new $(32, 258, 258, 4096, Ut)], B.deflateInit = function(G, Et) {
        return yt(G, Et, v, 15, 8, 0);
      }, B.deflateInit2 = yt, B.deflateReset = st, B.deflateResetKeep = ut, B.deflateSetHeader = function(G, Et) {
        return G && G.state ? G.state.wrap !== 2 ? l : (G.state.gzhead = Et, f) : l;
      }, B.deflate = function(G, Et) {
        var k, S, L, V;
        if (!G || !G.state || 5 < Et || Et < 0)
          return G ? W(G, l) : l;
        if (S = G.state, !G.output || !G.input && G.avail_in !== 0 || S.status === 666 && Et !== i)
          return W(G, G.avail_out === 0 ? -5 : l);
        if (S.strm = G, k = S.last_flush, S.last_flush = Et, S.status === A)
          if (S.wrap === 2)
            G.adler = 0, xt(S, 31), xt(S, 139), xt(S, 8), S.gzhead ? (xt(S, (S.gzhead.text ? 1 : 0) + (S.gzhead.hcrc ? 2 : 0) + (S.gzhead.extra ? 4 : 0) + (S.gzhead.name ? 8 : 0) + (S.gzhead.comment ? 16 : 0)), xt(S, 255 & S.gzhead.time), xt(S, S.gzhead.time >> 8 & 255), xt(S, S.gzhead.time >> 16 & 255), xt(S, S.gzhead.time >> 24 & 255), xt(S, S.level === 9 ? 2 : 2 <= S.strategy || S.level < 2 ? 4 : 0), xt(S, 255 & S.gzhead.os), S.gzhead.extra && S.gzhead.extra.length && (xt(S, 255 & S.gzhead.extra.length), xt(S, S.gzhead.extra.length >> 8 & 255)), S.gzhead.hcrc && (G.adler = o(G.adler, S.pending_buf, S.pending, 0)), S.gzindex = 0, S.status = 69) : (xt(S, 0), xt(S, 0), xt(S, 0), xt(S, 0), xt(S, 0), xt(S, S.level === 9 ? 2 : 2 <= S.strategy || S.level < 2 ? 4 : 0), xt(S, 3), S.status = F);
          else {
            var it = v + (S.w_bits - 8 << 4) << 8;
            it |= (2 <= S.strategy || S.level < 2 ? 0 : S.level < 6 ? 1 : S.level === 6 ? 2 : 3) << 6, S.strstart !== 0 && (it |= 32), it += 31 - it % 31, S.status = F, bt(S, it), S.strstart !== 0 && (bt(S, G.adler >>> 16), bt(S, 65535 & G.adler)), G.adler = 1;
          }
        if (S.status === 69)
          if (S.gzhead.extra) {
            for (L = S.pending; S.gzindex < (65535 & S.gzhead.extra.length) && (S.pending !== S.pending_buf_size || (S.gzhead.hcrc && S.pending > L && (G.adler = o(G.adler, S.pending_buf, S.pending - L, L)), K(G), L = S.pending, S.pending !== S.pending_buf_size)); )
              xt(S, 255 & S.gzhead.extra[S.gzindex]), S.gzindex++;
            S.gzhead.hcrc && S.pending > L && (G.adler = o(G.adler, S.pending_buf, S.pending - L, L)), S.gzindex === S.gzhead.extra.length && (S.gzindex = 0, S.status = 73);
          } else
            S.status = 73;
        if (S.status === 73)
          if (S.gzhead.name) {
            L = S.pending;
            do {
              if (S.pending === S.pending_buf_size && (S.gzhead.hcrc && S.pending > L && (G.adler = o(G.adler, S.pending_buf, S.pending - L, L)), K(G), L = S.pending, S.pending === S.pending_buf_size)) {
                V = 1;
                break;
              }
              V = S.gzindex < S.gzhead.name.length ? 255 & S.gzhead.name.charCodeAt(S.gzindex++) : 0, xt(S, V);
            } while (V !== 0);
            S.gzhead.hcrc && S.pending > L && (G.adler = o(G.adler, S.pending_buf, S.pending - L, L)), V === 0 && (S.gzindex = 0, S.status = 91);
          } else
            S.status = 91;
        if (S.status === 91)
          if (S.gzhead.comment) {
            L = S.pending;
            do {
              if (S.pending === S.pending_buf_size && (S.gzhead.hcrc && S.pending > L && (G.adler = o(G.adler, S.pending_buf, S.pending - L, L)), K(G), L = S.pending, S.pending === S.pending_buf_size)) {
                V = 1;
                break;
              }
              V = S.gzindex < S.gzhead.comment.length ? 255 & S.gzhead.comment.charCodeAt(S.gzindex++) : 0, xt(S, V);
            } while (V !== 0);
            S.gzhead.hcrc && S.pending > L && (G.adler = o(G.adler, S.pending_buf, S.pending - L, L)), V === 0 && (S.status = 103);
          } else
            S.status = 103;
        if (S.status === 103 && (S.gzhead.hcrc ? (S.pending + 2 > S.pending_buf_size && K(G), S.pending + 2 <= S.pending_buf_size && (xt(S, 255 & G.adler), xt(S, G.adler >> 8 & 255), G.adler = 0, S.status = F)) : S.status = F), S.pending !== 0) {
          if (K(G), G.avail_out === 0)
            return S.last_flush = -1, f;
        } else if (G.avail_in === 0 && J(Et) <= J(k) && Et !== i)
          return W(G, -5);
        if (S.status === 666 && G.avail_in !== 0)
          return W(G, -5);
        if (G.avail_in !== 0 || S.lookahead !== 0 || Et !== n && S.status !== 666) {
          var tt = S.strategy === 2 ? function(_, At) {
            for (var Rt; ; ) {
              if (_.lookahead === 0 && (It(_), _.lookahead === 0)) {
                if (At === n)
                  return b;
                break;
              }
              if (_.match_length = 0, Rt = d._tr_tally(_, 0, _.window[_.strstart]), _.lookahead--, _.strstart++, Rt && (nt(_, !1), _.strm.avail_out === 0))
                return b;
            }
            return _.insert = 0, At === i ? (nt(_, !0), _.strm.avail_out === 0 ? N : U) : _.last_lit && (nt(_, !1), _.strm.avail_out === 0) ? b : R;
          }(S, Et) : S.strategy === 3 ? function(_, At) {
            for (var Rt, Yt, Gt, Dt, ae = _.window; ; ) {
              if (_.lookahead <= E) {
                if (It(_), _.lookahead <= E && At === n)
                  return b;
                if (_.lookahead === 0)
                  break;
              }
              if (_.match_length = 0, _.lookahead >= I && 0 < _.strstart && (Yt = ae[Gt = _.strstart - 1]) === ae[++Gt] && Yt === ae[++Gt] && Yt === ae[++Gt]) {
                Dt = _.strstart + E;
                do
                  ;
                while (Yt === ae[++Gt] && Yt === ae[++Gt] && Yt === ae[++Gt] && Yt === ae[++Gt] && Yt === ae[++Gt] && Yt === ae[++Gt] && Yt === ae[++Gt] && Yt === ae[++Gt] && Gt < Dt);
                _.match_length = E - (Dt - Gt), _.match_length > _.lookahead && (_.match_length = _.lookahead);
              }
              if (_.match_length >= I ? (Rt = d._tr_tally(_, 1, _.match_length - I), _.lookahead -= _.match_length, _.strstart += _.match_length, _.match_length = 0) : (Rt = d._tr_tally(_, 0, _.window[_.strstart]), _.lookahead--, _.strstart++), Rt && (nt(_, !1), _.strm.avail_out === 0))
                return b;
            }
            return _.insert = 0, At === i ? (nt(_, !0), _.strm.avail_out === 0 ? N : U) : _.last_lit && (nt(_, !1), _.strm.avail_out === 0) ? b : R;
          }(S, Et) : O[S.level].func(S, Et);
          if (tt !== N && tt !== U || (S.status = 666), tt === b || tt === N)
            return G.avail_out === 0 && (S.last_flush = -1), f;
          if (tt === R && (Et === 1 ? d._tr_align(S) : Et !== 5 && (d._tr_stored_block(S, 0, 0, !1), Et === 3 && (ht(S.head), S.lookahead === 0 && (S.strstart = 0, S.block_start = 0, S.insert = 0))), K(G), G.avail_out === 0))
            return S.last_flush = -1, f;
        }
        return Et !== i ? f : S.wrap <= 0 ? 1 : (S.wrap === 2 ? (xt(S, 255 & G.adler), xt(S, G.adler >> 8 & 255), xt(S, G.adler >> 16 & 255), xt(S, G.adler >> 24 & 255), xt(S, 255 & G.total_in), xt(S, G.total_in >> 8 & 255), xt(S, G.total_in >> 16 & 255), xt(S, G.total_in >> 24 & 255)) : (bt(S, G.adler >>> 16), bt(S, 65535 & G.adler)), K(G), 0 < S.wrap && (S.wrap = -S.wrap), S.pending !== 0 ? f : 1);
      }, B.deflateEnd = function(G) {
        var Et;
        return G && G.state ? (Et = G.state.status) !== A && Et !== 69 && Et !== 73 && Et !== 91 && Et !== 103 && Et !== F && Et !== 666 ? W(G, l) : (G.state = null, Et === F ? W(G, -3) : f) : l;
      }, B.deflateSetDictionary = function(G, Et) {
        var k, S, L, V, it, tt, _, At, Rt = Et.length;
        if (!G || !G.state || (V = (k = G.state).wrap) === 2 || V === 1 && k.status !== A || k.lookahead)
          return l;
        for (V === 1 && (G.adler = t(G.adler, Et, Rt, 0)), k.wrap = 0, Rt >= k.w_size && (V === 0 && (ht(k.head), k.strstart = 0, k.block_start = 0, k.insert = 0), At = new c.Buf8(k.w_size), c.arraySet(At, Et, Rt - k.w_size, k.w_size, 0), Et = At, Rt = k.w_size), it = G.avail_in, tt = G.next_in, _ = G.input, G.avail_in = Rt, G.next_in = 0, G.input = Et, It(k); k.lookahead >= I; ) {
          for (S = k.strstart, L = k.lookahead - (I - 1); k.ins_h = (k.ins_h << k.hash_shift ^ k.window[S + I - 1]) & k.hash_mask, k.prev[S & k.w_mask] = k.head[k.ins_h], k.head[k.ins_h] = S, S++, --L; )
            ;
          k.strstart = S, k.lookahead = I - 1, It(k);
        }
        return k.strstart += k.lookahead, k.block_start = k.strstart, k.insert = k.lookahead, k.lookahead = 0, k.match_length = k.prev_length = I - 1, k.match_available = 0, G.next_in = tt, G.input = _, G.avail_in = it, k.wrap = V, f;
      }, B.deflateInfo = "pako deflate (from Nodeca project)";
    }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./messages": 51, "./trees": 52 }], 47: [function(x, C, B) {
      C.exports = function() {
        this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = !1;
      };
    }, {}], 48: [function(x, C, B) {
      C.exports = function(O, c) {
        var d, t, o, r, n, i, f, l, u, h, a, v, y, p, e, m, w, D, I, E, T, A, F, b, R;
        d = O.state, t = O.next_in, b = O.input, o = t + (O.avail_in - 5), r = O.next_out, R = O.output, n = r - (c - O.avail_out), i = r + (O.avail_out - 257), f = d.dmax, l = d.wsize, u = d.whave, h = d.wnext, a = d.window, v = d.hold, y = d.bits, p = d.lencode, e = d.distcode, m = (1 << d.lenbits) - 1, w = (1 << d.distbits) - 1;
        t:
          do {
            y < 15 && (v += b[t++] << y, y += 8, v += b[t++] << y, y += 8), D = p[v & m];
            e:
              for (; ; ) {
                if (v >>>= I = D >>> 24, y -= I, (I = D >>> 16 & 255) === 0)
                  R[r++] = 65535 & D;
                else {
                  if (!(16 & I)) {
                    if (!(64 & I)) {
                      D = p[(65535 & D) + (v & (1 << I) - 1)];
                      continue e;
                    }
                    if (32 & I) {
                      d.mode = 12;
                      break t;
                    }
                    O.msg = "invalid literal/length code", d.mode = 30;
                    break t;
                  }
                  E = 65535 & D, (I &= 15) && (y < I && (v += b[t++] << y, y += 8), E += v & (1 << I) - 1, v >>>= I, y -= I), y < 15 && (v += b[t++] << y, y += 8, v += b[t++] << y, y += 8), D = e[v & w];
                  r:
                    for (; ; ) {
                      if (v >>>= I = D >>> 24, y -= I, !(16 & (I = D >>> 16 & 255))) {
                        if (!(64 & I)) {
                          D = e[(65535 & D) + (v & (1 << I) - 1)];
                          continue r;
                        }
                        O.msg = "invalid distance code", d.mode = 30;
                        break t;
                      }
                      if (T = 65535 & D, y < (I &= 15) && (v += b[t++] << y, (y += 8) < I && (v += b[t++] << y, y += 8)), f < (T += v & (1 << I) - 1)) {
                        O.msg = "invalid distance too far back", d.mode = 30;
                        break t;
                      }
                      if (v >>>= I, y -= I, (I = r - n) < T) {
                        if (u < (I = T - I) && d.sane) {
                          O.msg = "invalid distance too far back", d.mode = 30;
                          break t;
                        }
                        if (F = a, (A = 0) === h) {
                          if (A += l - I, I < E) {
                            for (E -= I; R[r++] = a[A++], --I; )
                              ;
                            A = r - T, F = R;
                          }
                        } else if (h < I) {
                          if (A += l + h - I, (I -= h) < E) {
                            for (E -= I; R[r++] = a[A++], --I; )
                              ;
                            if (A = 0, h < E) {
                              for (E -= I = h; R[r++] = a[A++], --I; )
                                ;
                              A = r - T, F = R;
                            }
                          }
                        } else if (A += h - I, I < E) {
                          for (E -= I; R[r++] = a[A++], --I; )
                            ;
                          A = r - T, F = R;
                        }
                        for (; 2 < E; )
                          R[r++] = F[A++], R[r++] = F[A++], R[r++] = F[A++], E -= 3;
                        E && (R[r++] = F[A++], 1 < E && (R[r++] = F[A++]));
                      } else {
                        for (A = r - T; R[r++] = R[A++], R[r++] = R[A++], R[r++] = R[A++], 2 < (E -= 3); )
                          ;
                        E && (R[r++] = R[A++], 1 < E && (R[r++] = R[A++]));
                      }
                      break;
                    }
                }
                break;
              }
          } while (t < o && r < i);
        t -= E = y >> 3, v &= (1 << (y -= E << 3)) - 1, O.next_in = t, O.next_out = r, O.avail_in = t < o ? o - t + 5 : 5 - (t - o), O.avail_out = r < i ? i - r + 257 : 257 - (r - i), d.hold = v, d.bits = y;
      };
    }, {}], 49: [function(x, C, B) {
      var O = x("../utils/common"), c = x("./adler32"), d = x("./crc32"), t = x("./inffast"), o = x("./inftrees"), r = 1, n = 2, i = 0, f = -2, l = 1, u = 852, h = 592;
      function a(A) {
        return (A >>> 24 & 255) + (A >>> 8 & 65280) + ((65280 & A) << 8) + ((255 & A) << 24);
      }
      function v() {
        this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new O.Buf16(320), this.work = new O.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
      }
      function y(A) {
        var F;
        return A && A.state ? (F = A.state, A.total_in = A.total_out = F.total = 0, A.msg = "", F.wrap && (A.adler = 1 & F.wrap), F.mode = l, F.last = 0, F.havedict = 0, F.dmax = 32768, F.head = null, F.hold = 0, F.bits = 0, F.lencode = F.lendyn = new O.Buf32(u), F.distcode = F.distdyn = new O.Buf32(h), F.sane = 1, F.back = -1, i) : f;
      }
      function p(A) {
        var F;
        return A && A.state ? ((F = A.state).wsize = 0, F.whave = 0, F.wnext = 0, y(A)) : f;
      }
      function e(A, F) {
        var b, R;
        return A && A.state ? (R = A.state, F < 0 ? (b = 0, F = -F) : (b = 1 + (F >> 4), F < 48 && (F &= 15)), F && (F < 8 || 15 < F) ? f : (R.window !== null && R.wbits !== F && (R.window = null), R.wrap = b, R.wbits = F, p(A))) : f;
      }
      function m(A, F) {
        var b, R;
        return A ? (R = new v(), (A.state = R).window = null, (b = e(A, F)) !== i && (A.state = null), b) : f;
      }
      var w, D, I = !0;
      function E(A) {
        if (I) {
          var F;
          for (w = new O.Buf32(512), D = new O.Buf32(32), F = 0; F < 144; )
            A.lens[F++] = 8;
          for (; F < 256; )
            A.lens[F++] = 9;
          for (; F < 280; )
            A.lens[F++] = 7;
          for (; F < 288; )
            A.lens[F++] = 8;
          for (o(r, A.lens, 0, 288, w, 0, A.work, { bits: 9 }), F = 0; F < 32; )
            A.lens[F++] = 5;
          o(n, A.lens, 0, 32, D, 0, A.work, { bits: 5 }), I = !1;
        }
        A.lencode = w, A.lenbits = 9, A.distcode = D, A.distbits = 5;
      }
      function T(A, F, b, R) {
        var N, U = A.state;
        return U.window === null && (U.wsize = 1 << U.wbits, U.wnext = 0, U.whave = 0, U.window = new O.Buf8(U.wsize)), R >= U.wsize ? (O.arraySet(U.window, F, b - U.wsize, U.wsize, 0), U.wnext = 0, U.whave = U.wsize) : (R < (N = U.wsize - U.wnext) && (N = R), O.arraySet(U.window, F, b - R, N, U.wnext), (R -= N) ? (O.arraySet(U.window, F, b - R, R, 0), U.wnext = R, U.whave = U.wsize) : (U.wnext += N, U.wnext === U.wsize && (U.wnext = 0), U.whave < U.wsize && (U.whave += N))), 0;
      }
      B.inflateReset = p, B.inflateReset2 = e, B.inflateResetKeep = y, B.inflateInit = function(A) {
        return m(A, 15);
      }, B.inflateInit2 = m, B.inflate = function(A, F) {
        var b, R, N, U, W, J, ht, K, nt, xt, bt, Tt, It, Lt, Ut, $, gt, ut, st, yt, G, Et, k, S, L = 0, V = new O.Buf8(4), it = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
        if (!A || !A.state || !A.output || !A.input && A.avail_in !== 0)
          return f;
        (b = A.state).mode === 12 && (b.mode = 13), W = A.next_out, N = A.output, ht = A.avail_out, U = A.next_in, R = A.input, J = A.avail_in, K = b.hold, nt = b.bits, xt = J, bt = ht, Et = i;
        t:
          for (; ; )
            switch (b.mode) {
              case l:
                if (b.wrap === 0) {
                  b.mode = 13;
                  break;
                }
                for (; nt < 16; ) {
                  if (J === 0)
                    break t;
                  J--, K += R[U++] << nt, nt += 8;
                }
                if (2 & b.wrap && K === 35615) {
                  V[b.check = 0] = 255 & K, V[1] = K >>> 8 & 255, b.check = d(b.check, V, 2, 0), nt = K = 0, b.mode = 2;
                  break;
                }
                if (b.flags = 0, b.head && (b.head.done = !1), !(1 & b.wrap) || (((255 & K) << 8) + (K >> 8)) % 31) {
                  A.msg = "incorrect header check", b.mode = 30;
                  break;
                }
                if ((15 & K) != 8) {
                  A.msg = "unknown compression method", b.mode = 30;
                  break;
                }
                if (nt -= 4, G = 8 + (15 & (K >>>= 4)), b.wbits === 0)
                  b.wbits = G;
                else if (G > b.wbits) {
                  A.msg = "invalid window size", b.mode = 30;
                  break;
                }
                b.dmax = 1 << G, A.adler = b.check = 1, b.mode = 512 & K ? 10 : 12, nt = K = 0;
                break;
              case 2:
                for (; nt < 16; ) {
                  if (J === 0)
                    break t;
                  J--, K += R[U++] << nt, nt += 8;
                }
                if (b.flags = K, (255 & b.flags) != 8) {
                  A.msg = "unknown compression method", b.mode = 30;
                  break;
                }
                if (57344 & b.flags) {
                  A.msg = "unknown header flags set", b.mode = 30;
                  break;
                }
                b.head && (b.head.text = K >> 8 & 1), 512 & b.flags && (V[0] = 255 & K, V[1] = K >>> 8 & 255, b.check = d(b.check, V, 2, 0)), nt = K = 0, b.mode = 3;
              case 3:
                for (; nt < 32; ) {
                  if (J === 0)
                    break t;
                  J--, K += R[U++] << nt, nt += 8;
                }
                b.head && (b.head.time = K), 512 & b.flags && (V[0] = 255 & K, V[1] = K >>> 8 & 255, V[2] = K >>> 16 & 255, V[3] = K >>> 24 & 255, b.check = d(b.check, V, 4, 0)), nt = K = 0, b.mode = 4;
              case 4:
                for (; nt < 16; ) {
                  if (J === 0)
                    break t;
                  J--, K += R[U++] << nt, nt += 8;
                }
                b.head && (b.head.xflags = 255 & K, b.head.os = K >> 8), 512 & b.flags && (V[0] = 255 & K, V[1] = K >>> 8 & 255, b.check = d(b.check, V, 2, 0)), nt = K = 0, b.mode = 5;
              case 5:
                if (1024 & b.flags) {
                  for (; nt < 16; ) {
                    if (J === 0)
                      break t;
                    J--, K += R[U++] << nt, nt += 8;
                  }
                  b.length = K, b.head && (b.head.extra_len = K), 512 & b.flags && (V[0] = 255 & K, V[1] = K >>> 8 & 255, b.check = d(b.check, V, 2, 0)), nt = K = 0;
                } else
                  b.head && (b.head.extra = null);
                b.mode = 6;
              case 6:
                if (1024 & b.flags && (J < (Tt = b.length) && (Tt = J), Tt && (b.head && (G = b.head.extra_len - b.length, b.head.extra || (b.head.extra = new Array(b.head.extra_len)), O.arraySet(b.head.extra, R, U, Tt, G)), 512 & b.flags && (b.check = d(b.check, R, Tt, U)), J -= Tt, U += Tt, b.length -= Tt), b.length))
                  break t;
                b.length = 0, b.mode = 7;
              case 7:
                if (2048 & b.flags) {
                  if (J === 0)
                    break t;
                  for (Tt = 0; G = R[U + Tt++], b.head && G && b.length < 65536 && (b.head.name += String.fromCharCode(G)), G && Tt < J; )
                    ;
                  if (512 & b.flags && (b.check = d(b.check, R, Tt, U)), J -= Tt, U += Tt, G)
                    break t;
                } else
                  b.head && (b.head.name = null);
                b.length = 0, b.mode = 8;
              case 8:
                if (4096 & b.flags) {
                  if (J === 0)
                    break t;
                  for (Tt = 0; G = R[U + Tt++], b.head && G && b.length < 65536 && (b.head.comment += String.fromCharCode(G)), G && Tt < J; )
                    ;
                  if (512 & b.flags && (b.check = d(b.check, R, Tt, U)), J -= Tt, U += Tt, G)
                    break t;
                } else
                  b.head && (b.head.comment = null);
                b.mode = 9;
              case 9:
                if (512 & b.flags) {
                  for (; nt < 16; ) {
                    if (J === 0)
                      break t;
                    J--, K += R[U++] << nt, nt += 8;
                  }
                  if (K !== (65535 & b.check)) {
                    A.msg = "header crc mismatch", b.mode = 30;
                    break;
                  }
                  nt = K = 0;
                }
                b.head && (b.head.hcrc = b.flags >> 9 & 1, b.head.done = !0), A.adler = b.check = 0, b.mode = 12;
                break;
              case 10:
                for (; nt < 32; ) {
                  if (J === 0)
                    break t;
                  J--, K += R[U++] << nt, nt += 8;
                }
                A.adler = b.check = a(K), nt = K = 0, b.mode = 11;
              case 11:
                if (b.havedict === 0)
                  return A.next_out = W, A.avail_out = ht, A.next_in = U, A.avail_in = J, b.hold = K, b.bits = nt, 2;
                A.adler = b.check = 1, b.mode = 12;
              case 12:
                if (F === 5 || F === 6)
                  break t;
              case 13:
                if (b.last) {
                  K >>>= 7 & nt, nt -= 7 & nt, b.mode = 27;
                  break;
                }
                for (; nt < 3; ) {
                  if (J === 0)
                    break t;
                  J--, K += R[U++] << nt, nt += 8;
                }
                switch (b.last = 1 & K, nt -= 1, 3 & (K >>>= 1)) {
                  case 0:
                    b.mode = 14;
                    break;
                  case 1:
                    if (E(b), b.mode = 20, F !== 6)
                      break;
                    K >>>= 2, nt -= 2;
                    break t;
                  case 2:
                    b.mode = 17;
                    break;
                  case 3:
                    A.msg = "invalid block type", b.mode = 30;
                }
                K >>>= 2, nt -= 2;
                break;
              case 14:
                for (K >>>= 7 & nt, nt -= 7 & nt; nt < 32; ) {
                  if (J === 0)
                    break t;
                  J--, K += R[U++] << nt, nt += 8;
                }
                if ((65535 & K) != (K >>> 16 ^ 65535)) {
                  A.msg = "invalid stored block lengths", b.mode = 30;
                  break;
                }
                if (b.length = 65535 & K, nt = K = 0, b.mode = 15, F === 6)
                  break t;
              case 15:
                b.mode = 16;
              case 16:
                if (Tt = b.length) {
                  if (J < Tt && (Tt = J), ht < Tt && (Tt = ht), Tt === 0)
                    break t;
                  O.arraySet(N, R, U, Tt, W), J -= Tt, U += Tt, ht -= Tt, W += Tt, b.length -= Tt;
                  break;
                }
                b.mode = 12;
                break;
              case 17:
                for (; nt < 14; ) {
                  if (J === 0)
                    break t;
                  J--, K += R[U++] << nt, nt += 8;
                }
                if (b.nlen = 257 + (31 & K), K >>>= 5, nt -= 5, b.ndist = 1 + (31 & K), K >>>= 5, nt -= 5, b.ncode = 4 + (15 & K), K >>>= 4, nt -= 4, 286 < b.nlen || 30 < b.ndist) {
                  A.msg = "too many length or distance symbols", b.mode = 30;
                  break;
                }
                b.have = 0, b.mode = 18;
              case 18:
                for (; b.have < b.ncode; ) {
                  for (; nt < 3; ) {
                    if (J === 0)
                      break t;
                    J--, K += R[U++] << nt, nt += 8;
                  }
                  b.lens[it[b.have++]] = 7 & K, K >>>= 3, nt -= 3;
                }
                for (; b.have < 19; )
                  b.lens[it[b.have++]] = 0;
                if (b.lencode = b.lendyn, b.lenbits = 7, k = { bits: b.lenbits }, Et = o(0, b.lens, 0, 19, b.lencode, 0, b.work, k), b.lenbits = k.bits, Et) {
                  A.msg = "invalid code lengths set", b.mode = 30;
                  break;
                }
                b.have = 0, b.mode = 19;
              case 19:
                for (; b.have < b.nlen + b.ndist; ) {
                  for (; $ = (L = b.lencode[K & (1 << b.lenbits) - 1]) >>> 16 & 255, gt = 65535 & L, !((Ut = L >>> 24) <= nt); ) {
                    if (J === 0)
                      break t;
                    J--, K += R[U++] << nt, nt += 8;
                  }
                  if (gt < 16)
                    K >>>= Ut, nt -= Ut, b.lens[b.have++] = gt;
                  else {
                    if (gt === 16) {
                      for (S = Ut + 2; nt < S; ) {
                        if (J === 0)
                          break t;
                        J--, K += R[U++] << nt, nt += 8;
                      }
                      if (K >>>= Ut, nt -= Ut, b.have === 0) {
                        A.msg = "invalid bit length repeat", b.mode = 30;
                        break;
                      }
                      G = b.lens[b.have - 1], Tt = 3 + (3 & K), K >>>= 2, nt -= 2;
                    } else if (gt === 17) {
                      for (S = Ut + 3; nt < S; ) {
                        if (J === 0)
                          break t;
                        J--, K += R[U++] << nt, nt += 8;
                      }
                      nt -= Ut, G = 0, Tt = 3 + (7 & (K >>>= Ut)), K >>>= 3, nt -= 3;
                    } else {
                      for (S = Ut + 7; nt < S; ) {
                        if (J === 0)
                          break t;
                        J--, K += R[U++] << nt, nt += 8;
                      }
                      nt -= Ut, G = 0, Tt = 11 + (127 & (K >>>= Ut)), K >>>= 7, nt -= 7;
                    }
                    if (b.have + Tt > b.nlen + b.ndist) {
                      A.msg = "invalid bit length repeat", b.mode = 30;
                      break;
                    }
                    for (; Tt--; )
                      b.lens[b.have++] = G;
                  }
                }
                if (b.mode === 30)
                  break;
                if (b.lens[256] === 0) {
                  A.msg = "invalid code -- missing end-of-block", b.mode = 30;
                  break;
                }
                if (b.lenbits = 9, k = { bits: b.lenbits }, Et = o(r, b.lens, 0, b.nlen, b.lencode, 0, b.work, k), b.lenbits = k.bits, Et) {
                  A.msg = "invalid literal/lengths set", b.mode = 30;
                  break;
                }
                if (b.distbits = 6, b.distcode = b.distdyn, k = { bits: b.distbits }, Et = o(n, b.lens, b.nlen, b.ndist, b.distcode, 0, b.work, k), b.distbits = k.bits, Et) {
                  A.msg = "invalid distances set", b.mode = 30;
                  break;
                }
                if (b.mode = 20, F === 6)
                  break t;
              case 20:
                b.mode = 21;
              case 21:
                if (6 <= J && 258 <= ht) {
                  A.next_out = W, A.avail_out = ht, A.next_in = U, A.avail_in = J, b.hold = K, b.bits = nt, t(A, bt), W = A.next_out, N = A.output, ht = A.avail_out, U = A.next_in, R = A.input, J = A.avail_in, K = b.hold, nt = b.bits, b.mode === 12 && (b.back = -1);
                  break;
                }
                for (b.back = 0; $ = (L = b.lencode[K & (1 << b.lenbits) - 1]) >>> 16 & 255, gt = 65535 & L, !((Ut = L >>> 24) <= nt); ) {
                  if (J === 0)
                    break t;
                  J--, K += R[U++] << nt, nt += 8;
                }
                if ($ && !(240 & $)) {
                  for (ut = Ut, st = $, yt = gt; $ = (L = b.lencode[yt + ((K & (1 << ut + st) - 1) >> ut)]) >>> 16 & 255, gt = 65535 & L, !(ut + (Ut = L >>> 24) <= nt); ) {
                    if (J === 0)
                      break t;
                    J--, K += R[U++] << nt, nt += 8;
                  }
                  K >>>= ut, nt -= ut, b.back += ut;
                }
                if (K >>>= Ut, nt -= Ut, b.back += Ut, b.length = gt, $ === 0) {
                  b.mode = 26;
                  break;
                }
                if (32 & $) {
                  b.back = -1, b.mode = 12;
                  break;
                }
                if (64 & $) {
                  A.msg = "invalid literal/length code", b.mode = 30;
                  break;
                }
                b.extra = 15 & $, b.mode = 22;
              case 22:
                if (b.extra) {
                  for (S = b.extra; nt < S; ) {
                    if (J === 0)
                      break t;
                    J--, K += R[U++] << nt, nt += 8;
                  }
                  b.length += K & (1 << b.extra) - 1, K >>>= b.extra, nt -= b.extra, b.back += b.extra;
                }
                b.was = b.length, b.mode = 23;
              case 23:
                for (; $ = (L = b.distcode[K & (1 << b.distbits) - 1]) >>> 16 & 255, gt = 65535 & L, !((Ut = L >>> 24) <= nt); ) {
                  if (J === 0)
                    break t;
                  J--, K += R[U++] << nt, nt += 8;
                }
                if (!(240 & $)) {
                  for (ut = Ut, st = $, yt = gt; $ = (L = b.distcode[yt + ((K & (1 << ut + st) - 1) >> ut)]) >>> 16 & 255, gt = 65535 & L, !(ut + (Ut = L >>> 24) <= nt); ) {
                    if (J === 0)
                      break t;
                    J--, K += R[U++] << nt, nt += 8;
                  }
                  K >>>= ut, nt -= ut, b.back += ut;
                }
                if (K >>>= Ut, nt -= Ut, b.back += Ut, 64 & $) {
                  A.msg = "invalid distance code", b.mode = 30;
                  break;
                }
                b.offset = gt, b.extra = 15 & $, b.mode = 24;
              case 24:
                if (b.extra) {
                  for (S = b.extra; nt < S; ) {
                    if (J === 0)
                      break t;
                    J--, K += R[U++] << nt, nt += 8;
                  }
                  b.offset += K & (1 << b.extra) - 1, K >>>= b.extra, nt -= b.extra, b.back += b.extra;
                }
                if (b.offset > b.dmax) {
                  A.msg = "invalid distance too far back", b.mode = 30;
                  break;
                }
                b.mode = 25;
              case 25:
                if (ht === 0)
                  break t;
                if (Tt = bt - ht, b.offset > Tt) {
                  if ((Tt = b.offset - Tt) > b.whave && b.sane) {
                    A.msg = "invalid distance too far back", b.mode = 30;
                    break;
                  }
                  It = Tt > b.wnext ? (Tt -= b.wnext, b.wsize - Tt) : b.wnext - Tt, Tt > b.length && (Tt = b.length), Lt = b.window;
                } else
                  Lt = N, It = W - b.offset, Tt = b.length;
                for (ht < Tt && (Tt = ht), ht -= Tt, b.length -= Tt; N[W++] = Lt[It++], --Tt; )
                  ;
                b.length === 0 && (b.mode = 21);
                break;
              case 26:
                if (ht === 0)
                  break t;
                N[W++] = b.length, ht--, b.mode = 21;
                break;
              case 27:
                if (b.wrap) {
                  for (; nt < 32; ) {
                    if (J === 0)
                      break t;
                    J--, K |= R[U++] << nt, nt += 8;
                  }
                  if (bt -= ht, A.total_out += bt, b.total += bt, bt && (A.adler = b.check = b.flags ? d(b.check, N, bt, W - bt) : c(b.check, N, bt, W - bt)), bt = ht, (b.flags ? K : a(K)) !== b.check) {
                    A.msg = "incorrect data check", b.mode = 30;
                    break;
                  }
                  nt = K = 0;
                }
                b.mode = 28;
              case 28:
                if (b.wrap && b.flags) {
                  for (; nt < 32; ) {
                    if (J === 0)
                      break t;
                    J--, K += R[U++] << nt, nt += 8;
                  }
                  if (K !== (4294967295 & b.total)) {
                    A.msg = "incorrect length check", b.mode = 30;
                    break;
                  }
                  nt = K = 0;
                }
                b.mode = 29;
              case 29:
                Et = 1;
                break t;
              case 30:
                Et = -3;
                break t;
              case 31:
                return -4;
              case 32:
              default:
                return f;
            }
        return A.next_out = W, A.avail_out = ht, A.next_in = U, A.avail_in = J, b.hold = K, b.bits = nt, (b.wsize || bt !== A.avail_out && b.mode < 30 && (b.mode < 27 || F !== 4)) && T(A, A.output, A.next_out, bt - A.avail_out) ? (b.mode = 31, -4) : (xt -= A.avail_in, bt -= A.avail_out, A.total_in += xt, A.total_out += bt, b.total += bt, b.wrap && bt && (A.adler = b.check = b.flags ? d(b.check, N, bt, A.next_out - bt) : c(b.check, N, bt, A.next_out - bt)), A.data_type = b.bits + (b.last ? 64 : 0) + (b.mode === 12 ? 128 : 0) + (b.mode === 20 || b.mode === 15 ? 256 : 0), (xt == 0 && bt === 0 || F === 4) && Et === i && (Et = -5), Et);
      }, B.inflateEnd = function(A) {
        if (!A || !A.state)
          return f;
        var F = A.state;
        return F.window && (F.window = null), A.state = null, i;
      }, B.inflateGetHeader = function(A, F) {
        var b;
        return A && A.state && 2 & (b = A.state).wrap ? ((b.head = F).done = !1, i) : f;
      }, B.inflateSetDictionary = function(A, F) {
        var b, R = F.length;
        return A && A.state ? (b = A.state).wrap !== 0 && b.mode !== 11 ? f : b.mode === 11 && c(1, F, R, 0) !== b.check ? -3 : T(A, F, R, R) ? (b.mode = 31, -4) : (b.havedict = 1, i) : f;
      }, B.inflateInfo = "pako inflate (from Nodeca project)";
    }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./inffast": 48, "./inftrees": 50 }], 50: [function(x, C, B) {
      var O = x("../utils/common"), c = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], d = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], t = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], o = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
      C.exports = function(r, n, i, f, l, u, h, a) {
        var v, y, p, e, m, w, D, I, E, T = a.bits, A = 0, F = 0, b = 0, R = 0, N = 0, U = 0, W = 0, J = 0, ht = 0, K = 0, nt = null, xt = 0, bt = new O.Buf16(16), Tt = new O.Buf16(16), It = null, Lt = 0;
        for (A = 0; A <= 15; A++)
          bt[A] = 0;
        for (F = 0; F < f; F++)
          bt[n[i + F]]++;
        for (N = T, R = 15; 1 <= R && bt[R] === 0; R--)
          ;
        if (R < N && (N = R), R === 0)
          return l[u++] = 20971520, l[u++] = 20971520, a.bits = 1, 0;
        for (b = 1; b < R && bt[b] === 0; b++)
          ;
        for (N < b && (N = b), A = J = 1; A <= 15; A++)
          if (J <<= 1, (J -= bt[A]) < 0)
            return -1;
        if (0 < J && (r === 0 || R !== 1))
          return -1;
        for (Tt[1] = 0, A = 1; A < 15; A++)
          Tt[A + 1] = Tt[A] + bt[A];
        for (F = 0; F < f; F++)
          n[i + F] !== 0 && (h[Tt[n[i + F]]++] = F);
        if (w = r === 0 ? (nt = It = h, 19) : r === 1 ? (nt = c, xt -= 257, It = d, Lt -= 257, 256) : (nt = t, It = o, -1), A = b, m = u, W = F = K = 0, p = -1, e = (ht = 1 << (U = N)) - 1, r === 1 && 852 < ht || r === 2 && 592 < ht)
          return 1;
        for (; ; ) {
          for (D = A - W, E = h[F] < w ? (I = 0, h[F]) : h[F] > w ? (I = It[Lt + h[F]], nt[xt + h[F]]) : (I = 96, 0), v = 1 << A - W, b = y = 1 << U; l[m + (K >> W) + (y -= v)] = D << 24 | I << 16 | E | 0, y !== 0; )
            ;
          for (v = 1 << A - 1; K & v; )
            v >>= 1;
          if (v !== 0 ? (K &= v - 1, K += v) : K = 0, F++, --bt[A] == 0) {
            if (A === R)
              break;
            A = n[i + h[F]];
          }
          if (N < A && (K & e) !== p) {
            for (W === 0 && (W = N), m += b, J = 1 << (U = A - W); U + W < R && !((J -= bt[U + W]) <= 0); )
              U++, J <<= 1;
            if (ht += 1 << U, r === 1 && 852 < ht || r === 2 && 592 < ht)
              return 1;
            l[p = K & e] = N << 24 | U << 16 | m - u | 0;
          }
        }
        return K !== 0 && (l[m + K] = A - W << 24 | 64 << 16 | 0), a.bits = N, 0;
      };
    }, { "../utils/common": 41 }], 51: [function(x, C, B) {
      C.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
    }, {}], 52: [function(x, C, B) {
      var O = x("../utils/common"), c = 0, d = 1;
      function t(L) {
        for (var V = L.length; 0 <= --V; )
          L[V] = 0;
      }
      var o = 0, r = 29, n = 256, i = n + 1 + r, f = 30, l = 19, u = 2 * i + 1, h = 15, a = 16, v = 7, y = 256, p = 16, e = 17, m = 18, w = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], D = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], I = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], E = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], T = new Array(2 * (i + 2));
      t(T);
      var A = new Array(2 * f);
      t(A);
      var F = new Array(512);
      t(F);
      var b = new Array(256);
      t(b);
      var R = new Array(r);
      t(R);
      var N, U, W, J = new Array(f);
      function ht(L, V, it, tt, _) {
        this.static_tree = L, this.extra_bits = V, this.extra_base = it, this.elems = tt, this.max_length = _, this.has_stree = L && L.length;
      }
      function K(L, V) {
        this.dyn_tree = L, this.max_code = 0, this.stat_desc = V;
      }
      function nt(L) {
        return L < 256 ? F[L] : F[256 + (L >>> 7)];
      }
      function xt(L, V) {
        L.pending_buf[L.pending++] = 255 & V, L.pending_buf[L.pending++] = V >>> 8 & 255;
      }
      function bt(L, V, it) {
        L.bi_valid > a - it ? (L.bi_buf |= V << L.bi_valid & 65535, xt(L, L.bi_buf), L.bi_buf = V >> a - L.bi_valid, L.bi_valid += it - a) : (L.bi_buf |= V << L.bi_valid & 65535, L.bi_valid += it);
      }
      function Tt(L, V, it) {
        bt(L, it[2 * V], it[2 * V + 1]);
      }
      function It(L, V) {
        for (var it = 0; it |= 1 & L, L >>>= 1, it <<= 1, 0 < --V; )
          ;
        return it >>> 1;
      }
      function Lt(L, V, it) {
        var tt, _, At = new Array(h + 1), Rt = 0;
        for (tt = 1; tt <= h; tt++)
          At[tt] = Rt = Rt + it[tt - 1] << 1;
        for (_ = 0; _ <= V; _++) {
          var Yt = L[2 * _ + 1];
          Yt !== 0 && (L[2 * _] = It(At[Yt]++, Yt));
        }
      }
      function Ut(L) {
        var V;
        for (V = 0; V < i; V++)
          L.dyn_ltree[2 * V] = 0;
        for (V = 0; V < f; V++)
          L.dyn_dtree[2 * V] = 0;
        for (V = 0; V < l; V++)
          L.bl_tree[2 * V] = 0;
        L.dyn_ltree[2 * y] = 1, L.opt_len = L.static_len = 0, L.last_lit = L.matches = 0;
      }
      function $(L) {
        8 < L.bi_valid ? xt(L, L.bi_buf) : 0 < L.bi_valid && (L.pending_buf[L.pending++] = L.bi_buf), L.bi_buf = 0, L.bi_valid = 0;
      }
      function gt(L, V, it, tt) {
        var _ = 2 * V, At = 2 * it;
        return L[_] < L[At] || L[_] === L[At] && tt[V] <= tt[it];
      }
      function ut(L, V, it) {
        for (var tt = L.heap[it], _ = it << 1; _ <= L.heap_len && (_ < L.heap_len && gt(V, L.heap[_ + 1], L.heap[_], L.depth) && _++, !gt(V, tt, L.heap[_], L.depth)); )
          L.heap[it] = L.heap[_], it = _, _ <<= 1;
        L.heap[it] = tt;
      }
      function st(L, V, it) {
        var tt, _, At, Rt, Yt = 0;
        if (L.last_lit !== 0)
          for (; tt = L.pending_buf[L.d_buf + 2 * Yt] << 8 | L.pending_buf[L.d_buf + 2 * Yt + 1], _ = L.pending_buf[L.l_buf + Yt], Yt++, tt === 0 ? Tt(L, _, V) : (Tt(L, (At = b[_]) + n + 1, V), (Rt = w[At]) !== 0 && bt(L, _ -= R[At], Rt), Tt(L, At = nt(--tt), it), (Rt = D[At]) !== 0 && bt(L, tt -= J[At], Rt)), Yt < L.last_lit; )
            ;
        Tt(L, y, V);
      }
      function yt(L, V) {
        var it, tt, _, At = V.dyn_tree, Rt = V.stat_desc.static_tree, Yt = V.stat_desc.has_stree, Gt = V.stat_desc.elems, Dt = -1;
        for (L.heap_len = 0, L.heap_max = u, it = 0; it < Gt; it++)
          At[2 * it] !== 0 ? (L.heap[++L.heap_len] = Dt = it, L.depth[it] = 0) : At[2 * it + 1] = 0;
        for (; L.heap_len < 2; )
          At[2 * (_ = L.heap[++L.heap_len] = Dt < 2 ? ++Dt : 0)] = 1, L.depth[_] = 0, L.opt_len--, Yt && (L.static_len -= Rt[2 * _ + 1]);
        for (V.max_code = Dt, it = L.heap_len >> 1; 1 <= it; it--)
          ut(L, At, it);
        for (_ = Gt; it = L.heap[1], L.heap[1] = L.heap[L.heap_len--], ut(L, At, 1), tt = L.heap[1], L.heap[--L.heap_max] = it, L.heap[--L.heap_max] = tt, At[2 * _] = At[2 * it] + At[2 * tt], L.depth[_] = (L.depth[it] >= L.depth[tt] ? L.depth[it] : L.depth[tt]) + 1, At[2 * it + 1] = At[2 * tt + 1] = _, L.heap[1] = _++, ut(L, At, 1), 2 <= L.heap_len; )
          ;
        L.heap[--L.heap_max] = L.heap[1], function(ae, Ae) {
          var xe, ce, we, zt, Qt, le, de = Ae.dyn_tree, be = Ae.max_code, Oe = Ae.stat_desc.static_tree, Fe = Ae.stat_desc.has_stree, Ft = Ae.stat_desc.extra_bits, fe = Ae.stat_desc.extra_base, ot = Ae.stat_desc.max_length, Y = 0;
          for (zt = 0; zt <= h; zt++)
            ae.bl_count[zt] = 0;
          for (de[2 * ae.heap[ae.heap_max] + 1] = 0, xe = ae.heap_max + 1; xe < u; xe++)
            ot < (zt = de[2 * de[2 * (ce = ae.heap[xe]) + 1] + 1] + 1) && (zt = ot, Y++), de[2 * ce + 1] = zt, be < ce || (ae.bl_count[zt]++, Qt = 0, fe <= ce && (Qt = Ft[ce - fe]), le = de[2 * ce], ae.opt_len += le * (zt + Qt), Fe && (ae.static_len += le * (Oe[2 * ce + 1] + Qt)));
          if (Y !== 0) {
            do {
              for (zt = ot - 1; ae.bl_count[zt] === 0; )
                zt--;
              ae.bl_count[zt]--, ae.bl_count[zt + 1] += 2, ae.bl_count[ot]--, Y -= 2;
            } while (0 < Y);
            for (zt = ot; zt !== 0; zt--)
              for (ce = ae.bl_count[zt]; ce !== 0; )
                be < (we = ae.heap[--xe]) || (de[2 * we + 1] !== zt && (ae.opt_len += (zt - de[2 * we + 1]) * de[2 * we], de[2 * we + 1] = zt), ce--);
          }
        }(L, V), Lt(At, Dt, L.bl_count);
      }
      function G(L, V, it) {
        var tt, _, At = -1, Rt = V[1], Yt = 0, Gt = 7, Dt = 4;
        for (Rt === 0 && (Gt = 138, Dt = 3), V[2 * (it + 1) + 1] = 65535, tt = 0; tt <= it; tt++)
          _ = Rt, Rt = V[2 * (tt + 1) + 1], ++Yt < Gt && _ === Rt || (Yt < Dt ? L.bl_tree[2 * _] += Yt : _ !== 0 ? (_ !== At && L.bl_tree[2 * _]++, L.bl_tree[2 * p]++) : Yt <= 10 ? L.bl_tree[2 * e]++ : L.bl_tree[2 * m]++, At = _, Dt = (Yt = 0) === Rt ? (Gt = 138, 3) : _ === Rt ? (Gt = 6, 3) : (Gt = 7, 4));
      }
      function Et(L, V, it) {
        var tt, _, At = -1, Rt = V[1], Yt = 0, Gt = 7, Dt = 4;
        for (Rt === 0 && (Gt = 138, Dt = 3), tt = 0; tt <= it; tt++)
          if (_ = Rt, Rt = V[2 * (tt + 1) + 1], !(++Yt < Gt && _ === Rt)) {
            if (Yt < Dt)
              for (; Tt(L, _, L.bl_tree), --Yt != 0; )
                ;
            else
              _ !== 0 ? (_ !== At && (Tt(L, _, L.bl_tree), Yt--), Tt(L, p, L.bl_tree), bt(L, Yt - 3, 2)) : Yt <= 10 ? (Tt(L, e, L.bl_tree), bt(L, Yt - 3, 3)) : (Tt(L, m, L.bl_tree), bt(L, Yt - 11, 7));
            At = _, Dt = (Yt = 0) === Rt ? (Gt = 138, 3) : _ === Rt ? (Gt = 6, 3) : (Gt = 7, 4);
          }
      }
      t(J);
      var k = !1;
      function S(L, V, it, tt) {
        bt(L, (o << 1) + (tt ? 1 : 0), 3), function(_, At, Rt, Yt) {
          $(_), Yt && (xt(_, Rt), xt(_, ~Rt)), O.arraySet(_.pending_buf, _.window, At, Rt, _.pending), _.pending += Rt;
        }(L, V, it, !0);
      }
      B._tr_init = function(L) {
        k || (function() {
          var V, it, tt, _, At, Rt = new Array(h + 1);
          for (_ = tt = 0; _ < r - 1; _++)
            for (R[_] = tt, V = 0; V < 1 << w[_]; V++)
              b[tt++] = _;
          for (b[tt - 1] = _, _ = At = 0; _ < 16; _++)
            for (J[_] = At, V = 0; V < 1 << D[_]; V++)
              F[At++] = _;
          for (At >>= 7; _ < f; _++)
            for (J[_] = At << 7, V = 0; V < 1 << D[_] - 7; V++)
              F[256 + At++] = _;
          for (it = 0; it <= h; it++)
            Rt[it] = 0;
          for (V = 0; V <= 143; )
            T[2 * V + 1] = 8, V++, Rt[8]++;
          for (; V <= 255; )
            T[2 * V + 1] = 9, V++, Rt[9]++;
          for (; V <= 279; )
            T[2 * V + 1] = 7, V++, Rt[7]++;
          for (; V <= 287; )
            T[2 * V + 1] = 8, V++, Rt[8]++;
          for (Lt(T, i + 1, Rt), V = 0; V < f; V++)
            A[2 * V + 1] = 5, A[2 * V] = It(V, 5);
          N = new ht(T, w, n + 1, i, h), U = new ht(A, D, 0, f, h), W = new ht(new Array(0), I, 0, l, v);
        }(), k = !0), L.l_desc = new K(L.dyn_ltree, N), L.d_desc = new K(L.dyn_dtree, U), L.bl_desc = new K(L.bl_tree, W), L.bi_buf = 0, L.bi_valid = 0, Ut(L);
      }, B._tr_stored_block = S, B._tr_flush_block = function(L, V, it, tt) {
        var _, At, Rt = 0;
        0 < L.level ? (L.strm.data_type === 2 && (L.strm.data_type = function(Yt) {
          var Gt, Dt = 4093624447;
          for (Gt = 0; Gt <= 31; Gt++, Dt >>>= 1)
            if (1 & Dt && Yt.dyn_ltree[2 * Gt] !== 0)
              return c;
          if (Yt.dyn_ltree[18] !== 0 || Yt.dyn_ltree[20] !== 0 || Yt.dyn_ltree[26] !== 0)
            return d;
          for (Gt = 32; Gt < n; Gt++)
            if (Yt.dyn_ltree[2 * Gt] !== 0)
              return d;
          return c;
        }(L)), yt(L, L.l_desc), yt(L, L.d_desc), Rt = function(Yt) {
          var Gt;
          for (G(Yt, Yt.dyn_ltree, Yt.l_desc.max_code), G(Yt, Yt.dyn_dtree, Yt.d_desc.max_code), yt(Yt, Yt.bl_desc), Gt = l - 1; 3 <= Gt && Yt.bl_tree[2 * E[Gt] + 1] === 0; Gt--)
            ;
          return Yt.opt_len += 3 * (Gt + 1) + 5 + 5 + 4, Gt;
        }(L), _ = L.opt_len + 3 + 7 >>> 3, (At = L.static_len + 3 + 7 >>> 3) <= _ && (_ = At)) : _ = At = it + 5, it + 4 <= _ && V !== -1 ? S(L, V, it, tt) : L.strategy === 4 || At === _ ? (bt(L, 2 + (tt ? 1 : 0), 3), st(L, T, A)) : (bt(L, 4 + (tt ? 1 : 0), 3), function(Yt, Gt, Dt, ae) {
          var Ae;
          for (bt(Yt, Gt - 257, 5), bt(Yt, Dt - 1, 5), bt(Yt, ae - 4, 4), Ae = 0; Ae < ae; Ae++)
            bt(Yt, Yt.bl_tree[2 * E[Ae] + 1], 3);
          Et(Yt, Yt.dyn_ltree, Gt - 1), Et(Yt, Yt.dyn_dtree, Dt - 1);
        }(L, L.l_desc.max_code + 1, L.d_desc.max_code + 1, Rt + 1), st(L, L.dyn_ltree, L.dyn_dtree)), Ut(L), tt && $(L);
      }, B._tr_tally = function(L, V, it) {
        return L.pending_buf[L.d_buf + 2 * L.last_lit] = V >>> 8 & 255, L.pending_buf[L.d_buf + 2 * L.last_lit + 1] = 255 & V, L.pending_buf[L.l_buf + L.last_lit] = 255 & it, L.last_lit++, V === 0 ? L.dyn_ltree[2 * it]++ : (L.matches++, V--, L.dyn_ltree[2 * (b[it] + n + 1)]++, L.dyn_dtree[2 * nt(V)]++), L.last_lit === L.lit_bufsize - 1;
      }, B._tr_align = function(L) {
        bt(L, 2, 3), Tt(L, y, T), function(V) {
          V.bi_valid === 16 ? (xt(V, V.bi_buf), V.bi_buf = 0, V.bi_valid = 0) : 8 <= V.bi_valid && (V.pending_buf[V.pending++] = 255 & V.bi_buf, V.bi_buf >>= 8, V.bi_valid -= 8);
        }(L);
      };
    }, { "../utils/common": 41 }], 53: [function(x, C, B) {
      C.exports = function() {
        this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
      };
    }, {}], 54: [function(x, C, B) {
      (function(O) {
        (function(c, d) {
          if (!c.setImmediate) {
            var t, o, r, n, i = 1, f = {}, l = !1, u = c.document, h = Object.getPrototypeOf && Object.getPrototypeOf(c);
            h = h && h.setTimeout ? h : c, t = {}.toString.call(c.process) === "[object process]" ? function(p) {
              process.nextTick(function() {
                v(p);
              });
            } : function() {
              if (c.postMessage && !c.importScripts) {
                var p = !0, e = c.onmessage;
                return c.onmessage = function() {
                  p = !1;
                }, c.postMessage("", "*"), c.onmessage = e, p;
              }
            }() ? (n = "setImmediate$" + Math.random() + "$", c.addEventListener ? c.addEventListener("message", y, !1) : c.attachEvent("onmessage", y), function(p) {
              c.postMessage(n + p, "*");
            }) : c.MessageChannel ? ((r = new MessageChannel()).port1.onmessage = function(p) {
              v(p.data);
            }, function(p) {
              r.port2.postMessage(p);
            }) : u && "onreadystatechange" in u.createElement("script") ? (o = u.documentElement, function(p) {
              var e = u.createElement("script");
              e.onreadystatechange = function() {
                v(p), e.onreadystatechange = null, o.removeChild(e), e = null;
              }, o.appendChild(e);
            }) : function(p) {
              setTimeout(v, 0, p);
            }, h.setImmediate = function(p) {
              typeof p != "function" && (p = new Function("" + p));
              for (var e = new Array(arguments.length - 1), m = 0; m < e.length; m++)
                e[m] = arguments[m + 1];
              var w = { callback: p, args: e };
              return f[i] = w, t(i), i++;
            }, h.clearImmediate = a;
          }
          function a(p) {
            delete f[p];
          }
          function v(p) {
            if (l)
              setTimeout(v, 0, p);
            else {
              var e = f[p];
              if (e) {
                l = !0;
                try {
                  (function(m) {
                    var w = m.callback, D = m.args;
                    switch (D.length) {
                      case 0:
                        w();
                        break;
                      case 1:
                        w(D[0]);
                        break;
                      case 2:
                        w(D[0], D[1]);
                        break;
                      case 3:
                        w(D[0], D[1], D[2]);
                        break;
                      default:
                        w.apply(d, D);
                    }
                  })(e);
                } finally {
                  a(p), l = !1;
                }
              }
            }
          }
          function y(p) {
            p.source === c && typeof p.data == "string" && p.data.indexOf(n) === 0 && v(+p.data.slice(n.length));
          }
        })(typeof self > "u" ? O === void 0 ? this : O : self);
      }).call(this, typeof zi < "u" ? zi : typeof self < "u" ? self : typeof window < "u" ? window : {});
    }, {}] }, {}, [10])(10);
  });
})(Nf);
var Fd = Nf.exports;
const Id = /* @__PURE__ */ Td(Fd);
var Dd = { exports: {} };
/*! pdfmake v0.2.9, @license MIT, @link http://pdfmake.org */
(function(s, g) {
  (function(C, B) {
    s.exports = B();
  })(typeof self < "u" ? self : zi, function() {
    return (
      /******/
      function() {
        var x = {
          /***/
          71692: (
            /***/
            function(c, d) {
              d.OP = 0, d.CL = 1, d.CP = 2, d.QU = 3, d.GL = 4, d.NS = 5, d.EX = 6, d.SY = 7, d.IS = 8, d.PR = 9, d.PO = 10, d.NU = 11, d.AL = 12, d.HL = 13, d.ID = 14, d.IN = 15, d.HY = 16, d.BA = 17, d.BB = 18, d.B2 = 19, d.ZW = 20, d.CM = 21, d.WJ = 22, d.H2 = 23, d.H3 = 24, d.JL = 25, d.JV = 26, d.JT = 27, d.RI = 28, d.EB = 29, d.EM = 30, d.ZWJ = 31, d.CB = 32, d.AI = 33, d.BK = 34, d.CJ = 35, d.CR = 36, d.LF = 37, d.NL = 38, d.SA = 39, d.SG = 40, d.SP = 41, d.XX = 42;
            }
          ),
          /***/
          54069: (
            /***/
            function(c, d) {
              var t, o, r, n, i;
              d.DI_BRK = r = 0, d.IN_BRK = n = 1, d.CI_BRK = t = 2, d.CP_BRK = o = 3, d.PR_BRK = i = 4, d.pairTable = [
                //OP   , CL    , CP    , QU    , GL    , NS    , EX    , SY    , IS    , PR    , PO    , NU    , AL    , HL    , ID    , IN    , HY    , BA    , BB    , B2    , ZW    , CM    , WJ    , H2    , H3    , JL    , JV    , JT    , RI    , EB    , EM    , ZWJ   , CB
                [i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, i, o, i, i, i, i, i, i, i, i, i, i, i],
                // OP
                [r, i, i, n, n, i, i, i, i, n, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // CL
                [r, i, i, n, n, i, i, i, i, n, n, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // CP
                [i, i, i, n, n, n, i, i, i, n, n, n, n, n, n, n, n, n, n, n, i, t, i, n, n, n, n, n, n, n, n, n, n],
                // QU
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, n, n, n, n, n, n, i, t, i, n, n, n, n, n, n, n, n, n, n],
                // GL
                [r, i, i, n, n, n, i, i, i, r, r, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // NS
                [r, i, i, n, n, n, i, i, i, r, r, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // EX
                [r, i, i, n, n, n, i, i, i, r, r, n, r, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // SY
                [r, i, i, n, n, n, i, i, i, r, r, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // IS
                [n, i, i, n, n, n, i, i, i, r, r, n, n, n, n, n, n, n, r, r, i, t, i, n, n, n, n, n, r, n, n, n, r],
                // PR
                [n, i, i, n, n, n, i, i, i, r, r, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // PO
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // NU
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // AL
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // HL
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // ID
                [r, i, i, n, n, n, i, i, i, r, r, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // IN
                [r, i, i, n, r, n, i, i, i, r, r, n, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // HY
                [r, i, i, n, r, n, i, i, i, r, r, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // BA
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, n, n, n, n, n, n, i, t, i, n, n, n, n, n, n, n, n, n, r],
                // BB
                [r, i, i, n, n, n, i, i, i, r, r, r, r, r, r, n, n, n, r, i, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // B2
                [r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, r, i, r, r, r, r, r, r, r, r, r, r, r, r],
                // ZW
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // CM
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, n, n, n, n, n, n, i, t, i, n, n, n, n, n, n, n, n, n, n],
                // WJ
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, n, n, r, r, r, n, r],
                // H2
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, n, r, r, r, n, r],
                // H3
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, n, n, n, n, r, r, r, r, n, r],
                // JL
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, n, n, r, r, r, n, r],
                // JV
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, n, r, r, r, n, r],
                // JT
                [r, i, i, n, n, n, i, i, i, r, r, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, n, r, r, n, r],
                // RI
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, n, n, r],
                // EB
                [r, i, i, n, n, n, i, i, i, r, n, r, r, r, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // EM
                [n, i, i, n, n, n, i, i, i, n, n, n, n, n, r, n, n, n, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r],
                // ZWJ
                [r, i, i, n, n, r, i, i, i, r, r, r, r, r, r, r, r, r, r, r, i, t, i, r, r, r, r, r, r, r, r, n, r]
                // CB
              ];
            }
          ),
          /***/
          27398: (
            /***/
            function(c, d, t) {
              t(33130), d.EncodeStream = t(74883), d.DecodeStream = t(42092), d.Array = t(23948), d.LazyArray = t(88931), d.Bitfield = t(41602), d.Boolean = t(21210), d.Buffer = t(96204), d.Enum = t(2463), d.Optional = t(11568), d.Reserved = t(62211), d.String = t(69046), d.Struct = t(90433), d.VersionedStruct = t(37529);
              var o = t(76959), r = t(61002), n = t(27309);
              Object.assign(d, o, r, n);
            }
          ),
          /***/
          23948: (
            /***/
            function(c, d, t) {
              t(18821), t(10853), t(33290), t(54994), t(4845), t(45007), t(39275), t(26364), t(86632), t(61928), t(54883), t(68995);
              function o(h, a) {
                var v = typeof Symbol < "u" && h[Symbol.iterator] || h["@@iterator"];
                if (v)
                  return (v = v.call(h)).next.bind(v);
                if (Array.isArray(h) || (v = r(h)) || a && h && typeof h.length == "number") {
                  v && (h = v);
                  var y = 0;
                  return function() {
                    return y >= h.length ? { done: !0 } : { done: !1, value: h[y++] };
                  };
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function r(h, a) {
                if (h) {
                  if (typeof h == "string")
                    return n(h, a);
                  var v = Object.prototype.toString.call(h).slice(8, -1);
                  if (v === "Object" && h.constructor && (v = h.constructor.name), v === "Map" || v === "Set")
                    return Array.from(h);
                  if (v === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(v))
                    return n(h, a);
                }
              }
              function n(h, a) {
                (a == null || a > h.length) && (a = h.length);
                for (var v = 0, y = new Array(a); v < a; v++)
                  y[v] = h[v];
                return y;
              }
              var i = t(61002), f = i.Number, l = t(76959), u = /* @__PURE__ */ function() {
                function h(v, y, p) {
                  p === void 0 && (p = "count"), this.type = v, this.length = y, this.lengthType = p;
                }
                var a = h.prototype;
                return a.decode = function(y, p) {
                  var e, m = y.pos, w = [], D = p;
                  if (this.length != null && (e = l.resolveLength(this.length, y, p)), this.length instanceof f && (Object.defineProperties(w, {
                    parent: {
                      value: p
                    },
                    _startOffset: {
                      value: m
                    },
                    _currentOffset: {
                      value: 0,
                      writable: !0
                    },
                    _length: {
                      value: e
                    }
                  }), D = w), e == null || this.lengthType === "bytes")
                    for (var I = e != null ? y.pos + e : p?._length ? p._startOffset + p._length : y.length; y.pos < I; )
                      w.push(this.type.decode(y, D));
                  else
                    for (var E = 0, T = e; E < T; E++)
                      w.push(this.type.decode(y, D));
                  return w;
                }, a.size = function(y, p) {
                  if (!y)
                    return this.type.size(null, p) * l.resolveLength(this.length, null, p);
                  var e = 0;
                  this.length instanceof f && (e += this.length.size(), p = {
                    parent: p
                  });
                  for (var m = o(y), w; !(w = m()).done; ) {
                    var D = w.value;
                    e += this.type.size(D, p);
                  }
                  return e;
                }, a.encode = function(y, p, e) {
                  var m = e;
                  this.length instanceof f && (m = {
                    pointers: [],
                    startOffset: y.pos,
                    parent: e
                  }, m.pointerOffset = y.pos + this.size(p, m), this.length.encode(y, p.length));
                  for (var w = o(p), D; !(D = w()).done; ) {
                    var I = D.value;
                    this.type.encode(y, I, m);
                  }
                  if (this.length instanceof f)
                    for (var E = 0; E < m.pointers.length; ) {
                      var T = m.pointers[E++];
                      T.type.encode(y, T.val);
                    }
                }, h;
              }();
              c.exports = u;
            }
          ),
          /***/
          41602: (
            /***/
            function(c, d, t) {
              t(15158);
              var o = /* @__PURE__ */ function() {
                function r(i, f) {
                  f === void 0 && (f = []), this.type = i, this.flags = f;
                }
                var n = r.prototype;
                return n.decode = function(f) {
                  for (var l = this.type.decode(f), u = {}, h = 0; h < this.flags.length; h++) {
                    var a = this.flags[h];
                    a != null && (u[a] = !!(l & 1 << h));
                  }
                  return u;
                }, n.size = function() {
                  return this.type.size();
                }, n.encode = function(f, l) {
                  for (var u = 0, h = 0; h < this.flags.length; h++) {
                    var a = this.flags[h];
                    a != null && l[a] && (u |= 1 << h);
                  }
                  return this.type.encode(f, u);
                }, r;
              }();
              c.exports = o;
            }
          ),
          /***/
          21210: (
            /***/
            function(c) {
              var d = /* @__PURE__ */ function() {
                function t(r) {
                  this.type = r;
                }
                var o = t.prototype;
                return o.decode = function(n, i) {
                  return !!this.type.decode(n, i);
                }, o.size = function(n, i) {
                  return this.type.size(n, i);
                }, o.encode = function(n, i, f) {
                  return this.type.encode(n, +i, f);
                }, t;
              }();
              c.exports = d;
            }
          ),
          /***/
          96204: (
            /***/
            function(c, d, t) {
              var o = t(76959), r = t(61002), n = r.Number, i = /* @__PURE__ */ function() {
                function f(u) {
                  this.length = u;
                }
                var l = f.prototype;
                return l.decode = function(h, a) {
                  var v = o.resolveLength(this.length, h, a);
                  return h.readBuffer(v);
                }, l.size = function(h, a) {
                  return h ? h.length : o.resolveLength(this.length, null, a);
                }, l.encode = function(h, a, v) {
                  return this.length instanceof n && this.length.encode(h, a.length), h.writeBuffer(a);
                }, f;
              }();
              c.exports = i;
            }
          ),
          /***/
          42092: (
            /***/
            function(c, d, t) {
              var o = t(43060).Buffer;
              t(10853), t(33290), t(18821), t(39275), t(22321);
              var r;
              try {
                r = t(32766);
              } catch {
              }
              var n = /* @__PURE__ */ function() {
                function l(h) {
                  this.buffer = h, this.pos = 0, this.length = this.buffer.length;
                }
                var u = l.prototype;
                return u.readString = function(a, v) {
                  switch (v === void 0 && (v = "ascii"), v) {
                    case "utf16le":
                    case "ucs2":
                    case "utf8":
                    case "ascii":
                      return this.buffer.toString(v, this.pos, this.pos += a);
                    case "utf16be":
                      for (var y = o.from(this.readBuffer(a)), p = 0, e = y.length - 1; p < e; p += 2) {
                        var m = y[p];
                        y[p] = y[p + 1], y[p + 1] = m;
                      }
                      return y.toString("utf16le");
                    default:
                      if (y = this.readBuffer(a), r)
                        try {
                          return r.decode(y, v);
                        } catch {
                        }
                      return y;
                  }
                }, u.readBuffer = function(a) {
                  return this.buffer.slice(this.pos, this.pos += a);
                }, u.readUInt24BE = function() {
                  return (this.readUInt16BE() << 8) + this.readUInt8();
                }, u.readUInt24LE = function() {
                  return this.readUInt16LE() + (this.readUInt8() << 16);
                }, u.readInt24BE = function() {
                  return (this.readInt16BE() << 8) + this.readUInt8();
                }, u.readInt24LE = function() {
                  return this.readUInt16LE() + (this.readInt8() << 16);
                }, l;
              }();
              n.TYPES = {
                UInt8: 1,
                UInt16: 2,
                UInt24: 3,
                UInt32: 4,
                Int8: 1,
                Int16: 2,
                Int24: 3,
                Int32: 4,
                Float: 4,
                Double: 8
              };
              var i = function(u) {
                if (u.slice(0, 4) === "read") {
                  var h = n.TYPES[u.replace(/read|[BL]E/g, "")];
                  n.prototype[u] = function() {
                    var a = this.buffer[u](this.pos);
                    return this.pos += h, a;
                  };
                }
              };
              for (var f in o.prototype)
                i(f);
              c.exports = n;
            }
          ),
          /***/
          74883: (
            /***/
            function(c, d, t) {
              var o = t(43060).Buffer;
              t(18821), t(83382), t(39275), t(22321);
              function r(v, y) {
                v.prototype = Object.create(y.prototype), v.prototype.constructor = v, n(v, y);
              }
              function n(v, y) {
                return n = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(e, m) {
                  return e.__proto__ = m, e;
                }, n(v, y);
              }
              var i, f = t(20202), l = t(42092);
              try {
                i = t(32766);
              } catch {
              }
              var u = /* @__PURE__ */ function(v) {
                r(y, v);
                function y(e) {
                  var m;
                  return e === void 0 && (e = 65536), m = v.apply(this, arguments) || this, m.buffer = o.alloc(e), m.bufferOffset = 0, m.pos = 0, m;
                }
                var p = y.prototype;
                return p._read = function() {
                }, p.ensure = function(m) {
                  if (this.bufferOffset + m > this.buffer.length)
                    return this.flush();
                }, p.flush = function() {
                  if (this.bufferOffset > 0)
                    return this.push(o.from(this.buffer.slice(0, this.bufferOffset))), this.bufferOffset = 0;
                }, p.writeBuffer = function(m) {
                  return this.flush(), this.push(m), this.pos += m.length;
                }, p.writeString = function(m, w) {
                  switch (w === void 0 && (w = "ascii"), w) {
                    case "utf16le":
                    case "ucs2":
                    case "utf8":
                    case "ascii":
                      return this.writeBuffer(o.from(m, w));
                    case "utf16be":
                      for (var D = o.from(m, "utf16le"), I = 0, E = D.length - 1; I < E; I += 2) {
                        var T = D[I];
                        D[I] = D[I + 1], D[I + 1] = T;
                      }
                      return this.writeBuffer(D);
                    default:
                      if (i)
                        return this.writeBuffer(i.encode(m, w));
                      throw new Error("Install iconv-lite to enable additional string encodings.");
                  }
                }, p.writeUInt24BE = function(m) {
                  return this.ensure(3), this.buffer[this.bufferOffset++] = m >>> 16 & 255, this.buffer[this.bufferOffset++] = m >>> 8 & 255, this.buffer[this.bufferOffset++] = m & 255, this.pos += 3;
                }, p.writeUInt24LE = function(m) {
                  return this.ensure(3), this.buffer[this.bufferOffset++] = m & 255, this.buffer[this.bufferOffset++] = m >>> 8 & 255, this.buffer[this.bufferOffset++] = m >>> 16 & 255, this.pos += 3;
                }, p.writeInt24BE = function(m) {
                  return m >= 0 ? this.writeUInt24BE(m) : this.writeUInt24BE(m + 16777215 + 1);
                }, p.writeInt24LE = function(m) {
                  return m >= 0 ? this.writeUInt24LE(m) : this.writeUInt24LE(m + 16777215 + 1);
                }, p.fill = function(m, w) {
                  if (w < this.buffer.length)
                    return this.ensure(w), this.buffer.fill(m, this.bufferOffset, this.bufferOffset + w), this.bufferOffset += w, this.pos += w;
                  var D = o.alloc(w);
                  return D.fill(m), this.writeBuffer(D);
                }, p.end = function() {
                  return this.flush(), this.push(null);
                }, y;
              }(f.Readable), h = function(y) {
                if (y.slice(0, 5) === "write") {
                  var p = +l.TYPES[y.replace(/write|[BL]E/g, "")];
                  u.prototype[y] = function(e) {
                    return this.ensure(p), this.buffer[y](e, this.bufferOffset), this.bufferOffset += p, this.pos += p;
                  };
                }
              };
              for (var a in o.prototype)
                h(a);
              c.exports = u;
            }
          ),
          /***/
          2463: (
            /***/
            function(c) {
              var d = /* @__PURE__ */ function() {
                function t(r, n) {
                  n === void 0 && (n = []), this.type = r, this.options = n;
                }
                var o = t.prototype;
                return o.decode = function(n) {
                  var i = this.type.decode(n);
                  return this.options[i] || i;
                }, o.size = function() {
                  return this.type.size();
                }, o.encode = function(n, i) {
                  var f = this.options.indexOf(i);
                  if (f === -1)
                    throw new Error("Unknown option in enum: " + i);
                  return this.type.encode(n, f);
                }, t;
              }();
              c.exports = d;
            }
          ),
          /***/
          88931: (
            /***/
            function(c, d, t) {
              t(10853), t(35054);
              function o(y, p) {
                y.prototype = Object.create(p.prototype), y.prototype.constructor = y, r(y, p);
              }
              function r(y, p) {
                return r = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(m, w) {
                  return m.__proto__ = w, m;
                }, r(y, p);
              }
              var n = t(23948), i = t(61002), f = i.Number, l = t(76959), u = t(85663), h = u.inspect, a = /* @__PURE__ */ function(y) {
                o(p, y);
                function p() {
                  return y.apply(this, arguments) || this;
                }
                var e = p.prototype;
                return e.decode = function(w, D) {
                  var I = w.pos, E = l.resolveLength(this.length, w, D);
                  this.length instanceof f && (D = {
                    parent: D,
                    _startOffset: I,
                    _currentOffset: 0,
                    _length: E
                  });
                  var T = new v(this.type, E, w, D);
                  return w.pos += E * this.type.size(null, D), T;
                }, e.size = function(w, D) {
                  return w instanceof v && (w = w.toArray()), y.prototype.size.call(this, w, D);
                }, e.encode = function(w, D, I) {
                  return D instanceof v && (D = D.toArray()), y.prototype.encode.call(this, w, D, I);
                }, p;
              }(n), v = /* @__PURE__ */ function() {
                function y(e, m, w, D) {
                  this.type = e, this.length = m, this.stream = w, this.ctx = D, this.base = this.stream.pos, this.items = [];
                }
                var p = y.prototype;
                return p.get = function(m) {
                  if (!(m < 0 || m >= this.length)) {
                    if (this.items[m] == null) {
                      var w = this.stream.pos;
                      this.stream.pos = this.base + this.type.size(null, this.ctx) * m, this.items[m] = this.type.decode(this.stream, this.ctx), this.stream.pos = w;
                    }
                    return this.items[m];
                  }
                }, p.toArray = function() {
                  for (var m = [], w = 0, D = this.length; w < D; w++)
                    m.push(this.get(w));
                  return m;
                }, p.inspect = function() {
                  return h(this.toArray());
                }, y;
              }();
              c.exports = a;
            }
          ),
          /***/
          61002: (
            /***/
            function(c, d, t) {
              function o(l, u) {
                l.prototype = Object.create(u.prototype), l.prototype.constructor = l, r(l, u);
              }
              function r(l, u) {
                return r = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(a, v) {
                  return a.__proto__ = v, a;
                }, r(l, u);
              }
              var n = t(42092), i = /* @__PURE__ */ function() {
                function l(h, a) {
                  a === void 0 && (a = "BE"), this.type = h, this.endian = a, this.fn = this.type, this.type[this.type.length - 1] !== "8" && (this.fn += this.endian);
                }
                var u = l.prototype;
                return u.size = function() {
                  return n.TYPES[this.type];
                }, u.decode = function(a) {
                  return a["read" + this.fn]();
                }, u.encode = function(a, v) {
                  return a["write" + this.fn](v);
                }, l;
              }();
              d.Number = i, d.uint8 = new i("UInt8"), d.uint16be = d.uint16 = new i("UInt16", "BE"), d.uint16le = new i("UInt16", "LE"), d.uint24be = d.uint24 = new i("UInt24", "BE"), d.uint24le = new i("UInt24", "LE"), d.uint32be = d.uint32 = new i("UInt32", "BE"), d.uint32le = new i("UInt32", "LE"), d.int8 = new i("Int8"), d.int16be = d.int16 = new i("Int16", "BE"), d.int16le = new i("Int16", "LE"), d.int24be = d.int24 = new i("Int24", "BE"), d.int24le = new i("Int24", "LE"), d.int32be = d.int32 = new i("Int32", "BE"), d.int32le = new i("Int32", "LE"), d.floatbe = d.float = new i("Float", "BE"), d.floatle = new i("Float", "LE"), d.doublebe = d.double = new i("Double", "BE"), d.doublele = new i("Double", "LE");
              var f = /* @__PURE__ */ function(l) {
                o(u, l);
                function u(a, v, y) {
                  var p;
                  return y === void 0 && (y = a >> 1), p = l.call(this, "Int" + a, v) || this, p._point = 1 << y, p;
                }
                var h = u.prototype;
                return h.decode = function(v) {
                  return l.prototype.decode.call(this, v) / this._point;
                }, h.encode = function(v, y) {
                  return l.prototype.encode.call(this, v, y * this._point | 0);
                }, u;
              }(i);
              d.Fixed = f, d.fixed16be = d.fixed16 = new f(16, "BE"), d.fixed16le = new f(16, "LE"), d.fixed32be = d.fixed32 = new f(32, "BE"), d.fixed32le = new f(32, "LE");
            }
          ),
          /***/
          11568: (
            /***/
            function(c) {
              var d = /* @__PURE__ */ function() {
                function t(r, n) {
                  n === void 0 && (n = !0), this.type = r, this.condition = n;
                }
                var o = t.prototype;
                return o.decode = function(n, i) {
                  var f = this.condition;
                  if (typeof f == "function" && (f = f.call(i, i)), f)
                    return this.type.decode(n, i);
                }, o.size = function(n, i) {
                  var f = this.condition;
                  return typeof f == "function" && (f = f.call(i, i)), f ? this.type.size(n, i) : 0;
                }, o.encode = function(n, i, f) {
                  var l = this.condition;
                  if (typeof l == "function" && (l = l.call(f, f)), l)
                    return this.type.encode(n, i, f);
                }, t;
              }();
              c.exports = d;
            }
          ),
          /***/
          27309: (
            /***/
            function(c, d, t) {
              var o = t(76959), r = /* @__PURE__ */ function() {
                function i(l, u, h) {
                  if (h === void 0 && (h = {}), this.offsetType = l, this.type = u, this.options = h, this.type === "void" && (this.type = null), this.options.type == null && (this.options.type = "local"), this.options.allowNull == null && (this.options.allowNull = !0), this.options.nullValue == null && (this.options.nullValue = 0), this.options.lazy == null && (this.options.lazy = !1), this.options.relativeTo) {
                    if (typeof this.options.relativeTo != "function")
                      throw new Error("relativeTo option must be a function");
                    this.relativeToGetter = h.relativeTo;
                  }
                }
                var f = i.prototype;
                return f.decode = function(u, h) {
                  var a = this, v = this.offsetType.decode(u, h);
                  if (v === this.options.nullValue && this.options.allowNull)
                    return null;
                  var y;
                  switch (this.options.type) {
                    case "local":
                      y = h._startOffset;
                      break;
                    case "immediate":
                      y = u.pos - this.offsetType.size();
                      break;
                    case "parent":
                      y = h.parent._startOffset;
                      break;
                    default:
                      for (var p = h; p.parent; )
                        p = p.parent;
                      y = p._startOffset || 0;
                  }
                  this.options.relativeTo && (y += this.relativeToGetter(h));
                  var e = v + y;
                  if (this.type != null) {
                    var m = null, w = function() {
                      if (m != null)
                        return m;
                      var I = u.pos;
                      return u.pos = e, m = a.type.decode(u, h), u.pos = I, m;
                    };
                    return this.options.lazy ? new o.PropertyDescriptor({
                      get: w
                    }) : w();
                  } else
                    return e;
                }, f.size = function(u, h) {
                  var a = h;
                  switch (this.options.type) {
                    case "local":
                    case "immediate":
                      break;
                    case "parent":
                      h = h.parent;
                      break;
                    default:
                      for (; h.parent; )
                        h = h.parent;
                  }
                  var v = this.type;
                  if (v == null) {
                    if (!(u instanceof n))
                      throw new Error("Must be a VoidPointer");
                    var y = u;
                    v = y.type, u = u.value;
                  }
                  return u && h && (h.pointerSize += v.size(u, a)), this.offsetType.size();
                }, f.encode = function(u, h, a) {
                  var v, y = a;
                  if (h == null) {
                    this.offsetType.encode(u, this.options.nullValue);
                    return;
                  }
                  switch (this.options.type) {
                    case "local":
                      v = a.startOffset;
                      break;
                    case "immediate":
                      v = u.pos + this.offsetType.size(h, y);
                      break;
                    case "parent":
                      a = a.parent, v = a.startOffset;
                      break;
                    default:
                      for (v = 0; a.parent; )
                        a = a.parent;
                  }
                  this.options.relativeTo && (v += this.relativeToGetter(y.val)), this.offsetType.encode(u, a.pointerOffset - v);
                  var p = this.type;
                  if (p == null) {
                    if (!(h instanceof n))
                      throw new Error("Must be a VoidPointer");
                    var e = h;
                    p = e.type, h = h.value;
                  }
                  return a.pointers.push({
                    type: p,
                    val: h,
                    parent: y
                  }), a.pointerOffset += p.size(h, y);
                }, i;
              }(), n = function(f, l) {
                this.type = f, this.value = l;
              };
              d.Pointer = r, d.VoidPointer = n;
            }
          ),
          /***/
          62211: (
            /***/
            function(c, d, t) {
              t(83382);
              var o = t(76959), r = /* @__PURE__ */ function() {
                function n(f, l) {
                  l === void 0 && (l = 1), this.type = f, this.count = l;
                }
                var i = n.prototype;
                return i.decode = function(l, u) {
                  l.pos += this.size(null, u);
                }, i.size = function(l, u) {
                  var h = o.resolveLength(this.count, null, u);
                  return this.type.size() * h;
                }, i.encode = function(l, u, h) {
                  return l.fill(0, this.size(u, h));
                }, n;
              }();
              c.exports = r;
            }
          ),
          /***/
          69046: (
            /***/
            function(c, d, t) {
              var o = t(43060).Buffer, r = t(61002), n = r.Number, i = t(76959), f = /* @__PURE__ */ function() {
                function l(h, a) {
                  a === void 0 && (a = "ascii"), this.length = h, this.encoding = a;
                }
                var u = l.prototype;
                return u.decode = function(a, v) {
                  var y, p;
                  if (this.length != null)
                    y = i.resolveLength(this.length, a, v);
                  else {
                    var e;
                    for (e = a.buffer, y = a.length, p = a.pos; p < y && e[p] !== 0; )
                      ++p;
                    y = p - a.pos;
                  }
                  var m = this.encoding;
                  typeof m == "function" && (m = m.call(v, v) || "ascii");
                  var w = a.readString(y, m);
                  return this.length == null && a.pos < a.length && a.pos++, w;
                }, u.size = function(a, v) {
                  if (!a)
                    return i.resolveLength(this.length, null, v);
                  var y = this.encoding;
                  typeof y == "function" && (y = y.call(v?.val, v?.val) || "ascii"), y === "utf16be" && (y = "utf16le");
                  var p = o.byteLength(a, y);
                  return this.length instanceof n && (p += this.length.size()), this.length == null && p++, p;
                }, u.encode = function(a, v, y) {
                  var p = this.encoding;
                  if (typeof p == "function" && (p = p.call(y?.val, y?.val) || "ascii"), this.length instanceof n && this.length.encode(a, o.byteLength(v, p)), a.writeString(v, p), this.length == null)
                    return a.writeUInt8(0);
                }, l;
              }();
              c.exports = f;
            }
          ),
          /***/
          90433: (
            /***/
            function(c, d, t) {
              var o = t(76959), r = /* @__PURE__ */ function() {
                function n(f) {
                  f === void 0 && (f = {}), this.fields = f;
                }
                var i = n.prototype;
                return i.decode = function(l, u, h) {
                  h === void 0 && (h = 0);
                  var a = this._setup(l, u, h);
                  return this._parseFields(l, a, this.fields), this.process != null && this.process.call(a, l), a;
                }, i._setup = function(l, u, h) {
                  var a = {};
                  return Object.defineProperties(a, {
                    parent: {
                      value: u
                    },
                    _startOffset: {
                      value: l.pos
                    },
                    _currentOffset: {
                      value: 0,
                      writable: !0
                    },
                    _length: {
                      value: h
                    }
                  }), a;
                }, i._parseFields = function(l, u, h) {
                  for (var a in h) {
                    var v, y = h[a];
                    typeof y == "function" ? v = y.call(u, u) : v = y.decode(l, u), v !== void 0 && (v instanceof o.PropertyDescriptor ? Object.defineProperty(u, a, v) : u[a] = v), u._currentOffset = l.pos - u._startOffset;
                  }
                }, i.size = function(l, u, h) {
                  l == null && (l = {}), h == null && (h = !0);
                  var a = {
                    parent: u,
                    val: l,
                    pointerSize: 0
                  }, v = 0;
                  for (var y in this.fields) {
                    var p = this.fields[y];
                    p.size != null && (v += p.size(l[y], a));
                  }
                  return h && (v += a.pointerSize), v;
                }, i.encode = function(l, u, h) {
                  var a;
                  this.preEncode != null && this.preEncode.call(u, l);
                  var v = {
                    pointers: [],
                    startOffset: l.pos,
                    parent: h,
                    val: u,
                    pointerSize: 0
                  };
                  v.pointerOffset = l.pos + this.size(u, v, !1);
                  for (var y in this.fields)
                    a = this.fields[y], a.encode != null && a.encode(l, u[y], v);
                  for (var p = 0; p < v.pointers.length; ) {
                    var e = v.pointers[p++];
                    e.type.encode(l, e.val, e.parent);
                  }
                }, n;
              }();
              c.exports = r;
            }
          ),
          /***/
          37529: (
            /***/
            function(c, d, t) {
              t(10853);
              function o(l, u) {
                l.prototype = Object.create(u.prototype), l.prototype.constructor = l, r(l, u);
              }
              function r(l, u) {
                return r = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(a, v) {
                  return a.__proto__ = v, a;
                }, r(l, u);
              }
              var n = t(90433), i = function(u, h) {
                return h.reduce(function(a, v) {
                  return a && a[v];
                }, u);
              }, f = /* @__PURE__ */ function(l) {
                o(u, l);
                function u(a, v) {
                  var y;
                  return v === void 0 && (v = {}), y = l.call(this) || this, y.type = a, y.versions = v, typeof a == "string" && (y.versionPath = a.split(".")), y;
                }
                var h = u.prototype;
                return h.decode = function(v, y, p) {
                  p === void 0 && (p = 0);
                  var e = this._setup(v, y, p);
                  typeof this.type == "string" ? e.version = i(y, this.versionPath) : e.version = this.type.decode(v), this.versions.header && this._parseFields(v, e, this.versions.header);
                  var m = this.versions[e.version];
                  if (m == null)
                    throw new Error("Unknown version " + e.version);
                  return m instanceof u ? m.decode(v, y) : (this._parseFields(v, e, m), this.process != null && this.process.call(e, v), e);
                }, h.size = function(v, y, p) {
                  p === void 0 && (p = !0);
                  var e, m;
                  if (!v)
                    throw new Error("Not a fixed size");
                  var w = {
                    parent: y,
                    val: v,
                    pointerSize: 0
                  }, D = 0;
                  if (typeof this.type != "string" && (D += this.type.size(v.version, w)), this.versions.header)
                    for (e in this.versions.header)
                      m = this.versions.header[e], m.size != null && (D += m.size(v[e], w));
                  var I = this.versions[v.version];
                  if (I == null)
                    throw new Error("Unknown version " + v.version);
                  for (e in I)
                    m = I[e], m.size != null && (D += m.size(v[e], w));
                  return p && (D += w.pointerSize), D;
                }, h.encode = function(v, y, p) {
                  var e, m;
                  this.preEncode != null && this.preEncode.call(y, v);
                  var w = {
                    pointers: [],
                    startOffset: v.pos,
                    parent: p,
                    val: y,
                    pointerSize: 0
                  };
                  if (w.pointerOffset = v.pos + this.size(y, w, !1), typeof this.type != "string" && this.type.encode(v, y.version), this.versions.header)
                    for (e in this.versions.header)
                      m = this.versions.header[e], m.encode != null && m.encode(v, y[e], w);
                  var D = this.versions[y.version];
                  for (e in D)
                    m = D[e], m.encode != null && m.encode(v, y[e], w);
                  for (var I = 0; I < w.pointers.length; ) {
                    var E = w.pointers[I++];
                    E.type.encode(v, E.val, E.parent);
                  }
                }, u;
              }(n);
              c.exports = f;
            }
          ),
          /***/
          76959: (
            /***/
            function(c, d, t) {
              var o = t(61002), r = o.Number;
              d.resolveLength = function(i, f, l) {
                var u;
                if (typeof i == "number" ? u = i : typeof i == "function" ? u = i.call(l, l) : l && typeof i == "string" ? u = l[i] : f && i instanceof r && (u = i.decode(f)), isNaN(u))
                  throw new Error("Not a fixed size");
                return u;
              };
              var n = function(f) {
                f === void 0 && (f = {}), this.enumerable = !0, this.configurable = !0;
                for (var l in f) {
                  var u = f[l];
                  this[l] = u;
                }
              };
              d.PropertyDescriptor = n;
            }
          ),
          /***/
          43060: (
            /***/
            function(c, d, t) {
              /*!
               * The buffer module from node.js, for the browser.
               *
               * @author   Feross Aboukhadijeh <https://feross.org>
               * @license  MIT
               */
              t(26364), t(86632), t(10853), t(54883), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(36501), t(16543), t(33142), t(83382), t(18821), t(33290), t(55862), t(29897), t(39275), t(22321), t(18183), t(19985), t(80174), t(87191), t(42833), t(54994), t(35727);
              function o(ot, Y) {
                for (var j = 0; j < Y.length; j++) {
                  var mt = Y[j];
                  mt.enumerable = mt.enumerable || !1, mt.configurable = !0, "value" in mt && (mt.writable = !0), Object.defineProperty(ot, n(mt.key), mt);
                }
              }
              function r(ot, Y, j) {
                return Y && o(ot.prototype, Y), j && o(ot, j), Object.defineProperty(ot, "prototype", { writable: !1 }), ot;
              }
              function n(ot) {
                var Y = i(ot, "string");
                return typeof Y == "symbol" ? Y : String(Y);
              }
              function i(ot, Y) {
                if (typeof ot != "object" || !ot)
                  return ot;
                var j = ot[Symbol.toPrimitive];
                if (j !== void 0) {
                  var mt = j.call(ot, Y || "default");
                  if (typeof mt != "object")
                    return mt;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (Y === "string" ? String : Number)(ot);
              }
              function f(ot) {
                if (ot === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return ot;
              }
              function l(ot, Y) {
                ot.prototype = Object.create(Y.prototype), ot.prototype.constructor = ot, u(ot, Y);
              }
              function u(ot, Y) {
                return u = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(mt, at) {
                  return mt.__proto__ = at, mt;
                }, u(ot, Y);
              }
              var h = t(5155), a = t(74525), v = typeof Symbol == "function" && typeof Symbol.for == "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
              d.Buffer = m, d.SlowBuffer = U, d.INSPECT_MAX_BYTES = 50;
              var y = 2147483647;
              d.kMaxLength = y, m.TYPED_ARRAY_SUPPORT = p(), !m.TYPED_ARRAY_SUPPORT && typeof console < "u" && typeof console.error == "function" && console.error("This browser lacks typed array (Uint8Array) support which is required by `buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
              function p() {
                try {
                  var ot = new Uint8Array(1), Y = {
                    foo: function() {
                      return 42;
                    }
                  };
                  return Object.setPrototypeOf(Y, Uint8Array.prototype), Object.setPrototypeOf(ot, Y), ot.foo() === 42;
                } catch {
                  return !1;
                }
              }
              Object.defineProperty(m.prototype, "parent", {
                enumerable: !0,
                get: function() {
                  if (m.isBuffer(this))
                    return this.buffer;
                }
              }), Object.defineProperty(m.prototype, "offset", {
                enumerable: !0,
                get: function() {
                  if (m.isBuffer(this))
                    return this.byteOffset;
                }
              });
              function e(ot) {
                if (ot > y)
                  throw new RangeError('The value "' + ot + '" is invalid for option "size"');
                var Y = new Uint8Array(ot);
                return Object.setPrototypeOf(Y, m.prototype), Y;
              }
              function m(ot, Y, j) {
                if (typeof ot == "number") {
                  if (typeof Y == "string")
                    throw new TypeError('The "string" argument must be of type string. Received type number');
                  return E(ot);
                }
                return w(ot, Y, j);
              }
              m.poolSize = 8192;
              function w(ot, Y, j) {
                if (typeof ot == "string")
                  return T(ot, Y);
                if (ArrayBuffer.isView(ot))
                  return F(ot);
                if (ot == null)
                  throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof ot);
                if (be(ot, ArrayBuffer) || ot && be(ot.buffer, ArrayBuffer) || typeof SharedArrayBuffer < "u" && (be(ot, SharedArrayBuffer) || ot && be(ot.buffer, SharedArrayBuffer)))
                  return b(ot, Y, j);
                if (typeof ot == "number")
                  throw new TypeError('The "value" argument must not be of type number. Received type number');
                var mt = ot.valueOf && ot.valueOf();
                if (mt != null && mt !== ot)
                  return m.from(mt, Y, j);
                var at = R(ot);
                if (at)
                  return at;
                if (typeof Symbol < "u" && Symbol.toPrimitive != null && typeof ot[Symbol.toPrimitive] == "function")
                  return m.from(ot[Symbol.toPrimitive]("string"), Y, j);
                throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof ot);
              }
              m.from = function(ot, Y, j) {
                return w(ot, Y, j);
              }, Object.setPrototypeOf(m.prototype, Uint8Array.prototype), Object.setPrototypeOf(m, Uint8Array);
              function D(ot) {
                if (typeof ot != "number")
                  throw new TypeError('"size" argument must be of type number');
                if (ot < 0)
                  throw new RangeError('The value "' + ot + '" is invalid for option "size"');
              }
              function I(ot, Y, j) {
                return D(ot), ot <= 0 ? e(ot) : Y !== void 0 ? typeof j == "string" ? e(ot).fill(Y, j) : e(ot).fill(Y) : e(ot);
              }
              m.alloc = function(ot, Y, j) {
                return I(ot, Y, j);
              };
              function E(ot) {
                return D(ot), e(ot < 0 ? 0 : N(ot) | 0);
              }
              m.allocUnsafe = function(ot) {
                return E(ot);
              }, m.allocUnsafeSlow = function(ot) {
                return E(ot);
              };
              function T(ot, Y) {
                if ((typeof Y != "string" || Y === "") && (Y = "utf8"), !m.isEncoding(Y))
                  throw new TypeError("Unknown encoding: " + Y);
                var j = W(ot, Y) | 0, mt = e(j), at = mt.write(ot, Y);
                return at !== j && (mt = mt.slice(0, at)), mt;
              }
              function A(ot) {
                for (var Y = ot.length < 0 ? 0 : N(ot.length) | 0, j = e(Y), mt = 0; mt < Y; mt += 1)
                  j[mt] = ot[mt] & 255;
                return j;
              }
              function F(ot) {
                if (be(ot, Uint8Array)) {
                  var Y = new Uint8Array(ot);
                  return b(Y.buffer, Y.byteOffset, Y.byteLength);
                }
                return A(ot);
              }
              function b(ot, Y, j) {
                if (Y < 0 || ot.byteLength < Y)
                  throw new RangeError('"offset" is outside of buffer bounds');
                if (ot.byteLength < Y + (j || 0))
                  throw new RangeError('"length" is outside of buffer bounds');
                var mt;
                return Y === void 0 && j === void 0 ? mt = new Uint8Array(ot) : j === void 0 ? mt = new Uint8Array(ot, Y) : mt = new Uint8Array(ot, Y, j), Object.setPrototypeOf(mt, m.prototype), mt;
              }
              function R(ot) {
                if (m.isBuffer(ot)) {
                  var Y = N(ot.length) | 0, j = e(Y);
                  return j.length === 0 || ot.copy(j, 0, 0, Y), j;
                }
                if (ot.length !== void 0)
                  return typeof ot.length != "number" || Oe(ot.length) ? e(0) : A(ot);
                if (ot.type === "Buffer" && Array.isArray(ot.data))
                  return A(ot.data);
              }
              function N(ot) {
                if (ot >= y)
                  throw new RangeError("Attempt to allocate Buffer larger than maximum size: 0x" + y.toString(16) + " bytes");
                return ot | 0;
              }
              function U(ot) {
                return +ot != ot && (ot = 0), m.alloc(+ot);
              }
              m.isBuffer = function(Y) {
                return Y != null && Y._isBuffer === !0 && Y !== m.prototype;
              }, m.compare = function(Y, j) {
                if (be(Y, Uint8Array) && (Y = m.from(Y, Y.offset, Y.byteLength)), be(j, Uint8Array) && (j = m.from(j, j.offset, j.byteLength)), !m.isBuffer(Y) || !m.isBuffer(j))
                  throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                if (Y === j)
                  return 0;
                for (var mt = Y.length, at = j.length, Wt = 0, _t = Math.min(mt, at); Wt < _t; ++Wt)
                  if (Y[Wt] !== j[Wt]) {
                    mt = Y[Wt], at = j[Wt];
                    break;
                  }
                return mt < at ? -1 : at < mt ? 1 : 0;
              }, m.isEncoding = function(Y) {
                switch (String(Y).toLowerCase()) {
                  case "hex":
                  case "utf8":
                  case "utf-8":
                  case "ascii":
                  case "latin1":
                  case "binary":
                  case "base64":
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                    return !0;
                  default:
                    return !1;
                }
              }, m.concat = function(Y, j) {
                if (!Array.isArray(Y))
                  throw new TypeError('"list" argument must be an Array of Buffers');
                if (Y.length === 0)
                  return m.alloc(0);
                var mt;
                if (j === void 0)
                  for (j = 0, mt = 0; mt < Y.length; ++mt)
                    j += Y[mt].length;
                var at = m.allocUnsafe(j), Wt = 0;
                for (mt = 0; mt < Y.length; ++mt) {
                  var _t = Y[mt];
                  if (be(_t, Uint8Array))
                    Wt + _t.length > at.length ? (m.isBuffer(_t) || (_t = m.from(_t)), _t.copy(at, Wt)) : Uint8Array.prototype.set.call(at, _t, Wt);
                  else if (m.isBuffer(_t))
                    _t.copy(at, Wt);
                  else
                    throw new TypeError('"list" argument must be an Array of Buffers');
                  Wt += _t.length;
                }
                return at;
              };
              function W(ot, Y) {
                if (m.isBuffer(ot))
                  return ot.length;
                if (ArrayBuffer.isView(ot) || be(ot, ArrayBuffer))
                  return ot.byteLength;
                if (typeof ot != "string")
                  throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. Received type ' + typeof ot);
                var j = ot.length, mt = arguments.length > 2 && arguments[2] === !0;
                if (!mt && j === 0)
                  return 0;
                for (var at = !1; ; )
                  switch (Y) {
                    case "ascii":
                    case "latin1":
                    case "binary":
                      return j;
                    case "utf8":
                    case "utf-8":
                      return we(ot).length;
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return j * 2;
                    case "hex":
                      return j >>> 1;
                    case "base64":
                      return le(ot).length;
                    default:
                      if (at)
                        return mt ? -1 : we(ot).length;
                      Y = ("" + Y).toLowerCase(), at = !0;
                  }
              }
              m.byteLength = W;
              function J(ot, Y, j) {
                var mt = !1;
                if ((Y === void 0 || Y < 0) && (Y = 0), Y > this.length || ((j === void 0 || j > this.length) && (j = this.length), j <= 0) || (j >>>= 0, Y >>>= 0, j <= Y))
                  return "";
                for (ot || (ot = "utf8"); ; )
                  switch (ot) {
                    case "hex":
                      return G(this, Y, j);
                    case "utf8":
                    case "utf-8":
                      return $(this, Y, j);
                    case "ascii":
                      return st(this, Y, j);
                    case "latin1":
                    case "binary":
                      return yt(this, Y, j);
                    case "base64":
                      return Ut(this, Y, j);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return Et(this, Y, j);
                    default:
                      if (mt)
                        throw new TypeError("Unknown encoding: " + ot);
                      ot = (ot + "").toLowerCase(), mt = !0;
                  }
              }
              m.prototype._isBuffer = !0;
              function ht(ot, Y, j) {
                var mt = ot[Y];
                ot[Y] = ot[j], ot[j] = mt;
              }
              m.prototype.swap16 = function() {
                var Y = this.length;
                if (Y % 2 !== 0)
                  throw new RangeError("Buffer size must be a multiple of 16-bits");
                for (var j = 0; j < Y; j += 2)
                  ht(this, j, j + 1);
                return this;
              }, m.prototype.swap32 = function() {
                var Y = this.length;
                if (Y % 4 !== 0)
                  throw new RangeError("Buffer size must be a multiple of 32-bits");
                for (var j = 0; j < Y; j += 4)
                  ht(this, j, j + 3), ht(this, j + 1, j + 2);
                return this;
              }, m.prototype.swap64 = function() {
                var Y = this.length;
                if (Y % 8 !== 0)
                  throw new RangeError("Buffer size must be a multiple of 64-bits");
                for (var j = 0; j < Y; j += 8)
                  ht(this, j, j + 7), ht(this, j + 1, j + 6), ht(this, j + 2, j + 5), ht(this, j + 3, j + 4);
                return this;
              }, m.prototype.toString = function() {
                var Y = this.length;
                return Y === 0 ? "" : arguments.length === 0 ? $(this, 0, Y) : J.apply(this, arguments);
              }, m.prototype.toLocaleString = m.prototype.toString, m.prototype.equals = function(Y) {
                if (!m.isBuffer(Y))
                  throw new TypeError("Argument must be a Buffer");
                return this === Y ? !0 : m.compare(this, Y) === 0;
              }, m.prototype.inspect = function() {
                var Y = "", j = d.INSPECT_MAX_BYTES;
                return Y = this.toString("hex", 0, j).replace(/(.{2})/g, "$1 ").trim(), this.length > j && (Y += " ... "), "<Buffer " + Y + ">";
              }, v && (m.prototype[v] = m.prototype.inspect), m.prototype.compare = function(Y, j, mt, at, Wt) {
                if (be(Y, Uint8Array) && (Y = m.from(Y, Y.offset, Y.byteLength)), !m.isBuffer(Y))
                  throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. Received type ' + typeof Y);
                if (j === void 0 && (j = 0), mt === void 0 && (mt = Y ? Y.length : 0), at === void 0 && (at = 0), Wt === void 0 && (Wt = this.length), j < 0 || mt > Y.length || at < 0 || Wt > this.length)
                  throw new RangeError("out of range index");
                if (at >= Wt && j >= mt)
                  return 0;
                if (at >= Wt)
                  return -1;
                if (j >= mt)
                  return 1;
                if (j >>>= 0, mt >>>= 0, at >>>= 0, Wt >>>= 0, this === Y)
                  return 0;
                for (var _t = Wt - at, Q = mt - j, Jt = Math.min(_t, Q), te = this.slice(at, Wt), Ct = Y.slice(j, mt), Ht = 0; Ht < Jt; ++Ht)
                  if (te[Ht] !== Ct[Ht]) {
                    _t = te[Ht], Q = Ct[Ht];
                    break;
                  }
                return _t < Q ? -1 : Q < _t ? 1 : 0;
              };
              function K(ot, Y, j, mt, at) {
                if (ot.length === 0)
                  return -1;
                if (typeof j == "string" ? (mt = j, j = 0) : j > 2147483647 ? j = 2147483647 : j < -2147483648 && (j = -2147483648), j = +j, Oe(j) && (j = at ? 0 : ot.length - 1), j < 0 && (j = ot.length + j), j >= ot.length) {
                  if (at)
                    return -1;
                  j = ot.length - 1;
                } else if (j < 0)
                  if (at)
                    j = 0;
                  else
                    return -1;
                if (typeof Y == "string" && (Y = m.from(Y, mt)), m.isBuffer(Y))
                  return Y.length === 0 ? -1 : nt(ot, Y, j, mt, at);
                if (typeof Y == "number")
                  return Y = Y & 255, typeof Uint8Array.prototype.indexOf == "function" ? at ? Uint8Array.prototype.indexOf.call(ot, Y, j) : Uint8Array.prototype.lastIndexOf.call(ot, Y, j) : nt(ot, [Y], j, mt, at);
                throw new TypeError("val must be string, number or Buffer");
              }
              function nt(ot, Y, j, mt, at) {
                var Wt = 1, _t = ot.length, Q = Y.length;
                if (mt !== void 0 && (mt = String(mt).toLowerCase(), mt === "ucs2" || mt === "ucs-2" || mt === "utf16le" || mt === "utf-16le")) {
                  if (ot.length < 2 || Y.length < 2)
                    return -1;
                  Wt = 2, _t /= 2, Q /= 2, j /= 2;
                }
                function Jt(Le, De) {
                  return Wt === 1 ? Le[De] : Le.readUInt16BE(De * Wt);
                }
                var te;
                if (at) {
                  var Ct = -1;
                  for (te = j; te < _t; te++)
                    if (Jt(ot, te) === Jt(Y, Ct === -1 ? 0 : te - Ct)) {
                      if (Ct === -1 && (Ct = te), te - Ct + 1 === Q)
                        return Ct * Wt;
                    } else
                      Ct !== -1 && (te -= te - Ct), Ct = -1;
                } else
                  for (j + Q > _t && (j = _t - Q), te = j; te >= 0; te--) {
                    for (var Ht = !0, oe = 0; oe < Q; oe++)
                      if (Jt(ot, te + oe) !== Jt(Y, oe)) {
                        Ht = !1;
                        break;
                      }
                    if (Ht)
                      return te;
                  }
                return -1;
              }
              m.prototype.includes = function(Y, j, mt) {
                return this.indexOf(Y, j, mt) !== -1;
              }, m.prototype.indexOf = function(Y, j, mt) {
                return K(this, Y, j, mt, !0);
              }, m.prototype.lastIndexOf = function(Y, j, mt) {
                return K(this, Y, j, mt, !1);
              };
              function xt(ot, Y, j, mt) {
                j = Number(j) || 0;
                var at = ot.length - j;
                mt ? (mt = Number(mt), mt > at && (mt = at)) : mt = at;
                var Wt = Y.length;
                mt > Wt / 2 && (mt = Wt / 2);
                var _t;
                for (_t = 0; _t < mt; ++_t) {
                  var Q = parseInt(Y.substr(_t * 2, 2), 16);
                  if (Oe(Q))
                    return _t;
                  ot[j + _t] = Q;
                }
                return _t;
              }
              function bt(ot, Y, j, mt) {
                return de(we(Y, ot.length - j), ot, j, mt);
              }
              function Tt(ot, Y, j, mt) {
                return de(zt(Y), ot, j, mt);
              }
              function It(ot, Y, j, mt) {
                return de(le(Y), ot, j, mt);
              }
              function Lt(ot, Y, j, mt) {
                return de(Qt(Y, ot.length - j), ot, j, mt);
              }
              m.prototype.write = function(Y, j, mt, at) {
                if (j === void 0)
                  at = "utf8", mt = this.length, j = 0;
                else if (mt === void 0 && typeof j == "string")
                  at = j, mt = this.length, j = 0;
                else if (isFinite(j))
                  j = j >>> 0, isFinite(mt) ? (mt = mt >>> 0, at === void 0 && (at = "utf8")) : (at = mt, mt = void 0);
                else
                  throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                var Wt = this.length - j;
                if ((mt === void 0 || mt > Wt) && (mt = Wt), Y.length > 0 && (mt < 0 || j < 0) || j > this.length)
                  throw new RangeError("Attempt to write outside buffer bounds");
                at || (at = "utf8");
                for (var _t = !1; ; )
                  switch (at) {
                    case "hex":
                      return xt(this, Y, j, mt);
                    case "utf8":
                    case "utf-8":
                      return bt(this, Y, j, mt);
                    case "ascii":
                    case "latin1":
                    case "binary":
                      return Tt(this, Y, j, mt);
                    case "base64":
                      return It(this, Y, j, mt);
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return Lt(this, Y, j, mt);
                    default:
                      if (_t)
                        throw new TypeError("Unknown encoding: " + at);
                      at = ("" + at).toLowerCase(), _t = !0;
                  }
              }, m.prototype.toJSON = function() {
                return {
                  type: "Buffer",
                  data: Array.prototype.slice.call(this._arr || this, 0)
                };
              };
              function Ut(ot, Y, j) {
                return Y === 0 && j === ot.length ? h.fromByteArray(ot) : h.fromByteArray(ot.slice(Y, j));
              }
              function $(ot, Y, j) {
                j = Math.min(ot.length, j);
                for (var mt = [], at = Y; at < j; ) {
                  var Wt = ot[at], _t = null, Q = Wt > 239 ? 4 : Wt > 223 ? 3 : Wt > 191 ? 2 : 1;
                  if (at + Q <= j) {
                    var Jt = void 0, te = void 0, Ct = void 0, Ht = void 0;
                    switch (Q) {
                      case 1:
                        Wt < 128 && (_t = Wt);
                        break;
                      case 2:
                        Jt = ot[at + 1], (Jt & 192) === 128 && (Ht = (Wt & 31) << 6 | Jt & 63, Ht > 127 && (_t = Ht));
                        break;
                      case 3:
                        Jt = ot[at + 1], te = ot[at + 2], (Jt & 192) === 128 && (te & 192) === 128 && (Ht = (Wt & 15) << 12 | (Jt & 63) << 6 | te & 63, Ht > 2047 && (Ht < 55296 || Ht > 57343) && (_t = Ht));
                        break;
                      case 4:
                        Jt = ot[at + 1], te = ot[at + 2], Ct = ot[at + 3], (Jt & 192) === 128 && (te & 192) === 128 && (Ct & 192) === 128 && (Ht = (Wt & 15) << 18 | (Jt & 63) << 12 | (te & 63) << 6 | Ct & 63, Ht > 65535 && Ht < 1114112 && (_t = Ht));
                    }
                  }
                  _t === null ? (_t = 65533, Q = 1) : _t > 65535 && (_t -= 65536, mt.push(_t >>> 10 & 1023 | 55296), _t = 56320 | _t & 1023), mt.push(_t), at += Q;
                }
                return ut(mt);
              }
              var gt = 4096;
              function ut(ot) {
                var Y = ot.length;
                if (Y <= gt)
                  return String.fromCharCode.apply(String, ot);
                for (var j = "", mt = 0; mt < Y; )
                  j += String.fromCharCode.apply(String, ot.slice(mt, mt += gt));
                return j;
              }
              function st(ot, Y, j) {
                var mt = "";
                j = Math.min(ot.length, j);
                for (var at = Y; at < j; ++at)
                  mt += String.fromCharCode(ot[at] & 127);
                return mt;
              }
              function yt(ot, Y, j) {
                var mt = "";
                j = Math.min(ot.length, j);
                for (var at = Y; at < j; ++at)
                  mt += String.fromCharCode(ot[at]);
                return mt;
              }
              function G(ot, Y, j) {
                var mt = ot.length;
                (!Y || Y < 0) && (Y = 0), (!j || j < 0 || j > mt) && (j = mt);
                for (var at = "", Wt = Y; Wt < j; ++Wt)
                  at += Fe[ot[Wt]];
                return at;
              }
              function Et(ot, Y, j) {
                for (var mt = ot.slice(Y, j), at = "", Wt = 0; Wt < mt.length - 1; Wt += 2)
                  at += String.fromCharCode(mt[Wt] + mt[Wt + 1] * 256);
                return at;
              }
              m.prototype.slice = function(Y, j) {
                var mt = this.length;
                Y = ~~Y, j = j === void 0 ? mt : ~~j, Y < 0 ? (Y += mt, Y < 0 && (Y = 0)) : Y > mt && (Y = mt), j < 0 ? (j += mt, j < 0 && (j = 0)) : j > mt && (j = mt), j < Y && (j = Y);
                var at = this.subarray(Y, j);
                return Object.setPrototypeOf(at, m.prototype), at;
              };
              function k(ot, Y, j) {
                if (ot % 1 !== 0 || ot < 0)
                  throw new RangeError("offset is not uint");
                if (ot + Y > j)
                  throw new RangeError("Trying to access beyond buffer length");
              }
              m.prototype.readUintLE = m.prototype.readUIntLE = function(Y, j, mt) {
                Y = Y >>> 0, j = j >>> 0, mt || k(Y, j, this.length);
                for (var at = this[Y], Wt = 1, _t = 0; ++_t < j && (Wt *= 256); )
                  at += this[Y + _t] * Wt;
                return at;
              }, m.prototype.readUintBE = m.prototype.readUIntBE = function(Y, j, mt) {
                Y = Y >>> 0, j = j >>> 0, mt || k(Y, j, this.length);
                for (var at = this[Y + --j], Wt = 1; j > 0 && (Wt *= 256); )
                  at += this[Y + --j] * Wt;
                return at;
              }, m.prototype.readUint8 = m.prototype.readUInt8 = function(Y, j) {
                return Y = Y >>> 0, j || k(Y, 1, this.length), this[Y];
              }, m.prototype.readUint16LE = m.prototype.readUInt16LE = function(Y, j) {
                return Y = Y >>> 0, j || k(Y, 2, this.length), this[Y] | this[Y + 1] << 8;
              }, m.prototype.readUint16BE = m.prototype.readUInt16BE = function(Y, j) {
                return Y = Y >>> 0, j || k(Y, 2, this.length), this[Y] << 8 | this[Y + 1];
              }, m.prototype.readUint32LE = m.prototype.readUInt32LE = function(Y, j) {
                return Y = Y >>> 0, j || k(Y, 4, this.length), (this[Y] | this[Y + 1] << 8 | this[Y + 2] << 16) + this[Y + 3] * 16777216;
              }, m.prototype.readUint32BE = m.prototype.readUInt32BE = function(Y, j) {
                return Y = Y >>> 0, j || k(Y, 4, this.length), this[Y] * 16777216 + (this[Y + 1] << 16 | this[Y + 2] << 8 | this[Y + 3]);
              }, m.prototype.readBigUInt64LE = Ft(function(Y) {
                Y = Y >>> 0, ae(Y, "offset");
                var j = this[Y], mt = this[Y + 7];
                (j === void 0 || mt === void 0) && Ae(Y, this.length - 8);
                var at = j + this[++Y] * Math.pow(2, 8) + this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 24), Wt = this[++Y] + this[++Y] * Math.pow(2, 8) + this[++Y] * Math.pow(2, 16) + mt * Math.pow(2, 24);
                return BigInt(at) + (BigInt(Wt) << BigInt(32));
              }), m.prototype.readBigUInt64BE = Ft(function(Y) {
                Y = Y >>> 0, ae(Y, "offset");
                var j = this[Y], mt = this[Y + 7];
                (j === void 0 || mt === void 0) && Ae(Y, this.length - 8);
                var at = j * Math.pow(2, 24) + this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 8) + this[++Y], Wt = this[++Y] * Math.pow(2, 24) + this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 8) + mt;
                return (BigInt(at) << BigInt(32)) + BigInt(Wt);
              }), m.prototype.readIntLE = function(Y, j, mt) {
                Y = Y >>> 0, j = j >>> 0, mt || k(Y, j, this.length);
                for (var at = this[Y], Wt = 1, _t = 0; ++_t < j && (Wt *= 256); )
                  at += this[Y + _t] * Wt;
                return Wt *= 128, at >= Wt && (at -= Math.pow(2, 8 * j)), at;
              }, m.prototype.readIntBE = function(Y, j, mt) {
                Y = Y >>> 0, j = j >>> 0, mt || k(Y, j, this.length);
                for (var at = j, Wt = 1, _t = this[Y + --at]; at > 0 && (Wt *= 256); )
                  _t += this[Y + --at] * Wt;
                return Wt *= 128, _t >= Wt && (_t -= Math.pow(2, 8 * j)), _t;
              }, m.prototype.readInt8 = function(Y, j) {
                return Y = Y >>> 0, j || k(Y, 1, this.length), this[Y] & 128 ? (255 - this[Y] + 1) * -1 : this[Y];
              }, m.prototype.readInt16LE = function(Y, j) {
                Y = Y >>> 0, j || k(Y, 2, this.length);
                var mt = this[Y] | this[Y + 1] << 8;
                return mt & 32768 ? mt | 4294901760 : mt;
              }, m.prototype.readInt16BE = function(Y, j) {
                Y = Y >>> 0, j || k(Y, 2, this.length);
                var mt = this[Y + 1] | this[Y] << 8;
                return mt & 32768 ? mt | 4294901760 : mt;
              }, m.prototype.readInt32LE = function(Y, j) {
                return Y = Y >>> 0, j || k(Y, 4, this.length), this[Y] | this[Y + 1] << 8 | this[Y + 2] << 16 | this[Y + 3] << 24;
              }, m.prototype.readInt32BE = function(Y, j) {
                return Y = Y >>> 0, j || k(Y, 4, this.length), this[Y] << 24 | this[Y + 1] << 16 | this[Y + 2] << 8 | this[Y + 3];
              }, m.prototype.readBigInt64LE = Ft(function(Y) {
                Y = Y >>> 0, ae(Y, "offset");
                var j = this[Y], mt = this[Y + 7];
                (j === void 0 || mt === void 0) && Ae(Y, this.length - 8);
                var at = this[Y + 4] + this[Y + 5] * Math.pow(2, 8) + this[Y + 6] * Math.pow(2, 16) + (mt << 24);
                return (BigInt(at) << BigInt(32)) + BigInt(j + this[++Y] * Math.pow(2, 8) + this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 24));
              }), m.prototype.readBigInt64BE = Ft(function(Y) {
                Y = Y >>> 0, ae(Y, "offset");
                var j = this[Y], mt = this[Y + 7];
                (j === void 0 || mt === void 0) && Ae(Y, this.length - 8);
                var at = (j << 24) + // Overflow
                this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 8) + this[++Y];
                return (BigInt(at) << BigInt(32)) + BigInt(this[++Y] * Math.pow(2, 24) + this[++Y] * Math.pow(2, 16) + this[++Y] * Math.pow(2, 8) + mt);
              }), m.prototype.readFloatLE = function(Y, j) {
                return Y = Y >>> 0, j || k(Y, 4, this.length), a.read(this, Y, !0, 23, 4);
              }, m.prototype.readFloatBE = function(Y, j) {
                return Y = Y >>> 0, j || k(Y, 4, this.length), a.read(this, Y, !1, 23, 4);
              }, m.prototype.readDoubleLE = function(Y, j) {
                return Y = Y >>> 0, j || k(Y, 8, this.length), a.read(this, Y, !0, 52, 8);
              }, m.prototype.readDoubleBE = function(Y, j) {
                return Y = Y >>> 0, j || k(Y, 8, this.length), a.read(this, Y, !1, 52, 8);
              };
              function S(ot, Y, j, mt, at, Wt) {
                if (!m.isBuffer(ot))
                  throw new TypeError('"buffer" argument must be a Buffer instance');
                if (Y > at || Y < Wt)
                  throw new RangeError('"value" argument is out of bounds');
                if (j + mt > ot.length)
                  throw new RangeError("Index out of range");
              }
              m.prototype.writeUintLE = m.prototype.writeUIntLE = function(Y, j, mt, at) {
                if (Y = +Y, j = j >>> 0, mt = mt >>> 0, !at) {
                  var Wt = Math.pow(2, 8 * mt) - 1;
                  S(this, Y, j, mt, Wt, 0);
                }
                var _t = 1, Q = 0;
                for (this[j] = Y & 255; ++Q < mt && (_t *= 256); )
                  this[j + Q] = Y / _t & 255;
                return j + mt;
              }, m.prototype.writeUintBE = m.prototype.writeUIntBE = function(Y, j, mt, at) {
                if (Y = +Y, j = j >>> 0, mt = mt >>> 0, !at) {
                  var Wt = Math.pow(2, 8 * mt) - 1;
                  S(this, Y, j, mt, Wt, 0);
                }
                var _t = mt - 1, Q = 1;
                for (this[j + _t] = Y & 255; --_t >= 0 && (Q *= 256); )
                  this[j + _t] = Y / Q & 255;
                return j + mt;
              }, m.prototype.writeUint8 = m.prototype.writeUInt8 = function(Y, j, mt) {
                return Y = +Y, j = j >>> 0, mt || S(this, Y, j, 1, 255, 0), this[j] = Y & 255, j + 1;
              }, m.prototype.writeUint16LE = m.prototype.writeUInt16LE = function(Y, j, mt) {
                return Y = +Y, j = j >>> 0, mt || S(this, Y, j, 2, 65535, 0), this[j] = Y & 255, this[j + 1] = Y >>> 8, j + 2;
              }, m.prototype.writeUint16BE = m.prototype.writeUInt16BE = function(Y, j, mt) {
                return Y = +Y, j = j >>> 0, mt || S(this, Y, j, 2, 65535, 0), this[j] = Y >>> 8, this[j + 1] = Y & 255, j + 2;
              }, m.prototype.writeUint32LE = m.prototype.writeUInt32LE = function(Y, j, mt) {
                return Y = +Y, j = j >>> 0, mt || S(this, Y, j, 4, 4294967295, 0), this[j + 3] = Y >>> 24, this[j + 2] = Y >>> 16, this[j + 1] = Y >>> 8, this[j] = Y & 255, j + 4;
              }, m.prototype.writeUint32BE = m.prototype.writeUInt32BE = function(Y, j, mt) {
                return Y = +Y, j = j >>> 0, mt || S(this, Y, j, 4, 4294967295, 0), this[j] = Y >>> 24, this[j + 1] = Y >>> 16, this[j + 2] = Y >>> 8, this[j + 3] = Y & 255, j + 4;
              };
              function L(ot, Y, j, mt, at) {
                Dt(Y, mt, at, ot, j, 7);
                var Wt = Number(Y & BigInt(4294967295));
                ot[j++] = Wt, Wt = Wt >> 8, ot[j++] = Wt, Wt = Wt >> 8, ot[j++] = Wt, Wt = Wt >> 8, ot[j++] = Wt;
                var _t = Number(Y >> BigInt(32) & BigInt(4294967295));
                return ot[j++] = _t, _t = _t >> 8, ot[j++] = _t, _t = _t >> 8, ot[j++] = _t, _t = _t >> 8, ot[j++] = _t, j;
              }
              function V(ot, Y, j, mt, at) {
                Dt(Y, mt, at, ot, j, 7);
                var Wt = Number(Y & BigInt(4294967295));
                ot[j + 7] = Wt, Wt = Wt >> 8, ot[j + 6] = Wt, Wt = Wt >> 8, ot[j + 5] = Wt, Wt = Wt >> 8, ot[j + 4] = Wt;
                var _t = Number(Y >> BigInt(32) & BigInt(4294967295));
                return ot[j + 3] = _t, _t = _t >> 8, ot[j + 2] = _t, _t = _t >> 8, ot[j + 1] = _t, _t = _t >> 8, ot[j] = _t, j + 8;
              }
              m.prototype.writeBigUInt64LE = Ft(function(Y, j) {
                return j === void 0 && (j = 0), L(this, Y, j, BigInt(0), BigInt("0xffffffffffffffff"));
              }), m.prototype.writeBigUInt64BE = Ft(function(Y, j) {
                return j === void 0 && (j = 0), V(this, Y, j, BigInt(0), BigInt("0xffffffffffffffff"));
              }), m.prototype.writeIntLE = function(Y, j, mt, at) {
                if (Y = +Y, j = j >>> 0, !at) {
                  var Wt = Math.pow(2, 8 * mt - 1);
                  S(this, Y, j, mt, Wt - 1, -Wt);
                }
                var _t = 0, Q = 1, Jt = 0;
                for (this[j] = Y & 255; ++_t < mt && (Q *= 256); )
                  Y < 0 && Jt === 0 && this[j + _t - 1] !== 0 && (Jt = 1), this[j + _t] = (Y / Q >> 0) - Jt & 255;
                return j + mt;
              }, m.prototype.writeIntBE = function(Y, j, mt, at) {
                if (Y = +Y, j = j >>> 0, !at) {
                  var Wt = Math.pow(2, 8 * mt - 1);
                  S(this, Y, j, mt, Wt - 1, -Wt);
                }
                var _t = mt - 1, Q = 1, Jt = 0;
                for (this[j + _t] = Y & 255; --_t >= 0 && (Q *= 256); )
                  Y < 0 && Jt === 0 && this[j + _t + 1] !== 0 && (Jt = 1), this[j + _t] = (Y / Q >> 0) - Jt & 255;
                return j + mt;
              }, m.prototype.writeInt8 = function(Y, j, mt) {
                return Y = +Y, j = j >>> 0, mt || S(this, Y, j, 1, 127, -128), Y < 0 && (Y = 255 + Y + 1), this[j] = Y & 255, j + 1;
              }, m.prototype.writeInt16LE = function(Y, j, mt) {
                return Y = +Y, j = j >>> 0, mt || S(this, Y, j, 2, 32767, -32768), this[j] = Y & 255, this[j + 1] = Y >>> 8, j + 2;
              }, m.prototype.writeInt16BE = function(Y, j, mt) {
                return Y = +Y, j = j >>> 0, mt || S(this, Y, j, 2, 32767, -32768), this[j] = Y >>> 8, this[j + 1] = Y & 255, j + 2;
              }, m.prototype.writeInt32LE = function(Y, j, mt) {
                return Y = +Y, j = j >>> 0, mt || S(this, Y, j, 4, 2147483647, -2147483648), this[j] = Y & 255, this[j + 1] = Y >>> 8, this[j + 2] = Y >>> 16, this[j + 3] = Y >>> 24, j + 4;
              }, m.prototype.writeInt32BE = function(Y, j, mt) {
                return Y = +Y, j = j >>> 0, mt || S(this, Y, j, 4, 2147483647, -2147483648), Y < 0 && (Y = 4294967295 + Y + 1), this[j] = Y >>> 24, this[j + 1] = Y >>> 16, this[j + 2] = Y >>> 8, this[j + 3] = Y & 255, j + 4;
              }, m.prototype.writeBigInt64LE = Ft(function(Y, j) {
                return j === void 0 && (j = 0), L(this, Y, j, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
              }), m.prototype.writeBigInt64BE = Ft(function(Y, j) {
                return j === void 0 && (j = 0), V(this, Y, j, -BigInt("0x8000000000000000"), BigInt("0x7fffffffffffffff"));
              });
              function it(ot, Y, j, mt, at, Wt) {
                if (j + mt > ot.length)
                  throw new RangeError("Index out of range");
                if (j < 0)
                  throw new RangeError("Index out of range");
              }
              function tt(ot, Y, j, mt, at) {
                return Y = +Y, j = j >>> 0, at || it(ot, Y, j, 4), a.write(ot, Y, j, mt, 23, 4), j + 4;
              }
              m.prototype.writeFloatLE = function(Y, j, mt) {
                return tt(this, Y, j, !0, mt);
              }, m.prototype.writeFloatBE = function(Y, j, mt) {
                return tt(this, Y, j, !1, mt);
              };
              function _(ot, Y, j, mt, at) {
                return Y = +Y, j = j >>> 0, at || it(ot, Y, j, 8), a.write(ot, Y, j, mt, 52, 8), j + 8;
              }
              m.prototype.writeDoubleLE = function(Y, j, mt) {
                return _(this, Y, j, !0, mt);
              }, m.prototype.writeDoubleBE = function(Y, j, mt) {
                return _(this, Y, j, !1, mt);
              }, m.prototype.copy = function(Y, j, mt, at) {
                if (!m.isBuffer(Y))
                  throw new TypeError("argument should be a Buffer");
                if (mt || (mt = 0), !at && at !== 0 && (at = this.length), j >= Y.length && (j = Y.length), j || (j = 0), at > 0 && at < mt && (at = mt), at === mt || Y.length === 0 || this.length === 0)
                  return 0;
                if (j < 0)
                  throw new RangeError("targetStart out of bounds");
                if (mt < 0 || mt >= this.length)
                  throw new RangeError("Index out of range");
                if (at < 0)
                  throw new RangeError("sourceEnd out of bounds");
                at > this.length && (at = this.length), Y.length - j < at - mt && (at = Y.length - j + mt);
                var Wt = at - mt;
                return this === Y && typeof Uint8Array.prototype.copyWithin == "function" ? this.copyWithin(j, mt, at) : Uint8Array.prototype.set.call(Y, this.subarray(mt, at), j), Wt;
              }, m.prototype.fill = function(Y, j, mt, at) {
                if (typeof Y == "string") {
                  if (typeof j == "string" ? (at = j, j = 0, mt = this.length) : typeof mt == "string" && (at = mt, mt = this.length), at !== void 0 && typeof at != "string")
                    throw new TypeError("encoding must be a string");
                  if (typeof at == "string" && !m.isEncoding(at))
                    throw new TypeError("Unknown encoding: " + at);
                  if (Y.length === 1) {
                    var Wt = Y.charCodeAt(0);
                    (at === "utf8" && Wt < 128 || at === "latin1") && (Y = Wt);
                  }
                } else
                  typeof Y == "number" ? Y = Y & 255 : typeof Y == "boolean" && (Y = Number(Y));
                if (j < 0 || this.length < j || this.length < mt)
                  throw new RangeError("Out of range index");
                if (mt <= j)
                  return this;
                j = j >>> 0, mt = mt === void 0 ? this.length : mt >>> 0, Y || (Y = 0);
                var _t;
                if (typeof Y == "number")
                  for (_t = j; _t < mt; ++_t)
                    this[_t] = Y;
                else {
                  var Q = m.isBuffer(Y) ? Y : m.from(Y, at), Jt = Q.length;
                  if (Jt === 0)
                    throw new TypeError('The value "' + Y + '" is invalid for argument "value"');
                  for (_t = 0; _t < mt - j; ++_t)
                    this[_t + j] = Q[_t % Jt];
                }
                return this;
              };
              var At = {};
              function Rt(ot, Y, j) {
                At[ot] = /* @__PURE__ */ function(mt) {
                  l(at, mt);
                  function at() {
                    var _t;
                    return _t = mt.call(this) || this, Object.defineProperty(f(_t), "message", {
                      value: Y.apply(f(_t), arguments),
                      writable: !0,
                      configurable: !0
                    }), _t.name = _t.name + " [" + ot + "]", _t.stack, delete _t.name, _t;
                  }
                  var Wt = at.prototype;
                  return Wt.toString = function() {
                    return this.name + " [" + ot + "]: " + this.message;
                  }, r(at, [{
                    key: "code",
                    get: function() {
                      return ot;
                    },
                    set: function(Q) {
                      Object.defineProperty(this, "code", {
                        configurable: !0,
                        enumerable: !0,
                        value: Q,
                        writable: !0
                      });
                    }
                  }]), at;
                }(j);
              }
              Rt("ERR_BUFFER_OUT_OF_BOUNDS", function(ot) {
                return ot ? ot + " is outside of buffer bounds" : "Attempt to access memory outside buffer bounds";
              }, RangeError), Rt("ERR_INVALID_ARG_TYPE", function(ot, Y) {
                return 'The "' + ot + '" argument must be of type number. Received type ' + typeof Y;
              }, TypeError), Rt("ERR_OUT_OF_RANGE", function(ot, Y, j) {
                var mt = 'The value of "' + ot + '" is out of range.', at = j;
                return Number.isInteger(j) && Math.abs(j) > Math.pow(2, 32) ? at = Yt(String(j)) : typeof j == "bigint" && (at = String(j), (j > Math.pow(BigInt(2), BigInt(32)) || j < -Math.pow(BigInt(2), BigInt(32))) && (at = Yt(at)), at += "n"), mt += " It must be " + Y + ". Received " + at, mt;
              }, RangeError);
              function Yt(ot) {
                for (var Y = "", j = ot.length, mt = ot[0] === "-" ? 1 : 0; j >= mt + 4; j -= 3)
                  Y = "_" + ot.slice(j - 3, j) + Y;
                return "" + ot.slice(0, j) + Y;
              }
              function Gt(ot, Y, j) {
                ae(Y, "offset"), (ot[Y] === void 0 || ot[Y + j] === void 0) && Ae(Y, ot.length - (j + 1));
              }
              function Dt(ot, Y, j, mt, at, Wt) {
                if (ot > j || ot < Y) {
                  var _t = typeof Y == "bigint" ? "n" : "", Q;
                  throw Wt > 3 ? Y === 0 || Y === BigInt(0) ? Q = ">= 0" + _t + " and < 2" + _t + " ** " + (Wt + 1) * 8 + _t : Q = ">= -(2" + _t + " ** " + ((Wt + 1) * 8 - 1) + _t + ") and < 2 ** " + ("" + ((Wt + 1) * 8 - 1) + _t) : Q = ">= " + Y + _t + " and <= " + j + _t, new At.ERR_OUT_OF_RANGE("value", Q, ot);
                }
                Gt(mt, at, Wt);
              }
              function ae(ot, Y) {
                if (typeof ot != "number")
                  throw new At.ERR_INVALID_ARG_TYPE(Y, "number", ot);
              }
              function Ae(ot, Y, j) {
                throw Math.floor(ot) !== ot ? (ae(ot, j), new At.ERR_OUT_OF_RANGE(j || "offset", "an integer", ot)) : Y < 0 ? new At.ERR_BUFFER_OUT_OF_BOUNDS() : new At.ERR_OUT_OF_RANGE(j || "offset", ">= " + (j ? 1 : 0) + " and <= " + Y, ot);
              }
              var xe = /[^+/0-9A-Za-z-_]/g;
              function ce(ot) {
                if (ot = ot.split("=")[0], ot = ot.trim().replace(xe, ""), ot.length < 2)
                  return "";
                for (; ot.length % 4 !== 0; )
                  ot = ot + "=";
                return ot;
              }
              function we(ot, Y) {
                Y = Y || 1 / 0;
                for (var j, mt = ot.length, at = null, Wt = [], _t = 0; _t < mt; ++_t) {
                  if (j = ot.charCodeAt(_t), j > 55295 && j < 57344) {
                    if (!at) {
                      if (j > 56319) {
                        (Y -= 3) > -1 && Wt.push(239, 191, 189);
                        continue;
                      } else if (_t + 1 === mt) {
                        (Y -= 3) > -1 && Wt.push(239, 191, 189);
                        continue;
                      }
                      at = j;
                      continue;
                    }
                    if (j < 56320) {
                      (Y -= 3) > -1 && Wt.push(239, 191, 189), at = j;
                      continue;
                    }
                    j = (at - 55296 << 10 | j - 56320) + 65536;
                  } else
                    at && (Y -= 3) > -1 && Wt.push(239, 191, 189);
                  if (at = null, j < 128) {
                    if ((Y -= 1) < 0)
                      break;
                    Wt.push(j);
                  } else if (j < 2048) {
                    if ((Y -= 2) < 0)
                      break;
                    Wt.push(j >> 6 | 192, j & 63 | 128);
                  } else if (j < 65536) {
                    if ((Y -= 3) < 0)
                      break;
                    Wt.push(j >> 12 | 224, j >> 6 & 63 | 128, j & 63 | 128);
                  } else if (j < 1114112) {
                    if ((Y -= 4) < 0)
                      break;
                    Wt.push(j >> 18 | 240, j >> 12 & 63 | 128, j >> 6 & 63 | 128, j & 63 | 128);
                  } else
                    throw new Error("Invalid code point");
                }
                return Wt;
              }
              function zt(ot) {
                for (var Y = [], j = 0; j < ot.length; ++j)
                  Y.push(ot.charCodeAt(j) & 255);
                return Y;
              }
              function Qt(ot, Y) {
                for (var j, mt, at, Wt = [], _t = 0; _t < ot.length && !((Y -= 2) < 0); ++_t)
                  j = ot.charCodeAt(_t), mt = j >> 8, at = j % 256, Wt.push(at), Wt.push(mt);
                return Wt;
              }
              function le(ot) {
                return h.toByteArray(ce(ot));
              }
              function de(ot, Y, j, mt) {
                var at;
                for (at = 0; at < mt && !(at + j >= Y.length || at >= ot.length); ++at)
                  Y[at + j] = ot[at];
                return at;
              }
              function be(ot, Y) {
                return ot instanceof Y || ot != null && ot.constructor != null && ot.constructor.name != null && ot.constructor.name === Y.name;
              }
              function Oe(ot) {
                return ot !== ot;
              }
              var Fe = function() {
                for (var ot = "0123456789abcdef", Y = new Array(256), j = 0; j < 16; ++j)
                  for (var mt = j * 16, at = 0; at < 16; ++at)
                    Y[mt + at] = ot[j] + ot[at];
                return Y;
              }();
              function Ft(ot) {
                return typeof BigInt > "u" ? fe : ot;
              }
              function fe() {
                throw new Error("BigInt not supported");
              }
            }
          ),
          /***/
          20724: (
            /***/
            function(c, d, t) {
              t(36501), t(10853), c.exports = typeof ArrayBuffer < "u" && typeof DataView < "u";
            }
          ),
          /***/
          32590: (
            /***/
            function(c, d, t) {
              var o = t(20724), r = t(7493), n = t(98363), i = t(75277), f = t(52786), l = t(24792), u = t(36994), h = t(28768), a = t(45899), v = t(35974), y = t(86385).f, p = t(32010), e = t(12654), m = t(22412), w = t(52280), D = t(34524), I = n.Int8Array, E = I && I.prototype, T = n.Uint8ClampedArray, A = T && T.prototype, F = I && e(I), b = E && e(E), R = Object.prototype, N = n.TypeError, U = w("toStringTag"), W = D("TYPED_ARRAY_TAG"), J = D("TYPED_ARRAY_CONSTRUCTOR"), ht = o && !!m && u(n.opera) !== "Opera", K = !1, nt, xt, bt, Tt = {
                Int8Array: 1,
                Uint8Array: 1,
                Uint8ClampedArray: 1,
                Int16Array: 2,
                Uint16Array: 2,
                Int32Array: 4,
                Uint32Array: 4,
                Float32Array: 4,
                Float64Array: 8
              }, It = {
                BigInt64Array: 8,
                BigUint64Array: 8
              }, Lt = function(G) {
                if (!f(G))
                  return !1;
                var Et = u(G);
                return Et === "DataView" || l(Tt, Et) || l(It, Et);
              }, Ut = function(G) {
                if (!f(G))
                  return !1;
                var Et = u(G);
                return l(Tt, Et) || l(It, Et);
              }, $ = function(G) {
                if (Ut(G))
                  return G;
                throw N("Target is not a typed array");
              }, gt = function(G) {
                if (i(G) && (!m || p(F, G)))
                  return G;
                throw N(h(G) + " is not a typed array constructor");
              }, ut = function(G, Et, k) {
                if (r) {
                  if (k)
                    for (var S in Tt) {
                      var L = n[S];
                      if (L && l(L.prototype, G))
                        try {
                          delete L.prototype[G];
                        } catch {
                        }
                    }
                  (!b[G] || k) && v(b, G, k ? Et : ht && E[G] || Et);
                }
              }, st = function(G, Et, k) {
                var S, L;
                if (r) {
                  if (m) {
                    if (k) {
                      for (S in Tt)
                        if (L = n[S], L && l(L, G))
                          try {
                            delete L[G];
                          } catch {
                          }
                    }
                    if (!F[G] || k)
                      try {
                        return v(F, G, k ? Et : ht && F[G] || Et);
                      } catch {
                      }
                    else
                      return;
                  }
                  for (S in Tt)
                    L = n[S], L && (!L[G] || k) && v(L, G, Et);
                }
              };
              for (nt in Tt)
                xt = n[nt], bt = xt && xt.prototype, bt ? a(bt, J, xt) : ht = !1;
              for (nt in It)
                xt = n[nt], bt = xt && xt.prototype, bt && a(bt, J, xt);
              if ((!ht || !i(F) || F === Function.prototype) && (F = function() {
                throw N("Incorrect invocation");
              }, ht))
                for (nt in Tt)
                  n[nt] && m(n[nt], F);
              if ((!ht || !b || b === R) && (b = F.prototype, ht))
                for (nt in Tt)
                  n[nt] && m(n[nt].prototype, b);
              if (ht && e(A) !== b && m(A, b), r && !l(b, U)) {
                K = !0, y(b, U, {
                  get: function() {
                    return f(this) ? this[W] : void 0;
                  }
                });
                for (nt in Tt)
                  n[nt] && a(n[nt], W, nt);
              }
              c.exports = {
                NATIVE_ARRAY_BUFFER_VIEWS: ht,
                TYPED_ARRAY_CONSTRUCTOR: J,
                TYPED_ARRAY_TAG: K && W,
                aTypedArray: $,
                aTypedArrayConstructor: gt,
                exportTypedArrayMethod: ut,
                exportTypedArrayStaticMethod: st,
                isView: Lt,
                isTypedArray: Ut,
                TypedArray: F,
                TypedArrayPrototype: b
              };
            }
          ),
          /***/
          74510: (
            /***/
            function(c, d, t) {
              t(54994);
              var o = t(98363), r = t(88697), n = t(7493), i = t(20724), f = t(55316), l = t(45899), u = t(7592), h = t(79044), a = t(9519), v = t(14229), y = t(35108), p = t(27302), e = t(45489), m = t(12654), w = t(22412), D = t(87994).f, I = t(86385).f, E = t(55522), T = t(15629), A = t(60878), F = t(20821), b = f.PROPER, R = f.CONFIGURABLE, N = F.get, U = F.set, W = "ArrayBuffer", J = "DataView", ht = "prototype", K = "Wrong length", nt = "Wrong index", xt = o[W], bt = xt, Tt = bt && bt[ht], It = o[J], Lt = It && It[ht], Ut = Object.prototype, $ = o.Array, gt = o.RangeError, ut = r(E), st = r([].reverse), yt = e.pack, G = e.unpack, Et = function(ce) {
                return [ce & 255];
              }, k = function(ce) {
                return [ce & 255, ce >> 8 & 255];
              }, S = function(ce) {
                return [ce & 255, ce >> 8 & 255, ce >> 16 & 255, ce >> 24 & 255];
              }, L = function(ce) {
                return ce[3] << 24 | ce[2] << 16 | ce[1] << 8 | ce[0];
              }, V = function(ce) {
                return yt(ce, 23, 4);
              }, it = function(ce) {
                return yt(ce, 52, 8);
              }, tt = function(ce, we) {
                I(ce[ht], we, {
                  get: function() {
                    return N(this)[we];
                  }
                });
              }, _ = function(ce, we, zt, Qt) {
                var le = p(zt), de = N(ce);
                if (le + we > de.byteLength)
                  throw gt(nt);
                var be = N(de.buffer).bytes, Oe = le + de.byteOffset, Fe = T(be, Oe, Oe + we);
                return Qt ? Fe : st(Fe);
              }, At = function(ce, we, zt, Qt, le, de) {
                var be = p(zt), Oe = N(ce);
                if (be + we > Oe.byteLength)
                  throw gt(nt);
                for (var Fe = N(Oe.buffer).bytes, Ft = be + Oe.byteOffset, fe = Qt(+le), ot = 0; ot < we; ot++)
                  Fe[Ft + ot] = fe[de ? ot : we - ot - 1];
              };
              if (!i)
                bt = function(ce) {
                  a(this, Tt);
                  var we = p(ce);
                  U(this, {
                    bytes: ut($(we), 0),
                    byteLength: we
                  }), n || (this.byteLength = we);
                }, Tt = bt[ht], It = function(ce, we, zt) {
                  a(this, Lt), a(ce, Tt);
                  var Qt = N(ce).byteLength, le = v(we);
                  if (le < 0 || le > Qt)
                    throw gt("Wrong offset");
                  if (zt = zt === void 0 ? Qt - le : y(zt), le + zt > Qt)
                    throw gt(K);
                  U(this, {
                    buffer: ce,
                    byteLength: zt,
                    byteOffset: le
                  }), n || (this.buffer = ce, this.byteLength = zt, this.byteOffset = le);
                }, Lt = It[ht], n && (tt(bt, "byteLength"), tt(It, "buffer"), tt(It, "byteLength"), tt(It, "byteOffset")), u(Lt, {
                  getInt8: function(ce) {
                    return _(this, 1, ce)[0] << 24 >> 24;
                  },
                  getUint8: function(ce) {
                    return _(this, 1, ce)[0];
                  },
                  getInt16: function(ce) {
                    var we = _(this, 2, ce, arguments.length > 1 ? arguments[1] : void 0);
                    return (we[1] << 8 | we[0]) << 16 >> 16;
                  },
                  getUint16: function(ce) {
                    var we = _(this, 2, ce, arguments.length > 1 ? arguments[1] : void 0);
                    return we[1] << 8 | we[0];
                  },
                  getInt32: function(ce) {
                    return L(_(this, 4, ce, arguments.length > 1 ? arguments[1] : void 0));
                  },
                  getUint32: function(ce) {
                    return L(_(this, 4, ce, arguments.length > 1 ? arguments[1] : void 0)) >>> 0;
                  },
                  getFloat32: function(ce) {
                    return G(_(this, 4, ce, arguments.length > 1 ? arguments[1] : void 0), 23);
                  },
                  getFloat64: function(ce) {
                    return G(_(this, 8, ce, arguments.length > 1 ? arguments[1] : void 0), 52);
                  },
                  setInt8: function(ce, we) {
                    At(this, 1, ce, Et, we);
                  },
                  setUint8: function(ce, we) {
                    At(this, 1, ce, Et, we);
                  },
                  setInt16: function(ce, we) {
                    At(this, 2, ce, k, we, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setUint16: function(ce, we) {
                    At(this, 2, ce, k, we, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setInt32: function(ce, we) {
                    At(this, 4, ce, S, we, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setUint32: function(ce, we) {
                    At(this, 4, ce, S, we, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setFloat32: function(ce, we) {
                    At(this, 4, ce, V, we, arguments.length > 2 ? arguments[2] : void 0);
                  },
                  setFloat64: function(ce, we) {
                    At(this, 8, ce, it, we, arguments.length > 2 ? arguments[2] : void 0);
                  }
                });
              else {
                var Rt = b && xt.name !== W;
                if (!h(function() {
                  xt(1);
                }) || !h(function() {
                  new xt(-1);
                }) || h(function() {
                  return new xt(), new xt(1.5), new xt(NaN), Rt && !R;
                })) {
                  bt = function(ce) {
                    return a(this, Tt), new xt(p(ce));
                  }, bt[ht] = Tt;
                  for (var Yt = D(xt), Gt = 0, Dt; Yt.length > Gt; )
                    (Dt = Yt[Gt++]) in bt || l(bt, Dt, xt[Dt]);
                  Tt.constructor = bt;
                } else
                  Rt && R && l(xt, "name", W);
                w && m(Lt) !== Ut && w(Lt, Ut);
                var ae = new It(new bt(2)), Ae = r(Lt.setInt8);
                ae.setInt8(0, 2147483648), ae.setInt8(1, 2147483649), (ae.getInt8(0) || !ae.getInt8(1)) && u(Lt, {
                  setInt8: function(ce, we) {
                    Ae(this, ce, we << 24 >> 24);
                  },
                  setUint8: function(ce, we) {
                    Ae(this, ce, we << 24 >> 24);
                  }
                }, {
                  unsafe: !0
                });
              }
              A(bt, W), A(It, J), c.exports = {
                ArrayBuffer: bt,
                DataView: It
              };
            }
          ),
          /***/
          36501: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(98363), n = t(74510), i = t(57323), f = "ArrayBuffer", l = n[f], u = r[f];
              o({
                global: !0,
                forced: u !== l
              }, {
                ArrayBuffer: l
              }), i(f);
            }
          ),
          /***/
          22449: (
            /***/
            function(c, d, t) {
              (function(o, r, n) {
                c.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.BlockCipher, f = r.algo, l = [], u = [], h = [], a = [], v = [], y = [], p = [], e = [], m = [], w = [];
                  (function() {
                    for (var E = [], T = 0; T < 256; T++)
                      T < 128 ? E[T] = T << 1 : E[T] = T << 1 ^ 283;
                    for (var A = 0, F = 0, T = 0; T < 256; T++) {
                      var b = F ^ F << 1 ^ F << 2 ^ F << 3 ^ F << 4;
                      b = b >>> 8 ^ b & 255 ^ 99, l[A] = b, u[b] = A;
                      var R = E[A], N = E[R], U = E[N], W = E[b] * 257 ^ b * 16843008;
                      h[A] = W << 24 | W >>> 8, a[A] = W << 16 | W >>> 16, v[A] = W << 8 | W >>> 24, y[A] = W;
                      var W = U * 16843009 ^ N * 65537 ^ R * 257 ^ A * 16843008;
                      p[b] = W << 24 | W >>> 8, e[b] = W << 16 | W >>> 16, m[b] = W << 8 | W >>> 24, w[b] = W, A ? (A = R ^ E[E[E[U ^ R]]], F ^= E[E[F]]) : A = F = 1;
                    }
                  })();
                  var D = [0, 1, 2, 4, 8, 16, 32, 64, 128, 27, 54], I = f.AES = i.extend({
                    _doReset: function() {
                      var T;
                      if (!(this._nRounds && this._keyPriorReset === this._key)) {
                        for (var A = this._keyPriorReset = this._key, F = A.words, b = A.sigBytes / 4, R = this._nRounds = b + 6, N = (R + 1) * 4, U = this._keySchedule = [], W = 0; W < N; W++)
                          W < b ? U[W] = F[W] : (T = U[W - 1], W % b ? b > 6 && W % b == 4 && (T = l[T >>> 24] << 24 | l[T >>> 16 & 255] << 16 | l[T >>> 8 & 255] << 8 | l[T & 255]) : (T = T << 8 | T >>> 24, T = l[T >>> 24] << 24 | l[T >>> 16 & 255] << 16 | l[T >>> 8 & 255] << 8 | l[T & 255], T ^= D[W / b | 0] << 24), U[W] = U[W - b] ^ T);
                        for (var J = this._invKeySchedule = [], ht = 0; ht < N; ht++) {
                          var W = N - ht;
                          if (ht % 4)
                            var T = U[W];
                          else
                            var T = U[W - 4];
                          ht < 4 || W <= 4 ? J[ht] = T : J[ht] = p[l[T >>> 24]] ^ e[l[T >>> 16 & 255]] ^ m[l[T >>> 8 & 255]] ^ w[l[T & 255]];
                        }
                      }
                    },
                    encryptBlock: function(T, A) {
                      this._doCryptBlock(T, A, this._keySchedule, h, a, v, y, l);
                    },
                    decryptBlock: function(T, A) {
                      var F = T[A + 1];
                      T[A + 1] = T[A + 3], T[A + 3] = F, this._doCryptBlock(T, A, this._invKeySchedule, p, e, m, w, u);
                      var F = T[A + 1];
                      T[A + 1] = T[A + 3], T[A + 3] = F;
                    },
                    _doCryptBlock: function(T, A, F, b, R, N, U, W) {
                      for (var J = this._nRounds, ht = T[A] ^ F[0], K = T[A + 1] ^ F[1], nt = T[A + 2] ^ F[2], xt = T[A + 3] ^ F[3], bt = 4, Tt = 1; Tt < J; Tt++) {
                        var It = b[ht >>> 24] ^ R[K >>> 16 & 255] ^ N[nt >>> 8 & 255] ^ U[xt & 255] ^ F[bt++], Lt = b[K >>> 24] ^ R[nt >>> 16 & 255] ^ N[xt >>> 8 & 255] ^ U[ht & 255] ^ F[bt++], Ut = b[nt >>> 24] ^ R[xt >>> 16 & 255] ^ N[ht >>> 8 & 255] ^ U[K & 255] ^ F[bt++], $ = b[xt >>> 24] ^ R[ht >>> 16 & 255] ^ N[K >>> 8 & 255] ^ U[nt & 255] ^ F[bt++];
                        ht = It, K = Lt, nt = Ut, xt = $;
                      }
                      var It = (W[ht >>> 24] << 24 | W[K >>> 16 & 255] << 16 | W[nt >>> 8 & 255] << 8 | W[xt & 255]) ^ F[bt++], Lt = (W[K >>> 24] << 24 | W[nt >>> 16 & 255] << 16 | W[xt >>> 8 & 255] << 8 | W[ht & 255]) ^ F[bt++], Ut = (W[nt >>> 24] << 24 | W[xt >>> 16 & 255] << 16 | W[ht >>> 8 & 255] << 8 | W[K & 255]) ^ F[bt++], $ = (W[xt >>> 24] << 24 | W[ht >>> 16 & 255] << 16 | W[K >>> 8 & 255] << 8 | W[nt & 255]) ^ F[bt++];
                      T[A] = It, T[A + 1] = Lt, T[A + 2] = Ut, T[A + 3] = $;
                    },
                    keySize: 256 / 32
                  });
                  r.AES = i._createHelper(I);
                }(), o.AES;
              });
            }
          ),
          /***/
          67646: (
            /***/
            function(c, d, t) {
              (function(o, r, n) {
                c.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.BlockCipher, f = r.algo, l = 16, u = [608135816, 2242054355, 320440878, 57701188, 2752067618, 698298832, 137296536, 3964562569, 1160258022, 953160567, 3193202383, 887688300, 3232508343, 3380367581, 1065670069, 3041331479, 2450970073, 2306472731], h = [[3509652390, 2564797868, 805139163, 3491422135, 3101798381, 1780907670, 3128725573, 4046225305, 614570311, 3012652279, 134345442, 2240740374, 1667834072, 1901547113, 2757295779, 4103290238, 227898511, 1921955416, 1904987480, 2182433518, 2069144605, 3260701109, 2620446009, 720527379, 3318853667, 677414384, 3393288472, 3101374703, 2390351024, 1614419982, 1822297739, 2954791486, 3608508353, 3174124327, 2024746970, 1432378464, 3864339955, 2857741204, 1464375394, 1676153920, 1439316330, 715854006, 3033291828, 289532110, 2706671279, 2087905683, 3018724369, 1668267050, 732546397, 1947742710, 3462151702, 2609353502, 2950085171, 1814351708, 2050118529, 680887927, 999245976, 1800124847, 3300911131, 1713906067, 1641548236, 4213287313, 1216130144, 1575780402, 4018429277, 3917837745, 3693486850, 3949271944, 596196993, 3549867205, 258830323, 2213823033, 772490370, 2760122372, 1774776394, 2652871518, 566650946, 4142492826, 1728879713, 2882767088, 1783734482, 3629395816, 2517608232, 2874225571, 1861159788, 326777828, 3124490320, 2130389656, 2716951837, 967770486, 1724537150, 2185432712, 2364442137, 1164943284, 2105845187, 998989502, 3765401048, 2244026483, 1075463327, 1455516326, 1322494562, 910128902, 469688178, 1117454909, 936433444, 3490320968, 3675253459, 1240580251, 122909385, 2157517691, 634681816, 4142456567, 3825094682, 3061402683, 2540495037, 79693498, 3249098678, 1084186820, 1583128258, 426386531, 1761308591, 1047286709, 322548459, 995290223, 1845252383, 2603652396, 3431023940, 2942221577, 3202600964, 3727903485, 1712269319, 422464435, 3234572375, 1170764815, 3523960633, 3117677531, 1434042557, 442511882, 3600875718, 1076654713, 1738483198, 4213154764, 2393238008, 3677496056, 1014306527, 4251020053, 793779912, 2902807211, 842905082, 4246964064, 1395751752, 1040244610, 2656851899, 3396308128, 445077038, 3742853595, 3577915638, 679411651, 2892444358, 2354009459, 1767581616, 3150600392, 3791627101, 3102740896, 284835224, 4246832056, 1258075500, 768725851, 2589189241, 3069724005, 3532540348, 1274779536, 3789419226, 2764799539, 1660621633, 3471099624, 4011903706, 913787905, 3497959166, 737222580, 2514213453, 2928710040, 3937242737, 1804850592, 3499020752, 2949064160, 2386320175, 2390070455, 2415321851, 4061277028, 2290661394, 2416832540, 1336762016, 1754252060, 3520065937, 3014181293, 791618072, 3188594551, 3933548030, 2332172193, 3852520463, 3043980520, 413987798, 3465142937, 3030929376, 4245938359, 2093235073, 3534596313, 375366246, 2157278981, 2479649556, 555357303, 3870105701, 2008414854, 3344188149, 4221384143, 3956125452, 2067696032, 3594591187, 2921233993, 2428461, 544322398, 577241275, 1471733935, 610547355, 4027169054, 1432588573, 1507829418, 2025931657, 3646575487, 545086370, 48609733, 2200306550, 1653985193, 298326376, 1316178497, 3007786442, 2064951626, 458293330, 2589141269, 3591329599, 3164325604, 727753846, 2179363840, 146436021, 1461446943, 4069977195, 705550613, 3059967265, 3887724982, 4281599278, 3313849956, 1404054877, 2845806497, 146425753, 1854211946], [1266315497, 3048417604, 3681880366, 3289982499, 290971e4, 1235738493, 2632868024, 2414719590, 3970600049, 1771706367, 1449415276, 3266420449, 422970021, 1963543593, 2690192192, 3826793022, 1062508698, 1531092325, 1804592342, 2583117782, 2714934279, 4024971509, 1294809318, 4028980673, 1289560198, 2221992742, 1669523910, 35572830, 157838143, 1052438473, 1016535060, 1802137761, 1753167236, 1386275462, 3080475397, 2857371447, 1040679964, 2145300060, 2390574316, 1461121720, 2956646967, 4031777805, 4028374788, 33600511, 2920084762, 1018524850, 629373528, 3691585981, 3515945977, 2091462646, 2486323059, 586499841, 988145025, 935516892, 3367335476, 2599673255, 2839830854, 265290510, 3972581182, 2759138881, 3795373465, 1005194799, 847297441, 406762289, 1314163512, 1332590856, 1866599683, 4127851711, 750260880, 613907577, 1450815602, 3165620655, 3734664991, 3650291728, 3012275730, 3704569646, 1427272223, 778793252, 1343938022, 2676280711, 2052605720, 1946737175, 3164576444, 3914038668, 3967478842, 3682934266, 1661551462, 3294938066, 4011595847, 840292616, 3712170807, 616741398, 312560963, 711312465, 1351876610, 322626781, 1910503582, 271666773, 2175563734, 1594956187, 70604529, 3617834859, 1007753275, 1495573769, 4069517037, 2549218298, 2663038764, 504708206, 2263041392, 3941167025, 2249088522, 1514023603, 1998579484, 1312622330, 694541497, 2582060303, 2151582166, 1382467621, 776784248, 2618340202, 3323268794, 2497899128, 2784771155, 503983604, 4076293799, 907881277, 423175695, 432175456, 1378068232, 4145222326, 3954048622, 3938656102, 3820766613, 2793130115, 2977904593, 26017576, 3274890735, 3194772133, 1700274565, 1756076034, 4006520079, 3677328699, 720338349, 1533947780, 354530856, 688349552, 3973924725, 1637815568, 332179504, 3949051286, 53804574, 2852348879, 3044236432, 1282449977, 3583942155, 3416972820, 4006381244, 1617046695, 2628476075, 3002303598, 1686838959, 431878346, 2686675385, 1700445008, 1080580658, 1009431731, 832498133, 3223435511, 2605976345, 2271191193, 2516031870, 1648197032, 4164389018, 2548247927, 300782431, 375919233, 238389289, 3353747414, 2531188641, 2019080857, 1475708069, 455242339, 2609103871, 448939670, 3451063019, 1395535956, 2413381860, 1841049896, 1491858159, 885456874, 4264095073, 4001119347, 1565136089, 3898914787, 1108368660, 540939232, 1173283510, 2745871338, 3681308437, 4207628240, 3343053890, 4016749493, 1699691293, 1103962373, 3625875870, 2256883143, 3830138730, 1031889488, 3479347698, 1535977030, 4236805024, 3251091107, 2132092099, 1774941330, 1199868427, 1452454533, 157007616, 2904115357, 342012276, 595725824, 1480756522, 206960106, 497939518, 591360097, 863170706, 2375253569, 3596610801, 1814182875, 2094937945, 3421402208, 1082520231, 3463918190, 2785509508, 435703966, 3908032597, 1641649973, 2842273706, 3305899714, 1510255612, 2148256476, 2655287854, 3276092548, 4258621189, 236887753, 3681803219, 274041037, 1734335097, 3815195456, 3317970021, 1899903192, 1026095262, 4050517792, 356393447, 2410691914, 3873677099, 3682840055], [3913112168, 2491498743, 4132185628, 2489919796, 1091903735, 1979897079, 3170134830, 3567386728, 3557303409, 857797738, 1136121015, 1342202287, 507115054, 2535736646, 337727348, 3213592640, 1301675037, 2528481711, 1895095763, 1721773893, 3216771564, 62756741, 2142006736, 835421444, 2531993523, 1442658625, 3659876326, 2882144922, 676362277, 1392781812, 170690266, 3921047035, 1759253602, 3611846912, 1745797284, 664899054, 1329594018, 3901205900, 3045908486, 2062866102, 2865634940, 3543621612, 3464012697, 1080764994, 553557557, 3656615353, 3996768171, 991055499, 499776247, 1265440854, 648242737, 3940784050, 980351604, 3713745714, 1749149687, 3396870395, 4211799374, 3640570775, 1161844396, 3125318951, 1431517754, 545492359, 4268468663, 3499529547, 1437099964, 2702547544, 3433638243, 2581715763, 2787789398, 1060185593, 1593081372, 2418618748, 4260947970, 69676912, 2159744348, 86519011, 2512459080, 3838209314, 1220612927, 3339683548, 133810670, 1090789135, 1078426020, 1569222167, 845107691, 3583754449, 4072456591, 1091646820, 628848692, 1613405280, 3757631651, 526609435, 236106946, 48312990, 2942717905, 3402727701, 1797494240, 859738849, 992217954, 4005476642, 2243076622, 3870952857, 3732016268, 765654824, 3490871365, 2511836413, 1685915746, 3888969200, 1414112111, 2273134842, 3281911079, 4080962846, 172450625, 2569994100, 980381355, 4109958455, 2819808352, 2716589560, 2568741196, 3681446669, 3329971472, 1835478071, 660984891, 3704678404, 4045999559, 3422617507, 3040415634, 1762651403, 1719377915, 3470491036, 2693910283, 3642056355, 3138596744, 1364962596, 2073328063, 1983633131, 926494387, 3423689081, 2150032023, 4096667949, 1749200295, 3328846651, 309677260, 2016342300, 1779581495, 3079819751, 111262694, 1274766160, 443224088, 298511866, 1025883608, 3806446537, 1145181785, 168956806, 3641502830, 3584813610, 1689216846, 3666258015, 3200248200, 1692713982, 2646376535, 4042768518, 1618508792, 1610833997, 3523052358, 4130873264, 2001055236, 3610705100, 2202168115, 4028541809, 2961195399, 1006657119, 2006996926, 3186142756, 1430667929, 3210227297, 1314452623, 4074634658, 4101304120, 2273951170, 1399257539, 3367210612, 3027628629, 1190975929, 2062231137, 2333990788, 2221543033, 2438960610, 1181637006, 548689776, 2362791313, 3372408396, 3104550113, 3145860560, 296247880, 1970579870, 3078560182, 3769228297, 1714227617, 3291629107, 3898220290, 166772364, 1251581989, 493813264, 448347421, 195405023, 2709975567, 677966185, 3703036547, 1463355134, 2715995803, 1338867538, 1343315457, 2802222074, 2684532164, 233230375, 2599980071, 2000651841, 3277868038, 1638401717, 4028070440, 3237316320, 6314154, 819756386, 300326615, 590932579, 1405279636, 3267499572, 3150704214, 2428286686, 3959192993, 3461946742, 1862657033, 1266418056, 963775037, 2089974820, 2263052895, 1917689273, 448879540, 3550394620, 3981727096, 150775221, 3627908307, 1303187396, 508620638, 2975983352, 2726630617, 1817252668, 1876281319, 1457606340, 908771278, 3720792119, 3617206836, 2455994898, 1729034894, 1080033504], [976866871, 3556439503, 2881648439, 1522871579, 1555064734, 1336096578, 3548522304, 2579274686, 3574697629, 3205460757, 3593280638, 3338716283, 3079412587, 564236357, 2993598910, 1781952180, 1464380207, 3163844217, 3332601554, 1699332808, 1393555694, 1183702653, 3581086237, 1288719814, 691649499, 2847557200, 2895455976, 3193889540, 2717570544, 1781354906, 1676643554, 2592534050, 3230253752, 1126444790, 2770207658, 2633158820, 2210423226, 2615765581, 2414155088, 3127139286, 673620729, 2805611233, 1269405062, 4015350505, 3341807571, 4149409754, 1057255273, 2012875353, 2162469141, 2276492801, 2601117357, 993977747, 3918593370, 2654263191, 753973209, 36408145, 2530585658, 25011837, 3520020182, 2088578344, 530523599, 2918365339, 1524020338, 1518925132, 3760827505, 3759777254, 1202760957, 3985898139, 3906192525, 674977740, 4174734889, 2031300136, 2019492241, 3983892565, 4153806404, 3822280332, 352677332, 2297720250, 60907813, 90501309, 3286998549, 1016092578, 2535922412, 2839152426, 457141659, 509813237, 4120667899, 652014361, 1966332200, 2975202805, 55981186, 2327461051, 676427537, 3255491064, 2882294119, 3433927263, 1307055953, 942726286, 933058658, 2468411793, 3933900994, 4215176142, 1361170020, 2001714738, 2830558078, 3274259782, 1222529897, 1679025792, 2729314320, 3714953764, 1770335741, 151462246, 3013232138, 1682292957, 1483529935, 471910574, 1539241949, 458788160, 3436315007, 1807016891, 3718408830, 978976581, 1043663428, 3165965781, 1927990952, 4200891579, 2372276910, 3208408903, 3533431907, 1412390302, 2931980059, 4132332400, 1947078029, 3881505623, 4168226417, 2941484381, 1077988104, 1320477388, 886195818, 18198404, 3786409e3, 2509781533, 112762804, 3463356488, 1866414978, 891333506, 18488651, 661792760, 1628790961, 3885187036, 3141171499, 876946877, 2693282273, 1372485963, 791857591, 2686433993, 3759982718, 3167212022, 3472953795, 2716379847, 445679433, 3561995674, 3504004811, 3574258232, 54117162, 3331405415, 2381918588, 3769707343, 4154350007, 1140177722, 4074052095, 668550556, 3214352940, 367459370, 261225585, 2610173221, 4209349473, 3468074219, 3265815641, 314222801, 3066103646, 3808782860, 282218597, 3406013506, 3773591054, 379116347, 1285071038, 846784868, 2669647154, 3771962079, 3550491691, 2305946142, 453669953, 1268987020, 3317592352, 3279303384, 3744833421, 2610507566, 3859509063, 266596637, 3847019092, 517658769, 3462560207, 3443424879, 370717030, 4247526661, 2224018117, 4143653529, 4112773975, 2788324899, 2477274417, 1456262402, 2901442914, 1517677493, 1846949527, 2295493580, 3734397586, 2176403920, 1280348187, 1908823572, 3871786941, 846861322, 1172426758, 3287448474, 3383383037, 1655181056, 3139813346, 901632758, 1897031941, 2986607138, 3066810236, 3447102507, 1393639104, 373351379, 950779232, 625454576, 3124240540, 4148612726, 2007998917, 544563296, 2244738638, 2330496472, 2058025392, 1291430526, 424198748, 50039436, 29584100, 3605783033, 2429876329, 2791104160, 1057563949, 3255363231, 3075367218, 3463963227, 1469046755, 985887462]], a = {
                    pbox: [],
                    sbox: []
                  };
                  function v(w, D) {
                    var I = D >> 24 & 255, E = D >> 16 & 255, T = D >> 8 & 255, A = D & 255, F = w.sbox[0][I] + w.sbox[1][E];
                    return F = F ^ w.sbox[2][T], F = F + w.sbox[3][A], F;
                  }
                  function y(w, D, I) {
                    for (var E = D, T = I, A, F = 0; F < l; ++F)
                      E = E ^ w.pbox[F], T = v(w, E) ^ T, A = E, E = T, T = A;
                    return A = E, E = T, T = A, T = T ^ w.pbox[l], E = E ^ w.pbox[l + 1], {
                      left: E,
                      right: T
                    };
                  }
                  function p(w, D, I) {
                    for (var E = D, T = I, A, F = l + 1; F > 1; --F)
                      E = E ^ w.pbox[F], T = v(w, E) ^ T, A = E, E = T, T = A;
                    return A = E, E = T, T = A, T = T ^ w.pbox[1], E = E ^ w.pbox[0], {
                      left: E,
                      right: T
                    };
                  }
                  function e(w, D, I) {
                    for (var E = 0; E < 4; E++) {
                      w.sbox[E] = [];
                      for (var T = 0; T < 256; T++)
                        w.sbox[E][T] = h[E][T];
                    }
                    for (var A = 0, F = 0; F < l + 2; F++)
                      w.pbox[F] = u[F] ^ D[A], A++, A >= I && (A = 0);
                    for (var b = 0, R = 0, N = 0, U = 0; U < l + 2; U += 2)
                      N = y(w, b, R), b = N.left, R = N.right, w.pbox[U] = b, w.pbox[U + 1] = R;
                    for (var W = 0; W < 4; W++)
                      for (var J = 0; J < 256; J += 2)
                        N = y(w, b, R), b = N.left, R = N.right, w.sbox[W][J] = b, w.sbox[W][J + 1] = R;
                    return !0;
                  }
                  var m = f.Blowfish = i.extend({
                    _doReset: function() {
                      if (this._keyPriorReset !== this._key) {
                        var D = this._keyPriorReset = this._key, I = D.words, E = D.sigBytes / 4;
                        e(a, I, E);
                      }
                    },
                    encryptBlock: function(D, I) {
                      var E = y(a, D[I], D[I + 1]);
                      D[I] = E.left, D[I + 1] = E.right;
                    },
                    decryptBlock: function(D, I) {
                      var E = p(a, D[I], D[I + 1]);
                      D[I] = E.left, D[I + 1] = E.right;
                    },
                    blockSize: 64 / 32,
                    keySize: 128 / 32,
                    ivSize: 64 / 32
                  });
                  r.Blowfish = i._createHelper(m);
                }(), o.Blowfish;
              });
            }
          ),
          /***/
          52810: (
            /***/
            function(c, d, t) {
              t(18821), t(55862), t(10853), t(33290), t(45550), function(o, r, n) {
                c.exports = r(t(53264), t(95194));
              }(void 0, function(o) {
                o.lib.Cipher || function(r) {
                  var n = o, i = n.lib, f = i.Base, l = i.WordArray, u = i.BufferedBlockAlgorithm, h = n.enc;
                  h.Utf8;
                  var a = h.Base64, v = n.algo, y = v.EvpKDF, p = i.Cipher = u.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {WordArray} iv The IV to use for this operation.
                     */
                    cfg: f.extend(),
                    /**
                     * Creates this cipher in encryption mode.
                     *
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {Cipher} A cipher instance.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });
                     */
                    createEncryptor: function(W, J) {
                      return this.create(this._ENC_XFORM_MODE, W, J);
                    },
                    /**
                     * Creates this cipher in decryption mode.
                     *
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {Cipher} A cipher instance.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });
                     */
                    createDecryptor: function(W, J) {
                      return this.create(this._DEC_XFORM_MODE, W, J);
                    },
                    /**
                     * Initializes a newly created cipher.
                     *
                     * @param {number} xformMode Either the encryption or decryption transormation mode constant.
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @example
                     *
                     *     var cipher = CryptoJS.algo.AES.create(CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray });
                     */
                    init: function(W, J, ht) {
                      this.cfg = this.cfg.extend(ht), this._xformMode = W, this._key = J, this.reset();
                    },
                    /**
                     * Resets this cipher to its initial state.
                     *
                     * @example
                     *
                     *     cipher.reset();
                     */
                    reset: function() {
                      u.reset.call(this), this._doReset();
                    },
                    /**
                     * Adds data to be encrypted or decrypted.
                     *
                     * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.
                     *
                     * @return {WordArray} The data after processing.
                     *
                     * @example
                     *
                     *     var encrypted = cipher.process('data');
                     *     var encrypted = cipher.process(wordArray);
                     */
                    process: function(W) {
                      return this._append(W), this._process();
                    },
                    /**
                     * Finalizes the encryption or decryption process.
                     * Note that the finalize operation is effectively a destructive, read-once operation.
                     *
                     * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.
                     *
                     * @return {WordArray} The data after final processing.
                     *
                     * @example
                     *
                     *     var encrypted = cipher.finalize();
                     *     var encrypted = cipher.finalize('data');
                     *     var encrypted = cipher.finalize(wordArray);
                     */
                    finalize: function(W) {
                      W && this._append(W);
                      var J = this._doFinalize();
                      return J;
                    },
                    keySize: 128 / 32,
                    ivSize: 128 / 32,
                    _ENC_XFORM_MODE: 1,
                    _DEC_XFORM_MODE: 2,
                    /**
                     * Creates shortcut functions to a cipher's object interface.
                     *
                     * @param {Cipher} cipher The cipher to create a helper for.
                     *
                     * @return {Object} An object with encrypt and decrypt shortcut functions.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);
                     */
                    _createHelper: function() {
                      function U(W) {
                        return typeof W == "string" ? N : F;
                      }
                      return function(W) {
                        return {
                          encrypt: function(ht, K, nt) {
                            return U(K).encrypt(W, ht, K, nt);
                          },
                          decrypt: function(ht, K, nt) {
                            return U(K).decrypt(W, ht, K, nt);
                          }
                        };
                      };
                    }()
                  });
                  i.StreamCipher = p.extend({
                    _doFinalize: function() {
                      var W = this._process(!0);
                      return W;
                    },
                    blockSize: 1
                  });
                  var e = n.mode = {}, m = i.BlockCipherMode = f.extend({
                    /**
                     * Creates this mode for encryption.
                     *
                     * @param {Cipher} cipher A block cipher instance.
                     * @param {Array} iv The IV words.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);
                     */
                    createEncryptor: function(W, J) {
                      return this.Encryptor.create(W, J);
                    },
                    /**
                     * Creates this mode for decryption.
                     *
                     * @param {Cipher} cipher A block cipher instance.
                     * @param {Array} iv The IV words.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);
                     */
                    createDecryptor: function(W, J) {
                      return this.Decryptor.create(W, J);
                    },
                    /**
                     * Initializes a newly created mode.
                     *
                     * @param {Cipher} cipher A block cipher instance.
                     * @param {Array} iv The IV words.
                     *
                     * @example
                     *
                     *     var mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);
                     */
                    init: function(W, J) {
                      this._cipher = W, this._iv = J;
                    }
                  }), w = e.CBC = function() {
                    var U = m.extend();
                    U.Encryptor = U.extend({
                      /**
                       * Processes the data block at offset.
                       *
                       * @param {Array} words The data words to operate on.
                       * @param {number} offset The offset where the block starts.
                       *
                       * @example
                       *
                       *     mode.processBlock(data.words, offset);
                       */
                      processBlock: function(ht, K) {
                        var nt = this._cipher, xt = nt.blockSize;
                        W.call(this, ht, K, xt), nt.encryptBlock(ht, K), this._prevBlock = ht.slice(K, K + xt);
                      }
                    }), U.Decryptor = U.extend({
                      /**
                       * Processes the data block at offset.
                       *
                       * @param {Array} words The data words to operate on.
                       * @param {number} offset The offset where the block starts.
                       *
                       * @example
                       *
                       *     mode.processBlock(data.words, offset);
                       */
                      processBlock: function(ht, K) {
                        var nt = this._cipher, xt = nt.blockSize, bt = ht.slice(K, K + xt);
                        nt.decryptBlock(ht, K), W.call(this, ht, K, xt), this._prevBlock = bt;
                      }
                    });
                    function W(J, ht, K) {
                      var nt, xt = this._iv;
                      xt ? (nt = xt, this._iv = r) : nt = this._prevBlock;
                      for (var bt = 0; bt < K; bt++)
                        J[ht + bt] ^= nt[bt];
                    }
                    return U;
                  }(), D = n.pad = {}, I = D.Pkcs7 = {
                    /**
                     * Pads data using the algorithm defined in PKCS #5/7.
                     *
                     * @param {WordArray} data The data to pad.
                     * @param {number} blockSize The multiple that the data should be padded to.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);
                     */
                    pad: function(W, J) {
                      for (var ht = J * 4, K = ht - W.sigBytes % ht, nt = K << 24 | K << 16 | K << 8 | K, xt = [], bt = 0; bt < K; bt += 4)
                        xt.push(nt);
                      var Tt = l.create(xt, K);
                      W.concat(Tt);
                    },
                    /**
                     * Unpads data that had been padded using the algorithm defined in PKCS #5/7.
                     *
                     * @param {WordArray} data The data to unpad.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     CryptoJS.pad.Pkcs7.unpad(wordArray);
                     */
                    unpad: function(W) {
                      var J = W.words[W.sigBytes - 1 >>> 2] & 255;
                      W.sigBytes -= J;
                    }
                  };
                  i.BlockCipher = p.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {Mode} mode The block mode to use. Default: CBC
                     * @property {Padding} padding The padding strategy to use. Default: Pkcs7
                     */
                    cfg: p.cfg.extend({
                      mode: w,
                      padding: I
                    }),
                    reset: function() {
                      var W;
                      p.reset.call(this);
                      var J = this.cfg, ht = J.iv, K = J.mode;
                      this._xformMode == this._ENC_XFORM_MODE ? W = K.createEncryptor : (W = K.createDecryptor, this._minBufferSize = 1), this._mode && this._mode.__creator == W ? this._mode.init(this, ht && ht.words) : (this._mode = W.call(K, this, ht && ht.words), this._mode.__creator = W);
                    },
                    _doProcessBlock: function(W, J) {
                      this._mode.processBlock(W, J);
                    },
                    _doFinalize: function() {
                      var W, J = this.cfg.padding;
                      return this._xformMode == this._ENC_XFORM_MODE ? (J.pad(this._data, this.blockSize), W = this._process(!0)) : (W = this._process(!0), J.unpad(W)), W;
                    },
                    blockSize: 4
                  });
                  var E = i.CipherParams = f.extend({
                    /**
                     * Initializes a newly created cipher params object.
                     *
                     * @param {Object} cipherParams An object with any of the possible cipher parameters.
                     *
                     * @example
                     *
                     *     var cipherParams = CryptoJS.lib.CipherParams.create({
                     *         ciphertext: ciphertextWordArray,
                     *         key: keyWordArray,
                     *         iv: ivWordArray,
                     *         salt: saltWordArray,
                     *         algorithm: CryptoJS.algo.AES,
                     *         mode: CryptoJS.mode.CBC,
                     *         padding: CryptoJS.pad.PKCS7,
                     *         blockSize: 4,
                     *         formatter: CryptoJS.format.OpenSSL
                     *     });
                     */
                    init: function(W) {
                      this.mixIn(W);
                    },
                    /**
                     * Converts this cipher params object to a string.
                     *
                     * @param {Format} formatter (Optional) The formatting strategy to use.
                     *
                     * @return {string} The stringified cipher params.
                     *
                     * @throws Error If neither the formatter nor the default formatter is set.
                     *
                     * @example
                     *
                     *     var string = cipherParams + '';
                     *     var string = cipherParams.toString();
                     *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);
                     */
                    toString: function(W) {
                      return (W || this.formatter).stringify(this);
                    }
                  }), T = n.format = {}, A = T.OpenSSL = {
                    /**
                     * Converts a cipher params object to an OpenSSL-compatible string.
                     *
                     * @param {CipherParams} cipherParams The cipher params object.
                     *
                     * @return {string} The OpenSSL-compatible string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);
                     */
                    stringify: function(W) {
                      var J, ht = W.ciphertext, K = W.salt;
                      return K ? J = l.create([1398893684, 1701076831]).concat(K).concat(ht) : J = ht, J.toString(a);
                    },
                    /**
                     * Converts an OpenSSL-compatible string to a cipher params object.
                     *
                     * @param {string} openSSLStr The OpenSSL-compatible string.
                     *
                     * @return {CipherParams} The cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);
                     */
                    parse: function(W) {
                      var J, ht = a.parse(W), K = ht.words;
                      return K[0] == 1398893684 && K[1] == 1701076831 && (J = l.create(K.slice(2, 4)), K.splice(0, 4), ht.sigBytes -= 16), E.create({
                        ciphertext: ht,
                        salt: J
                      });
                    }
                  }, F = i.SerializableCipher = f.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {Formatter} format The formatting strategy to convert cipher param objects to and from a string. Default: OpenSSL
                     */
                    cfg: f.extend({
                      format: A
                    }),
                    /**
                     * Encrypts a message.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {WordArray|string} message The message to encrypt.
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {CipherParams} A cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key);
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv });
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher.encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });
                     */
                    encrypt: function(W, J, ht, K) {
                      K = this.cfg.extend(K);
                      var nt = W.createEncryptor(ht, K), xt = nt.finalize(J), bt = nt.cfg;
                      return E.create({
                        ciphertext: xt,
                        key: ht,
                        iv: bt.iv,
                        algorithm: W,
                        mode: bt.mode,
                        padding: bt.padding,
                        blockSize: W.blockSize,
                        formatter: K.format
                      });
                    },
                    /**
                     * Decrypts serialized ciphertext.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
                     * @param {WordArray} key The key.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {WordArray} The plaintext.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, key, { iv: iv, format: CryptoJS.format.OpenSSL });
                     *     var plaintext = CryptoJS.lib.SerializableCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, key, { iv: iv, format: CryptoJS.format.OpenSSL });
                     */
                    decrypt: function(W, J, ht, K) {
                      K = this.cfg.extend(K), J = this._parse(J, K.format);
                      var nt = W.createDecryptor(ht, K).finalize(J.ciphertext);
                      return nt;
                    },
                    /**
                     * Converts serialized ciphertext to CipherParams,
                     * else assumed CipherParams already and returns ciphertext unchanged.
                     *
                     * @param {CipherParams|string} ciphertext The ciphertext.
                     * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.
                     *
                     * @return {CipherParams} The unserialized ciphertext.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var ciphertextParams = CryptoJS.lib.SerializableCipher._parse(ciphertextStringOrParams, format);
                     */
                    _parse: function(W, J) {
                      return typeof W == "string" ? J.parse(W, this) : W;
                    }
                  }), b = n.kdf = {}, R = b.OpenSSL = {
                    /**
                     * Derives a key and IV from a password.
                     *
                     * @param {string} password The password to derive from.
                     * @param {number} keySize The size in words of the key to generate.
                     * @param {number} ivSize The size in words of the IV to generate.
                     * @param {WordArray|string} salt (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.
                     *
                     * @return {CipherParams} A cipher params object with the key, IV, and salt.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);
                     *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');
                     */
                    execute: function(W, J, ht, K, nt) {
                      if (K || (K = l.random(64 / 8)), nt)
                        var xt = y.create({
                          keySize: J + ht,
                          hasher: nt
                        }).compute(W, K);
                      else
                        var xt = y.create({
                          keySize: J + ht
                        }).compute(W, K);
                      var bt = l.create(xt.words.slice(J), ht * 4);
                      return xt.sigBytes = J * 4, E.create({
                        key: xt,
                        iv: bt,
                        salt: K
                      });
                    }
                  }, N = i.PasswordBasedCipher = F.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {KDF} kdf The key derivation function to use to generate a key and IV from a password. Default: OpenSSL
                     */
                    cfg: F.cfg.extend({
                      kdf: R
                    }),
                    /**
                     * Encrypts a message using a password.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {WordArray|string} message The message to encrypt.
                     * @param {string} password The password.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {CipherParams} A cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password');
                     *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher.encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });
                     */
                    encrypt: function(W, J, ht, K) {
                      K = this.cfg.extend(K);
                      var nt = K.kdf.execute(ht, W.keySize, W.ivSize, K.salt, K.hasher);
                      K.iv = nt.iv;
                      var xt = F.encrypt.call(this, W, J, nt.key, K);
                      return xt.mixIn(nt), xt;
                    },
                    /**
                     * Decrypts serialized ciphertext using a password.
                     *
                     * @param {Cipher} cipher The cipher algorithm to use.
                     * @param {CipherParams|string} ciphertext The ciphertext to decrypt.
                     * @param {string} password The password.
                     * @param {Object} cfg (Optional) The configuration options to use for this operation.
                     *
                     * @return {WordArray} The plaintext.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password', { format: CryptoJS.format.OpenSSL });
                     *     var plaintext = CryptoJS.lib.PasswordBasedCipher.decrypt(CryptoJS.algo.AES, ciphertextParams, 'password', { format: CryptoJS.format.OpenSSL });
                     */
                    decrypt: function(W, J, ht, K) {
                      K = this.cfg.extend(K), J = this._parse(J, K.format);
                      var nt = K.kdf.execute(ht, W.keySize, W.ivSize, J.salt, K.hasher);
                      K.iv = nt.iv;
                      var xt = F.decrypt.call(this, W, J, nt.key, K);
                      return xt;
                    }
                  });
                }();
              });
            }
          ),
          /***/
          53264: (
            /***/
            function(c, d, t) {
              t(4116), t(54883), t(10853), t(35779), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(33290), t(18821), t(85005), t(55862), t(45550), function(o, r) {
                c.exports = r();
              }(void 0, function() {
                var o = o || function(r, n) {
                  var i;
                  if (typeof window < "u" && window.crypto && (i = window.crypto), typeof self < "u" && self.crypto && (i = self.crypto), typeof globalThis < "u" && globalThis.crypto && (i = globalThis.crypto), !i && typeof window < "u" && window.msCrypto && (i = window.msCrypto), !i && typeof t.g < "u" && t.g.crypto && (i = t.g.crypto), !i)
                    try {
                      i = t(42480);
                    } catch {
                    }
                  var f = function() {
                    if (i) {
                      if (typeof i.getRandomValues == "function")
                        try {
                          return i.getRandomValues(new Uint32Array(1))[0];
                        } catch {
                        }
                      if (typeof i.randomBytes == "function")
                        try {
                          return i.randomBytes(4).readInt32LE();
                        } catch {
                        }
                    }
                    throw new Error("Native crypto module could not be used to get secure random number.");
                  }, l = Object.create || function() {
                    function I() {
                    }
                    return function(E) {
                      var T;
                      return I.prototype = E, T = new I(), I.prototype = null, T;
                    };
                  }(), u = {}, h = u.lib = {}, a = h.Base = function() {
                    return {
                      /**
                       * Creates a new object that inherits from this object.
                       *
                       * @param {Object} overrides Properties to copy into the new object.
                       *
                       * @return {Object} The new object.
                       *
                       * @static
                       *
                       * @example
                       *
                       *     var MyType = CryptoJS.lib.Base.extend({
                       *         field: 'value',
                       *
                       *         method: function () {
                       *         }
                       *     });
                       */
                      extend: function(E) {
                        var T = l(this);
                        return E && T.mixIn(E), (!T.hasOwnProperty("init") || this.init === T.init) && (T.init = function() {
                          T.$super.init.apply(this, arguments);
                        }), T.init.prototype = T, T.$super = this, T;
                      },
                      /**
                       * Extends this object and runs the init method.
                       * Arguments to create() will be passed to init().
                       *
                       * @return {Object} The new object.
                       *
                       * @static
                       *
                       * @example
                       *
                       *     var instance = MyType.create();
                       */
                      create: function() {
                        var E = this.extend();
                        return E.init.apply(E, arguments), E;
                      },
                      /**
                       * Initializes a newly created object.
                       * Override this method to add some logic when your objects are created.
                       *
                       * @example
                       *
                       *     var MyType = CryptoJS.lib.Base.extend({
                       *         init: function () {
                       *             // ...
                       *         }
                       *     });
                       */
                      init: function() {
                      },
                      /**
                       * Copies properties into this object.
                       *
                       * @param {Object} properties The properties to mix in.
                       *
                       * @example
                       *
                       *     MyType.mixIn({
                       *         field: 'value'
                       *     });
                       */
                      mixIn: function(E) {
                        for (var T in E)
                          E.hasOwnProperty(T) && (this[T] = E[T]);
                        E.hasOwnProperty("toString") && (this.toString = E.toString);
                      },
                      /**
                       * Creates a copy of this object.
                       *
                       * @return {Object} The clone.
                       *
                       * @example
                       *
                       *     var clone = instance.clone();
                       */
                      clone: function() {
                        return this.init.prototype.extend(this);
                      }
                    };
                  }(), v = h.WordArray = a.extend({
                    /**
                     * Initializes a newly created word array.
                     *
                     * @param {Array} words (Optional) An array of 32-bit words.
                     * @param {number} sigBytes (Optional) The number of significant bytes in the words.
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.lib.WordArray.create();
                     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);
                     *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);
                     */
                    init: function(E, T) {
                      E = this.words = E || [], T != n ? this.sigBytes = T : this.sigBytes = E.length * 4;
                    },
                    /**
                     * Converts this word array to a string.
                     *
                     * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex
                     *
                     * @return {string} The stringified word array.
                     *
                     * @example
                     *
                     *     var string = wordArray + '';
                     *     var string = wordArray.toString();
                     *     var string = wordArray.toString(CryptoJS.enc.Utf8);
                     */
                    toString: function(E) {
                      return (E || p).stringify(this);
                    },
                    /**
                     * Concatenates a word array to this word array.
                     *
                     * @param {WordArray} wordArray The word array to append.
                     *
                     * @return {WordArray} This word array.
                     *
                     * @example
                     *
                     *     wordArray1.concat(wordArray2);
                     */
                    concat: function(E) {
                      var T = this.words, A = E.words, F = this.sigBytes, b = E.sigBytes;
                      if (this.clamp(), F % 4)
                        for (var R = 0; R < b; R++) {
                          var N = A[R >>> 2] >>> 24 - R % 4 * 8 & 255;
                          T[F + R >>> 2] |= N << 24 - (F + R) % 4 * 8;
                        }
                      else
                        for (var U = 0; U < b; U += 4)
                          T[F + U >>> 2] = A[U >>> 2];
                      return this.sigBytes += b, this;
                    },
                    /**
                     * Removes insignificant bits.
                     *
                     * @example
                     *
                     *     wordArray.clamp();
                     */
                    clamp: function() {
                      var E = this.words, T = this.sigBytes;
                      E[T >>> 2] &= 4294967295 << 32 - T % 4 * 8, E.length = r.ceil(T / 4);
                    },
                    /**
                     * Creates a copy of this word array.
                     *
                     * @return {WordArray} The clone.
                     *
                     * @example
                     *
                     *     var clone = wordArray.clone();
                     */
                    clone: function() {
                      var E = a.clone.call(this);
                      return E.words = this.words.slice(0), E;
                    },
                    /**
                     * Creates a word array filled with random bytes.
                     *
                     * @param {number} nBytes The number of random bytes to generate.
                     *
                     * @return {WordArray} The random word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.lib.WordArray.random(16);
                     */
                    random: function(E) {
                      for (var T = [], A = 0; A < E; A += 4)
                        T.push(f());
                      return new v.init(T, E);
                    }
                  }), y = u.enc = {}, p = y.Hex = {
                    /**
                     * Converts a word array to a hex string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The hex string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);
                     */
                    stringify: function(E) {
                      for (var T = E.words, A = E.sigBytes, F = [], b = 0; b < A; b++) {
                        var R = T[b >>> 2] >>> 24 - b % 4 * 8 & 255;
                        F.push((R >>> 4).toString(16)), F.push((R & 15).toString(16));
                      }
                      return F.join("");
                    },
                    /**
                     * Converts a hex string to a word array.
                     *
                     * @param {string} hexStr The hex string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Hex.parse(hexString);
                     */
                    parse: function(E) {
                      for (var T = E.length, A = [], F = 0; F < T; F += 2)
                        A[F >>> 3] |= parseInt(E.substr(F, 2), 16) << 24 - F % 8 * 4;
                      return new v.init(A, T / 2);
                    }
                  }, e = y.Latin1 = {
                    /**
                     * Converts a word array to a Latin1 string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The Latin1 string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);
                     */
                    stringify: function(E) {
                      for (var T = E.words, A = E.sigBytes, F = [], b = 0; b < A; b++) {
                        var R = T[b >>> 2] >>> 24 - b % 4 * 8 & 255;
                        F.push(String.fromCharCode(R));
                      }
                      return F.join("");
                    },
                    /**
                     * Converts a Latin1 string to a word array.
                     *
                     * @param {string} latin1Str The Latin1 string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);
                     */
                    parse: function(E) {
                      for (var T = E.length, A = [], F = 0; F < T; F++)
                        A[F >>> 2] |= (E.charCodeAt(F) & 255) << 24 - F % 4 * 8;
                      return new v.init(A, T);
                    }
                  }, m = y.Utf8 = {
                    /**
                     * Converts a word array to a UTF-8 string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The UTF-8 string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);
                     */
                    stringify: function(E) {
                      try {
                        return decodeURIComponent(escape(e.stringify(E)));
                      } catch {
                        throw new Error("Malformed UTF-8 data");
                      }
                    },
                    /**
                     * Converts a UTF-8 string to a word array.
                     *
                     * @param {string} utf8Str The UTF-8 string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);
                     */
                    parse: function(E) {
                      return e.parse(unescape(encodeURIComponent(E)));
                    }
                  }, w = h.BufferedBlockAlgorithm = a.extend({
                    /**
                     * Resets this block algorithm's data buffer to its initial state.
                     *
                     * @example
                     *
                     *     bufferedBlockAlgorithm.reset();
                     */
                    reset: function() {
                      this._data = new v.init(), this._nDataBytes = 0;
                    },
                    /**
                     * Adds new data to this block algorithm's buffer.
                     *
                     * @param {WordArray|string} data The data to append. Strings are converted to a WordArray using UTF-8.
                     *
                     * @example
                     *
                     *     bufferedBlockAlgorithm._append('data');
                     *     bufferedBlockAlgorithm._append(wordArray);
                     */
                    _append: function(E) {
                      typeof E == "string" && (E = m.parse(E)), this._data.concat(E), this._nDataBytes += E.sigBytes;
                    },
                    /**
                     * Processes available data blocks.
                     *
                     * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.
                     *
                     * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.
                     *
                     * @return {WordArray} The processed data.
                     *
                     * @example
                     *
                     *     var processedData = bufferedBlockAlgorithm._process();
                     *     var processedData = bufferedBlockAlgorithm._process(!!'flush');
                     */
                    _process: function(E) {
                      var T, A = this._data, F = A.words, b = A.sigBytes, R = this.blockSize, N = R * 4, U = b / N;
                      E ? U = r.ceil(U) : U = r.max((U | 0) - this._minBufferSize, 0);
                      var W = U * R, J = r.min(W * 4, b);
                      if (W) {
                        for (var ht = 0; ht < W; ht += R)
                          this._doProcessBlock(F, ht);
                        T = F.splice(0, W), A.sigBytes -= J;
                      }
                      return new v.init(T, J);
                    },
                    /**
                     * Creates a copy of this object.
                     *
                     * @return {Object} The clone.
                     *
                     * @example
                     *
                     *     var clone = bufferedBlockAlgorithm.clone();
                     */
                    clone: function() {
                      var E = a.clone.call(this);
                      return E._data = this._data.clone(), E;
                    },
                    _minBufferSize: 0
                  });
                  h.Hasher = w.extend({
                    /**
                     * Configuration options.
                     */
                    cfg: a.extend(),
                    /**
                     * Initializes a newly created hasher.
                     *
                     * @param {Object} cfg (Optional) The configuration options to use for this hash computation.
                     *
                     * @example
                     *
                     *     var hasher = CryptoJS.algo.SHA256.create();
                     */
                    init: function(E) {
                      this.cfg = this.cfg.extend(E), this.reset();
                    },
                    /**
                     * Resets this hasher to its initial state.
                     *
                     * @example
                     *
                     *     hasher.reset();
                     */
                    reset: function() {
                      w.reset.call(this), this._doReset();
                    },
                    /**
                     * Updates this hasher with a message.
                     *
                     * @param {WordArray|string} messageUpdate The message to append.
                     *
                     * @return {Hasher} This hasher.
                     *
                     * @example
                     *
                     *     hasher.update('message');
                     *     hasher.update(wordArray);
                     */
                    update: function(E) {
                      return this._append(E), this._process(), this;
                    },
                    /**
                     * Finalizes the hash computation.
                     * Note that the finalize operation is effectively a destructive, read-once operation.
                     *
                     * @param {WordArray|string} messageUpdate (Optional) A final message update.
                     *
                     * @return {WordArray} The hash.
                     *
                     * @example
                     *
                     *     var hash = hasher.finalize();
                     *     var hash = hasher.finalize('message');
                     *     var hash = hasher.finalize(wordArray);
                     */
                    finalize: function(E) {
                      E && this._append(E);
                      var T = this._doFinalize();
                      return T;
                    },
                    blockSize: 16,
                    /**
                     * Creates a shortcut function to a hasher's object interface.
                     *
                     * @param {Hasher} hasher The hasher to create a helper for.
                     *
                     * @return {Function} The shortcut function.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);
                     */
                    _createHelper: function(E) {
                      return function(T, A) {
                        return new E.init(A).finalize(T);
                      };
                    },
                    /**
                     * Creates a shortcut function to the HMAC's object interface.
                     *
                     * @param {Hasher} hasher The hasher to use in this HMAC helper.
                     *
                     * @return {Function} The shortcut function.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);
                     */
                    _createHmacHelper: function(E) {
                      return function(T, A) {
                        return new D.HMAC.init(E, A).finalize(T);
                      };
                    }
                  });
                  var D = u.algo = {};
                  return u;
                }(Math);
                return o;
              });
            }
          ),
          /***/
          31946: (
            /***/
            function(c, d, t) {
              t(85005), function(o, r) {
                c.exports = r(t(53264));
              }(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.WordArray, f = r.enc;
                  f.Base64 = {
                    /**
                     * Converts a word array to a Base64 string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The Base64 string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var base64String = CryptoJS.enc.Base64.stringify(wordArray);
                     */
                    stringify: function(h) {
                      var a = h.words, v = h.sigBytes, y = this._map;
                      h.clamp();
                      for (var p = [], e = 0; e < v; e += 3)
                        for (var m = a[e >>> 2] >>> 24 - e % 4 * 8 & 255, w = a[e + 1 >>> 2] >>> 24 - (e + 1) % 4 * 8 & 255, D = a[e + 2 >>> 2] >>> 24 - (e + 2) % 4 * 8 & 255, I = m << 16 | w << 8 | D, E = 0; E < 4 && e + E * 0.75 < v; E++)
                          p.push(y.charAt(I >>> 6 * (3 - E) & 63));
                      var T = y.charAt(64);
                      if (T)
                        for (; p.length % 4; )
                          p.push(T);
                      return p.join("");
                    },
                    /**
                     * Converts a Base64 string to a word array.
                     *
                     * @param {string} base64Str The Base64 string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Base64.parse(base64String);
                     */
                    parse: function(h) {
                      var a = h.length, v = this._map, y = this._reverseMap;
                      if (!y) {
                        y = this._reverseMap = [];
                        for (var p = 0; p < v.length; p++)
                          y[v.charCodeAt(p)] = p;
                      }
                      var e = v.charAt(64);
                      if (e) {
                        var m = h.indexOf(e);
                        m !== -1 && (a = m);
                      }
                      return l(h, a, y);
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
                  };
                  function l(u, h, a) {
                    for (var v = [], y = 0, p = 0; p < h; p++)
                      if (p % 4) {
                        var e = a[u.charCodeAt(p - 1)] << p % 4 * 2, m = a[u.charCodeAt(p)] >>> 6 - p % 4 * 2, w = e | m;
                        v[y >>> 2] |= w << 24 - y % 4 * 8, y++;
                      }
                    return i.create(v, y);
                  }
                }(), o.enc.Base64;
              });
            }
          ),
          /***/
          30961: (
            /***/
            function(c, d, t) {
              t(85005), function(o, r) {
                c.exports = r(t(53264));
              }(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.WordArray, f = r.enc;
                  f.Base64url = {
                    /**
                     * Converts a word array to a Base64url string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @param {boolean} urlSafe Whether to use url safe
                     *
                     * @return {string} The Base64url string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var base64String = CryptoJS.enc.Base64url.stringify(wordArray);
                     */
                    stringify: function(h, a) {
                      a === void 0 && (a = !0);
                      var v = h.words, y = h.sigBytes, p = a ? this._safe_map : this._map;
                      h.clamp();
                      for (var e = [], m = 0; m < y; m += 3)
                        for (var w = v[m >>> 2] >>> 24 - m % 4 * 8 & 255, D = v[m + 1 >>> 2] >>> 24 - (m + 1) % 4 * 8 & 255, I = v[m + 2 >>> 2] >>> 24 - (m + 2) % 4 * 8 & 255, E = w << 16 | D << 8 | I, T = 0; T < 4 && m + T * 0.75 < y; T++)
                          e.push(p.charAt(E >>> 6 * (3 - T) & 63));
                      var A = p.charAt(64);
                      if (A)
                        for (; e.length % 4; )
                          e.push(A);
                      return e.join("");
                    },
                    /**
                     * Converts a Base64url string to a word array.
                     *
                     * @param {string} base64Str The Base64url string.
                     *
                     * @param {boolean} urlSafe Whether to use url safe
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Base64url.parse(base64String);
                     */
                    parse: function(h, a) {
                      a === void 0 && (a = !0);
                      var v = h.length, y = a ? this._safe_map : this._map, p = this._reverseMap;
                      if (!p) {
                        p = this._reverseMap = [];
                        for (var e = 0; e < y.length; e++)
                          p[y.charCodeAt(e)] = e;
                      }
                      var m = y.charAt(64);
                      if (m) {
                        var w = h.indexOf(m);
                        w !== -1 && (v = w);
                      }
                      return l(h, v, p);
                    },
                    _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
                    _safe_map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_"
                  };
                  function l(u, h, a) {
                    for (var v = [], y = 0, p = 0; p < h; p++)
                      if (p % 4) {
                        var e = a[u.charCodeAt(p - 1)] << p % 4 * 2, m = a[u.charCodeAt(p)] >>> 6 - p % 4 * 2, w = e | m;
                        v[y >>> 2] |= w << 24 - y % 4 * 8, y++;
                      }
                    return i.create(v, y);
                  }
                }(), o.enc.Base64url;
              });
            }
          ),
          /***/
          44087: (
            /***/
            function(c, d, t) {
              t(85005), function(o, r) {
                c.exports = r(t(53264));
              }(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.WordArray, f = r.enc;
                  f.Utf16 = f.Utf16BE = {
                    /**
                     * Converts a word array to a UTF-16 BE string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The UTF-16 BE string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var utf16String = CryptoJS.enc.Utf16.stringify(wordArray);
                     */
                    stringify: function(h) {
                      for (var a = h.words, v = h.sigBytes, y = [], p = 0; p < v; p += 2) {
                        var e = a[p >>> 2] >>> 16 - p % 4 * 8 & 65535;
                        y.push(String.fromCharCode(e));
                      }
                      return y.join("");
                    },
                    /**
                     * Converts a UTF-16 BE string to a word array.
                     *
                     * @param {string} utf16Str The UTF-16 BE string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Utf16.parse(utf16String);
                     */
                    parse: function(h) {
                      for (var a = h.length, v = [], y = 0; y < a; y++)
                        v[y >>> 1] |= h.charCodeAt(y) << 16 - y % 2 * 16;
                      return i.create(v, a * 2);
                    }
                  }, f.Utf16LE = {
                    /**
                     * Converts a word array to a UTF-16 LE string.
                     *
                     * @param {WordArray} wordArray The word array.
                     *
                     * @return {string} The UTF-16 LE string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var utf16Str = CryptoJS.enc.Utf16LE.stringify(wordArray);
                     */
                    stringify: function(h) {
                      for (var a = h.words, v = h.sigBytes, y = [], p = 0; p < v; p += 2) {
                        var e = l(a[p >>> 2] >>> 16 - p % 4 * 8 & 65535);
                        y.push(String.fromCharCode(e));
                      }
                      return y.join("");
                    },
                    /**
                     * Converts a UTF-16 LE string to a word array.
                     *
                     * @param {string} utf16Str The UTF-16 LE string.
                     *
                     * @return {WordArray} The word array.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.enc.Utf16LE.parse(utf16Str);
                     */
                    parse: function(h) {
                      for (var a = h.length, v = [], y = 0; y < a; y++)
                        v[y >>> 1] |= l(h.charCodeAt(y) << 16 - y % 2 * 16);
                      return i.create(v, a * 2);
                    }
                  };
                  function l(u) {
                    return u << 8 & 4278255360 | u >>> 8 & 16711935;
                  }
                }(), o.enc.Utf16;
              });
            }
          ),
          /***/
          95194: (
            /***/
            function(c, d, t) {
              t(55862), function(o, r, n) {
                c.exports = r(t(53264), t(61977), t(5577));
              }(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.Base, f = n.WordArray, l = r.algo, u = l.MD5, h = l.EvpKDF = i.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
                     * @property {Hasher} hasher The hash algorithm to use. Default: MD5
                     * @property {number} iterations The number of iterations to perform. Default: 1
                     */
                    cfg: i.extend({
                      keySize: 128 / 32,
                      hasher: u,
                      iterations: 1
                    }),
                    /**
                     * Initializes a newly created key derivation function.
                     *
                     * @param {Object} cfg (Optional) The configuration options to use for the derivation.
                     *
                     * @example
                     *
                     *     var kdf = CryptoJS.algo.EvpKDF.create();
                     *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });
                     *     var kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });
                     */
                    init: function(v) {
                      this.cfg = this.cfg.extend(v);
                    },
                    /**
                     * Derives a key from a password.
                     *
                     * @param {WordArray|string} password The password.
                     * @param {WordArray|string} salt A salt.
                     *
                     * @return {WordArray} The derived key.
                     *
                     * @example
                     *
                     *     var key = kdf.compute(password, salt);
                     */
                    compute: function(v, y) {
                      for (var p, e = this.cfg, m = e.hasher.create(), w = f.create(), D = w.words, I = e.keySize, E = e.iterations; D.length < I; ) {
                        p && m.update(p), p = m.update(v).finalize(y), m.reset();
                        for (var T = 1; T < E; T++)
                          p = m.finalize(p), m.reset();
                        w.concat(p);
                      }
                      return w.sigBytes = I * 4, w;
                    }
                  });
                  r.EvpKDF = function(a, v, y) {
                    return h.create(y).compute(a, v);
                  };
                }(), o.EvpKDF;
              });
            }
          ),
          /***/
          3902: (
            /***/
            function(c, d, t) {
              t(10853), t(33290), function(o, r, n) {
                c.exports = r(t(53264), t(52810));
              }(void 0, function(o) {
                return function(r) {
                  var n = o, i = n.lib, f = i.CipherParams, l = n.enc, u = l.Hex, h = n.format;
                  h.Hex = {
                    /**
                     * Converts the ciphertext of a cipher params object to a hexadecimally encoded string.
                     *
                     * @param {CipherParams} cipherParams The cipher params object.
                     *
                     * @return {string} The hexadecimally encoded string.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var hexString = CryptoJS.format.Hex.stringify(cipherParams);
                     */
                    stringify: function(v) {
                      return v.ciphertext.toString(u);
                    },
                    /**
                     * Converts a hexadecimally encoded ciphertext string to a cipher params object.
                     *
                     * @param {string} input The hexadecimally encoded string.
                     *
                     * @return {CipherParams} The cipher params object.
                     *
                     * @static
                     *
                     * @example
                     *
                     *     var cipherParams = CryptoJS.format.Hex.parse(hexString);
                     */
                    parse: function(v) {
                      var y = u.parse(v);
                      return f.create({
                        ciphertext: y
                      });
                    }
                  };
                }(), o.format.Hex;
              });
            }
          ),
          /***/
          5577: (
            /***/
            function(c, d, t) {
              t(55862), function(o, r) {
                c.exports = r(t(53264));
              }(void 0, function(o) {
                (function() {
                  var r = o, n = r.lib, i = n.Base, f = r.enc, l = f.Utf8, u = r.algo;
                  u.HMAC = i.extend({
                    /**
                     * Initializes a newly created HMAC.
                     *
                     * @param {Hasher} hasher The hash algorithm to use.
                     * @param {WordArray|string} key The secret key.
                     *
                     * @example
                     *
                     *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);
                     */
                    init: function(a, v) {
                      a = this._hasher = new a.init(), typeof v == "string" && (v = l.parse(v));
                      var y = a.blockSize, p = y * 4;
                      v.sigBytes > p && (v = a.finalize(v)), v.clamp();
                      for (var e = this._oKey = v.clone(), m = this._iKey = v.clone(), w = e.words, D = m.words, I = 0; I < y; I++)
                        w[I] ^= 1549556828, D[I] ^= 909522486;
                      e.sigBytes = m.sigBytes = p, this.reset();
                    },
                    /**
                     * Resets this HMAC to its initial state.
                     *
                     * @example
                     *
                     *     hmacHasher.reset();
                     */
                    reset: function() {
                      var a = this._hasher;
                      a.reset(), a.update(this._iKey);
                    },
                    /**
                     * Updates this HMAC with a message.
                     *
                     * @param {WordArray|string} messageUpdate The message to append.
                     *
                     * @return {HMAC} This HMAC instance.
                     *
                     * @example
                     *
                     *     hmacHasher.update('message');
                     *     hmacHasher.update(wordArray);
                     */
                    update: function(a) {
                      return this._hasher.update(a), this;
                    },
                    /**
                     * Finalizes the HMAC computation.
                     * Note that the finalize operation is effectively a destructive, read-once operation.
                     *
                     * @param {WordArray|string} messageUpdate (Optional) A final message update.
                     *
                     * @return {WordArray} The HMAC.
                     *
                     * @example
                     *
                     *     var hmac = hmacHasher.finalize();
                     *     var hmac = hmacHasher.finalize('message');
                     *     var hmac = hmacHasher.finalize(wordArray);
                     */
                    finalize: function(a) {
                      var v = this._hasher, y = v.finalize(a);
                      v.reset();
                      var p = v.finalize(this._oKey.clone().concat(y));
                      return p;
                    }
                  });
                })();
              });
            }
          ),
          /***/
          35243: (
            /***/
            function(c, d, t) {
              (function(o, r, n) {
                c.exports = r(t(53264), t(23204), t(70879), t(44087), t(31946), t(30961), t(57510), t(61977), t(85209), t(11707), t(20595), t(21410), t(11691), t(53601), t(5577), t(75883), t(95194), t(52810), t(90347), t(54032), t(63197), t(38710), t(21123), t(93007), t(7489), t(91695), t(29556), t(68028), t(3902), t(22449), t(77059), t(97690), t(24222), t(79338), t(67646));
              })(void 0, function(o) {
                return o;
              });
            }
          ),
          /***/
          70879: (
            /***/
            function(c, d, t) {
              t(36501), t(10853), t(54883), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(33324), t(71228), t(100), t(51360), t(26770), t(35779), t(31120), t(85569), function(o, r) {
                c.exports = r(t(53264));
              }(void 0, function(o) {
                return function() {
                  if (typeof ArrayBuffer == "function") {
                    var r = o, n = r.lib, i = n.WordArray, f = i.init, l = i.init = function(u) {
                      if (u instanceof ArrayBuffer && (u = new Uint8Array(u)), (u instanceof Int8Array || typeof Uint8ClampedArray < "u" && u instanceof Uint8ClampedArray || u instanceof Int16Array || u instanceof Uint16Array || u instanceof Int32Array || u instanceof Uint32Array || u instanceof Float32Array || u instanceof Float64Array) && (u = new Uint8Array(u.buffer, u.byteOffset, u.byteLength)), u instanceof Uint8Array) {
                        for (var h = u.byteLength, a = [], v = 0; v < h; v++)
                          a[v >>> 2] |= u[v] << 24 - v % 4 * 8;
                        f.call(this, a, h);
                      } else
                        f.apply(this, arguments);
                    };
                    l.prototype = i;
                  }
                }(), o.lib.WordArray;
              });
            }
          ),
          /***/
          57510: (
            /***/
            function(c, d, t) {
              (function(o, r) {
                c.exports = r(t(53264));
              })(void 0, function(o) {
                return function(r) {
                  var n = o, i = n.lib, f = i.WordArray, l = i.Hasher, u = n.algo, h = [];
                  (function() {
                    for (var m = 0; m < 64; m++)
                      h[m] = r.abs(r.sin(m + 1)) * 4294967296 | 0;
                  })();
                  var a = u.MD5 = l.extend({
                    _doReset: function() {
                      this._hash = new f.init([1732584193, 4023233417, 2562383102, 271733878]);
                    },
                    _doProcessBlock: function(w, D) {
                      for (var I = 0; I < 16; I++) {
                        var E = D + I, T = w[E];
                        w[E] = (T << 8 | T >>> 24) & 16711935 | (T << 24 | T >>> 8) & 4278255360;
                      }
                      var A = this._hash.words, F = w[D + 0], b = w[D + 1], R = w[D + 2], N = w[D + 3], U = w[D + 4], W = w[D + 5], J = w[D + 6], ht = w[D + 7], K = w[D + 8], nt = w[D + 9], xt = w[D + 10], bt = w[D + 11], Tt = w[D + 12], It = w[D + 13], Lt = w[D + 14], Ut = w[D + 15], $ = A[0], gt = A[1], ut = A[2], st = A[3];
                      $ = v($, gt, ut, st, F, 7, h[0]), st = v(st, $, gt, ut, b, 12, h[1]), ut = v(ut, st, $, gt, R, 17, h[2]), gt = v(gt, ut, st, $, N, 22, h[3]), $ = v($, gt, ut, st, U, 7, h[4]), st = v(st, $, gt, ut, W, 12, h[5]), ut = v(ut, st, $, gt, J, 17, h[6]), gt = v(gt, ut, st, $, ht, 22, h[7]), $ = v($, gt, ut, st, K, 7, h[8]), st = v(st, $, gt, ut, nt, 12, h[9]), ut = v(ut, st, $, gt, xt, 17, h[10]), gt = v(gt, ut, st, $, bt, 22, h[11]), $ = v($, gt, ut, st, Tt, 7, h[12]), st = v(st, $, gt, ut, It, 12, h[13]), ut = v(ut, st, $, gt, Lt, 17, h[14]), gt = v(gt, ut, st, $, Ut, 22, h[15]), $ = y($, gt, ut, st, b, 5, h[16]), st = y(st, $, gt, ut, J, 9, h[17]), ut = y(ut, st, $, gt, bt, 14, h[18]), gt = y(gt, ut, st, $, F, 20, h[19]), $ = y($, gt, ut, st, W, 5, h[20]), st = y(st, $, gt, ut, xt, 9, h[21]), ut = y(ut, st, $, gt, Ut, 14, h[22]), gt = y(gt, ut, st, $, U, 20, h[23]), $ = y($, gt, ut, st, nt, 5, h[24]), st = y(st, $, gt, ut, Lt, 9, h[25]), ut = y(ut, st, $, gt, N, 14, h[26]), gt = y(gt, ut, st, $, K, 20, h[27]), $ = y($, gt, ut, st, It, 5, h[28]), st = y(st, $, gt, ut, R, 9, h[29]), ut = y(ut, st, $, gt, ht, 14, h[30]), gt = y(gt, ut, st, $, Tt, 20, h[31]), $ = p($, gt, ut, st, W, 4, h[32]), st = p(st, $, gt, ut, K, 11, h[33]), ut = p(ut, st, $, gt, bt, 16, h[34]), gt = p(gt, ut, st, $, Lt, 23, h[35]), $ = p($, gt, ut, st, b, 4, h[36]), st = p(st, $, gt, ut, U, 11, h[37]), ut = p(ut, st, $, gt, ht, 16, h[38]), gt = p(gt, ut, st, $, xt, 23, h[39]), $ = p($, gt, ut, st, It, 4, h[40]), st = p(st, $, gt, ut, F, 11, h[41]), ut = p(ut, st, $, gt, N, 16, h[42]), gt = p(gt, ut, st, $, J, 23, h[43]), $ = p($, gt, ut, st, nt, 4, h[44]), st = p(st, $, gt, ut, Tt, 11, h[45]), ut = p(ut, st, $, gt, Ut, 16, h[46]), gt = p(gt, ut, st, $, R, 23, h[47]), $ = e($, gt, ut, st, F, 6, h[48]), st = e(st, $, gt, ut, ht, 10, h[49]), ut = e(ut, st, $, gt, Lt, 15, h[50]), gt = e(gt, ut, st, $, W, 21, h[51]), $ = e($, gt, ut, st, Tt, 6, h[52]), st = e(st, $, gt, ut, N, 10, h[53]), ut = e(ut, st, $, gt, xt, 15, h[54]), gt = e(gt, ut, st, $, b, 21, h[55]), $ = e($, gt, ut, st, K, 6, h[56]), st = e(st, $, gt, ut, Ut, 10, h[57]), ut = e(ut, st, $, gt, J, 15, h[58]), gt = e(gt, ut, st, $, It, 21, h[59]), $ = e($, gt, ut, st, U, 6, h[60]), st = e(st, $, gt, ut, bt, 10, h[61]), ut = e(ut, st, $, gt, R, 15, h[62]), gt = e(gt, ut, st, $, nt, 21, h[63]), A[0] = A[0] + $ | 0, A[1] = A[1] + gt | 0, A[2] = A[2] + ut | 0, A[3] = A[3] + st | 0;
                    },
                    _doFinalize: function() {
                      var w = this._data, D = w.words, I = this._nDataBytes * 8, E = w.sigBytes * 8;
                      D[E >>> 5] |= 128 << 24 - E % 32;
                      var T = r.floor(I / 4294967296), A = I;
                      D[(E + 64 >>> 9 << 4) + 15] = (T << 8 | T >>> 24) & 16711935 | (T << 24 | T >>> 8) & 4278255360, D[(E + 64 >>> 9 << 4) + 14] = (A << 8 | A >>> 24) & 16711935 | (A << 24 | A >>> 8) & 4278255360, w.sigBytes = (D.length + 1) * 4, this._process();
                      for (var F = this._hash, b = F.words, R = 0; R < 4; R++) {
                        var N = b[R];
                        b[R] = (N << 8 | N >>> 24) & 16711935 | (N << 24 | N >>> 8) & 4278255360;
                      }
                      return F;
                    },
                    clone: function() {
                      var w = l.clone.call(this);
                      return w._hash = this._hash.clone(), w;
                    }
                  });
                  function v(m, w, D, I, E, T, A) {
                    var F = m + (w & D | ~w & I) + E + A;
                    return (F << T | F >>> 32 - T) + w;
                  }
                  function y(m, w, D, I, E, T, A) {
                    var F = m + (w & I | D & ~I) + E + A;
                    return (F << T | F >>> 32 - T) + w;
                  }
                  function p(m, w, D, I, E, T, A) {
                    var F = m + (w ^ D ^ I) + E + A;
                    return (F << T | F >>> 32 - T) + w;
                  }
                  function e(m, w, D, I, E, T, A) {
                    var F = m + (D ^ (w | ~I)) + E + A;
                    return (F << T | F >>> 32 - T) + w;
                  }
                  n.MD5 = l._createHelper(a), n.HmacMD5 = l._createHmacHelper(a);
                }(Math), o.MD5;
              });
            }
          ),
          /***/
          90347: (
            /***/
            function(c, d, t) {
              t(18821), function(o, r, n) {
                c.exports = r(t(53264), t(52810));
              }(void 0, function(o) {
                return o.mode.CFB = function() {
                  var r = o.lib.BlockCipherMode.extend();
                  r.Encryptor = r.extend({
                    processBlock: function(f, l) {
                      var u = this._cipher, h = u.blockSize;
                      n.call(this, f, l, h, u), this._prevBlock = f.slice(l, l + h);
                    }
                  }), r.Decryptor = r.extend({
                    processBlock: function(f, l) {
                      var u = this._cipher, h = u.blockSize, a = f.slice(l, l + h);
                      n.call(this, f, l, h, u), this._prevBlock = a;
                    }
                  });
                  function n(i, f, l, u) {
                    var h, a = this._iv;
                    a ? (h = a.slice(0), this._iv = void 0) : h = this._prevBlock, u.encryptBlock(h, 0);
                    for (var v = 0; v < l; v++)
                      i[f + v] ^= h[v];
                  }
                  return r;
                }(), o.mode.CFB;
              });
            }
          ),
          /***/
          63197: (
            /***/
            function(c, d, t) {
              t(18821), function(o, r, n) {
                c.exports = r(t(53264), t(52810));
              }(void 0, function(o) {
                /** @preserve
                 * Counter block mode compatible with  Dr Brian Gladman fileenc.c
                 * derived from CryptoJS.mode.CTR
                 * Jan Hruby jhruby.web@gmail.com
                 */
                return o.mode.CTRGladman = function() {
                  var r = o.lib.BlockCipherMode.extend();
                  function n(l) {
                    if ((l >> 24 & 255) === 255) {
                      var u = l >> 16 & 255, h = l >> 8 & 255, a = l & 255;
                      u === 255 ? (u = 0, h === 255 ? (h = 0, a === 255 ? a = 0 : ++a) : ++h) : ++u, l = 0, l += u << 16, l += h << 8, l += a;
                    } else
                      l += 16777216;
                    return l;
                  }
                  function i(l) {
                    return (l[0] = n(l[0])) === 0 && (l[1] = n(l[1])), l;
                  }
                  var f = r.Encryptor = r.extend({
                    processBlock: function(u, h) {
                      var a = this._cipher, v = a.blockSize, y = this._iv, p = this._counter;
                      y && (p = this._counter = y.slice(0), this._iv = void 0), i(p);
                      var e = p.slice(0);
                      a.encryptBlock(e, 0);
                      for (var m = 0; m < v; m++)
                        u[h + m] ^= e[m];
                    }
                  });
                  return r.Decryptor = f, r;
                }(), o.mode.CTRGladman;
              });
            }
          ),
          /***/
          54032: (
            /***/
            function(c, d, t) {
              t(18821), function(o, r, n) {
                c.exports = r(t(53264), t(52810));
              }(void 0, function(o) {
                return o.mode.CTR = function() {
                  var r = o.lib.BlockCipherMode.extend(), n = r.Encryptor = r.extend({
                    processBlock: function(f, l) {
                      var u = this._cipher, h = u.blockSize, a = this._iv, v = this._counter;
                      a && (v = this._counter = a.slice(0), this._iv = void 0);
                      var y = v.slice(0);
                      u.encryptBlock(y, 0), v[h - 1] = v[h - 1] + 1 | 0;
                      for (var p = 0; p < h; p++)
                        f[l + p] ^= y[p];
                    }
                  });
                  return r.Decryptor = n, r;
                }(), o.mode.CTR;
              });
            }
          ),
          /***/
          21123: (
            /***/
            function(c, d, t) {
              (function(o, r, n) {
                c.exports = r(t(53264), t(52810));
              })(void 0, function(o) {
                return o.mode.ECB = function() {
                  var r = o.lib.BlockCipherMode.extend();
                  return r.Encryptor = r.extend({
                    processBlock: function(i, f) {
                      this._cipher.encryptBlock(i, f);
                    }
                  }), r.Decryptor = r.extend({
                    processBlock: function(i, f) {
                      this._cipher.decryptBlock(i, f);
                    }
                  }), r;
                }(), o.mode.ECB;
              });
            }
          ),
          /***/
          38710: (
            /***/
            function(c, d, t) {
              t(18821), function(o, r, n) {
                c.exports = r(t(53264), t(52810));
              }(void 0, function(o) {
                return o.mode.OFB = function() {
                  var r = o.lib.BlockCipherMode.extend(), n = r.Encryptor = r.extend({
                    processBlock: function(f, l) {
                      var u = this._cipher, h = u.blockSize, a = this._iv, v = this._keystream;
                      a && (v = this._keystream = a.slice(0), this._iv = void 0), u.encryptBlock(v, 0);
                      for (var y = 0; y < h; y++)
                        f[l + y] ^= v[y];
                    }
                  });
                  return r.Decryptor = n, r;
                }(), o.mode.OFB;
              });
            }
          ),
          /***/
          93007: (
            /***/
            function(c, d, t) {
              (function(o, r, n) {
                c.exports = r(t(53264), t(52810));
              })(void 0, function(o) {
                return o.pad.AnsiX923 = {
                  pad: function(n, i) {
                    var f = n.sigBytes, l = i * 4, u = l - f % l, h = f + u - 1;
                    n.clamp(), n.words[h >>> 2] |= u << 24 - h % 4 * 8, n.sigBytes += u;
                  },
                  unpad: function(n) {
                    var i = n.words[n.sigBytes - 1 >>> 2] & 255;
                    n.sigBytes -= i;
                  }
                }, o.pad.Ansix923;
              });
            }
          ),
          /***/
          7489: (
            /***/
            function(c, d, t) {
              t(55862), function(o, r, n) {
                c.exports = r(t(53264), t(52810));
              }(void 0, function(o) {
                return o.pad.Iso10126 = {
                  pad: function(n, i) {
                    var f = i * 4, l = f - n.sigBytes % f;
                    n.concat(o.lib.WordArray.random(l - 1)).concat(o.lib.WordArray.create([l << 24], 1));
                  },
                  unpad: function(n) {
                    var i = n.words[n.sigBytes - 1 >>> 2] & 255;
                    n.sigBytes -= i;
                  }
                }, o.pad.Iso10126;
              });
            }
          ),
          /***/
          91695: (
            /***/
            function(c, d, t) {
              t(55862), function(o, r, n) {
                c.exports = r(t(53264), t(52810));
              }(void 0, function(o) {
                return o.pad.Iso97971 = {
                  pad: function(n, i) {
                    n.concat(o.lib.WordArray.create([2147483648], 1)), o.pad.ZeroPadding.pad(n, i);
                  },
                  unpad: function(n) {
                    o.pad.ZeroPadding.unpad(n), n.sigBytes--;
                  }
                }, o.pad.Iso97971;
              });
            }
          ),
          /***/
          68028: (
            /***/
            function(c, d, t) {
              (function(o, r, n) {
                c.exports = r(t(53264), t(52810));
              })(void 0, function(o) {
                return o.pad.NoPadding = {
                  pad: function() {
                  },
                  unpad: function() {
                  }
                }, o.pad.NoPadding;
              });
            }
          ),
          /***/
          29556: (
            /***/
            function(c, d, t) {
              (function(o, r, n) {
                c.exports = r(t(53264), t(52810));
              })(void 0, function(o) {
                return o.pad.ZeroPadding = {
                  pad: function(n, i) {
                    var f = i * 4;
                    n.clamp(), n.sigBytes += f - (n.sigBytes % f || f);
                  },
                  unpad: function(n) {
                    for (var i = n.words, f = n.sigBytes - 1, f = n.sigBytes - 1; f >= 0; f--)
                      if (i[f >>> 2] >>> 24 - f % 4 * 8 & 255) {
                        n.sigBytes = f + 1;
                        break;
                      }
                  }
                }, o.pad.ZeroPadding;
              });
            }
          ),
          /***/
          75883: (
            /***/
            function(c, d, t) {
              t(55862), function(o, r, n) {
                c.exports = r(t(53264), t(85209), t(5577));
              }(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.Base, f = n.WordArray, l = r.algo, u = l.SHA256, h = l.HMAC, a = l.PBKDF2 = i.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)
                     * @property {Hasher} hasher The hasher to use. Default: SHA256
                     * @property {number} iterations The number of iterations to perform. Default: 250000
                     */
                    cfg: i.extend({
                      keySize: 128 / 32,
                      hasher: u,
                      iterations: 25e4
                    }),
                    /**
                     * Initializes a newly created key derivation function.
                     *
                     * @param {Object} cfg (Optional) The configuration options to use for the derivation.
                     *
                     * @example
                     *
                     *     var kdf = CryptoJS.algo.PBKDF2.create();
                     *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8 });
                     *     var kdf = CryptoJS.algo.PBKDF2.create({ keySize: 8, iterations: 1000 });
                     */
                    init: function(y) {
                      this.cfg = this.cfg.extend(y);
                    },
                    /**
                     * Computes the Password-Based Key Derivation Function 2.
                     *
                     * @param {WordArray|string} password The password.
                     * @param {WordArray|string} salt A salt.
                     *
                     * @return {WordArray} The derived key.
                     *
                     * @example
                     *
                     *     var key = kdf.compute(password, salt);
                     */
                    compute: function(y, p) {
                      for (var e = this.cfg, m = h.create(e.hasher, y), w = f.create(), D = f.create([1]), I = w.words, E = D.words, T = e.keySize, A = e.iterations; I.length < T; ) {
                        var F = m.update(p).finalize(D);
                        m.reset();
                        for (var b = F.words, R = b.length, N = F, U = 1; U < A; U++) {
                          N = m.finalize(N), m.reset();
                          for (var W = N.words, J = 0; J < R; J++)
                            b[J] ^= W[J];
                        }
                        w.concat(F), E[0]++;
                      }
                      return w.sigBytes = T * 4, w;
                    }
                  });
                  r.PBKDF2 = function(v, y, p) {
                    return a.create(p).compute(v, y);
                  };
                }(), o.PBKDF2;
              });
            }
          ),
          /***/
          79338: (
            /***/
            function(c, d, t) {
              (function(o, r, n) {
                c.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.StreamCipher, f = r.algo, l = [], u = [], h = [], a = f.RabbitLegacy = i.extend({
                    _doReset: function() {
                      var p = this._key.words, e = this.cfg.iv, m = this._X = [p[0], p[3] << 16 | p[2] >>> 16, p[1], p[0] << 16 | p[3] >>> 16, p[2], p[1] << 16 | p[0] >>> 16, p[3], p[2] << 16 | p[1] >>> 16], w = this._C = [p[2] << 16 | p[2] >>> 16, p[0] & 4294901760 | p[1] & 65535, p[3] << 16 | p[3] >>> 16, p[1] & 4294901760 | p[2] & 65535, p[0] << 16 | p[0] >>> 16, p[2] & 4294901760 | p[3] & 65535, p[1] << 16 | p[1] >>> 16, p[3] & 4294901760 | p[0] & 65535];
                      this._b = 0;
                      for (var D = 0; D < 4; D++)
                        v.call(this);
                      for (var D = 0; D < 8; D++)
                        w[D] ^= m[D + 4 & 7];
                      if (e) {
                        var I = e.words, E = I[0], T = I[1], A = (E << 8 | E >>> 24) & 16711935 | (E << 24 | E >>> 8) & 4278255360, F = (T << 8 | T >>> 24) & 16711935 | (T << 24 | T >>> 8) & 4278255360, b = A >>> 16 | F & 4294901760, R = F << 16 | A & 65535;
                        w[0] ^= A, w[1] ^= b, w[2] ^= F, w[3] ^= R, w[4] ^= A, w[5] ^= b, w[6] ^= F, w[7] ^= R;
                        for (var D = 0; D < 4; D++)
                          v.call(this);
                      }
                    },
                    _doProcessBlock: function(p, e) {
                      var m = this._X;
                      v.call(this), l[0] = m[0] ^ m[5] >>> 16 ^ m[3] << 16, l[1] = m[2] ^ m[7] >>> 16 ^ m[5] << 16, l[2] = m[4] ^ m[1] >>> 16 ^ m[7] << 16, l[3] = m[6] ^ m[3] >>> 16 ^ m[1] << 16;
                      for (var w = 0; w < 4; w++)
                        l[w] = (l[w] << 8 | l[w] >>> 24) & 16711935 | (l[w] << 24 | l[w] >>> 8) & 4278255360, p[e + w] ^= l[w];
                    },
                    blockSize: 128 / 32,
                    ivSize: 64 / 32
                  });
                  function v() {
                    for (var y = this._X, p = this._C, e = 0; e < 8; e++)
                      u[e] = p[e];
                    p[0] = p[0] + 1295307597 + this._b | 0, p[1] = p[1] + 3545052371 + (p[0] >>> 0 < u[0] >>> 0 ? 1 : 0) | 0, p[2] = p[2] + 886263092 + (p[1] >>> 0 < u[1] >>> 0 ? 1 : 0) | 0, p[3] = p[3] + 1295307597 + (p[2] >>> 0 < u[2] >>> 0 ? 1 : 0) | 0, p[4] = p[4] + 3545052371 + (p[3] >>> 0 < u[3] >>> 0 ? 1 : 0) | 0, p[5] = p[5] + 886263092 + (p[4] >>> 0 < u[4] >>> 0 ? 1 : 0) | 0, p[6] = p[6] + 1295307597 + (p[5] >>> 0 < u[5] >>> 0 ? 1 : 0) | 0, p[7] = p[7] + 3545052371 + (p[6] >>> 0 < u[6] >>> 0 ? 1 : 0) | 0, this._b = p[7] >>> 0 < u[7] >>> 0 ? 1 : 0;
                    for (var e = 0; e < 8; e++) {
                      var m = y[e] + p[e], w = m & 65535, D = m >>> 16, I = ((w * w >>> 17) + w * D >>> 15) + D * D, E = ((m & 4294901760) * m | 0) + ((m & 65535) * m | 0);
                      h[e] = I ^ E;
                    }
                    y[0] = h[0] + (h[7] << 16 | h[7] >>> 16) + (h[6] << 16 | h[6] >>> 16) | 0, y[1] = h[1] + (h[0] << 8 | h[0] >>> 24) + h[7] | 0, y[2] = h[2] + (h[1] << 16 | h[1] >>> 16) + (h[0] << 16 | h[0] >>> 16) | 0, y[3] = h[3] + (h[2] << 8 | h[2] >>> 24) + h[1] | 0, y[4] = h[4] + (h[3] << 16 | h[3] >>> 16) + (h[2] << 16 | h[2] >>> 16) | 0, y[5] = h[5] + (h[4] << 8 | h[4] >>> 24) + h[3] | 0, y[6] = h[6] + (h[5] << 16 | h[5] >>> 16) + (h[4] << 16 | h[4] >>> 16) | 0, y[7] = h[7] + (h[6] << 8 | h[6] >>> 24) + h[5] | 0;
                  }
                  r.RabbitLegacy = i._createHelper(a);
                }(), o.RabbitLegacy;
              });
            }
          ),
          /***/
          24222: (
            /***/
            function(c, d, t) {
              (function(o, r, n) {
                c.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.StreamCipher, f = r.algo, l = [], u = [], h = [], a = f.Rabbit = i.extend({
                    _doReset: function() {
                      for (var p = this._key.words, e = this.cfg.iv, m = 0; m < 4; m++)
                        p[m] = (p[m] << 8 | p[m] >>> 24) & 16711935 | (p[m] << 24 | p[m] >>> 8) & 4278255360;
                      var w = this._X = [p[0], p[3] << 16 | p[2] >>> 16, p[1], p[0] << 16 | p[3] >>> 16, p[2], p[1] << 16 | p[0] >>> 16, p[3], p[2] << 16 | p[1] >>> 16], D = this._C = [p[2] << 16 | p[2] >>> 16, p[0] & 4294901760 | p[1] & 65535, p[3] << 16 | p[3] >>> 16, p[1] & 4294901760 | p[2] & 65535, p[0] << 16 | p[0] >>> 16, p[2] & 4294901760 | p[3] & 65535, p[1] << 16 | p[1] >>> 16, p[3] & 4294901760 | p[0] & 65535];
                      this._b = 0;
                      for (var m = 0; m < 4; m++)
                        v.call(this);
                      for (var m = 0; m < 8; m++)
                        D[m] ^= w[m + 4 & 7];
                      if (e) {
                        var I = e.words, E = I[0], T = I[1], A = (E << 8 | E >>> 24) & 16711935 | (E << 24 | E >>> 8) & 4278255360, F = (T << 8 | T >>> 24) & 16711935 | (T << 24 | T >>> 8) & 4278255360, b = A >>> 16 | F & 4294901760, R = F << 16 | A & 65535;
                        D[0] ^= A, D[1] ^= b, D[2] ^= F, D[3] ^= R, D[4] ^= A, D[5] ^= b, D[6] ^= F, D[7] ^= R;
                        for (var m = 0; m < 4; m++)
                          v.call(this);
                      }
                    },
                    _doProcessBlock: function(p, e) {
                      var m = this._X;
                      v.call(this), l[0] = m[0] ^ m[5] >>> 16 ^ m[3] << 16, l[1] = m[2] ^ m[7] >>> 16 ^ m[5] << 16, l[2] = m[4] ^ m[1] >>> 16 ^ m[7] << 16, l[3] = m[6] ^ m[3] >>> 16 ^ m[1] << 16;
                      for (var w = 0; w < 4; w++)
                        l[w] = (l[w] << 8 | l[w] >>> 24) & 16711935 | (l[w] << 24 | l[w] >>> 8) & 4278255360, p[e + w] ^= l[w];
                    },
                    blockSize: 128 / 32,
                    ivSize: 64 / 32
                  });
                  function v() {
                    for (var y = this._X, p = this._C, e = 0; e < 8; e++)
                      u[e] = p[e];
                    p[0] = p[0] + 1295307597 + this._b | 0, p[1] = p[1] + 3545052371 + (p[0] >>> 0 < u[0] >>> 0 ? 1 : 0) | 0, p[2] = p[2] + 886263092 + (p[1] >>> 0 < u[1] >>> 0 ? 1 : 0) | 0, p[3] = p[3] + 1295307597 + (p[2] >>> 0 < u[2] >>> 0 ? 1 : 0) | 0, p[4] = p[4] + 3545052371 + (p[3] >>> 0 < u[3] >>> 0 ? 1 : 0) | 0, p[5] = p[5] + 886263092 + (p[4] >>> 0 < u[4] >>> 0 ? 1 : 0) | 0, p[6] = p[6] + 1295307597 + (p[5] >>> 0 < u[5] >>> 0 ? 1 : 0) | 0, p[7] = p[7] + 3545052371 + (p[6] >>> 0 < u[6] >>> 0 ? 1 : 0) | 0, this._b = p[7] >>> 0 < u[7] >>> 0 ? 1 : 0;
                    for (var e = 0; e < 8; e++) {
                      var m = y[e] + p[e], w = m & 65535, D = m >>> 16, I = ((w * w >>> 17) + w * D >>> 15) + D * D, E = ((m & 4294901760) * m | 0) + ((m & 65535) * m | 0);
                      h[e] = I ^ E;
                    }
                    y[0] = h[0] + (h[7] << 16 | h[7] >>> 16) + (h[6] << 16 | h[6] >>> 16) | 0, y[1] = h[1] + (h[0] << 8 | h[0] >>> 24) + h[7] | 0, y[2] = h[2] + (h[1] << 16 | h[1] >>> 16) + (h[0] << 16 | h[0] >>> 16) | 0, y[3] = h[3] + (h[2] << 8 | h[2] >>> 24) + h[1] | 0, y[4] = h[4] + (h[3] << 16 | h[3] >>> 16) + (h[2] << 16 | h[2] >>> 16) | 0, y[5] = h[5] + (h[4] << 8 | h[4] >>> 24) + h[3] | 0, y[6] = h[6] + (h[5] << 16 | h[5] >>> 16) + (h[4] << 16 | h[4] >>> 16) | 0, y[7] = h[7] + (h[6] << 8 | h[6] >>> 24) + h[5] | 0;
                  }
                  r.Rabbit = i._createHelper(a);
                }(), o.Rabbit;
              });
            }
          ),
          /***/
          97690: (
            /***/
            function(c, d, t) {
              t(10853), t(35054), function(o, r, n) {
                c.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              }(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.StreamCipher, f = r.algo, l = f.RC4 = i.extend({
                    _doReset: function() {
                      for (var v = this._key, y = v.words, p = v.sigBytes, e = this._S = [], m = 0; m < 256; m++)
                        e[m] = m;
                      for (var m = 0, w = 0; m < 256; m++) {
                        var D = m % p, I = y[D >>> 2] >>> 24 - D % 4 * 8 & 255;
                        w = (w + e[m] + I) % 256;
                        var E = e[m];
                        e[m] = e[w], e[w] = E;
                      }
                      this._i = this._j = 0;
                    },
                    _doProcessBlock: function(v, y) {
                      v[y] ^= u.call(this);
                    },
                    keySize: 256 / 32,
                    ivSize: 0
                  });
                  function u() {
                    for (var a = this._S, v = this._i, y = this._j, p = 0, e = 0; e < 4; e++) {
                      v = (v + 1) % 256, y = (y + a[v]) % 256;
                      var m = a[v];
                      a[v] = a[y], a[y] = m, p |= a[(a[v] + a[y]) % 256] << 24 - e * 8;
                    }
                    return this._i = v, this._j = y, p;
                  }
                  r.RC4 = i._createHelper(l);
                  var h = f.RC4Drop = l.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} drop The number of keystream words to drop. Default 192
                     */
                    cfg: l.cfg.extend({
                      drop: 192
                    }),
                    _doReset: function() {
                      l._doReset.call(this);
                      for (var v = this.cfg.drop; v > 0; v--)
                        u.call(this);
                    }
                  });
                  r.RC4Drop = i._createHelper(h);
                }(), o.RC4;
              });
            }
          ),
          /***/
          53601: (
            /***/
            function(c, d, t) {
              (function(o, r) {
                c.exports = r(t(53264));
              })(void 0, function(o) {
                /** @preserve
                (c) 2012 by CÃ©dric Mesnil. All rights reserved.
                	Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
                	    - Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
                    - Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
                	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
                */
                return function(r) {
                  var n = o, i = n.lib, f = i.WordArray, l = i.Hasher, u = n.algo, h = f.create([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8, 3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12, 1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2, 4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13]), a = f.create([5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12, 6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2, 15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13, 8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14, 12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11]), v = f.create([11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8, 7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12, 11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5, 11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12, 9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6]), y = f.create([8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6, 9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11, 9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5, 15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8, 8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11]), p = f.create([0, 1518500249, 1859775393, 2400959708, 2840853838]), e = f.create([1352829926, 1548603684, 1836072691, 2053994217, 0]), m = u.RIPEMD160 = l.extend({
                    _doReset: function() {
                      this._hash = f.create([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
                    },
                    _doProcessBlock: function(b, R) {
                      for (var N = 0; N < 16; N++) {
                        var U = R + N, W = b[U];
                        b[U] = (W << 8 | W >>> 24) & 16711935 | (W << 24 | W >>> 8) & 4278255360;
                      }
                      var J = this._hash.words, ht = p.words, K = e.words, nt = h.words, xt = a.words, bt = v.words, Tt = y.words, It, Lt, Ut, $, gt, ut, st, yt, G, Et;
                      ut = It = J[0], st = Lt = J[1], yt = Ut = J[2], G = $ = J[3], Et = gt = J[4];
                      for (var k, N = 0; N < 80; N += 1)
                        k = It + b[R + nt[N]] | 0, N < 16 ? k += w(Lt, Ut, $) + ht[0] : N < 32 ? k += D(Lt, Ut, $) + ht[1] : N < 48 ? k += I(Lt, Ut, $) + ht[2] : N < 64 ? k += E(Lt, Ut, $) + ht[3] : k += T(Lt, Ut, $) + ht[4], k = k | 0, k = A(k, bt[N]), k = k + gt | 0, It = gt, gt = $, $ = A(Ut, 10), Ut = Lt, Lt = k, k = ut + b[R + xt[N]] | 0, N < 16 ? k += T(st, yt, G) + K[0] : N < 32 ? k += E(st, yt, G) + K[1] : N < 48 ? k += I(st, yt, G) + K[2] : N < 64 ? k += D(st, yt, G) + K[3] : k += w(st, yt, G) + K[4], k = k | 0, k = A(k, Tt[N]), k = k + Et | 0, ut = Et, Et = G, G = A(yt, 10), yt = st, st = k;
                      k = J[1] + Ut + G | 0, J[1] = J[2] + $ + Et | 0, J[2] = J[3] + gt + ut | 0, J[3] = J[4] + It + st | 0, J[4] = J[0] + Lt + yt | 0, J[0] = k;
                    },
                    _doFinalize: function() {
                      var b = this._data, R = b.words, N = this._nDataBytes * 8, U = b.sigBytes * 8;
                      R[U >>> 5] |= 128 << 24 - U % 32, R[(U + 64 >>> 9 << 4) + 14] = (N << 8 | N >>> 24) & 16711935 | (N << 24 | N >>> 8) & 4278255360, b.sigBytes = (R.length + 1) * 4, this._process();
                      for (var W = this._hash, J = W.words, ht = 0; ht < 5; ht++) {
                        var K = J[ht];
                        J[ht] = (K << 8 | K >>> 24) & 16711935 | (K << 24 | K >>> 8) & 4278255360;
                      }
                      return W;
                    },
                    clone: function() {
                      var b = l.clone.call(this);
                      return b._hash = this._hash.clone(), b;
                    }
                  });
                  function w(F, b, R) {
                    return F ^ b ^ R;
                  }
                  function D(F, b, R) {
                    return F & b | ~F & R;
                  }
                  function I(F, b, R) {
                    return (F | ~b) ^ R;
                  }
                  function E(F, b, R) {
                    return F & R | b & ~R;
                  }
                  function T(F, b, R) {
                    return F ^ (b | ~R);
                  }
                  function A(F, b) {
                    return F << b | F >>> 32 - b;
                  }
                  n.RIPEMD160 = l._createHelper(m), n.HmacRIPEMD160 = l._createHmacHelper(m);
                }(), o.RIPEMD160;
              });
            }
          ),
          /***/
          61977: (
            /***/
            function(c, d, t) {
              (function(o, r) {
                c.exports = r(t(53264));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.WordArray, f = n.Hasher, l = r.algo, u = [], h = l.SHA1 = f.extend({
                    _doReset: function() {
                      this._hash = new i.init([1732584193, 4023233417, 2562383102, 271733878, 3285377520]);
                    },
                    _doProcessBlock: function(v, y) {
                      for (var p = this._hash.words, e = p[0], m = p[1], w = p[2], D = p[3], I = p[4], E = 0; E < 80; E++) {
                        if (E < 16)
                          u[E] = v[y + E] | 0;
                        else {
                          var T = u[E - 3] ^ u[E - 8] ^ u[E - 14] ^ u[E - 16];
                          u[E] = T << 1 | T >>> 31;
                        }
                        var A = (e << 5 | e >>> 27) + I + u[E];
                        E < 20 ? A += (m & w | ~m & D) + 1518500249 : E < 40 ? A += (m ^ w ^ D) + 1859775393 : E < 60 ? A += (m & w | m & D | w & D) - 1894007588 : A += (m ^ w ^ D) - 899497514, I = D, D = w, w = m << 30 | m >>> 2, m = e, e = A;
                      }
                      p[0] = p[0] + e | 0, p[1] = p[1] + m | 0, p[2] = p[2] + w | 0, p[3] = p[3] + D | 0, p[4] = p[4] + I | 0;
                    },
                    _doFinalize: function() {
                      var v = this._data, y = v.words, p = this._nDataBytes * 8, e = v.sigBytes * 8;
                      return y[e >>> 5] |= 128 << 24 - e % 32, y[(e + 64 >>> 9 << 4) + 14] = Math.floor(p / 4294967296), y[(e + 64 >>> 9 << 4) + 15] = p, v.sigBytes = y.length * 4, this._process(), this._hash;
                    },
                    clone: function() {
                      var v = f.clone.call(this);
                      return v._hash = this._hash.clone(), v;
                    }
                  });
                  r.SHA1 = f._createHelper(h), r.HmacSHA1 = f._createHmacHelper(h);
                }(), o.SHA1;
              });
            }
          ),
          /***/
          11707: (
            /***/
            function(c, d, t) {
              (function(o, r, n) {
                c.exports = r(t(53264), t(85209));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.WordArray, f = r.algo, l = f.SHA256, u = f.SHA224 = l.extend({
                    _doReset: function() {
                      this._hash = new i.init([3238371032, 914150663, 812702999, 4144912697, 4290775857, 1750603025, 1694076839, 3204075428]);
                    },
                    _doFinalize: function() {
                      var a = l._doFinalize.call(this);
                      return a.sigBytes -= 4, a;
                    }
                  });
                  r.SHA224 = l._createHelper(u), r.HmacSHA224 = l._createHmacHelper(u);
                }(), o.SHA224;
              });
            }
          ),
          /***/
          85209: (
            /***/
            function(c, d, t) {
              t(18821), function(o, r) {
                c.exports = r(t(53264));
              }(void 0, function(o) {
                return function(r) {
                  var n = o, i = n.lib, f = i.WordArray, l = i.Hasher, u = n.algo, h = [], a = [];
                  (function() {
                    function p(D) {
                      for (var I = r.sqrt(D), E = 2; E <= I; E++)
                        if (!(D % E))
                          return !1;
                      return !0;
                    }
                    function e(D) {
                      return (D - (D | 0)) * 4294967296 | 0;
                    }
                    for (var m = 2, w = 0; w < 64; )
                      p(m) && (w < 8 && (h[w] = e(r.pow(m, 0.5))), a[w] = e(r.pow(m, 0.3333333333333333)), w++), m++;
                  })();
                  var v = [], y = u.SHA256 = l.extend({
                    _doReset: function() {
                      this._hash = new f.init(h.slice(0));
                    },
                    _doProcessBlock: function(e, m) {
                      for (var w = this._hash.words, D = w[0], I = w[1], E = w[2], T = w[3], A = w[4], F = w[5], b = w[6], R = w[7], N = 0; N < 64; N++) {
                        if (N < 16)
                          v[N] = e[m + N] | 0;
                        else {
                          var U = v[N - 15], W = (U << 25 | U >>> 7) ^ (U << 14 | U >>> 18) ^ U >>> 3, J = v[N - 2], ht = (J << 15 | J >>> 17) ^ (J << 13 | J >>> 19) ^ J >>> 10;
                          v[N] = W + v[N - 7] + ht + v[N - 16];
                        }
                        var K = A & F ^ ~A & b, nt = D & I ^ D & E ^ I & E, xt = (D << 30 | D >>> 2) ^ (D << 19 | D >>> 13) ^ (D << 10 | D >>> 22), bt = (A << 26 | A >>> 6) ^ (A << 21 | A >>> 11) ^ (A << 7 | A >>> 25), Tt = R + bt + K + a[N] + v[N], It = xt + nt;
                        R = b, b = F, F = A, A = T + Tt | 0, T = E, E = I, I = D, D = Tt + It | 0;
                      }
                      w[0] = w[0] + D | 0, w[1] = w[1] + I | 0, w[2] = w[2] + E | 0, w[3] = w[3] + T | 0, w[4] = w[4] + A | 0, w[5] = w[5] + F | 0, w[6] = w[6] + b | 0, w[7] = w[7] + R | 0;
                    },
                    _doFinalize: function() {
                      var e = this._data, m = e.words, w = this._nDataBytes * 8, D = e.sigBytes * 8;
                      return m[D >>> 5] |= 128 << 24 - D % 32, m[(D + 64 >>> 9 << 4) + 14] = r.floor(w / 4294967296), m[(D + 64 >>> 9 << 4) + 15] = w, e.sigBytes = m.length * 4, this._process(), this._hash;
                    },
                    clone: function() {
                      var e = l.clone.call(this);
                      return e._hash = this._hash.clone(), e;
                    }
                  });
                  n.SHA256 = l._createHelper(y), n.HmacSHA256 = l._createHmacHelper(y);
                }(Math), o.SHA256;
              });
            }
          ),
          /***/
          11691: (
            /***/
            function(c, d, t) {
              t(18821), function(o, r, n) {
                c.exports = r(t(53264), t(23204));
              }(void 0, function(o) {
                return function(r) {
                  var n = o, i = n.lib, f = i.WordArray, l = i.Hasher, u = n.x64, h = u.Word, a = n.algo, v = [], y = [], p = [];
                  (function() {
                    for (var w = 1, D = 0, I = 0; I < 24; I++) {
                      v[w + 5 * D] = (I + 1) * (I + 2) / 2 % 64;
                      var E = D % 5, T = (2 * w + 3 * D) % 5;
                      w = E, D = T;
                    }
                    for (var w = 0; w < 5; w++)
                      for (var D = 0; D < 5; D++)
                        y[w + 5 * D] = D + (2 * w + 3 * D) % 5 * 5;
                    for (var A = 1, F = 0; F < 24; F++) {
                      for (var b = 0, R = 0, N = 0; N < 7; N++) {
                        if (A & 1) {
                          var U = (1 << N) - 1;
                          U < 32 ? R ^= 1 << U : b ^= 1 << U - 32;
                        }
                        A & 128 ? A = A << 1 ^ 113 : A <<= 1;
                      }
                      p[F] = h.create(b, R);
                    }
                  })();
                  var e = [];
                  (function() {
                    for (var w = 0; w < 25; w++)
                      e[w] = h.create();
                  })();
                  var m = a.SHA3 = l.extend({
                    /**
                     * Configuration options.
                     *
                     * @property {number} outputLength
                     *   The desired number of bits in the output hash.
                     *   Only values permitted are: 224, 256, 384, 512.
                     *   Default: 512
                     */
                    cfg: l.cfg.extend({
                      outputLength: 512
                    }),
                    _doReset: function() {
                      for (var D = this._state = [], I = 0; I < 25; I++)
                        D[I] = new h.init();
                      this.blockSize = (1600 - 2 * this.cfg.outputLength) / 32;
                    },
                    _doProcessBlock: function(D, I) {
                      for (var E = this._state, T = this.blockSize / 2, A = 0; A < T; A++) {
                        var F = D[I + 2 * A], b = D[I + 2 * A + 1];
                        F = (F << 8 | F >>> 24) & 16711935 | (F << 24 | F >>> 8) & 4278255360, b = (b << 8 | b >>> 24) & 16711935 | (b << 24 | b >>> 8) & 4278255360;
                        var R = E[A];
                        R.high ^= b, R.low ^= F;
                      }
                      for (var N = 0; N < 24; N++) {
                        for (var U = 0; U < 5; U++) {
                          for (var W = 0, J = 0, ht = 0; ht < 5; ht++) {
                            var R = E[U + 5 * ht];
                            W ^= R.high, J ^= R.low;
                          }
                          var K = e[U];
                          K.high = W, K.low = J;
                        }
                        for (var U = 0; U < 5; U++)
                          for (var nt = e[(U + 4) % 5], xt = e[(U + 1) % 5], bt = xt.high, Tt = xt.low, W = nt.high ^ (bt << 1 | Tt >>> 31), J = nt.low ^ (Tt << 1 | bt >>> 31), ht = 0; ht < 5; ht++) {
                            var R = E[U + 5 * ht];
                            R.high ^= W, R.low ^= J;
                          }
                        for (var It = 1; It < 25; It++) {
                          var W, J, R = E[It], Lt = R.high, Ut = R.low, $ = v[It];
                          $ < 32 ? (W = Lt << $ | Ut >>> 32 - $, J = Ut << $ | Lt >>> 32 - $) : (W = Ut << $ - 32 | Lt >>> 64 - $, J = Lt << $ - 32 | Ut >>> 64 - $);
                          var gt = e[y[It]];
                          gt.high = W, gt.low = J;
                        }
                        var ut = e[0], st = E[0];
                        ut.high = st.high, ut.low = st.low;
                        for (var U = 0; U < 5; U++)
                          for (var ht = 0; ht < 5; ht++) {
                            var It = U + 5 * ht, R = E[It], yt = e[It], G = e[(U + 1) % 5 + 5 * ht], Et = e[(U + 2) % 5 + 5 * ht];
                            R.high = yt.high ^ ~G.high & Et.high, R.low = yt.low ^ ~G.low & Et.low;
                          }
                        var R = E[0], k = p[N];
                        R.high ^= k.high, R.low ^= k.low;
                      }
                    },
                    _doFinalize: function() {
                      var D = this._data, I = D.words;
                      this._nDataBytes * 8;
                      var E = D.sigBytes * 8, T = this.blockSize * 32;
                      I[E >>> 5] |= 1 << 24 - E % 32, I[(r.ceil((E + 1) / T) * T >>> 5) - 1] |= 128, D.sigBytes = I.length * 4, this._process();
                      for (var A = this._state, F = this.cfg.outputLength / 8, b = F / 8, R = [], N = 0; N < b; N++) {
                        var U = A[N], W = U.high, J = U.low;
                        W = (W << 8 | W >>> 24) & 16711935 | (W << 24 | W >>> 8) & 4278255360, J = (J << 8 | J >>> 24) & 16711935 | (J << 24 | J >>> 8) & 4278255360, R.push(J), R.push(W);
                      }
                      return new f.init(R, F);
                    },
                    clone: function() {
                      for (var D = l.clone.call(this), I = D._state = this._state.slice(0), E = 0; E < 25; E++)
                        I[E] = I[E].clone();
                      return D;
                    }
                  });
                  n.SHA3 = l._createHelper(m), n.HmacSHA3 = l._createHmacHelper(m);
                }(Math), o.SHA3;
              });
            }
          ),
          /***/
          21410: (
            /***/
            function(c, d, t) {
              (function(o, r, n) {
                c.exports = r(t(53264), t(23204), t(20595));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.x64, i = n.Word, f = n.WordArray, l = r.algo, u = l.SHA512, h = l.SHA384 = u.extend({
                    _doReset: function() {
                      this._hash = new f.init([new i.init(3418070365, 3238371032), new i.init(1654270250, 914150663), new i.init(2438529370, 812702999), new i.init(355462360, 4144912697), new i.init(1731405415, 4290775857), new i.init(2394180231, 1750603025), new i.init(3675008525, 1694076839), new i.init(1203062813, 3204075428)]);
                    },
                    _doFinalize: function() {
                      var v = u._doFinalize.call(this);
                      return v.sigBytes -= 16, v;
                    }
                  });
                  r.SHA384 = u._createHelper(h), r.HmacSHA384 = u._createHmacHelper(h);
                }(), o.SHA384;
              });
            }
          ),
          /***/
          20595: (
            /***/
            function(c, d, t) {
              (function(o, r, n) {
                c.exports = r(t(53264), t(23204));
              })(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.Hasher, f = r.x64, l = f.Word, u = f.WordArray, h = r.algo;
                  function a() {
                    return l.create.apply(l, arguments);
                  }
                  var v = [a(1116352408, 3609767458), a(1899447441, 602891725), a(3049323471, 3964484399), a(3921009573, 2173295548), a(961987163, 4081628472), a(1508970993, 3053834265), a(2453635748, 2937671579), a(2870763221, 3664609560), a(3624381080, 2734883394), a(310598401, 1164996542), a(607225278, 1323610764), a(1426881987, 3590304994), a(1925078388, 4068182383), a(2162078206, 991336113), a(2614888103, 633803317), a(3248222580, 3479774868), a(3835390401, 2666613458), a(4022224774, 944711139), a(264347078, 2341262773), a(604807628, 2007800933), a(770255983, 1495990901), a(1249150122, 1856431235), a(1555081692, 3175218132), a(1996064986, 2198950837), a(2554220882, 3999719339), a(2821834349, 766784016), a(2952996808, 2566594879), a(3210313671, 3203337956), a(3336571891, 1034457026), a(3584528711, 2466948901), a(113926993, 3758326383), a(338241895, 168717936), a(666307205, 1188179964), a(773529912, 1546045734), a(1294757372, 1522805485), a(1396182291, 2643833823), a(1695183700, 2343527390), a(1986661051, 1014477480), a(2177026350, 1206759142), a(2456956037, 344077627), a(2730485921, 1290863460), a(2820302411, 3158454273), a(3259730800, 3505952657), a(3345764771, 106217008), a(3516065817, 3606008344), a(3600352804, 1432725776), a(4094571909, 1467031594), a(275423344, 851169720), a(430227734, 3100823752), a(506948616, 1363258195), a(659060556, 3750685593), a(883997877, 3785050280), a(958139571, 3318307427), a(1322822218, 3812723403), a(1537002063, 2003034995), a(1747873779, 3602036899), a(1955562222, 1575990012), a(2024104815, 1125592928), a(2227730452, 2716904306), a(2361852424, 442776044), a(2428436474, 593698344), a(2756734187, 3733110249), a(3204031479, 2999351573), a(3329325298, 3815920427), a(3391569614, 3928383900), a(3515267271, 566280711), a(3940187606, 3454069534), a(4118630271, 4000239992), a(116418474, 1914138554), a(174292421, 2731055270), a(289380356, 3203993006), a(460393269, 320620315), a(685471733, 587496836), a(852142971, 1086792851), a(1017036298, 365543100), a(1126000580, 2618297676), a(1288033470, 3409855158), a(1501505948, 4234509866), a(1607167915, 987167468), a(1816402316, 1246189591)], y = [];
                  (function() {
                    for (var e = 0; e < 80; e++)
                      y[e] = a();
                  })();
                  var p = h.SHA512 = i.extend({
                    _doReset: function() {
                      this._hash = new u.init([new l.init(1779033703, 4089235720), new l.init(3144134277, 2227873595), new l.init(1013904242, 4271175723), new l.init(2773480762, 1595750129), new l.init(1359893119, 2917565137), new l.init(2600822924, 725511199), new l.init(528734635, 4215389547), new l.init(1541459225, 327033209)]);
                    },
                    _doProcessBlock: function(m, w) {
                      for (var D = this._hash.words, I = D[0], E = D[1], T = D[2], A = D[3], F = D[4], b = D[5], R = D[6], N = D[7], U = I.high, W = I.low, J = E.high, ht = E.low, K = T.high, nt = T.low, xt = A.high, bt = A.low, Tt = F.high, It = F.low, Lt = b.high, Ut = b.low, $ = R.high, gt = R.low, ut = N.high, st = N.low, yt = U, G = W, Et = J, k = ht, S = K, L = nt, V = xt, it = bt, tt = Tt, _ = It, At = Lt, Rt = Ut, Yt = $, Gt = gt, Dt = ut, ae = st, Ae = 0; Ae < 80; Ae++) {
                        var xe, ce, we = y[Ae];
                        if (Ae < 16)
                          ce = we.high = m[w + Ae * 2] | 0, xe = we.low = m[w + Ae * 2 + 1] | 0;
                        else {
                          var zt = y[Ae - 15], Qt = zt.high, le = zt.low, de = (Qt >>> 1 | le << 31) ^ (Qt >>> 8 | le << 24) ^ Qt >>> 7, be = (le >>> 1 | Qt << 31) ^ (le >>> 8 | Qt << 24) ^ (le >>> 7 | Qt << 25), Oe = y[Ae - 2], Fe = Oe.high, Ft = Oe.low, fe = (Fe >>> 19 | Ft << 13) ^ (Fe << 3 | Ft >>> 29) ^ Fe >>> 6, ot = (Ft >>> 19 | Fe << 13) ^ (Ft << 3 | Fe >>> 29) ^ (Ft >>> 6 | Fe << 26), Y = y[Ae - 7], j = Y.high, mt = Y.low, at = y[Ae - 16], Wt = at.high, _t = at.low;
                          xe = be + mt, ce = de + j + (xe >>> 0 < be >>> 0 ? 1 : 0), xe = xe + ot, ce = ce + fe + (xe >>> 0 < ot >>> 0 ? 1 : 0), xe = xe + _t, ce = ce + Wt + (xe >>> 0 < _t >>> 0 ? 1 : 0), we.high = ce, we.low = xe;
                        }
                        var Q = tt & At ^ ~tt & Yt, Jt = _ & Rt ^ ~_ & Gt, te = yt & Et ^ yt & S ^ Et & S, Ct = G & k ^ G & L ^ k & L, Ht = (yt >>> 28 | G << 4) ^ (yt << 30 | G >>> 2) ^ (yt << 25 | G >>> 7), oe = (G >>> 28 | yt << 4) ^ (G << 30 | yt >>> 2) ^ (G << 25 | yt >>> 7), Le = (tt >>> 14 | _ << 18) ^ (tt >>> 18 | _ << 14) ^ (tt << 23 | _ >>> 9), De = (_ >>> 14 | tt << 18) ^ (_ >>> 18 | tt << 14) ^ (_ << 23 | tt >>> 9), ke = v[Ae], Ne = ke.high, rn = ke.low, tr = ae + De, Ze = Dt + Le + (tr >>> 0 < ae >>> 0 ? 1 : 0), tr = tr + Jt, Ze = Ze + Q + (tr >>> 0 < Jt >>> 0 ? 1 : 0), tr = tr + rn, Ze = Ze + Ne + (tr >>> 0 < rn >>> 0 ? 1 : 0), tr = tr + xe, Ze = Ze + ce + (tr >>> 0 < xe >>> 0 ? 1 : 0), br = oe + Ct, Ir = Ht + te + (br >>> 0 < oe >>> 0 ? 1 : 0);
                        Dt = Yt, ae = Gt, Yt = At, Gt = Rt, At = tt, Rt = _, _ = it + tr | 0, tt = V + Ze + (_ >>> 0 < it >>> 0 ? 1 : 0) | 0, V = S, it = L, S = Et, L = k, Et = yt, k = G, G = tr + br | 0, yt = Ze + Ir + (G >>> 0 < tr >>> 0 ? 1 : 0) | 0;
                      }
                      W = I.low = W + G, I.high = U + yt + (W >>> 0 < G >>> 0 ? 1 : 0), ht = E.low = ht + k, E.high = J + Et + (ht >>> 0 < k >>> 0 ? 1 : 0), nt = T.low = nt + L, T.high = K + S + (nt >>> 0 < L >>> 0 ? 1 : 0), bt = A.low = bt + it, A.high = xt + V + (bt >>> 0 < it >>> 0 ? 1 : 0), It = F.low = It + _, F.high = Tt + tt + (It >>> 0 < _ >>> 0 ? 1 : 0), Ut = b.low = Ut + Rt, b.high = Lt + At + (Ut >>> 0 < Rt >>> 0 ? 1 : 0), gt = R.low = gt + Gt, R.high = $ + Yt + (gt >>> 0 < Gt >>> 0 ? 1 : 0), st = N.low = st + ae, N.high = ut + Dt + (st >>> 0 < ae >>> 0 ? 1 : 0);
                    },
                    _doFinalize: function() {
                      var m = this._data, w = m.words, D = this._nDataBytes * 8, I = m.sigBytes * 8;
                      w[I >>> 5] |= 128 << 24 - I % 32, w[(I + 128 >>> 10 << 5) + 30] = Math.floor(D / 4294967296), w[(I + 128 >>> 10 << 5) + 31] = D, m.sigBytes = w.length * 4, this._process();
                      var E = this._hash.toX32();
                      return E;
                    },
                    clone: function() {
                      var m = i.clone.call(this);
                      return m._hash = this._hash.clone(), m;
                    },
                    blockSize: 1024 / 32
                  });
                  r.SHA512 = i._createHelper(p), r.HmacSHA512 = i._createHmacHelper(p);
                }(), o.SHA512;
              });
            }
          ),
          /***/
          77059: (
            /***/
            function(c, d, t) {
              t(18821), function(o, r, n) {
                c.exports = r(t(53264), t(31946), t(57510), t(95194), t(52810));
              }(void 0, function(o) {
                return function() {
                  var r = o, n = r.lib, i = n.WordArray, f = n.BlockCipher, l = r.algo, u = [57, 49, 41, 33, 25, 17, 9, 1, 58, 50, 42, 34, 26, 18, 10, 2, 59, 51, 43, 35, 27, 19, 11, 3, 60, 52, 44, 36, 63, 55, 47, 39, 31, 23, 15, 7, 62, 54, 46, 38, 30, 22, 14, 6, 61, 53, 45, 37, 29, 21, 13, 5, 28, 20, 12, 4], h = [14, 17, 11, 24, 1, 5, 3, 28, 15, 6, 21, 10, 23, 19, 12, 4, 26, 8, 16, 7, 27, 20, 13, 2, 41, 52, 31, 37, 47, 55, 30, 40, 51, 45, 33, 48, 44, 49, 39, 56, 34, 53, 46, 42, 50, 36, 29, 32], a = [1, 2, 4, 6, 8, 10, 12, 14, 15, 17, 19, 21, 23, 25, 27, 28], v = [{
                    0: 8421888,
                    268435456: 32768,
                    536870912: 8421378,
                    805306368: 2,
                    1073741824: 512,
                    1342177280: 8421890,
                    1610612736: 8389122,
                    1879048192: 8388608,
                    2147483648: 514,
                    2415919104: 8389120,
                    2684354560: 33280,
                    2952790016: 8421376,
                    3221225472: 32770,
                    3489660928: 8388610,
                    3758096384: 0,
                    4026531840: 33282,
                    134217728: 0,
                    402653184: 8421890,
                    671088640: 33282,
                    939524096: 32768,
                    1207959552: 8421888,
                    1476395008: 512,
                    1744830464: 8421378,
                    2013265920: 2,
                    2281701376: 8389120,
                    2550136832: 33280,
                    2818572288: 8421376,
                    3087007744: 8389122,
                    3355443200: 8388610,
                    3623878656: 32770,
                    3892314112: 514,
                    4160749568: 8388608,
                    1: 32768,
                    268435457: 2,
                    536870913: 8421888,
                    805306369: 8388608,
                    1073741825: 8421378,
                    1342177281: 33280,
                    1610612737: 512,
                    1879048193: 8389122,
                    2147483649: 8421890,
                    2415919105: 8421376,
                    2684354561: 8388610,
                    2952790017: 33282,
                    3221225473: 514,
                    3489660929: 8389120,
                    3758096385: 32770,
                    4026531841: 0,
                    134217729: 8421890,
                    402653185: 8421376,
                    671088641: 8388608,
                    939524097: 512,
                    1207959553: 32768,
                    1476395009: 8388610,
                    1744830465: 2,
                    2013265921: 33282,
                    2281701377: 32770,
                    2550136833: 8389122,
                    2818572289: 514,
                    3087007745: 8421888,
                    3355443201: 8389120,
                    3623878657: 0,
                    3892314113: 33280,
                    4160749569: 8421378
                  }, {
                    0: 1074282512,
                    16777216: 16384,
                    33554432: 524288,
                    50331648: 1074266128,
                    67108864: 1073741840,
                    83886080: 1074282496,
                    100663296: 1073758208,
                    117440512: 16,
                    134217728: 540672,
                    150994944: 1073758224,
                    167772160: 1073741824,
                    184549376: 540688,
                    201326592: 524304,
                    218103808: 0,
                    234881024: 16400,
                    251658240: 1074266112,
                    8388608: 1073758208,
                    25165824: 540688,
                    41943040: 16,
                    58720256: 1073758224,
                    75497472: 1074282512,
                    92274688: 1073741824,
                    109051904: 524288,
                    125829120: 1074266128,
                    142606336: 524304,
                    159383552: 0,
                    176160768: 16384,
                    192937984: 1074266112,
                    209715200: 1073741840,
                    226492416: 540672,
                    243269632: 1074282496,
                    260046848: 16400,
                    268435456: 0,
                    285212672: 1074266128,
                    301989888: 1073758224,
                    318767104: 1074282496,
                    335544320: 1074266112,
                    352321536: 16,
                    369098752: 540688,
                    385875968: 16384,
                    402653184: 16400,
                    419430400: 524288,
                    436207616: 524304,
                    452984832: 1073741840,
                    469762048: 540672,
                    486539264: 1073758208,
                    503316480: 1073741824,
                    520093696: 1074282512,
                    276824064: 540688,
                    293601280: 524288,
                    310378496: 1074266112,
                    327155712: 16384,
                    343932928: 1073758208,
                    360710144: 1074282512,
                    377487360: 16,
                    394264576: 1073741824,
                    411041792: 1074282496,
                    427819008: 1073741840,
                    444596224: 1073758224,
                    461373440: 524304,
                    478150656: 0,
                    494927872: 16400,
                    511705088: 1074266128,
                    528482304: 540672
                  }, {
                    0: 260,
                    1048576: 0,
                    2097152: 67109120,
                    3145728: 65796,
                    4194304: 65540,
                    5242880: 67108868,
                    6291456: 67174660,
                    7340032: 67174400,
                    8388608: 67108864,
                    9437184: 67174656,
                    10485760: 65792,
                    11534336: 67174404,
                    12582912: 67109124,
                    13631488: 65536,
                    14680064: 4,
                    15728640: 256,
                    524288: 67174656,
                    1572864: 67174404,
                    2621440: 0,
                    3670016: 67109120,
                    4718592: 67108868,
                    5767168: 65536,
                    6815744: 65540,
                    7864320: 260,
                    8912896: 4,
                    9961472: 256,
                    11010048: 67174400,
                    12058624: 65796,
                    13107200: 65792,
                    14155776: 67109124,
                    15204352: 67174660,
                    16252928: 67108864,
                    16777216: 67174656,
                    17825792: 65540,
                    18874368: 65536,
                    19922944: 67109120,
                    20971520: 256,
                    22020096: 67174660,
                    23068672: 67108868,
                    24117248: 0,
                    25165824: 67109124,
                    26214400: 67108864,
                    27262976: 4,
                    28311552: 65792,
                    29360128: 67174400,
                    30408704: 260,
                    31457280: 65796,
                    32505856: 67174404,
                    17301504: 67108864,
                    18350080: 260,
                    19398656: 67174656,
                    20447232: 0,
                    21495808: 65540,
                    22544384: 67109120,
                    23592960: 256,
                    24641536: 67174404,
                    25690112: 65536,
                    26738688: 67174660,
                    27787264: 65796,
                    28835840: 67108868,
                    29884416: 67109124,
                    30932992: 67174400,
                    31981568: 4,
                    33030144: 65792
                  }, {
                    0: 2151682048,
                    65536: 2147487808,
                    131072: 4198464,
                    196608: 2151677952,
                    262144: 0,
                    327680: 4198400,
                    393216: 2147483712,
                    458752: 4194368,
                    524288: 2147483648,
                    589824: 4194304,
                    655360: 64,
                    720896: 2147487744,
                    786432: 2151678016,
                    851968: 4160,
                    917504: 4096,
                    983040: 2151682112,
                    32768: 2147487808,
                    98304: 64,
                    163840: 2151678016,
                    229376: 2147487744,
                    294912: 4198400,
                    360448: 2151682112,
                    425984: 0,
                    491520: 2151677952,
                    557056: 4096,
                    622592: 2151682048,
                    688128: 4194304,
                    753664: 4160,
                    819200: 2147483648,
                    884736: 4194368,
                    950272: 4198464,
                    1015808: 2147483712,
                    1048576: 4194368,
                    1114112: 4198400,
                    1179648: 2147483712,
                    1245184: 0,
                    1310720: 4160,
                    1376256: 2151678016,
                    1441792: 2151682048,
                    1507328: 2147487808,
                    1572864: 2151682112,
                    1638400: 2147483648,
                    1703936: 2151677952,
                    1769472: 4198464,
                    1835008: 2147487744,
                    1900544: 4194304,
                    1966080: 64,
                    2031616: 4096,
                    1081344: 2151677952,
                    1146880: 2151682112,
                    1212416: 0,
                    1277952: 4198400,
                    1343488: 4194368,
                    1409024: 2147483648,
                    1474560: 2147487808,
                    1540096: 64,
                    1605632: 2147483712,
                    1671168: 4096,
                    1736704: 2147487744,
                    1802240: 2151678016,
                    1867776: 4160,
                    1933312: 2151682048,
                    1998848: 4194304,
                    2064384: 4198464
                  }, {
                    0: 128,
                    4096: 17039360,
                    8192: 262144,
                    12288: 536870912,
                    16384: 537133184,
                    20480: 16777344,
                    24576: 553648256,
                    28672: 262272,
                    32768: 16777216,
                    36864: 537133056,
                    40960: 536871040,
                    45056: 553910400,
                    49152: 553910272,
                    53248: 0,
                    57344: 17039488,
                    61440: 553648128,
                    2048: 17039488,
                    6144: 553648256,
                    10240: 128,
                    14336: 17039360,
                    18432: 262144,
                    22528: 537133184,
                    26624: 553910272,
                    30720: 536870912,
                    34816: 537133056,
                    38912: 0,
                    43008: 553910400,
                    47104: 16777344,
                    51200: 536871040,
                    55296: 553648128,
                    59392: 16777216,
                    63488: 262272,
                    65536: 262144,
                    69632: 128,
                    73728: 536870912,
                    77824: 553648256,
                    81920: 16777344,
                    86016: 553910272,
                    90112: 537133184,
                    94208: 16777216,
                    98304: 553910400,
                    102400: 553648128,
                    106496: 17039360,
                    110592: 537133056,
                    114688: 262272,
                    118784: 536871040,
                    122880: 0,
                    126976: 17039488,
                    67584: 553648256,
                    71680: 16777216,
                    75776: 17039360,
                    79872: 537133184,
                    83968: 536870912,
                    88064: 17039488,
                    92160: 128,
                    96256: 553910272,
                    100352: 262272,
                    104448: 553910400,
                    108544: 0,
                    112640: 553648128,
                    116736: 16777344,
                    120832: 262144,
                    124928: 537133056,
                    129024: 536871040
                  }, {
                    0: 268435464,
                    256: 8192,
                    512: 270532608,
                    768: 270540808,
                    1024: 268443648,
                    1280: 2097152,
                    1536: 2097160,
                    1792: 268435456,
                    2048: 0,
                    2304: 268443656,
                    2560: 2105344,
                    2816: 8,
                    3072: 270532616,
                    3328: 2105352,
                    3584: 8200,
                    3840: 270540800,
                    128: 270532608,
                    384: 270540808,
                    640: 8,
                    896: 2097152,
                    1152: 2105352,
                    1408: 268435464,
                    1664: 268443648,
                    1920: 8200,
                    2176: 2097160,
                    2432: 8192,
                    2688: 268443656,
                    2944: 270532616,
                    3200: 0,
                    3456: 270540800,
                    3712: 2105344,
                    3968: 268435456,
                    4096: 268443648,
                    4352: 270532616,
                    4608: 270540808,
                    4864: 8200,
                    5120: 2097152,
                    5376: 268435456,
                    5632: 268435464,
                    5888: 2105344,
                    6144: 2105352,
                    6400: 0,
                    6656: 8,
                    6912: 270532608,
                    7168: 8192,
                    7424: 268443656,
                    7680: 270540800,
                    7936: 2097160,
                    4224: 8,
                    4480: 2105344,
                    4736: 2097152,
                    4992: 268435464,
                    5248: 268443648,
                    5504: 8200,
                    5760: 270540808,
                    6016: 270532608,
                    6272: 270540800,
                    6528: 270532616,
                    6784: 8192,
                    7040: 2105352,
                    7296: 2097160,
                    7552: 0,
                    7808: 268435456,
                    8064: 268443656
                  }, {
                    0: 1048576,
                    16: 33555457,
                    32: 1024,
                    48: 1049601,
                    64: 34604033,
                    80: 0,
                    96: 1,
                    112: 34603009,
                    128: 33555456,
                    144: 1048577,
                    160: 33554433,
                    176: 34604032,
                    192: 34603008,
                    208: 1025,
                    224: 1049600,
                    240: 33554432,
                    8: 34603009,
                    24: 0,
                    40: 33555457,
                    56: 34604032,
                    72: 1048576,
                    88: 33554433,
                    104: 33554432,
                    120: 1025,
                    136: 1049601,
                    152: 33555456,
                    168: 34603008,
                    184: 1048577,
                    200: 1024,
                    216: 34604033,
                    232: 1,
                    248: 1049600,
                    256: 33554432,
                    272: 1048576,
                    288: 33555457,
                    304: 34603009,
                    320: 1048577,
                    336: 33555456,
                    352: 34604032,
                    368: 1049601,
                    384: 1025,
                    400: 34604033,
                    416: 1049600,
                    432: 1,
                    448: 0,
                    464: 34603008,
                    480: 33554433,
                    496: 1024,
                    264: 1049600,
                    280: 33555457,
                    296: 34603009,
                    312: 1,
                    328: 33554432,
                    344: 1048576,
                    360: 1025,
                    376: 34604032,
                    392: 33554433,
                    408: 34603008,
                    424: 0,
                    440: 34604033,
                    456: 1049601,
                    472: 1024,
                    488: 33555456,
                    504: 1048577
                  }, {
                    0: 134219808,
                    1: 131072,
                    2: 134217728,
                    3: 32,
                    4: 131104,
                    5: 134350880,
                    6: 134350848,
                    7: 2048,
                    8: 134348800,
                    9: 134219776,
                    10: 133120,
                    11: 134348832,
                    12: 2080,
                    13: 0,
                    14: 134217760,
                    15: 133152,
                    2147483648: 2048,
                    2147483649: 134350880,
                    2147483650: 134219808,
                    2147483651: 134217728,
                    2147483652: 134348800,
                    2147483653: 133120,
                    2147483654: 133152,
                    2147483655: 32,
                    2147483656: 134217760,
                    2147483657: 2080,
                    2147483658: 131104,
                    2147483659: 134350848,
                    2147483660: 0,
                    2147483661: 134348832,
                    2147483662: 134219776,
                    2147483663: 131072,
                    16: 133152,
                    17: 134350848,
                    18: 32,
                    19: 2048,
                    20: 134219776,
                    21: 134217760,
                    22: 134348832,
                    23: 131072,
                    24: 0,
                    25: 131104,
                    26: 134348800,
                    27: 134219808,
                    28: 134350880,
                    29: 133120,
                    30: 2080,
                    31: 134217728,
                    2147483664: 131072,
                    2147483665: 2048,
                    2147483666: 134348832,
                    2147483667: 133152,
                    2147483668: 32,
                    2147483669: 134348800,
                    2147483670: 134217728,
                    2147483671: 134219808,
                    2147483672: 134350880,
                    2147483673: 134217760,
                    2147483674: 134219776,
                    2147483675: 0,
                    2147483676: 133120,
                    2147483677: 2080,
                    2147483678: 131104,
                    2147483679: 134350848
                  }], y = [4160749569, 528482304, 33030144, 2064384, 129024, 8064, 504, 2147483679], p = l.DES = f.extend({
                    _doReset: function() {
                      for (var I = this._key, E = I.words, T = [], A = 0; A < 56; A++) {
                        var F = u[A] - 1;
                        T[A] = E[F >>> 5] >>> 31 - F % 32 & 1;
                      }
                      for (var b = this._subKeys = [], R = 0; R < 16; R++) {
                        for (var N = b[R] = [], U = a[R], A = 0; A < 24; A++)
                          N[A / 6 | 0] |= T[(h[A] - 1 + U) % 28] << 31 - A % 6, N[4 + (A / 6 | 0)] |= T[28 + (h[A + 24] - 1 + U) % 28] << 31 - A % 6;
                        N[0] = N[0] << 1 | N[0] >>> 31;
                        for (var A = 1; A < 7; A++)
                          N[A] = N[A] >>> (A - 1) * 4 + 3;
                        N[7] = N[7] << 5 | N[7] >>> 27;
                      }
                      for (var W = this._invSubKeys = [], A = 0; A < 16; A++)
                        W[A] = b[15 - A];
                    },
                    encryptBlock: function(I, E) {
                      this._doCryptBlock(I, E, this._subKeys);
                    },
                    decryptBlock: function(I, E) {
                      this._doCryptBlock(I, E, this._invSubKeys);
                    },
                    _doCryptBlock: function(I, E, T) {
                      this._lBlock = I[E], this._rBlock = I[E + 1], e.call(this, 4, 252645135), e.call(this, 16, 65535), m.call(this, 2, 858993459), m.call(this, 8, 16711935), e.call(this, 1, 1431655765);
                      for (var A = 0; A < 16; A++) {
                        for (var F = T[A], b = this._lBlock, R = this._rBlock, N = 0, U = 0; U < 8; U++)
                          N |= v[U][((R ^ F[U]) & y[U]) >>> 0];
                        this._lBlock = R, this._rBlock = b ^ N;
                      }
                      var W = this._lBlock;
                      this._lBlock = this._rBlock, this._rBlock = W, e.call(this, 1, 1431655765), m.call(this, 8, 16711935), m.call(this, 2, 858993459), e.call(this, 16, 65535), e.call(this, 4, 252645135), I[E] = this._lBlock, I[E + 1] = this._rBlock;
                    },
                    keySize: 64 / 32,
                    ivSize: 64 / 32,
                    blockSize: 64 / 32
                  });
                  function e(D, I) {
                    var E = (this._lBlock >>> D ^ this._rBlock) & I;
                    this._rBlock ^= E, this._lBlock ^= E << D;
                  }
                  function m(D, I) {
                    var E = (this._rBlock >>> D ^ this._lBlock) & I;
                    this._lBlock ^= E, this._rBlock ^= E << D;
                  }
                  r.DES = f._createHelper(p);
                  var w = l.TripleDES = f.extend({
                    _doReset: function() {
                      var I = this._key, E = I.words;
                      if (E.length !== 2 && E.length !== 4 && E.length < 6)
                        throw new Error("Invalid key length - 3DES requires the key length to be 64, 128, 192 or >192.");
                      var T = E.slice(0, 2), A = E.length < 4 ? E.slice(0, 2) : E.slice(2, 4), F = E.length < 6 ? E.slice(0, 2) : E.slice(4, 6);
                      this._des1 = p.createEncryptor(i.create(T)), this._des2 = p.createEncryptor(i.create(A)), this._des3 = p.createEncryptor(i.create(F));
                    },
                    encryptBlock: function(I, E) {
                      this._des1.encryptBlock(I, E), this._des2.decryptBlock(I, E), this._des3.encryptBlock(I, E);
                    },
                    decryptBlock: function(I, E) {
                      this._des3.decryptBlock(I, E), this._des2.encryptBlock(I, E), this._des1.decryptBlock(I, E);
                    },
                    keySize: 192 / 32,
                    ivSize: 64 / 32,
                    blockSize: 64 / 32
                  });
                  r.TripleDES = f._createHelper(w);
                }(), o.TripleDES;
              });
            }
          ),
          /***/
          23204: (
            /***/
            function(c, d, t) {
              t(18821), function(o, r) {
                c.exports = r(t(53264));
              }(void 0, function(o) {
                return function(r) {
                  var n = o, i = n.lib, f = i.Base, l = i.WordArray, u = n.x64 = {};
                  u.Word = f.extend({
                    /**
                     * Initializes a newly created 64-bit word.
                     *
                     * @param {number} high The high 32 bits.
                     * @param {number} low The low 32 bits.
                     *
                     * @example
                     *
                     *     var x64Word = CryptoJS.x64.Word.create(0x00010203, 0x04050607);
                     */
                    init: function(a, v) {
                      this.high = a, this.low = v;
                    }
                    /**
                     * Bitwise NOTs this word.
                     *
                     * @return {X64Word} A new x64-Word object after negating.
                     *
                     * @example
                     *
                     *     var negated = x64Word.not();
                     */
                    // not: function () {
                    // var high = ~this.high;
                    // var low = ~this.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Bitwise ANDs this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to AND with this word.
                     *
                     * @return {X64Word} A new x64-Word object after ANDing.
                     *
                     * @example
                     *
                     *     var anded = x64Word.and(anotherX64Word);
                     */
                    // and: function (word) {
                    // var high = this.high & word.high;
                    // var low = this.low & word.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Bitwise ORs this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to OR with this word.
                     *
                     * @return {X64Word} A new x64-Word object after ORing.
                     *
                     * @example
                     *
                     *     var ored = x64Word.or(anotherX64Word);
                     */
                    // or: function (word) {
                    // var high = this.high | word.high;
                    // var low = this.low | word.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Bitwise XORs this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to XOR with this word.
                     *
                     * @return {X64Word} A new x64-Word object after XORing.
                     *
                     * @example
                     *
                     *     var xored = x64Word.xor(anotherX64Word);
                     */
                    // xor: function (word) {
                    // var high = this.high ^ word.high;
                    // var low = this.low ^ word.low;
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Shifts this word n bits to the left.
                     *
                     * @param {number} n The number of bits to shift.
                     *
                     * @return {X64Word} A new x64-Word object after shifting.
                     *
                     * @example
                     *
                     *     var shifted = x64Word.shiftL(25);
                     */
                    // shiftL: function (n) {
                    // if (n < 32) {
                    // var high = (this.high << n) | (this.low >>> (32 - n));
                    // var low = this.low << n;
                    // } else {
                    // var high = this.low << (n - 32);
                    // var low = 0;
                    // }
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Shifts this word n bits to the right.
                     *
                     * @param {number} n The number of bits to shift.
                     *
                     * @return {X64Word} A new x64-Word object after shifting.
                     *
                     * @example
                     *
                     *     var shifted = x64Word.shiftR(7);
                     */
                    // shiftR: function (n) {
                    // if (n < 32) {
                    // var low = (this.low >>> n) | (this.high << (32 - n));
                    // var high = this.high >>> n;
                    // } else {
                    // var low = this.high >>> (n - 32);
                    // var high = 0;
                    // }
                    // return X64Word.create(high, low);
                    // },
                    /**
                     * Rotates this word n bits to the left.
                     *
                     * @param {number} n The number of bits to rotate.
                     *
                     * @return {X64Word} A new x64-Word object after rotating.
                     *
                     * @example
                     *
                     *     var rotated = x64Word.rotL(25);
                     */
                    // rotL: function (n) {
                    // return this.shiftL(n).or(this.shiftR(64 - n));
                    // },
                    /**
                     * Rotates this word n bits to the right.
                     *
                     * @param {number} n The number of bits to rotate.
                     *
                     * @return {X64Word} A new x64-Word object after rotating.
                     *
                     * @example
                     *
                     *     var rotated = x64Word.rotR(7);
                     */
                    // rotR: function (n) {
                    // return this.shiftR(n).or(this.shiftL(64 - n));
                    // },
                    /**
                     * Adds this word with the passed word.
                     *
                     * @param {X64Word} word The x64-Word to add with this word.
                     *
                     * @return {X64Word} A new x64-Word object after adding.
                     *
                     * @example
                     *
                     *     var added = x64Word.add(anotherX64Word);
                     */
                    // add: function (word) {
                    // var low = (this.low + word.low) | 0;
                    // var carry = (low >>> 0) < (this.low >>> 0) ? 1 : 0;
                    // var high = (this.high + word.high + carry) | 0;
                    // return X64Word.create(high, low);
                    // }
                  }), u.WordArray = f.extend({
                    /**
                     * Initializes a newly created word array.
                     *
                     * @param {Array} words (Optional) An array of CryptoJS.x64.Word objects.
                     * @param {number} sigBytes (Optional) The number of significant bytes in the words.
                     *
                     * @example
                     *
                     *     var wordArray = CryptoJS.x64.WordArray.create();
                     *
                     *     var wordArray = CryptoJS.x64.WordArray.create([
                     *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
                     *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
                     *     ]);
                     *
                     *     var wordArray = CryptoJS.x64.WordArray.create([
                     *         CryptoJS.x64.Word.create(0x00010203, 0x04050607),
                     *         CryptoJS.x64.Word.create(0x18191a1b, 0x1c1d1e1f)
                     *     ], 10);
                     */
                    init: function(a, v) {
                      a = this.words = a || [], v != r ? this.sigBytes = v : this.sigBytes = a.length * 8;
                    },
                    /**
                     * Converts this 64-bit word array to a 32-bit word array.
                     *
                     * @return {CryptoJS.lib.WordArray} This word array's data as a 32-bit word array.
                     *
                     * @example
                     *
                     *     var x32WordArray = x64WordArray.toX32();
                     */
                    toX32: function() {
                      for (var a = this.words, v = a.length, y = [], p = 0; p < v; p++) {
                        var e = a[p];
                        y.push(e.high), y.push(e.low);
                      }
                      return l.create(y, this.sigBytes);
                    },
                    /**
                     * Creates a copy of this word array.
                     *
                     * @return {X64WordArray} The clone.
                     *
                     * @example
                     *
                     *     var clone = x64WordArray.clone();
                     */
                    clone: function() {
                      for (var a = f.clone.call(this), v = a.words = this.words.slice(0), y = v.length, p = 0; p < y; p++)
                        v[p] = v[p].clone();
                      return a;
                    }
                  });
                }(), o;
              });
            }
          ),
          /***/
          41966: (
            /***/
            function(c, d, t) {
              t(52729), t(33694), t(44063), t(62031), t(56908), t(6208), t(54994), t(35054), t(33290), t(4845), t(39275), t(75668), t(61928), t(54883), t(10853), t(45007), t(68995), t(26364), t(86632), t(18821);
              function o(h, a) {
                var v = typeof Symbol < "u" && h[Symbol.iterator] || h["@@iterator"];
                if (v)
                  return (v = v.call(h)).next.bind(v);
                if (Array.isArray(h) || (v = r(h)) || a && h && typeof h.length == "number") {
                  v && (h = v);
                  var y = 0;
                  return function() {
                    return y >= h.length ? { done: !0 } : { done: !1, value: h[y++] };
                  };
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function r(h, a) {
                if (h) {
                  if (typeof h == "string")
                    return n(h, a);
                  var v = Object.prototype.toString.call(h).slice(8, -1);
                  if (v === "Object" && h.constructor && (v = h.constructor.name), v === "Map" || v === "Set")
                    return Array.from(h);
                  if (v === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(v))
                    return n(h, a);
                }
              }
              function n(h, a) {
                (a == null || a > h.length) && (a = h.length);
                for (var v = 0, y = new Array(a); v < a; v++)
                  y[v] = h[v];
                return y;
              }
              function i() {
                /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */
                i = function() {
                  return a;
                };
                var h, a = {}, v = Object.prototype, y = v.hasOwnProperty, p = Object.defineProperty || function(st, yt, G) {
                  st[yt] = G.value;
                }, e = typeof Symbol == "function" ? Symbol : {}, m = e.iterator || "@@iterator", w = e.asyncIterator || "@@asyncIterator", D = e.toStringTag || "@@toStringTag";
                function I(st, yt, G) {
                  return Object.defineProperty(st, yt, { value: G, enumerable: !0, configurable: !0, writable: !0 }), st[yt];
                }
                try {
                  I({}, "");
                } catch {
                  I = function(G, Et, k) {
                    return G[Et] = k;
                  };
                }
                function E(st, yt, G, Et) {
                  var k = yt && yt.prototype instanceof U ? yt : U, S = Object.create(k.prototype), L = new gt(Et || []);
                  return p(S, "_invoke", { value: It(st, G, L) }), S;
                }
                function T(st, yt, G) {
                  try {
                    return { type: "normal", arg: st.call(yt, G) };
                  } catch (Et) {
                    return { type: "throw", arg: Et };
                  }
                }
                a.wrap = E;
                var A = "suspendedStart", F = "suspendedYield", b = "executing", R = "completed", N = {};
                function U() {
                }
                function W() {
                }
                function J() {
                }
                var ht = {};
                I(ht, m, function() {
                  return this;
                });
                var K = Object.getPrototypeOf, nt = K && K(K(ut([])));
                nt && nt !== v && y.call(nt, m) && (ht = nt);
                var xt = J.prototype = U.prototype = Object.create(ht);
                function bt(st) {
                  ["next", "throw", "return"].forEach(function(yt) {
                    I(st, yt, function(G) {
                      return this._invoke(yt, G);
                    });
                  });
                }
                function Tt(st, yt) {
                  function G(k, S, L, V) {
                    var it = T(st[k], st, S);
                    if (it.type !== "throw") {
                      var tt = it.arg, _ = tt.value;
                      return _ && typeof _ == "object" && y.call(_, "__await") ? yt.resolve(_.__await).then(function(At) {
                        G("next", At, L, V);
                      }, function(At) {
                        G("throw", At, L, V);
                      }) : yt.resolve(_).then(function(At) {
                        tt.value = At, L(tt);
                      }, function(At) {
                        return G("throw", At, L, V);
                      });
                    }
                    V(it.arg);
                  }
                  var Et;
                  p(this, "_invoke", { value: function(S, L) {
                    function V() {
                      return new yt(function(it, tt) {
                        G(S, L, it, tt);
                      });
                    }
                    return Et = Et ? Et.then(V, V) : V();
                  } });
                }
                function It(st, yt, G) {
                  var Et = A;
                  return function(k, S) {
                    if (Et === b)
                      throw new Error("Generator is already running");
                    if (Et === R) {
                      if (k === "throw")
                        throw S;
                      return { value: h, done: !0 };
                    }
                    for (G.method = k, G.arg = S; ; ) {
                      var L = G.delegate;
                      if (L) {
                        var V = Lt(L, G);
                        if (V) {
                          if (V === N)
                            continue;
                          return V;
                        }
                      }
                      if (G.method === "next")
                        G.sent = G._sent = G.arg;
                      else if (G.method === "throw") {
                        if (Et === A)
                          throw Et = R, G.arg;
                        G.dispatchException(G.arg);
                      } else
                        G.method === "return" && G.abrupt("return", G.arg);
                      Et = b;
                      var it = T(st, yt, G);
                      if (it.type === "normal") {
                        if (Et = G.done ? R : F, it.arg === N)
                          continue;
                        return { value: it.arg, done: G.done };
                      }
                      it.type === "throw" && (Et = R, G.method = "throw", G.arg = it.arg);
                    }
                  };
                }
                function Lt(st, yt) {
                  var G = yt.method, Et = st.iterator[G];
                  if (Et === h)
                    return yt.delegate = null, G === "throw" && st.iterator.return && (yt.method = "return", yt.arg = h, Lt(st, yt), yt.method === "throw") || G !== "return" && (yt.method = "throw", yt.arg = new TypeError("The iterator does not provide a '" + G + "' method")), N;
                  var k = T(Et, st.iterator, yt.arg);
                  if (k.type === "throw")
                    return yt.method = "throw", yt.arg = k.arg, yt.delegate = null, N;
                  var S = k.arg;
                  return S ? S.done ? (yt[st.resultName] = S.value, yt.next = st.nextLoc, yt.method !== "return" && (yt.method = "next", yt.arg = h), yt.delegate = null, N) : S : (yt.method = "throw", yt.arg = new TypeError("iterator result is not an object"), yt.delegate = null, N);
                }
                function Ut(st) {
                  var yt = { tryLoc: st[0] };
                  1 in st && (yt.catchLoc = st[1]), 2 in st && (yt.finallyLoc = st[2], yt.afterLoc = st[3]), this.tryEntries.push(yt);
                }
                function $(st) {
                  var yt = st.completion || {};
                  yt.type = "normal", delete yt.arg, st.completion = yt;
                }
                function gt(st) {
                  this.tryEntries = [{ tryLoc: "root" }], st.forEach(Ut, this), this.reset(!0);
                }
                function ut(st) {
                  if (st || st === "") {
                    var yt = st[m];
                    if (yt)
                      return yt.call(st);
                    if (typeof st.next == "function")
                      return st;
                    if (!isNaN(st.length)) {
                      var G = -1, Et = function k() {
                        for (; ++G < st.length; )
                          if (y.call(st, G))
                            return k.value = st[G], k.done = !1, k;
                        return k.value = h, k.done = !0, k;
                      };
                      return Et.next = Et;
                    }
                  }
                  throw new TypeError(typeof st + " is not iterable");
                }
                return W.prototype = J, p(xt, "constructor", { value: J, configurable: !0 }), p(J, "constructor", { value: W, configurable: !0 }), W.displayName = I(J, D, "GeneratorFunction"), a.isGeneratorFunction = function(st) {
                  var yt = typeof st == "function" && st.constructor;
                  return !!yt && (yt === W || (yt.displayName || yt.name) === "GeneratorFunction");
                }, a.mark = function(st) {
                  return Object.setPrototypeOf ? Object.setPrototypeOf(st, J) : (st.__proto__ = J, I(st, D, "GeneratorFunction")), st.prototype = Object.create(xt), st;
                }, a.awrap = function(st) {
                  return { __await: st };
                }, bt(Tt.prototype), I(Tt.prototype, w, function() {
                  return this;
                }), a.AsyncIterator = Tt, a.async = function(st, yt, G, Et, k) {
                  k === void 0 && (k = Promise);
                  var S = new Tt(E(st, yt, G, Et), k);
                  return a.isGeneratorFunction(yt) ? S : S.next().then(function(L) {
                    return L.done ? L.value : S.next();
                  });
                }, bt(xt), I(xt, D, "Generator"), I(xt, m, function() {
                  return this;
                }), I(xt, "toString", function() {
                  return "[object Generator]";
                }), a.keys = function(st) {
                  var yt = Object(st), G = [];
                  for (var Et in yt)
                    G.push(Et);
                  return G.reverse(), function k() {
                    for (; G.length; ) {
                      var S = G.pop();
                      if (S in yt)
                        return k.value = S, k.done = !1, k;
                    }
                    return k.done = !0, k;
                  };
                }, a.values = ut, gt.prototype = { constructor: gt, reset: function(yt) {
                  if (this.prev = 0, this.next = 0, this.sent = this._sent = h, this.done = !1, this.delegate = null, this.method = "next", this.arg = h, this.tryEntries.forEach($), !yt)
                    for (var G in this)
                      G.charAt(0) === "t" && y.call(this, G) && !isNaN(+G.slice(1)) && (this[G] = h);
                }, stop: function() {
                  this.done = !0;
                  var yt = this.tryEntries[0].completion;
                  if (yt.type === "throw")
                    throw yt.arg;
                  return this.rval;
                }, dispatchException: function(yt) {
                  if (this.done)
                    throw yt;
                  var G = this;
                  function Et(tt, _) {
                    return L.type = "throw", L.arg = yt, G.next = tt, _ && (G.method = "next", G.arg = h), !!_;
                  }
                  for (var k = this.tryEntries.length - 1; k >= 0; --k) {
                    var S = this.tryEntries[k], L = S.completion;
                    if (S.tryLoc === "root")
                      return Et("end");
                    if (S.tryLoc <= this.prev) {
                      var V = y.call(S, "catchLoc"), it = y.call(S, "finallyLoc");
                      if (V && it) {
                        if (this.prev < S.catchLoc)
                          return Et(S.catchLoc, !0);
                        if (this.prev < S.finallyLoc)
                          return Et(S.finallyLoc);
                      } else if (V) {
                        if (this.prev < S.catchLoc)
                          return Et(S.catchLoc, !0);
                      } else {
                        if (!it)
                          throw new Error("try statement without catch or finally");
                        if (this.prev < S.finallyLoc)
                          return Et(S.finallyLoc);
                      }
                    }
                  }
                }, abrupt: function(yt, G) {
                  for (var Et = this.tryEntries.length - 1; Et >= 0; --Et) {
                    var k = this.tryEntries[Et];
                    if (k.tryLoc <= this.prev && y.call(k, "finallyLoc") && this.prev < k.finallyLoc) {
                      var S = k;
                      break;
                    }
                  }
                  S && (yt === "break" || yt === "continue") && S.tryLoc <= G && G <= S.finallyLoc && (S = null);
                  var L = S ? S.completion : {};
                  return L.type = yt, L.arg = G, S ? (this.method = "next", this.next = S.finallyLoc, N) : this.complete(L);
                }, complete: function(yt, G) {
                  if (yt.type === "throw")
                    throw yt.arg;
                  return yt.type === "break" || yt.type === "continue" ? this.next = yt.arg : yt.type === "return" ? (this.rval = this.arg = yt.arg, this.method = "return", this.next = "end") : yt.type === "normal" && G && (this.next = G), N;
                }, finish: function(yt) {
                  for (var G = this.tryEntries.length - 1; G >= 0; --G) {
                    var Et = this.tryEntries[G];
                    if (Et.finallyLoc === yt)
                      return this.complete(Et.completion, Et.afterLoc), $(Et), N;
                  }
                }, catch: function(yt) {
                  for (var G = this.tryEntries.length - 1; G >= 0; --G) {
                    var Et = this.tryEntries[G];
                    if (Et.tryLoc === yt) {
                      var k = Et.completion;
                      if (k.type === "throw") {
                        var S = k.arg;
                        $(Et);
                      }
                      return S;
                    }
                  }
                  throw new Error("illegal catch attempt");
                }, delegateYield: function(yt, G, Et) {
                  return this.delegate = { iterator: ut(yt), resultName: G, nextLoc: Et }, this.method === "next" && (this.arg = h), N;
                } }, a;
              }
              var f = 1, l = 0, u = /* @__PURE__ */ function() {
                function h(v) {
                  this.stateTable = v.stateTable, this.accepting = v.accepting, this.tags = v.tags;
                }
                var a = h.prototype;
                return a.match = function(y) {
                  var p, e = this;
                  return p = {}, p[Symbol.iterator] = /* @__PURE__ */ i().mark(function m() {
                    var w, D, I, E, T, A;
                    return i().wrap(function(b) {
                      for (; ; )
                        switch (b.prev = b.next) {
                          case 0:
                            w = f, D = null, I = null, E = null, T = 0;
                          case 5:
                            if (!(T < y.length)) {
                              b.next = 21;
                              break;
                            }
                            if (A = y[T], E = w, w = e.stateTable[w][A], w !== l) {
                              b.next = 15;
                              break;
                            }
                            if (!(D != null && I != null && I >= D)) {
                              b.next = 13;
                              break;
                            }
                            return b.next = 13, [D, I, e.tags[E]];
                          case 13:
                            w = e.stateTable[f][A], D = null;
                          case 15:
                            w !== l && D == null && (D = T), e.accepting[w] && (I = T), w === l && (w = f);
                          case 18:
                            T++, b.next = 5;
                            break;
                          case 21:
                            if (!(D != null && I != null && I >= D)) {
                              b.next = 24;
                              break;
                            }
                            return b.next = 24, [D, I, e.tags[w]];
                          case 24:
                          case "end":
                            return b.stop();
                        }
                    }, m);
                  }), p;
                }, a.apply = function(y, p) {
                  for (var e = o(this.match(y)), m; !(m = e()).done; )
                    for (var w = m.value, D = w[0], I = w[1], E = w[2], T = o(E), A; !(A = T()).done; ) {
                      var F = A.value;
                      typeof p[F] == "function" && p[F](D, I, y.slice(D, I + 1));
                    }
                }, h;
              }();
              c.exports = u;
            }
          ),
          /***/
          45968: (
            /***/
            function(c, d, t) {
              var o = t(43060).Buffer;
              t(10853), t(35054), t(18821), t(18183);
              var r = t(52773), n = t(63339);
              c.exports = /* @__PURE__ */ function() {
                i.decode = function(u, h) {
                  return r.readFile(u, function(a, v) {
                    var y = new i(v);
                    return y.decode(function(p) {
                      return h(p);
                    });
                  });
                }, i.load = function(u) {
                  var h = r.readFileSync(u);
                  return new i(h);
                };
                function i(l) {
                  var u;
                  for (this.data = l, this.pos = 8, this.palette = [], this.imgData = [], this.transparency = {}, this.text = {}; ; ) {
                    var h = this.readUInt32(), a = "";
                    for (u = 0; u < 4; u++)
                      a += String.fromCharCode(this.data[this.pos++]);
                    switch (a) {
                      case "IHDR":
                        this.width = this.readUInt32(), this.height = this.readUInt32(), this.bits = this.data[this.pos++], this.colorType = this.data[this.pos++], this.compressionMethod = this.data[this.pos++], this.filterMethod = this.data[this.pos++], this.interlaceMethod = this.data[this.pos++];
                        break;
                      case "PLTE":
                        this.palette = this.read(h);
                        break;
                      case "IDAT":
                        for (u = 0; u < h; u++)
                          this.imgData.push(this.data[this.pos++]);
                        break;
                      case "tRNS":
                        switch (this.transparency = {}, this.colorType) {
                          case 3:
                            this.transparency.indexed = this.read(h);
                            var v = 255 - this.transparency.indexed.length;
                            if (v > 0)
                              for (u = 0; u < v; u++)
                                this.transparency.indexed.push(255);
                            break;
                          case 0:
                            this.transparency.grayscale = this.read(h)[0];
                            break;
                          case 2:
                            this.transparency.rgb = this.read(h);
                            break;
                        }
                        break;
                      case "tEXt":
                        var y = this.read(h), p = y.indexOf(0), e = String.fromCharCode.apply(String, y.slice(0, p));
                        this.text[e] = String.fromCharCode.apply(String, y.slice(p + 1));
                        break;
                      case "IEND":
                        switch (this.colorType) {
                          case 0:
                          case 3:
                          case 4:
                            this.colors = 1;
                            break;
                          case 2:
                          case 6:
                            this.colors = 3;
                            break;
                        }
                        this.hasAlphaChannel = [4, 6].includes(this.colorType);
                        var m = this.colors + (this.hasAlphaChannel ? 1 : 0);
                        switch (this.pixelBitlength = this.bits * m, this.colors) {
                          case 1:
                            this.colorSpace = "DeviceGray";
                            break;
                          case 3:
                            this.colorSpace = "DeviceRGB";
                            break;
                        }
                        this.imgData = new o(this.imgData);
                        return;
                      default:
                        this.pos += h;
                    }
                    if (this.pos += 4, this.pos > this.data.length)
                      throw new Error("Incomplete or corrupt PNG file");
                  }
                }
                var f = i.prototype;
                return f.read = function(u) {
                  for (var h = new Array(u), a = 0; a < u; a++)
                    h[a] = this.data[this.pos++];
                  return h;
                }, f.readUInt32 = function() {
                  var u = this.data[this.pos++] << 24, h = this.data[this.pos++] << 16, a = this.data[this.pos++] << 8, v = this.data[this.pos++];
                  return u | h | a | v;
                }, f.readUInt16 = function() {
                  var u = this.data[this.pos++] << 8, h = this.data[this.pos++];
                  return u | h;
                }, f.decodePixels = function(u) {
                  var h = this;
                  return n.inflate(this.imgData, function(a, v) {
                    if (a)
                      throw a;
                    var y = h.width, p = h.height, e = h.pixelBitlength / 8, m = new o(y * p * e), w = v.length, D = 0;
                    function I(E, T, A, F, b) {
                      b === void 0 && (b = !1);
                      for (var R = Math.ceil((y - E) / A), N = Math.ceil((p - T) / F), U = e * R, W = b ? m : new o(U * N), J = 0, ht = 0; J < N && D < w; ) {
                        var K, nt, xt, bt, Tt;
                        switch (v[D++]) {
                          case 0:
                            for (xt = 0; xt < U; xt++)
                              W[ht++] = v[D++];
                            break;
                          case 1:
                            for (xt = 0; xt < U; xt++)
                              K = v[D++], bt = xt < e ? 0 : W[ht - e], W[ht++] = (K + bt) % 256;
                            break;
                          case 2:
                            for (xt = 0; xt < U; xt++)
                              K = v[D++], nt = (xt - xt % e) / e, Tt = J && W[(J - 1) * U + nt * e + xt % e], W[ht++] = (Tt + K) % 256;
                            break;
                          case 3:
                            for (xt = 0; xt < U; xt++)
                              K = v[D++], nt = (xt - xt % e) / e, bt = xt < e ? 0 : W[ht - e], Tt = J && W[(J - 1) * U + nt * e + xt % e], W[ht++] = (K + Math.floor((bt + Tt) / 2)) % 256;
                            break;
                          case 4:
                            for (xt = 0; xt < U; xt++) {
                              var It, Lt;
                              K = v[D++], nt = (xt - xt % e) / e, bt = xt < e ? 0 : W[ht - e], J === 0 ? Tt = Lt = 0 : (Tt = W[(J - 1) * U + nt * e + xt % e], Lt = nt && W[(J - 1) * U + (nt - 1) * e + xt % e]);
                              var Ut = bt + Tt - Lt, $ = Math.abs(Ut - bt), gt = Math.abs(Ut - Tt), ut = Math.abs(Ut - Lt);
                              $ <= gt && $ <= ut ? It = bt : gt <= ut ? It = Tt : It = Lt, W[ht++] = (K + It) % 256;
                            }
                            break;
                          default:
                            throw new Error("Invalid filter algorithm: " + v[D - 1]);
                        }
                        if (!b) {
                          var st = ((T + J * F) * y + E) * e, yt = J * U;
                          for (xt = 0; xt < R; xt++) {
                            for (var G = 0; G < e; G++)
                              m[st++] = W[yt++];
                            st += (A - 1) * e;
                          }
                        }
                        J++;
                      }
                    }
                    return h.interlaceMethod === 1 ? (I(0, 0, 8, 8), I(4, 0, 8, 8), I(0, 4, 4, 8), I(2, 0, 4, 4), I(0, 2, 2, 4), I(1, 0, 2, 2), I(0, 1, 1, 2)) : I(0, 0, 1, 1, !0), u(m);
                  });
                }, f.decodePalette = function() {
                  for (var u = this.palette, h = u.length, a = this.transparency.indexed || [], v = new o(a.length + h), y = 0, p = 0, e = 0; e < h; e += 3) {
                    var m;
                    v[y++] = u[e], v[y++] = u[e + 1], v[y++] = u[e + 2], v[y++] = (m = a[p++]) != null ? m : 255;
                  }
                  return v;
                }, f.copyToImageData = function(u, h) {
                  var a, v, y = this.colors, p = null, e = this.hasAlphaChannel;
                  this.palette.length && (p = this._decodedPalette || (this._decodedPalette = this.decodePalette()), y = 4, e = !0);
                  var m = u.data || u, w = m.length, D = p || h, I = a = 0;
                  if (y === 1)
                    for (; I < w; ) {
                      v = p ? h[I / 4] * 4 : a;
                      var E = D[v++];
                      m[I++] = E, m[I++] = E, m[I++] = E, m[I++] = e ? D[v++] : 255, a = v;
                    }
                  else
                    for (; I < w; )
                      v = p ? h[I / 4] * 4 : a, m[I++] = D[v++], m[I++] = D[v++], m[I++] = D[v++], m[I++] = e ? D[v++] : 255, a = v;
                }, f.decode = function(u) {
                  var h = this, a = new o(this.width * this.height * 4);
                  return this.decodePixels(function(v) {
                    return h.copyToImageData(a, v), u(a);
                  });
                }, i;
              }();
            }
          ),
          /***/
          85543: (
            /***/
            function(c, d, t) {
              var o = t(82530);
              t(26875), t(54883), t(10853), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(83382);
              var r = t(43060), n = r.Buffer, i = {}, f;
              for (f in r)
                r.hasOwnProperty(f) && (f === "SlowBuffer" || f === "Buffer" || (i[f] = r[f]));
              var l = i.Buffer = {};
              for (f in n)
                n.hasOwnProperty(f) && (f === "allocUnsafe" || f === "allocUnsafeSlow" || (l[f] = n[f]));
              if (i.Buffer.prototype = n.prototype, (!l.from || l.from === Uint8Array.from) && (l.from = function(u, h, a) {
                if (typeof u == "number")
                  throw new TypeError('The "value" argument must not be of type number. Received type ' + typeof u);
                if (u && typeof u.length > "u")
                  throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, or Array-like Object. Received type " + typeof u);
                return n(u, h, a);
              }), l.alloc || (l.alloc = function(u, h, a) {
                if (typeof u != "number")
                  throw new TypeError('The "size" argument must be of type number. Received type ' + typeof u);
                if (u < 0 || u >= 2147483648)
                  throw new RangeError('The value "' + u + '" is invalid for option "size"');
                var v = n(u);
                return !h || h.length === 0 ? v.fill(0) : typeof a == "string" ? v.fill(h, a) : v.fill(h), v;
              }), !i.kStringMaxLength)
                try {
                  i.kStringMaxLength = o.binding("buffer").kStringMaxLength;
                } catch {
                }
              i.constants || (i.constants = {
                MAX_LENGTH: i.kMaxLength
              }, i.kStringMaxLength && (i.constants.MAX_STRING_LENGTH = i.kStringMaxLength)), c.exports = i;
            }
          ),
          /***/
          55681: (
            /***/
            function(c, d, t) {
              t(80044), t(26364), t(19701), t(10853), t(80238), t(6208), t(12938), t(16543), t(33142), t(86632), t(80174), t(18821);
              function o(w, D) {
                var I = Object.keys(w);
                if (Object.getOwnPropertySymbols) {
                  var E = Object.getOwnPropertySymbols(w);
                  D && (E = E.filter(function(T) {
                    return Object.getOwnPropertyDescriptor(w, T).enumerable;
                  })), I.push.apply(I, E);
                }
                return I;
              }
              function r(w) {
                for (var D = 1; D < arguments.length; D++) {
                  var I = arguments[D] != null ? arguments[D] : {};
                  D % 2 ? o(Object(I), !0).forEach(function(E) {
                    n(w, E, I[E]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(w, Object.getOwnPropertyDescriptors(I)) : o(Object(I)).forEach(function(E) {
                    Object.defineProperty(w, E, Object.getOwnPropertyDescriptor(I, E));
                  });
                }
                return w;
              }
              function n(w, D, I) {
                return D = u(D), D in w ? Object.defineProperty(w, D, {
                  value: I,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0
                }) : w[D] = I, w;
              }
              function i(w, D) {
                if (!(w instanceof D))
                  throw new TypeError("Cannot call a class as a function");
              }
              function f(w, D) {
                for (var I = 0; I < D.length; I++) {
                  var E = D[I];
                  E.enumerable = E.enumerable || !1, E.configurable = !0, "value" in E && (E.writable = !0), Object.defineProperty(w, u(E.key), E);
                }
              }
              function l(w, D, I) {
                return D && f(w.prototype, D), I && f(w, I), Object.defineProperty(w, "prototype", {
                  writable: !1
                }), w;
              }
              function u(w) {
                var D = h(w, "string");
                return typeof D == "symbol" ? D : String(D);
              }
              function h(w, D) {
                if (typeof w != "object" || w === null)
                  return w;
                var I = w[Symbol.toPrimitive];
                if (I !== void 0) {
                  var E = I.call(w, D || "default");
                  if (typeof E != "object")
                    return E;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (D === "string" ? String : Number)(w);
              }
              var a = t(43060), v = a.Buffer, y = t(69862), p = y.inspect, e = p && p.custom || "inspect";
              function m(w, D, I) {
                v.prototype.copy.call(w, D, I);
              }
              c.exports = /* @__PURE__ */ function() {
                function w() {
                  i(this, w), this.head = null, this.tail = null, this.length = 0;
                }
                return l(w, [{
                  key: "push",
                  value: function(I) {
                    var E = {
                      data: I,
                      next: null
                    };
                    this.length > 0 ? this.tail.next = E : this.head = E, this.tail = E, ++this.length;
                  }
                }, {
                  key: "unshift",
                  value: function(I) {
                    var E = {
                      data: I,
                      next: this.head
                    };
                    this.length === 0 && (this.tail = E), this.head = E, ++this.length;
                  }
                }, {
                  key: "shift",
                  value: function() {
                    if (this.length !== 0) {
                      var I = this.head.data;
                      return this.length === 1 ? this.head = this.tail = null : this.head = this.head.next, --this.length, I;
                    }
                  }
                }, {
                  key: "clear",
                  value: function() {
                    this.head = this.tail = null, this.length = 0;
                  }
                }, {
                  key: "join",
                  value: function(I) {
                    if (this.length === 0)
                      return "";
                    for (var E = this.head, T = "" + E.data; E = E.next; )
                      T += I + E.data;
                    return T;
                  }
                }, {
                  key: "concat",
                  value: function(I) {
                    if (this.length === 0)
                      return v.alloc(0);
                    for (var E = v.allocUnsafe(I >>> 0), T = this.head, A = 0; T; )
                      m(T.data, E, A), A += T.data.length, T = T.next;
                    return E;
                  }
                  // Consumes a specified amount of bytes or characters from the buffered data.
                }, {
                  key: "consume",
                  value: function(I, E) {
                    var T;
                    return I < this.head.data.length ? (T = this.head.data.slice(0, I), this.head.data = this.head.data.slice(I)) : I === this.head.data.length ? T = this.shift() : T = E ? this._getString(I) : this._getBuffer(I), T;
                  }
                }, {
                  key: "first",
                  value: function() {
                    return this.head.data;
                  }
                  // Consumes a specified amount of characters from the buffered data.
                }, {
                  key: "_getString",
                  value: function(I) {
                    var E = this.head, T = 1, A = E.data;
                    for (I -= A.length; E = E.next; ) {
                      var F = E.data, b = I > F.length ? F.length : I;
                      if (b === F.length ? A += F : A += F.slice(0, I), I -= b, I === 0) {
                        b === F.length ? (++T, E.next ? this.head = E.next : this.head = this.tail = null) : (this.head = E, E.data = F.slice(b));
                        break;
                      }
                      ++T;
                    }
                    return this.length -= T, A;
                  }
                  // Consumes a specified amount of bytes from the buffered data.
                }, {
                  key: "_getBuffer",
                  value: function(I) {
                    var E = v.allocUnsafe(I), T = this.head, A = 1;
                    for (T.data.copy(E), I -= T.data.length; T = T.next; ) {
                      var F = T.data, b = I > F.length ? F.length : I;
                      if (F.copy(E, E.length - I, 0, b), I -= b, I === 0) {
                        b === F.length ? (++A, T.next ? this.head = T.next : this.head = this.tail = null) : (this.head = T, T.data = F.slice(b));
                        break;
                      }
                      ++A;
                    }
                    return this.length -= A, E;
                  }
                  // Make sure the linked list only shows the minimal necessary information.
                }, {
                  key: e,
                  value: function(I, E) {
                    return p(this, r(r({}, E), {}, {
                      // Only inspect one level.
                      depth: 0,
                      // It should not recurse.
                      customInspect: !1
                    }));
                  }
                }]), w;
              }();
            }
          ),
          /***/
          11504: (
            /***/
            function(c, d, t) {
              t(83382);
              var o = t(43060), r = o.Buffer;
              function n(f, l) {
                for (var u in f)
                  l[u] = f[u];
              }
              r.from && r.alloc && r.allocUnsafe && r.allocUnsafeSlow ? c.exports = o : (n(o, d), d.Buffer = i);
              function i(f, l, u) {
                return r(f, l, u);
              }
              n(r, i), i.from = function(f, l, u) {
                if (typeof f == "number")
                  throw new TypeError("Argument must not be a number");
                return r(f, l, u);
              }, i.alloc = function(f, l, u) {
                if (typeof f != "number")
                  throw new TypeError("Argument must be a number");
                var h = r(f);
                return l !== void 0 ? typeof u == "string" ? h.fill(l, u) : h.fill(l) : h.fill(0), h;
              }, i.allocUnsafe = function(f) {
                if (typeof f != "number")
                  throw new TypeError("Argument must be a number");
                return r(f);
              }, i.allocUnsafeSlow = function(f) {
                if (typeof f != "number")
                  throw new TypeError("Argument must be a number");
                return o.SlowBuffer(f);
              };
            }
          ),
          /***/
          67827: (
            /***/
            function(c, d, t) {
              t(18821), t(54883), t(10853), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(35779);
              var o = t(84346), r = t(84962), n = r.swap32LE, i = 6 + 5, f = 5, l = i - f, u = 65536 >> i, h = 1 << l, a = h - 1, v = 2, y = 1 << f, p = y - 1, e = 65536 >> f, m = 1024 >> f, w = e + m, D = w, I = 32, E = D + I, T = 1 << v, A = /* @__PURE__ */ function() {
                function F(R) {
                  var N = typeof R.readUInt32BE == "function" && typeof R.slice == "function";
                  if (N || R instanceof Uint8Array) {
                    var U;
                    if (N)
                      this.highStart = R.readUInt32LE(0), this.errorValue = R.readUInt32LE(4), U = R.readUInt32LE(8), R = R.slice(12);
                    else {
                      var W = new DataView(R.buffer);
                      this.highStart = W.getUint32(0, !0), this.errorValue = W.getUint32(4, !0), U = W.getUint32(8, !0), R = R.subarray(12);
                    }
                    R = o(R, new Uint8Array(U)), R = o(R, new Uint8Array(U)), n(R), this.data = new Uint32Array(R.buffer);
                  } else {
                    var J = R;
                    this.data = J.data, this.highStart = J.highStart, this.errorValue = J.errorValue;
                  }
                }
                var b = F.prototype;
                return b.get = function(N) {
                  var U;
                  return N < 0 || N > 1114111 ? this.errorValue : N < 55296 || N > 56319 && N <= 65535 ? (U = (this.data[N >> f] << v) + (N & p), this.data[U]) : N <= 65535 ? (U = (this.data[e + (N - 55296 >> f)] << v) + (N & p), this.data[U]) : N < this.highStart ? (U = this.data[E - u + (N >> i)], U = this.data[U + (N >> f & a)], U = (U << v) + (N & p), this.data[U]) : this.data[this.data.length - T];
                }, F;
              }();
              c.exports = A;
            }
          ),
          /***/
          84962: (
            /***/
            function(c, d, t) {
              t(54883), t(10853), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(35779);
              var o = new Uint8Array(new Uint32Array([305419896]).buffer)[0] === 18, r = function(l, u, h) {
                var a = l[u];
                l[u] = l[h], l[h] = a;
              }, n = function(l) {
                for (var u = l.length, h = 0; h < u; h += 4)
                  r(l, h, h + 3), r(l, h + 1, h + 2);
              }, i = function(l) {
                o && n(l);
              };
              c.exports = {
                swap32LE: i
              };
            }
          ),
          /***/
          31589: (
            /***/
            function(c, d, t) {
              var o = t(60902);
              c.exports = o;
            }
          ),
          /***/
          60902: (
            /***/
            function(c, d, t) {
              c = t.nmd(c), t(54994), t(80044), t(29897), t(39275), t(75668), t(47639), t(22321), t(18821), t(80174), t(67838), t(55862), t(54883), t(10853), t(68995), t(86125), t(83382);
              var o = function(n, i, f, l, u) {
                var h = {
                  aliceblue: [240, 248, 255],
                  antiquewhite: [250, 235, 215],
                  aqua: [0, 255, 255],
                  aquamarine: [127, 255, 212],
                  azure: [240, 255, 255],
                  beige: [245, 245, 220],
                  bisque: [255, 228, 196],
                  black: [0, 0, 0],
                  blanchedalmond: [255, 235, 205],
                  blue: [0, 0, 255],
                  blueviolet: [138, 43, 226],
                  brown: [165, 42, 42],
                  burlywood: [222, 184, 135],
                  cadetblue: [95, 158, 160],
                  chartreuse: [127, 255, 0],
                  chocolate: [210, 105, 30],
                  coral: [255, 127, 80],
                  cornflowerblue: [100, 149, 237],
                  cornsilk: [255, 248, 220],
                  crimson: [220, 20, 60],
                  cyan: [0, 255, 255],
                  darkblue: [0, 0, 139],
                  darkcyan: [0, 139, 139],
                  darkgoldenrod: [184, 134, 11],
                  darkgray: [169, 169, 169],
                  darkgrey: [169, 169, 169],
                  darkgreen: [0, 100, 0],
                  darkkhaki: [189, 183, 107],
                  darkmagenta: [139, 0, 139],
                  darkolivegreen: [85, 107, 47],
                  darkorange: [255, 140, 0],
                  darkorchid: [153, 50, 204],
                  darkred: [139, 0, 0],
                  darksalmon: [233, 150, 122],
                  darkseagreen: [143, 188, 143],
                  darkslateblue: [72, 61, 139],
                  darkslategray: [47, 79, 79],
                  darkslategrey: [47, 79, 79],
                  darkturquoise: [0, 206, 209],
                  darkviolet: [148, 0, 211],
                  deeppink: [255, 20, 147],
                  deepskyblue: [0, 191, 255],
                  dimgray: [105, 105, 105],
                  dimgrey: [105, 105, 105],
                  dodgerblue: [30, 144, 255],
                  firebrick: [178, 34, 34],
                  floralwhite: [255, 250, 240],
                  forestgreen: [34, 139, 34],
                  fuchsia: [255, 0, 255],
                  gainsboro: [220, 220, 220],
                  ghostwhite: [248, 248, 255],
                  gold: [255, 215, 0],
                  goldenrod: [218, 165, 32],
                  gray: [128, 128, 128],
                  grey: [128, 128, 128],
                  green: [0, 128, 0],
                  greenyellow: [173, 255, 47],
                  honeydew: [240, 255, 240],
                  hotpink: [255, 105, 180],
                  indianred: [205, 92, 92],
                  indigo: [75, 0, 130],
                  ivory: [255, 255, 240],
                  khaki: [240, 230, 140],
                  lavender: [230, 230, 250],
                  lavenderblush: [255, 240, 245],
                  lawngreen: [124, 252, 0],
                  lemonchiffon: [255, 250, 205],
                  lightblue: [173, 216, 230],
                  lightcoral: [240, 128, 128],
                  lightcyan: [224, 255, 255],
                  lightgoldenrodyellow: [250, 250, 210],
                  lightgray: [211, 211, 211],
                  lightgrey: [211, 211, 211],
                  lightgreen: [144, 238, 144],
                  lightpink: [255, 182, 193],
                  lightsalmon: [255, 160, 122],
                  lightseagreen: [32, 178, 170],
                  lightskyblue: [135, 206, 250],
                  lightslategray: [119, 136, 153],
                  lightslategrey: [119, 136, 153],
                  lightsteelblue: [176, 196, 222],
                  lightyellow: [255, 255, 224],
                  lime: [0, 255, 0],
                  limegreen: [50, 205, 50],
                  linen: [250, 240, 230],
                  magenta: [255, 0, 255],
                  maroon: [128, 0, 0],
                  mediumaquamarine: [102, 205, 170],
                  mediumblue: [0, 0, 205],
                  mediumorchid: [186, 85, 211],
                  mediumpurple: [147, 112, 219],
                  mediumseagreen: [60, 179, 113],
                  mediumslateblue: [123, 104, 238],
                  mediumspringgreen: [0, 250, 154],
                  mediumturquoise: [72, 209, 204],
                  mediumvioletred: [199, 21, 133],
                  midnightblue: [25, 25, 112],
                  mintcream: [245, 255, 250],
                  mistyrose: [255, 228, 225],
                  moccasin: [255, 228, 181],
                  navajowhite: [255, 222, 173],
                  navy: [0, 0, 128],
                  oldlace: [253, 245, 230],
                  olive: [128, 128, 0],
                  olivedrab: [107, 142, 35],
                  orange: [255, 165, 0],
                  orangered: [255, 69, 0],
                  orchid: [218, 112, 214],
                  palegoldenrod: [238, 232, 170],
                  palegreen: [152, 251, 152],
                  paleturquoise: [175, 238, 238],
                  palevioletred: [219, 112, 147],
                  papayawhip: [255, 239, 213],
                  peachpuff: [255, 218, 185],
                  peru: [205, 133, 63],
                  pink: [255, 192, 203],
                  plum: [221, 160, 221],
                  powderblue: [176, 224, 230],
                  purple: [128, 0, 128],
                  rebeccapurple: [102, 51, 153],
                  red: [255, 0, 0],
                  rosybrown: [188, 143, 143],
                  royalblue: [65, 105, 225],
                  saddlebrown: [139, 69, 19],
                  salmon: [250, 128, 114],
                  sandybrown: [244, 164, 96],
                  seagreen: [46, 139, 87],
                  seashell: [255, 245, 238],
                  sienna: [160, 82, 45],
                  silver: [192, 192, 192],
                  skyblue: [135, 206, 235],
                  slateblue: [106, 90, 205],
                  slategray: [112, 128, 144],
                  slategrey: [112, 128, 144],
                  snow: [255, 250, 250],
                  springgreen: [0, 255, 127],
                  steelblue: [70, 130, 180],
                  tan: [210, 180, 140],
                  teal: [0, 128, 128],
                  thistle: [216, 191, 216],
                  tomato: [255, 99, 71],
                  turquoise: [64, 224, 208],
                  violet: [238, 130, 238],
                  wheat: [245, 222, 179],
                  white: [255, 255, 255],
                  whitesmoke: [245, 245, 245],
                  yellow: [255, 255, 0]
                }, a = {
                  black: [h.black, 1],
                  white: [h.white, 1],
                  transparent: [h.black, 0]
                }, v = {
                  quot: 34,
                  amp: 38,
                  lt: 60,
                  gt: 62,
                  apos: 39,
                  OElig: 338,
                  oelig: 339,
                  Scaron: 352,
                  scaron: 353,
                  Yuml: 376,
                  circ: 710,
                  tilde: 732,
                  ensp: 8194,
                  emsp: 8195,
                  thinsp: 8201,
                  zwnj: 8204,
                  zwj: 8205,
                  lrm: 8206,
                  rlm: 8207,
                  ndash: 8211,
                  mdash: 8212,
                  lsquo: 8216,
                  rsquo: 8217,
                  sbquo: 8218,
                  ldquo: 8220,
                  rdquo: 8221,
                  bdquo: 8222,
                  dagger: 8224,
                  Dagger: 8225,
                  permil: 8240,
                  lsaquo: 8249,
                  rsaquo: 8250,
                  euro: 8364,
                  nbsp: 160,
                  iexcl: 161,
                  cent: 162,
                  pound: 163,
                  curren: 164,
                  yen: 165,
                  brvbar: 166,
                  sect: 167,
                  uml: 168,
                  copy: 169,
                  ordf: 170,
                  laquo: 171,
                  not: 172,
                  shy: 173,
                  reg: 174,
                  macr: 175,
                  deg: 176,
                  plusmn: 177,
                  sup2: 178,
                  sup3: 179,
                  acute: 180,
                  micro: 181,
                  para: 182,
                  middot: 183,
                  cedil: 184,
                  sup1: 185,
                  ordm: 186,
                  raquo: 187,
                  frac14: 188,
                  frac12: 189,
                  frac34: 190,
                  iquest: 191,
                  Agrave: 192,
                  Aacute: 193,
                  Acirc: 194,
                  Atilde: 195,
                  Auml: 196,
                  Aring: 197,
                  AElig: 198,
                  Ccedil: 199,
                  Egrave: 200,
                  Eacute: 201,
                  Ecirc: 202,
                  Euml: 203,
                  Igrave: 204,
                  Iacute: 205,
                  Icirc: 206,
                  Iuml: 207,
                  ETH: 208,
                  Ntilde: 209,
                  Ograve: 210,
                  Oacute: 211,
                  Ocirc: 212,
                  Otilde: 213,
                  Ouml: 214,
                  times: 215,
                  Oslash: 216,
                  Ugrave: 217,
                  Uacute: 218,
                  Ucirc: 219,
                  Uuml: 220,
                  Yacute: 221,
                  THORN: 222,
                  szlig: 223,
                  agrave: 224,
                  aacute: 225,
                  acirc: 226,
                  atilde: 227,
                  auml: 228,
                  aring: 229,
                  aelig: 230,
                  ccedil: 231,
                  egrave: 232,
                  eacute: 233,
                  ecirc: 234,
                  euml: 235,
                  igrave: 236,
                  iacute: 237,
                  icirc: 238,
                  iuml: 239,
                  eth: 240,
                  ntilde: 241,
                  ograve: 242,
                  oacute: 243,
                  ocirc: 244,
                  otilde: 245,
                  ouml: 246,
                  divide: 247,
                  oslash: 248,
                  ugrave: 249,
                  uacute: 250,
                  ucirc: 251,
                  uuml: 252,
                  yacute: 253,
                  thorn: 254,
                  yuml: 255,
                  fnof: 402,
                  Alpha: 913,
                  Beta: 914,
                  Gamma: 915,
                  Delta: 916,
                  Epsilon: 917,
                  Zeta: 918,
                  Eta: 919,
                  Theta: 920,
                  Iota: 921,
                  Kappa: 922,
                  Lambda: 923,
                  Mu: 924,
                  Nu: 925,
                  Xi: 926,
                  Omicron: 927,
                  Pi: 928,
                  Rho: 929,
                  Sigma: 931,
                  Tau: 932,
                  Upsilon: 933,
                  Phi: 934,
                  Chi: 935,
                  Psi: 936,
                  Omega: 937,
                  alpha: 945,
                  beta: 946,
                  gamma: 947,
                  delta: 948,
                  epsilon: 949,
                  zeta: 950,
                  eta: 951,
                  theta: 952,
                  iota: 953,
                  kappa: 954,
                  lambda: 955,
                  mu: 956,
                  nu: 957,
                  xi: 958,
                  omicron: 959,
                  pi: 960,
                  rho: 961,
                  sigmaf: 962,
                  sigma: 963,
                  tau: 964,
                  upsilon: 965,
                  phi: 966,
                  chi: 967,
                  psi: 968,
                  omega: 969,
                  thetasym: 977,
                  upsih: 978,
                  piv: 982,
                  bull: 8226,
                  hellip: 8230,
                  prime: 8242,
                  Prime: 8243,
                  oline: 8254,
                  frasl: 8260,
                  weierp: 8472,
                  image: 8465,
                  real: 8476,
                  trade: 8482,
                  alefsym: 8501,
                  larr: 8592,
                  uarr: 8593,
                  rarr: 8594,
                  darr: 8595,
                  harr: 8596,
                  crarr: 8629,
                  lArr: 8656,
                  uArr: 8657,
                  rArr: 8658,
                  dArr: 8659,
                  hArr: 8660,
                  forall: 8704,
                  part: 8706,
                  exist: 8707,
                  empty: 8709,
                  nabla: 8711,
                  isin: 8712,
                  notin: 8713,
                  ni: 8715,
                  prod: 8719,
                  sum: 8721,
                  minus: 8722,
                  lowast: 8727,
                  radic: 8730,
                  prop: 8733,
                  infin: 8734,
                  ang: 8736,
                  and: 8743,
                  or: 8744,
                  cap: 8745,
                  cup: 8746,
                  int: 8747,
                  there4: 8756,
                  sim: 8764,
                  cong: 8773,
                  asymp: 8776,
                  ne: 8800,
                  equiv: 8801,
                  le: 8804,
                  ge: 8805,
                  sub: 8834,
                  sup: 8835,
                  nsub: 8836,
                  sube: 8838,
                  supe: 8839,
                  oplus: 8853,
                  otimes: 8855,
                  perp: 8869,
                  sdot: 8901,
                  lceil: 8968,
                  rceil: 8969,
                  lfloor: 8970,
                  rfloor: 8971,
                  lang: 9001,
                  rang: 9002,
                  loz: 9674,
                  spades: 9824,
                  clubs: 9827,
                  hearts: 9829,
                  diams: 9830
                }, y = {
                  A: 7,
                  a: 7,
                  C: 6,
                  c: 6,
                  H: 1,
                  h: 1,
                  L: 2,
                  l: 2,
                  M: 2,
                  m: 2,
                  Q: 4,
                  q: 4,
                  S: 4,
                  s: 4,
                  T: 2,
                  t: 2,
                  V: 1,
                  v: 1,
                  Z: 0,
                  z: 0
                }, p = {
                  A3: !0,
                  A4: !0,
                  a3: !0,
                  a4: !0
                }, e = {
                  color: {
                    inherit: !0,
                    initial: void 0
                  },
                  visibility: {
                    inherit: !0,
                    initial: "visible",
                    values: {
                      hidden: "hidden",
                      collapse: "hidden",
                      visible: "visible"
                    }
                  },
                  fill: {
                    inherit: !0,
                    initial: a.black
                  },
                  stroke: {
                    inherit: !0,
                    initial: "none"
                  },
                  "stop-color": {
                    inherit: !1,
                    initial: a.black
                  },
                  "fill-opacity": {
                    inherit: !0,
                    initial: 1
                  },
                  "stroke-opacity": {
                    inherit: !0,
                    initial: 1
                  },
                  "stop-opacity": {
                    inherit: !1,
                    initial: 1
                  },
                  "fill-rule": {
                    inherit: !0,
                    initial: "nonzero",
                    values: {
                      nonzero: "nonzero",
                      evenodd: "evenodd"
                    }
                  },
                  "clip-rule": {
                    inherit: !0,
                    initial: "nonzero",
                    values: {
                      nonzero: "nonzero",
                      evenodd: "evenodd"
                    }
                  },
                  "stroke-width": {
                    inherit: !0,
                    initial: 1
                  },
                  "stroke-dasharray": {
                    inherit: !0,
                    initial: []
                  },
                  "stroke-dashoffset": {
                    inherit: !0,
                    initial: 0
                  },
                  "stroke-miterlimit": {
                    inherit: !0,
                    initial: 4
                  },
                  "stroke-linejoin": {
                    inherit: !0,
                    initial: "miter",
                    values: {
                      miter: "miter",
                      round: "round",
                      bevel: "bevel"
                    }
                  },
                  "stroke-linecap": {
                    inherit: !0,
                    initial: "butt",
                    values: {
                      butt: "butt",
                      round: "round",
                      square: "square"
                    }
                  },
                  "font-size": {
                    inherit: !0,
                    initial: 16,
                    values: {
                      "xx-small": 9,
                      "x-small": 10,
                      small: 13,
                      medium: 16,
                      large: 18,
                      "x-large": 24,
                      "xx-large": 32
                    }
                  },
                  "font-family": {
                    inherit: !0,
                    initial: "sans-serif"
                  },
                  "font-weight": {
                    inherit: !0,
                    initial: "normal",
                    values: {
                      600: "bold",
                      700: "bold",
                      800: "bold",
                      900: "bold",
                      bold: "bold",
                      bolder: "bold",
                      500: "normal",
                      400: "normal",
                      300: "normal",
                      200: "normal",
                      100: "normal",
                      normal: "normal",
                      lighter: "normal"
                    }
                  },
                  "font-style": {
                    inherit: !0,
                    initial: "normal",
                    values: {
                      italic: "italic",
                      oblique: "italic",
                      normal: "normal"
                    }
                  },
                  "text-anchor": {
                    inherit: !0,
                    initial: "start",
                    values: {
                      start: "start",
                      middle: "middle",
                      end: "end"
                    }
                  },
                  direction: {
                    inherit: !0,
                    initial: "ltr",
                    values: {
                      ltr: "ltr",
                      rtl: "rtl"
                    }
                  },
                  "dominant-baseline": {
                    inherit: !0,
                    initial: "baseline",
                    values: {
                      auto: "baseline",
                      baseline: "baseline",
                      "before-edge": "before-edge",
                      "text-before-edge": "before-edge",
                      middle: "middle",
                      central: "central",
                      "after-edge": "after-edge",
                      "text-after-edge": "after-edge",
                      ideographic: "ideographic",
                      alphabetic: "alphabetic",
                      hanging: "hanging",
                      mathematical: "mathematical"
                    }
                  },
                  "alignment-baseline": {
                    inherit: !1,
                    initial: void 0,
                    values: {
                      auto: "baseline",
                      baseline: "baseline",
                      "before-edge": "before-edge",
                      "text-before-edge": "before-edge",
                      middle: "middle",
                      central: "central",
                      "after-edge": "after-edge",
                      "text-after-edge": "after-edge",
                      ideographic: "ideographic",
                      alphabetic: "alphabetic",
                      hanging: "hanging",
                      mathematical: "mathematical"
                    }
                  },
                  "baseline-shift": {
                    inherit: !0,
                    initial: "baseline",
                    values: {
                      baseline: "baseline",
                      sub: "sub",
                      super: "super"
                    }
                  },
                  "word-spacing": {
                    inherit: !0,
                    initial: 0,
                    values: {
                      normal: 0
                    }
                  },
                  "letter-spacing": {
                    inherit: !0,
                    initial: 0,
                    values: {
                      normal: 0
                    }
                  },
                  "text-decoration": {
                    inherit: !1,
                    initial: "none",
                    values: {
                      none: "none",
                      underline: "underline",
                      overline: "overline",
                      "line-through": "line-through"
                    }
                  },
                  "xml:space": {
                    inherit: !0,
                    initial: "default",
                    css: "white-space",
                    values: {
                      preserve: "preserve",
                      default: "default",
                      pre: "preserve",
                      "pre-line": "preserve",
                      "pre-wrap": "preserve",
                      nowrap: "default"
                    }
                  },
                  "marker-start": {
                    inherit: !0,
                    initial: "none"
                  },
                  "marker-mid": {
                    inherit: !0,
                    initial: "none"
                  },
                  "marker-end": {
                    inherit: !0,
                    initial: "none"
                  },
                  opacity: {
                    inherit: !1,
                    initial: 1
                  },
                  transform: {
                    inherit: !1,
                    initial: [1, 0, 0, 1, 0, 0]
                  },
                  display: {
                    inherit: !1,
                    initial: "inline",
                    values: {
                      none: "none",
                      inline: "inline",
                      block: "inline"
                    }
                  },
                  "clip-path": {
                    inherit: !1,
                    initial: "none"
                  },
                  mask: {
                    inherit: !1,
                    initial: "none"
                  },
                  overflow: {
                    inherit: !1,
                    initial: "hidden",
                    values: {
                      hidden: "hidden",
                      scroll: "hidden",
                      visible: "visible"
                    }
                  }
                };
                function m(Kt) {
                  var Pt = new function() {
                  }();
                  return Pt.name = "G" + (n._groupCount = (n._groupCount || 0) + 1), Pt.resources = n.ref(), Pt.xobj = n.ref({
                    Type: "XObject",
                    Subtype: "Form",
                    FormType: 1,
                    BBox: Kt,
                    Group: {
                      S: "Transparency",
                      CS: "DeviceRGB",
                      I: !0,
                      K: !1
                    },
                    Resources: Pt.resources
                  }), Pt.xobj.write(""), Pt.savedMatrix = n._ctm, Pt.savedPage = n.page, jn.push(Pt), n._ctm = [1, 0, 0, 1, 0, 0], n.page = {
                    width: n.page.width,
                    height: n.page.height,
                    write: function(Bt) {
                      Pt.xobj.write(Bt);
                    },
                    fonts: {},
                    xobjects: {},
                    ext_gstates: {},
                    patterns: {}
                  }, Pt;
                }
                function w(Kt) {
                  if (Kt !== jn.pop())
                    throw "Group not matching";
                  Object.keys(n.page.fonts).length && (Kt.resources.data.Font = n.page.fonts), Object.keys(n.page.xobjects).length && (Kt.resources.data.XObject = n.page.xobjects), Object.keys(n.page.ext_gstates).length && (Kt.resources.data.ExtGState = n.page.ext_gstates), Object.keys(n.page.patterns).length && (Kt.resources.data.Pattern = n.page.patterns), Kt.resources.end(), Kt.xobj.end(), n._ctm = Kt.savedMatrix, n.page = Kt.savedPage;
                }
                function D(Kt) {
                  n.page.xobjects[Kt.name] = Kt.xobj, n.addContent("/" + Kt.name + " Do");
                }
                function I(Kt, Pt) {
                  var re = "M" + (n._maskCount = (n._maskCount || 0) + 1), Bt = n.ref({
                    Type: "ExtGState",
                    CA: 1,
                    ca: 1,
                    BM: "Normal",
                    SMask: {
                      S: "Luminosity",
                      G: Kt.xobj,
                      BC: Pt ? [0, 0, 0] : [1, 1, 1]
                    }
                  });
                  Bt.end(), n.page.ext_gstates[re] = Bt, n.addContent("/" + re + " gs");
                }
                function E(Kt, Pt, re, Bt) {
                  var Nt = new function() {
                  }();
                  return Nt.group = Kt, Nt.dx = Pt, Nt.dy = re, Nt.matrix = Bt || [1, 0, 0, 1, 0, 0], Nt;
                }
                function T(Kt, Pt) {
                  var re = "P" + (n._patternCount = (n._patternCount || 0) + 1), Bt = n.ref({
                    Type: "Pattern",
                    PatternType: 1,
                    PaintType: 1,
                    TilingType: 2,
                    BBox: [0, 0, Kt.dx, Kt.dy],
                    XStep: Kt.dx,
                    YStep: Kt.dy,
                    Matrix: bt(n._ctm, Kt.matrix),
                    Resources: {
                      ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"],
                      XObject: function() {
                        var Nt = {};
                        return Nt[Kt.group.name] = Kt.group.xobj, Nt;
                      }()
                    }
                  });
                  Bt.write("/" + Kt.group.name + " Do"), Bt.end(), n.page.patterns[re] = Bt, Pt ? (n.addContent("/Pattern CS"), n.addContent("/" + re + " SCN")) : (n.addContent("/Pattern cs"), n.addContent("/" + re + " scn"));
                }
                function A(Kt, Pt) {
                  n.page.fonts[Kt.id] || (n.page.fonts[Kt.id] = Kt.ref()), n.addContent("BT").addContent("/" + Kt.id + " " + Pt + " Tf");
                }
                function F(Kt, Pt, re, Bt, Nt, Mt) {
                  n.addContent(G(Kt) + " " + G(Pt) + " " + G(-re) + " " + G(-Bt) + " " + G(Nt) + " " + G(Mt) + " Tm");
                }
                function b(Kt, Pt) {
                  var re = Kt && Pt ? 2 : Pt ? 1 : Kt ? 0 : 3;
                  n.addContent(re + " Tr");
                }
                function R(Kt) {
                  n.addContent("<" + Kt + "> Tj");
                }
                function N() {
                  n.addContent("ET");
                }
                function U(Kt) {
                  Kt[0].constructor.name === "PDFPattern" ? (n.fillOpacity(Kt[1]), T(Kt[0], !1)) : n.fillColor(Kt[0], Kt[1]);
                }
                function W(Kt) {
                  Kt[0].constructor.name === "PDFPattern" ? (n.strokeOpacity(Kt[1]), T(Kt[0], !0)) : n.strokeColor(Kt[0], Kt[1]);
                }
                function J(Kt, Pt, re, Bt, Nt) {
                  var Mt = n.ref({
                    Type: "Annot",
                    Subtype: "Link",
                    Rect: [Kt, Pt, re, Bt],
                    Border: [0, 0, 0],
                    A: {
                      S: "URI",
                      URI: new String(Nt)
                    }
                  });
                  Mt.end(), ze.push(Mt);
                }
                function ht(Kt) {
                  var Pt = function(kt, ie, Zt, me) {
                    this.error = me, this.nodeName = kt, this.nodeValue = Zt, this.nodeType = ie, this.attributes = /* @__PURE__ */ Object.create(null), this.childNodes = [], this.parentNode = null, this.id = "", this.textContent = "", this.classList = [];
                  };
                  Pt.prototype.getAttribute = function(ee) {
                    return this.attributes[ee] != null ? this.attributes[ee] : null;
                  }, Pt.prototype.getElementById = function(ee) {
                    var kt = null;
                    return function ie(Zt) {
                      if (!kt && Zt.nodeType === 1) {
                        Zt.id === ee && (kt = Zt);
                        for (var me = 0; me < Zt.childNodes.length; me++)
                          ie(Zt.childNodes[me]);
                      }
                    }(this), kt;
                  }, Pt.prototype.getElementsByTagName = function(ee) {
                    var kt = [];
                    return function ie(Zt) {
                      if (Zt.nodeType === 1) {
                        Zt.nodeName === ee && kt.push(Zt);
                        for (var me = 0; me < Zt.childNodes.length; me++)
                          ie(Zt.childNodes[me]);
                      }
                    }(this), kt;
                  };
                  for (var re = new xe(Kt.trim()), Bt, Nt, Mt = !1, jt = function ee() {
                    var kt, ie;
                    if (kt = re.match(/^<([\w:.-]+)\s*/, !0)) {
                      for (var Zt = new Pt(kt[1], 1, null, Mt); kt = re.match(/^([\w:.-]+)(?:\s*=\s*"([^"]*)"|\s*=\s*'([^']*)')?\s*/, !0); ) {
                        var me = kt[1], Pe = K(kt[2] || kt[3] || "");
                        Zt.attributes[me] ? (rr('parseXml: duplicate attribute "' + me + '"'), Mt = !0) : (Zt.attributes[me] = Pe, me === "id" && (Zt.id = Pe), me === "class" && (Zt.classList = Pe.split(" ")));
                      }
                      if (re.match(/^>/)) {
                        for (; ie = ee(); )
                          Zt.childNodes.push(ie), ie.parentNode = Zt, Zt.textContent += ie.nodeType === 3 || ie.nodeType === 4 ? ie.nodeValue : ie.textContent;
                        return (kt = re.match(/^<\/([\w:.-]+)\s*>/, !0)) ? (kt[1] === Zt.nodeName || (rr('parseXml: tag not matching, opening "' + Zt.nodeName + '" & closing "' + kt[1] + '"'), Mt = !0), Zt) : (rr('parseXml: tag not matching, opening "' + Zt.nodeName + '" & not closing'), Mt = !0, Zt);
                      } else {
                        if (re.match(/^\/>/))
                          return Zt;
                        rr('parseXml: tag could not be parsed "' + Zt.nodeName + '"'), Mt = !0;
                      }
                    } else {
                      if (kt = re.match(/^<!--[\s\S]*?-->/))
                        return new Pt(null, 8, kt, Mt);
                      if (kt = re.match(/^<\?[\s\S]*?\?>/))
                        return new Pt(null, 7, kt, Mt);
                      if (kt = re.match(/^<!DOCTYPE\s*([\s\S]*?)>/))
                        return new Pt(null, 10, kt, Mt);
                      if (kt = re.match(/^<!\[CDATA\[([\s\S]*?)\]\]>/, !0))
                        return new Pt("#cdata-section", 4, kt[1], Mt);
                      if (kt = re.match(/^([^<]+)/, !0))
                        return new Pt("#text", 3, K(kt[1]), Mt);
                    }
                  }; Nt = jt(); )
                    Nt.nodeType === 1 && !Bt ? Bt = Nt : (Nt.nodeType === 1 || Nt.nodeType === 3 && Nt.nodeValue.trim() !== "") && rr("parseXml: data after document end has been discarded");
                  return re.matchAll() && rr("parseXml: parsing error"), Bt;
                }
                function K(Kt) {
                  return Kt.replace(/&(?:#([0-9]+)|#[xX]([0-9A-Fa-f]+)|([0-9A-Za-z]+));/g, function(Pt, re, Bt, Nt) {
                    return re ? String.fromCharCode(parseInt(re, 10)) : Bt ? String.fromCharCode(parseInt(Bt, 16)) : Nt && v[Nt] ? String.fromCharCode(v[Nt]) : Pt;
                  });
                }
                function nt(Kt) {
                  var Pt, re;
                  return Kt = (Kt || "").trim(), (Pt = h[Kt]) ? re = [Pt.slice(), 1] : (Pt = Kt.match(/^rgba\(\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9.]+)\s*\)$/i)) ? (Pt[1] = parseInt(Pt[1]), Pt[2] = parseInt(Pt[2]), Pt[3] = parseInt(Pt[3]), Pt[4] = parseFloat(Pt[4]), Pt[1] < 256 && Pt[2] < 256 && Pt[3] < 256 && Pt[4] <= 1 && (re = [Pt.slice(1, 4), Pt[4]])) : (Pt = Kt.match(/^rgb\(\s*([0-9]+)\s*,\s*([0-9]+)\s*,\s*([0-9]+)\s*\)$/i)) ? (Pt[1] = parseInt(Pt[1]), Pt[2] = parseInt(Pt[2]), Pt[3] = parseInt(Pt[3]), Pt[1] < 256 && Pt[2] < 256 && Pt[3] < 256 && (re = [Pt.slice(1, 4), 1])) : (Pt = Kt.match(/^rgb\(\s*([0-9.]+)%\s*,\s*([0-9.]+)%\s*,\s*([0-9.]+)%\s*\)$/i)) ? (Pt[1] = 2.55 * parseFloat(Pt[1]), Pt[2] = 2.55 * parseFloat(Pt[2]), Pt[3] = 2.55 * parseFloat(Pt[3]), Pt[1] < 256 && Pt[2] < 256 && Pt[3] < 256 && (re = [Pt.slice(1, 4), 1])) : (Pt = Kt.match(/^#([0-9a-f]{2})([0-9a-f]{2})([0-9a-f]{2})$/i)) ? re = [[parseInt(Pt[1], 16), parseInt(Pt[2], 16), parseInt(Pt[3], 16)], 1] : (Pt = Kt.match(/^#([0-9a-f])([0-9a-f])([0-9a-f])$/i)) && (re = [[17 * parseInt(Pt[1], 16), 17 * parseInt(Pt[2], 16), 17 * parseInt(Pt[3], 16)], 1]), $r ? $r(re, Kt) : re;
                }
                function xt(Kt, Pt, re) {
                  var Bt = Kt[0].slice(), Nt = Kt[1] * Pt;
                  if (re) {
                    for (var Mt = 0; Mt < Kt.length; Mt++)
                      Bt[Mt] *= Nt;
                    return [Bt, 1];
                  } else
                    return [Bt, Nt];
                }
                function bt() {
                  function Kt(Bt, Nt) {
                    return [Bt[0] * Nt[0] + Bt[2] * Nt[1], Bt[1] * Nt[0] + Bt[3] * Nt[1], Bt[0] * Nt[2] + Bt[2] * Nt[3], Bt[1] * Nt[2] + Bt[3] * Nt[3], Bt[0] * Nt[4] + Bt[2] * Nt[5] + Bt[4], Bt[1] * Nt[4] + Bt[3] * Nt[5] + Bt[5]];
                  }
                  for (var Pt = arguments[0], re = 1; re < arguments.length; re++)
                    Pt = Kt(Pt, arguments[re]);
                  return Pt;
                }
                function Tt(Kt, Pt) {
                  return [Pt[0] * Kt[0] + Pt[2] * Kt[1] + Pt[4], Pt[1] * Kt[0] + Pt[3] * Kt[1] + Pt[5]];
                }
                function It() {
                  for (var Kt = n._ctm, Pt = jn.length - 1; Pt >= 0; Pt--)
                    Kt = bt(jn[Pt].savedMatrix, Kt);
                  return Kt;
                }
                function Lt() {
                  return new zt().M(0, 0).L(n.page.width, 0).L(n.page.width, n.page.height).L(0, n.page.height).transform(Ut(It())).getBoundingBox();
                }
                function Ut(Kt) {
                  var Pt = Kt[0] * Kt[3] - Kt[1] * Kt[2];
                  return [Kt[3] / Pt, -Kt[1] / Pt, -Kt[2] / Pt, Kt[0] / Pt, (Kt[2] * Kt[5] - Kt[3] * Kt[4]) / Pt, (Kt[1] * Kt[4] - Kt[0] * Kt[5]) / Pt];
                }
                function $(Kt) {
                  var Pt = G(Kt[0]), re = G(Kt[1]), Bt = G(Kt[2]), Nt = G(Kt[3]), Mt = G(Kt[4]), jt = G(Kt[5]);
                  if (yt(Pt * Nt - re * Bt, 0))
                    return [Pt, re, Bt, Nt, Mt, jt];
                }
                function gt(Kt) {
                  var Pt = Kt[2] || 0, re = Kt[1] || 0, Bt = Kt[0] || 0;
                  if (st(Pt, 0) && st(re, 0))
                    return [];
                  if (st(Pt, 0))
                    return [-Bt / re];
                  var Nt = re * re - 4 * Pt * Bt;
                  return yt(Nt, 0) && Nt > 0 ? [(-re + Math.sqrt(Nt)) / (2 * Pt), (-re - Math.sqrt(Nt)) / (2 * Pt)] : st(Nt, 0) ? [-re / (2 * Pt)] : [];
                }
                function ut(Kt, Pt) {
                  return (Pt[0] || 0) + (Pt[1] || 0) * Kt + (Pt[2] || 0) * Kt * Kt + (Pt[3] || 0) * Kt * Kt * Kt;
                }
                function st(Kt, Pt) {
                  return Math.abs(Kt - Pt) < 1e-10;
                }
                function yt(Kt, Pt) {
                  return Math.abs(Kt - Pt) >= 1e-10;
                }
                function G(Kt) {
                  return Kt > -1e21 && Kt < 1e21 ? Math.round(Kt * 1e6) / 1e6 : 0;
                }
                function Et(Kt) {
                  return typeof Kt == "object" && Kt !== null && typeof Kt.length == "number";
                }
                function k(Kt) {
                  for (var Pt = new xe((Kt || "").trim()), re = [1, 0, 0, 1, 0, 0], Bt; Bt = Pt.match(/^([A-Za-z]+)\s*[(]([^(]+)[)]/, !0); ) {
                    for (var Nt = Bt[1], Mt = [], jt = new xe(Bt[2].trim()), ee = void 0; ee = jt.matchNumber(); )
                      Mt.push(Number(ee)), jt.matchSeparator();
                    if (Nt === "matrix" && Mt.length === 6)
                      re = bt(re, [Mt[0], Mt[1], Mt[2], Mt[3], Mt[4], Mt[5]]);
                    else if (Nt === "translate" && Mt.length === 2)
                      re = bt(re, [1, 0, 0, 1, Mt[0], Mt[1]]);
                    else if (Nt === "translate" && Mt.length === 1)
                      re = bt(re, [1, 0, 0, 1, Mt[0], 0]);
                    else if (Nt === "scale" && Mt.length === 2)
                      re = bt(re, [Mt[0], 0, 0, Mt[1], 0, 0]);
                    else if (Nt === "scale" && Mt.length === 1)
                      re = bt(re, [Mt[0], 0, 0, Mt[0], 0, 0]);
                    else if (Nt === "rotate" && Mt.length === 3) {
                      var kt = Mt[0] * Math.PI / 180;
                      re = bt(re, [1, 0, 0, 1, Mt[1], Mt[2]], [Math.cos(kt), Math.sin(kt), -Math.sin(kt), Math.cos(kt), 0, 0], [1, 0, 0, 1, -Mt[1], -Mt[2]]);
                    } else if (Nt === "rotate" && Mt.length === 1) {
                      var ie = Mt[0] * Math.PI / 180;
                      re = bt(re, [Math.cos(ie), Math.sin(ie), -Math.sin(ie), Math.cos(ie), 0, 0]);
                    } else if (Nt === "skewX" && Mt.length === 1) {
                      var Zt = Mt[0] * Math.PI / 180;
                      re = bt(re, [1, 0, Math.tan(Zt), 1, 0, 0]);
                    } else if (Nt === "skewY" && Mt.length === 1) {
                      var me = Mt[0] * Math.PI / 180;
                      re = bt(re, [1, Math.tan(me), 0, 1, 0, 0]);
                    } else
                      return;
                    Pt.matchSeparator();
                  }
                  if (!Pt.matchAll())
                    return re;
                }
                function S(Kt, Pt, re, Bt, Nt, Mt) {
                  var jt = (Kt || "").trim().match(/^(none)$|^x(Min|Mid|Max)Y(Min|Mid|Max)(?:\s+(meet|slice))?$/) || [], ee = jt[1] || jt[4] || "meet", kt = jt[2] || "Mid", ie = jt[3] || "Mid", Zt = Pt / Bt, me = re / Nt, Pe = {
                    Min: 0,
                    Mid: 0.5,
                    Max: 1
                  }[kt] - (Mt || 0), Be = {
                    Min: 0,
                    Mid: 0.5,
                    Max: 1
                  }[ie] - (Mt || 0);
                  return ee === "slice" ? me = Zt = Math.max(Zt, me) : ee === "meet" && (me = Zt = Math.min(Zt, me)), [Zt, 0, 0, me, Pe * (Pt - Bt * Zt), Be * (re - Nt * me)];
                }
                function L(Kt) {
                  var Pt = /* @__PURE__ */ Object.create(null);
                  Kt = (Kt || "").trim().split(/;/);
                  for (var re = 0; re < Kt.length; re++) {
                    var Bt = (Kt[re].split(":")[0] || "").trim(), Nt = (Kt[re].split(":")[1] || "").trim();
                    Bt && (Pt[Bt] = Nt);
                  }
                  if (Pt.marker && (Pt["marker-start"] || (Pt["marker-start"] = Pt.marker), Pt["marker-mid"] || (Pt["marker-mid"] = Pt.marker), Pt["marker-end"] || (Pt["marker-end"] = Pt.marker)), Pt.font) {
                    for (var Mt = null, jt = null, ee = "normal", kt = "normal", ie = "normal", Zt = Pt.font.split(/\s+/), me = 0; me < Zt.length; me++)
                      switch (Zt[me]) {
                        case "normal":
                          break;
                        case "italic":
                        case "oblique":
                          ee = Zt[me];
                          break;
                        case "small-caps":
                          ie = Zt[me];
                          break;
                        case "bold":
                        case "bolder":
                        case "lighter":
                        case "100":
                        case "200":
                        case "300":
                        case "400":
                        case "500":
                        case "600":
                        case "700":
                        case "800":
                        case "900":
                          kt = Zt[me];
                          break;
                        default:
                          jt ? Mt ? Mt += " " + Zt[me] : Mt = Zt[me] : jt = Zt[me].split("/")[0];
                          break;
                      }
                    Pt["font-style"] || (Pt["font-style"] = ee), Pt["font-variant"] || (Pt["font-variant"] = ie), Pt["font-weight"] || (Pt["font-weight"] = kt), Pt["font-size"] || (Pt["font-size"] = jt), Pt["font-family"] || (Pt["font-family"] = Mt);
                  }
                  return Pt;
                }
                function V(Kt) {
                  for (var Pt = Kt.split(/(?=[.#])/g), re = [], Bt = [], Nt = [], Mt, jt = 0; jt < Pt.length; jt++)
                    if (Mt = Pt[jt].match(/^[#]([_A-Za-z0-9-]+)$/))
                      re.push(Mt[1]);
                    else if (Mt = Pt[jt].match(/^[.]([_A-Za-z0-9-]+)$/))
                      Bt.push(Mt[1]);
                    else if (Mt = Pt[jt].match(/^([_A-Za-z0-9-]+)$/))
                      Nt.push(Mt[1]);
                    else if (Pt[jt] !== "*")
                      return;
                  return {
                    tags: Nt,
                    ids: re,
                    classes: Bt,
                    specificity: re.length * 1e4 + Bt.length * 100 + Nt.length
                  };
                }
                function it(Kt) {
                  for (var Pt = new xe(Kt.trim()), re = [], Bt; Bt = Pt.match(/^\s*([^\{\}]*?)\s*\{([^\{\}]*?)\}/, !0); )
                    for (var Nt = Bt[1].split(/\s*,\s*/g), Mt = L(Bt[2]), jt = 0; jt < Nt.length; jt++) {
                      var ee = V(Nt[jt]);
                      ee && re.push({
                        selector: ee,
                        css: Mt
                      });
                    }
                  return re;
                }
                function tt(Kt, Pt) {
                  if (Kt.nodeType !== 1)
                    return !1;
                  for (var re = 0; re < Pt.tags.length; re++)
                    if (Pt.tags[re] !== Kt.nodeName)
                      return !1;
                  for (var Bt = 0; Bt < Pt.ids.length; Bt++)
                    if (Pt.ids[Bt] !== Kt.id)
                      return !1;
                  for (var Nt = 0; Nt < Pt.classes.length; Nt++)
                    if (Kt.classList.indexOf(Pt.classes[Nt]) === -1)
                      return !1;
                  return !0;
                }
                function _(Kt) {
                  for (var Pt = /* @__PURE__ */ Object.create(null), re = /* @__PURE__ */ Object.create(null), Bt = 0; Bt < Qe.length; Bt++) {
                    var Nt = Qe[Bt];
                    if (tt(Kt, Nt.selector))
                      for (var Mt in Nt.css)
                        re[Mt] > Nt.selector.specificity || (Pt[Mt] = Nt.css[Mt], re[Mt] = Nt.selector.specificity);
                  }
                  return Pt;
                }
                function At(Kt, Pt) {
                  return Kt.concat(Pt.slice(Kt.length));
                }
                function Rt(Kt, Pt) {
                  return Math.max(Kt.ascender, (Kt.bbox[3] || Kt.bbox.maxY) * (Kt.scale || 1)) * Pt / 1e3;
                }
                function Yt(Kt, Pt) {
                  return Math.min(Kt.descender, (Kt.bbox[1] || Kt.bbox.minY) * (Kt.scale || 1)) * Pt / 1e3;
                }
                function Gt(Kt, Pt) {
                  return (Kt.xHeight || 0.5 * (Kt.ascender - Kt.descender)) * Pt / 1e3;
                }
                function Dt(Kt, Pt, re, Bt) {
                  var Nt, Mt;
                  switch (re) {
                    case "middle":
                      Nt = 0.5 * Gt(Kt, Pt);
                      break;
                    case "central":
                      Nt = 0.5 * (Yt(Kt, Pt) + Rt(Kt, Pt));
                      break;
                    case "after-edge":
                    case "text-after-edge":
                      Nt = Yt(Kt, Pt);
                      break;
                    case "alphabetic":
                    case "auto":
                    case "baseline":
                      Nt = 0;
                      break;
                    case "mathematical":
                      Nt = 0.5 * Rt(Kt, Pt);
                      break;
                    case "hanging":
                      Nt = 0.8 * Rt(Kt, Pt);
                      break;
                    case "before-edge":
                    case "text-before-edge":
                      Nt = Rt(Kt, Pt);
                      break;
                    default:
                      Nt = 0;
                      break;
                  }
                  switch (Bt) {
                    case "baseline":
                      Mt = 0;
                      break;
                    case "super":
                      Mt = 0.6 * Pt;
                      break;
                    case "sub":
                      Mt = -0.6 * Pt;
                      break;
                    default:
                      Mt = Bt;
                      break;
                  }
                  return Nt - Mt;
                }
                function ae(Kt, Pt, re) {
                  for (var Bt = Kt.encode("" + re), Nt = Bt[0], Mt = Bt[1], jt = [], ee = 0; ee < Nt.length; ee++) {
                    var kt = Kt.unicode ? Kt.unicode[parseInt(Nt[ee], 16)] : [re.charCodeAt(ee)];
                    jt.push({
                      glyph: Nt[ee],
                      unicode: kt,
                      width: Mt[ee].advanceWidth * Pt / 1e3,
                      xOffset: Mt[ee].xOffset * Pt / 1e3,
                      yOffset: Mt[ee].yOffset * Pt / 1e3,
                      xAdvance: Mt[ee].xAdvance * Pt / 1e3,
                      yAdvance: Mt[ee].yAdvance * Pt / 1e3
                    });
                  }
                  return jt;
                }
                function Ae(Kt, Pt) {
                  switch (Kt.nodeName) {
                    case "use":
                      return new Oe(Kt, Pt);
                    case "symbol":
                      return new Fe(Kt, Pt);
                    case "g":
                      return new Ft(Kt, Pt);
                    case "a":
                      return new fe(Kt, Pt);
                    case "svg":
                      return new ot(Kt, Pt);
                    case "image":
                      return new Y(Kt, Pt);
                    case "rect":
                      return new Wt(Kt, Pt);
                    case "circle":
                      return new _t(Kt, Pt);
                    case "ellipse":
                      return new Q(Kt, Pt);
                    case "line":
                      return new Jt(Kt, Pt);
                    case "polyline":
                      return new te(Kt, Pt);
                    case "polygon":
                      return new Ct(Kt, Pt);
                    case "path":
                      return new Ht(Kt, Pt);
                    case "text":
                      return new Ze(Kt, Pt);
                    case "tspan":
                      return new rn(Kt, Pt);
                    case "textPath":
                      return new tr(Kt, Pt);
                    case "#text":
                    case "#cdata-section":
                      return new Ne(Kt);
                    default:
                      return new Qt(Kt, Pt);
                  }
                }
                var xe = function(Pt) {
                  this.match = function(re, Bt) {
                    var Nt = Pt.match(re);
                    if (!(!Nt || Nt.index !== 0))
                      return Pt = Pt.substring(Nt[0].length), Bt ? Nt : Nt[0];
                  }, this.matchSeparator = function() {
                    return this.match(/^(?:\s*,\s*|\s*|)/);
                  }, this.matchSpace = function() {
                    return this.match(/^(?:\s*)/);
                  }, this.matchLengthUnit = function() {
                    return this.match(/^(?:px|pt|cm|mm|in|pc|em|ex|%|)/);
                  }, this.matchNumber = function() {
                    return this.match(/^(?:[-+]?(?:[0-9]+[.][0-9]+|[0-9]+[.]|[.][0-9]+|[0-9]+)(?:[eE][-+]?[0-9]+)?)/);
                  }, this.matchAll = function() {
                    return this.match(/^[\s\S]+/);
                  };
                }, ce = function(Pt, re, Bt, Nt, Mt, jt, ee, kt) {
                  for (var ie = 6 * Hn, Zt = [Pt, -3 * Pt + 3 * Bt, 3 * Pt - 6 * Bt + 3 * Mt, -Pt + 3 * Bt - 3 * Mt + ee], me = [re, -3 * re + 3 * Nt, 3 * re - 6 * Nt + 3 * jt, -re + 3 * Nt - 3 * jt + kt], Pe = [-3 * Pt + 3 * Bt, 6 * Pt - 12 * Bt + 6 * Mt, -3 * Pt + 9 * Bt - 9 * Mt + 3 * ee], Be = [-3 * re + 3 * Nt, 6 * re - 12 * Nt + 6 * jt, -3 * re + 9 * Nt - 9 * jt + 3 * kt], je = [0], Je = 1; Je <= ie; Je++) {
                    var nr = (Je - 0.5) / ie, ve = ut(nr, Pe) / ie, Re = ut(nr, Be) / ie, $e = Math.sqrt(ve * ve + Re * Re);
                    je[Je] = je[Je - 1] + $e;
                  }
                  this.totalLength = je[ie], this.startPoint = [Pt, re, st(Pt, Bt) && st(re, Nt) ? Math.atan2(jt - Nt, Mt - Bt) : Math.atan2(Nt - re, Bt - Pt)], this.endPoint = [ee, kt, st(Mt, ee) && st(jt, kt) ? Math.atan2(jt - Nt, Mt - Bt) : Math.atan2(kt - jt, ee - Mt)], this.getBoundingBox = function() {
                    var We, ar = ut(0, Zt), Ye = ut(0, me), cr = ut(1, Zt), ir = ut(1, me);
                    ar > cr && (We = cr, cr = ar, ar = We), Ye > ir && (We = ir, ir = Ye, Ye = We);
                    for (var Ar = gt(Pe), kr = 0; kr < Ar.length; kr++)
                      if (Ar[kr] >= 0 && Ar[kr] <= 1) {
                        var Dr = ut(Ar[kr], Zt);
                        Dr < ar && (ar = Dr), Dr > cr && (cr = Dr);
                      }
                    for (var Tr = gt(Be), Pr = 0; Pr < Tr.length; Pr++)
                      if (Tr[Pr] >= 0 && Tr[Pr] <= 1) {
                        var _r = ut(Tr[Pr], me);
                        _r < Ye && (Ye = _r), _r > ir && (ir = _r);
                      }
                    return [ar, Ye, cr, ir];
                  }, this.getPointAtLength = function(We) {
                    if (st(We, 0))
                      return this.startPoint;
                    if (st(We, this.totalLength))
                      return this.endPoint;
                    if (!(We < 0 || We > this.totalLength))
                      for (var ar = 1; ar <= ie; ar++) {
                        var Ye = je[ar - 1], cr = je[ar];
                        if (Ye <= We && We <= cr) {
                          var ir = (ar - (cr - We) / (cr - Ye)) / ie, Ar = ut(ir, Zt), kr = ut(ir, me), Dr = ut(ir, Pe), Tr = ut(ir, Be);
                          return [Ar, kr, Math.atan2(Tr, Dr)];
                        }
                      }
                  };
                }, we = function(Pt, re, Bt, Nt) {
                  this.totalLength = Math.sqrt((Bt - Pt) * (Bt - Pt) + (Nt - re) * (Nt - re)), this.startPoint = [Pt, re, Math.atan2(Nt - re, Bt - Pt)], this.endPoint = [Bt, Nt, Math.atan2(Nt - re, Bt - Pt)], this.getBoundingBox = function() {
                    return [Math.min(this.startPoint[0], this.endPoint[0]), Math.min(this.startPoint[1], this.endPoint[1]), Math.max(this.startPoint[0], this.endPoint[0]), Math.max(this.startPoint[1], this.endPoint[1])];
                  }, this.getPointAtLength = function(Mt) {
                    if (Mt >= 0 && Mt <= this.totalLength) {
                      var jt = Mt / this.totalLength || 0, ee = this.startPoint[0] + jt * (this.endPoint[0] - this.startPoint[0]), kt = this.startPoint[1] + jt * (this.endPoint[1] - this.startPoint[1]);
                      return [ee, kt, this.startPoint[2]];
                    }
                  };
                }, zt = function Kt() {
                  this.pathCommands = [], this.pathSegments = [], this.startPoint = null, this.endPoint = null, this.totalLength = 0;
                  var Pt = 0, re = 0, Bt = 0, Nt = 0, Mt, jt, ee;
                  this.move = function(kt, ie) {
                    return Pt = Bt = kt, re = Nt = ie, null;
                  }, this.line = function(kt, ie) {
                    var Zt = new we(Bt, Nt, kt, ie);
                    return Bt = kt, Nt = ie, Zt;
                  }, this.curve = function(kt, ie, Zt, me, Pe, Be) {
                    var je = new ce(Bt, Nt, kt, ie, Zt, me, Pe, Be);
                    return Bt = Pe, Nt = Be, je;
                  }, this.close = function() {
                    var kt = new we(Bt, Nt, Pt, re);
                    return Bt = Pt, Nt = re, kt;
                  }, this.addCommand = function(kt) {
                    this.pathCommands.push(kt);
                    var ie = this[kt[0]].apply(this, kt.slice(3));
                    ie && (ie.hasStart = kt[1], ie.hasEnd = kt[2], this.startPoint = this.startPoint || ie.startPoint, this.endPoint = ie.endPoint, this.pathSegments.push(ie), this.totalLength += ie.totalLength);
                  }, this.M = function(kt, ie) {
                    return this.addCommand(["move", !0, !0, kt, ie]), Mt = "M", this;
                  }, this.m = function(kt, ie) {
                    return this.M(Bt + kt, Nt + ie);
                  }, this.Z = this.z = function() {
                    return this.addCommand(["close", !0, !0]), Mt = "Z", this;
                  }, this.L = function(kt, ie) {
                    return this.addCommand(["line", !0, !0, kt, ie]), Mt = "L", this;
                  }, this.l = function(kt, ie) {
                    return this.L(Bt + kt, Nt + ie);
                  }, this.H = function(kt) {
                    return this.L(kt, Nt);
                  }, this.h = function(kt) {
                    return this.L(Bt + kt, Nt);
                  }, this.V = function(kt) {
                    return this.L(Bt, kt);
                  }, this.v = function(kt) {
                    return this.L(Bt, Nt + kt);
                  }, this.C = function(kt, ie, Zt, me, Pe, Be) {
                    return this.addCommand(["curve", !0, !0, kt, ie, Zt, me, Pe, Be]), Mt = "C", jt = Zt, ee = me, this;
                  }, this.c = function(kt, ie, Zt, me, Pe, Be) {
                    return this.C(Bt + kt, Nt + ie, Bt + Zt, Nt + me, Bt + Pe, Nt + Be);
                  }, this.S = function(kt, ie, Zt, me) {
                    return this.C(Bt + (Mt === "C" ? Bt - jt : 0), Nt + (Mt === "C" ? Nt - ee : 0), kt, ie, Zt, me);
                  }, this.s = function(kt, ie, Zt, me) {
                    return this.C(Bt + (Mt === "C" ? Bt - jt : 0), Nt + (Mt === "C" ? Nt - ee : 0), Bt + kt, Nt + ie, Bt + Zt, Nt + me);
                  }, this.Q = function(kt, ie, Zt, me) {
                    var Pe = Bt + 0.6666666666666666 * (kt - Bt), Be = Nt + 2 / 3 * (ie - Nt), je = Zt + 2 / 3 * (kt - Zt), Je = me + 2 / 3 * (ie - me);
                    return this.addCommand(["curve", !0, !0, Pe, Be, je, Je, Zt, me]), Mt = "Q", jt = kt, ee = ie, this;
                  }, this.q = function(kt, ie, Zt, me) {
                    return this.Q(Bt + kt, Nt + ie, Bt + Zt, Nt + me);
                  }, this.T = function(kt, ie) {
                    return this.Q(Bt + (Mt === "Q" ? Bt - jt : 0), Nt + (Mt === "Q" ? Nt - ee : 0), kt, ie);
                  }, this.t = function(kt, ie) {
                    return this.Q(Bt + (Mt === "Q" ? Bt - jt : 0), Nt + (Mt === "Q" ? Nt - ee : 0), Bt + kt, Nt + ie);
                  }, this.A = function(kt, ie, Zt, me, Pe, Be, je) {
                    if (st(kt, 0) || st(ie, 0))
                      this.addCommand(["line", !0, !0, Be, je]);
                    else {
                      Zt = Zt * (Math.PI / 180), kt = Math.abs(kt), ie = Math.abs(ie), me = 1 * !!me, Pe = 1 * !!Pe;
                      var Je = Math.cos(Zt) * (Bt - Be) / 2 + Math.sin(Zt) * (Nt - je) / 2, nr = Math.cos(Zt) * (Nt - je) / 2 - Math.sin(Zt) * (Bt - Be) / 2, ve = Je * Je / (kt * kt) + nr * nr / (ie * ie);
                      ve > 1 && (kt *= Math.sqrt(ve), ie *= Math.sqrt(ve));
                      var Re = Math.sqrt(Math.max(0, kt * kt * ie * ie - kt * kt * nr * nr - ie * ie * Je * Je) / (kt * kt * nr * nr + ie * ie * Je * Je)), $e = (me === Pe ? -1 : 1) * Re * kt * nr / ie, We = (me === Pe ? 1 : -1) * Re * ie * Je / kt, ar = Math.cos(Zt) * $e - Math.sin(Zt) * We + (Bt + Be) / 2, Ye = Math.sin(Zt) * $e + Math.cos(Zt) * We + (Nt + je) / 2, cr = Math.atan2((nr - We) / ie, (Je - $e) / kt), ir = Math.atan2((-nr - We) / ie, (-Je - $e) / kt);
                      Pe === 0 && ir - cr > 0 ? ir -= 2 * Math.PI : Pe === 1 && ir - cr < 0 && (ir += 2 * Math.PI);
                      for (var Ar = Math.ceil(Math.abs(ir - cr) / (Math.PI / Hn)), kr = 0; kr < Ar; kr++) {
                        var Dr = cr + kr * (ir - cr) / Ar, Tr = cr + (kr + 1) * (ir - cr) / Ar, Pr = 4 / 3 * Math.tan((Tr - Dr) / 4), _r = ar + Math.cos(Zt) * kt * (Math.cos(Dr) - Pr * Math.sin(Dr)) - Math.sin(Zt) * ie * (Math.sin(Dr) + Pr * Math.cos(Dr)), En = Ye + Math.sin(Zt) * kt * (Math.cos(Dr) - Pr * Math.sin(Dr)) + Math.cos(Zt) * ie * (Math.sin(Dr) + Pr * Math.cos(Dr)), an = ar + Math.cos(Zt) * kt * (Math.cos(Tr) + Pr * Math.sin(Tr)) - Math.sin(Zt) * ie * (Math.sin(Tr) - Pr * Math.cos(Tr)), bn = Ye + Math.sin(Zt) * kt * (Math.cos(Tr) + Pr * Math.sin(Tr)) + Math.cos(Zt) * ie * (Math.sin(Tr) - Pr * Math.cos(Tr)), Dn = ar + Math.cos(Zt) * kt * Math.cos(Tr) - Math.sin(Zt) * ie * Math.sin(Tr), on = Ye + Math.sin(Zt) * kt * Math.cos(Tr) + Math.cos(Zt) * ie * Math.sin(Tr);
                        this.addCommand(["curve", kr === 0, kr === Ar - 1, _r, En, an, bn, Dn, on]);
                      }
                    }
                    return Mt = "A", this;
                  }, this.a = function(kt, ie, Zt, me, Pe, Be, je) {
                    return this.A(kt, ie, Zt, me, Pe, Bt + Be, Nt + je);
                  }, this.path = function(kt) {
                    for (var ie, Zt, me, Pe = new xe((kt || "").trim()); ie = Pe.match(/^[astvzqmhlcASTVZQMHLC]/); ) {
                      Pe.matchSeparator();
                      for (var Be = []; Zt = p[ie + Be.length] ? Pe.match(/^[01]/) : Pe.matchNumber(); )
                        Pe.matchSeparator(), Be.length === y[ie] && (this[ie].apply(this, Be), Be = [], ie === "M" ? ie = "L" : ie === "m" && (ie = "l")), Be.push(Number(Zt));
                      if (Be.length === y[ie])
                        this[ie].apply(this, Be);
                      else {
                        rr("SvgPath: command " + ie + " with " + Be.length + " numbers");
                        return;
                      }
                    }
                    return (me = Pe.matchAll()) && rr("SvgPath: unexpected string " + me), this;
                  }, this.getBoundingBox = function() {
                    var kt = [1 / 0, 1 / 0, -1 / 0, -1 / 0];
                    function ie(me) {
                      me[0] < kt[0] && (kt[0] = me[0]), me[2] > kt[2] && (kt[2] = me[2]), me[1] < kt[1] && (kt[1] = me[1]), me[3] > kt[3] && (kt[3] = me[3]);
                    }
                    for (var Zt = 0; Zt < this.pathSegments.length; Zt++)
                      ie(this.pathSegments[Zt].getBoundingBox());
                    return kt[0] === 1 / 0 && (kt[0] = 0), kt[1] === 1 / 0 && (kt[1] = 0), kt[2] === -1 / 0 && (kt[2] = 0), kt[3] === -1 / 0 && (kt[3] = 0), kt;
                  }, this.getPointAtLength = function(kt) {
                    if (kt >= 0 && kt <= this.totalLength) {
                      for (var ie, Zt = 0; Zt < this.pathSegments.length; Zt++) {
                        if (ie = this.pathSegments[Zt].getPointAtLength(kt))
                          return ie;
                        kt -= this.pathSegments[Zt].totalLength;
                      }
                      return this.endPoint;
                    }
                  }, this.transform = function(kt) {
                    this.pathSegments = [], this.startPoint = null, this.endPoint = null, this.totalLength = 0;
                    for (var ie = 0; ie < this.pathCommands.length; ie++) {
                      for (var Zt = this.pathCommands.shift(), me = 3; me < Zt.length; me += 2) {
                        var Pe = Tt([Zt[me], Zt[me + 1]], kt);
                        Zt[me] = Pe[0], Zt[me + 1] = Pe[1];
                      }
                      this.addCommand(Zt);
                    }
                    return this;
                  }, this.mergeShape = function(kt) {
                    for (var ie = 0; ie < kt.pathCommands.length; ie++)
                      this.addCommand(kt.pathCommands[ie].slice());
                    return this;
                  }, this.clone = function() {
                    return new Kt().mergeShape(this);
                  }, this.insertInDocument = function() {
                    for (var kt = 0; kt < this.pathCommands.length; kt++) {
                      var ie = this.pathCommands[kt][0], Zt = this.pathCommands[kt].slice(3);
                      switch (ie) {
                        case "move":
                          n.moveTo(Zt[0], Zt[1]);
                          break;
                        case "line":
                          n.lineTo(Zt[0], Zt[1]);
                          break;
                        case "curve":
                          n.bezierCurveTo(Zt[0], Zt[1], Zt[2], Zt[3], Zt[4], Zt[5]);
                          break;
                        case "close":
                          n.closePath();
                          break;
                      }
                    }
                  }, this.getSubPaths = function() {
                    for (var kt = [], ie = new Kt(), Zt = 0; Zt < this.pathCommands.length; Zt++) {
                      var me = this.pathCommands[Zt], Pe = this.pathCommands[Zt][0];
                      Pe === "move" && Zt !== 0 && (kt.push(ie), ie = new Kt()), ie.addCommand(me);
                    }
                    return kt.push(ie), kt;
                  }, this.getMarkers = function() {
                    for (var kt = [], ie = this.getSubPaths(), Zt = 0; Zt < ie.length; Zt++) {
                      for (var me = ie[Zt], Pe = [], Be = 0; Be < me.pathSegments.length; Be++) {
                        var je = me.pathSegments[Be];
                        if (yt(je.totalLength, 0) || Be === 0 || Be === me.pathSegments.length - 1) {
                          if (je.hasStart) {
                            var Je = je.getPointAtLength(0), nr = Pe.pop();
                            nr && (Je[2] = 0.5 * (nr[2] + Je[2])), Pe.push(Je);
                          }
                          if (je.hasEnd) {
                            var ve = je.getPointAtLength(je.totalLength);
                            Pe.push(ve);
                          }
                        }
                      }
                      kt = kt.concat(Pe);
                    }
                    return kt;
                  };
                }, Qt = function(Pt, re) {
                  var Bt = /* @__PURE__ */ Object.create(null), Nt = null;
                  this.name = Pt.nodeName, this.isOuterElement = Pt === i || !Pt.parentNode, this.inherits = re || (this.isOuterElement ? null : Ae(Pt.parentNode, null)), this.stack = this.inherits ? this.inherits.stack.concat(Pt) : [Pt], this.style = L(typeof Pt.getAttribute == "function" && Pt.getAttribute("style")), this.css = Mn ? getComputedStyle(Pt) : _(Pt), this.allowedChildren = [], this.attr = function(Mt) {
                    if (typeof Pt.getAttribute == "function")
                      return Pt.getAttribute(Mt);
                  }, this.resolveUrl = function(Mt) {
                    var jt = (Mt || "").match(/^\s*(?:url\("(.*)#(.*)"\)|url\('(.*)#(.*)'\)|url\((.*)#(.*)\)|(.*)#(.*))\s*$/) || [], ee = jt[1] || jt[3] || jt[5] || jt[7], kt = jt[2] || jt[4] || jt[6] || jt[8];
                    if (kt) {
                      if (!ee) {
                        var ie = i.getElementById(kt);
                        if (ie) {
                          if (this.stack.indexOf(ie) === -1)
                            return ie;
                          rr('SVGtoPDF: loop of circular references for id "' + kt + '"');
                          return;
                        }
                      }
                      if (Wr) {
                        var Zt = Ue[ee];
                        if (!Zt) {
                          Zt = Wr(ee), Et(Zt) || (Zt = [Zt]);
                          for (var me = 0; me < Zt.length; me++)
                            typeof Zt[me] == "string" && (Zt[me] = ht(Zt[me]));
                          Ue[ee] = Zt;
                        }
                        for (var Pe = 0; Pe < Zt.length; Pe++) {
                          var Be = Zt[Pe].getElementById(kt);
                          if (Be) {
                            if (this.stack.indexOf(Be) === -1)
                              return Be;
                            rr('SVGtoPDF: loop of circular references for id "' + ee + "#" + kt + '"');
                            return;
                          }
                        }
                      }
                    }
                  }, this.computeUnits = function(Mt, jt, ee, kt) {
                    return jt === "%" ? parseFloat(Mt) / 100 * (kt || ee != null ? ee : this.getViewport()) : jt === "ex" || jt === "em" ? Mt * {
                      em: 1,
                      ex: 0.5
                    }[jt] * (kt ? ee : this.get("font-size")) : Mt * {
                      "": 1,
                      px: 1,
                      pt: 96 / 72,
                      cm: 96 / 2.54,
                      mm: 96 / 25.4,
                      in: 96,
                      pc: 96 / 6
                    }[jt];
                  }, this.computeLength = function(Mt, jt, ee, kt) {
                    var ie = new xe((Mt || "").trim()), Zt, me;
                    return typeof (Zt = ie.matchNumber()) == "string" && typeof (me = ie.matchLengthUnit()) == "string" && !ie.matchAll() ? this.computeUnits(Zt, me, jt, kt) : ee;
                  }, this.computeLengthList = function(Mt, jt, ee) {
                    for (var kt = new xe((Mt || "").trim()), ie = [], Zt, me; typeof (Zt = kt.matchNumber()) == "string" && typeof (me = kt.matchLengthUnit()) == "string"; )
                      ie.push(this.computeUnits(Zt, me, jt)), kt.matchSeparator();
                    if (!(ee && kt.matchAll()))
                      return ie;
                  }, this.getLength = function(Mt, jt, ee) {
                    return this.computeLength(this.attr(Mt), jt, ee);
                  }, this.getLengthList = function(Mt, jt) {
                    return this.computeLengthList(this.attr(Mt), jt);
                  }, this.getUrl = function(Mt) {
                    return this.resolveUrl(this.attr(Mt));
                  }, this.getNumberList = function(Mt) {
                    for (var jt = new xe((this.attr(Mt) || "").trim()), ee = [], kt; kt = jt.matchNumber(); )
                      ee.push(Number(kt)), jt.matchSeparator();
                    return ee.error = jt.matchAll(), ee;
                  }, this.getViewbox = function(Mt, jt) {
                    var ee = this.getNumberList(Mt);
                    return ee.length === 4 && ee[2] >= 0 && ee[3] >= 0 ? ee : jt;
                  }, this.getPercent = function(Mt, jt) {
                    var ee = this.attr(Mt), kt = new xe((ee || "").trim()), ie = kt.matchNumber();
                    return !ie || (kt.match("%") && (ie *= 0.01), kt.matchAll()) ? jt : Math.max(0, Math.min(1, ie));
                  }, this.chooseValue = function(Mt) {
                    for (var jt = 0; jt < arguments.length; jt++)
                      if (arguments[jt] != null && arguments[jt] === arguments[jt])
                        return arguments[jt];
                    return arguments[arguments.length - 1];
                  }, this.get = function(Mt) {
                    if (Bt[Mt] !== void 0)
                      return Bt[Mt];
                    for (var jt = e[Mt] || {}, ee, kt, ie = 0; ie < 3; ie++) {
                      switch (ie) {
                        case 0:
                          Mt !== "transform" && (ee = this.css[jt.css || Mt]);
                          break;
                        case 1:
                          ee = this.style[Mt];
                          break;
                        case 2:
                          ee = this.attr(Mt);
                          break;
                      }
                      if (ee === "inherit" && (kt = this.inherits ? this.inherits.get(Mt) : jt.initial, kt != null) || jt.values != null && (kt = jt.values[ee], kt != null))
                        return Bt[Mt] = kt;
                      if (ee != null) {
                        var Zt = void 0;
                        switch (Mt) {
                          case "font-size":
                            kt = this.computeLength(ee, this.inherits ? this.inherits.get(Mt) : jt.initial, void 0, !0);
                            break;
                          case "baseline-shift":
                            kt = this.computeLength(ee, this.get("font-size"));
                            break;
                          case "font-family":
                            kt = ee || void 0;
                            break;
                          case "opacity":
                          case "stroke-opacity":
                          case "fill-opacity":
                          case "stop-opacity":
                            Zt = parseFloat(ee), isNaN(Zt) || (kt = Math.max(0, Math.min(1, Zt)));
                            break;
                          case "transform":
                            kt = k(ee);
                            break;
                          case "stroke-dasharray":
                            if (ee === "none")
                              kt = [];
                            else if (Zt = this.computeLengthList(ee, this.getViewport(), !0)) {
                              for (var me = 0, Pe = !1, Be = 0; Be < Zt.length; Be++)
                                Zt[Be] < 0 && (Pe = !0), me += Zt[Be];
                              Pe || (Zt.length % 2 === 1 && (Zt = Zt.concat(Zt)), kt = me === 0 ? [] : Zt);
                            }
                            break;
                          case "color":
                            ee === "none" || ee === "transparent" ? kt = "none" : kt = nt(ee);
                            break;
                          case "fill":
                          case "stroke":
                            if (ee === "none" || ee === "transparent")
                              kt = "none";
                            else if (ee === "currentColor")
                              kt = this.get("color");
                            else {
                              if (Zt = nt(ee))
                                return Zt;
                              if (Zt = (ee || "").split(" ")) {
                                var je = this.resolveUrl(Zt[0]), Je = nt(Zt[1]);
                                je == null ? kt = Je : je.nodeName === "linearGradient" || je.nodeName === "radialGradient" ? kt = new mt(je, null, Je) : je.nodeName === "pattern" ? kt = new j(je, null, Je) : kt = Je;
                              }
                            }
                            break;
                          case "stop-color":
                            ee === "none" || ee === "transparent" ? kt = "none" : ee === "currentColor" ? kt = this.get("color") : kt = nt(ee);
                            break;
                          case "marker-start":
                          case "marker-mid":
                          case "marker-end":
                          case "clip-path":
                          case "mask":
                            ee === "none" ? kt = "none" : kt = this.resolveUrl(ee);
                            break;
                          case "stroke-width":
                            Zt = this.computeLength(ee, this.getViewport()), Zt != null && Zt >= 0 && (kt = Zt);
                            break;
                          case "stroke-miterlimit":
                            Zt = parseFloat(ee), Zt != null && Zt >= 1 && (kt = Zt);
                            break;
                          case "word-spacing":
                          case "letter-spacing":
                            kt = this.computeLength(ee, this.getViewport());
                            break;
                          case "stroke-dashoffset":
                            if (kt = this.computeLength(ee, this.getViewport()), kt != null && kt < 0)
                              for (var nr = this.get("stroke-dasharray"), ve = 0; ve < nr.length; ve++)
                                kt += nr[ve];
                            break;
                        }
                        if (kt != null)
                          return Bt[Mt] = kt;
                      }
                    }
                    return Bt[Mt] = jt.inherit && this.inherits ? this.inherits.get(Mt) : jt.initial;
                  }, this.getChildren = function() {
                    if (Nt != null)
                      return Nt;
                    for (var Mt = [], jt = 0; jt < Pt.childNodes.length; jt++) {
                      var ee = Pt.childNodes[jt];
                      !ee.error && this.allowedChildren.indexOf(ee.nodeName) !== -1 && Mt.push(Ae(ee, this));
                    }
                    return Nt = Mt;
                  }, this.getParentVWidth = function() {
                    return this.inherits ? this.inherits.getVWidth() : Ir;
                  }, this.getParentVHeight = function() {
                    return this.inherits ? this.inherits.getVHeight() : Zr;
                  }, this.getParentViewport = function() {
                    return Math.sqrt(0.5 * this.getParentVWidth() * this.getParentVWidth() + 0.5 * this.getParentVHeight() * this.getParentVHeight());
                  }, this.getVWidth = function() {
                    return this.getParentVWidth();
                  }, this.getVHeight = function() {
                    return this.getParentVHeight();
                  }, this.getViewport = function() {
                    return Math.sqrt(0.5 * this.getVWidth() * this.getVWidth() + 0.5 * this.getVHeight() * this.getVHeight());
                  }, this.getBoundingBox = function() {
                    var Mt = this.getBoundingShape();
                    return Mt.getBoundingBox();
                  };
                }, le = function(Pt, re) {
                  Qt.call(this, Pt, re), this.transform = function() {
                    n.transform.apply(n, this.getTransformation());
                  }, this.clip = function() {
                    if (this.get("clip-path") !== "none") {
                      var Bt = new Le(this.get("clip-path"), null);
                      return Bt.useMask(this.getBoundingBox()), !0;
                    }
                  }, this.mask = function() {
                    if (this.get("mask") !== "none") {
                      var Bt = new De(this.get("mask"), null);
                      return Bt.useMask(this.getBoundingBox()), !0;
                    }
                  }, this.getFill = function(Bt, Nt) {
                    var Mt = this.get("opacity"), jt = this.get("fill"), ee = this.get("fill-opacity");
                    if (Bt)
                      return a.white;
                    if (jt !== "none" && Mt && ee)
                      return jt instanceof mt || jt instanceof j ? jt.getPaint(this.getBoundingBox(), ee * Mt, Bt, Nt) : xt(jt, ee * Mt, Nt);
                  }, this.getStroke = function(Bt, Nt) {
                    var Mt = this.get("opacity"), jt = this.get("stroke"), ee = this.get("stroke-opacity");
                    if (!(Bt || st(this.get("stroke-width"), 0)) && jt !== "none" && Mt && ee)
                      return jt instanceof mt || jt instanceof j ? jt.getPaint(this.getBoundingBox(), ee * Mt, Bt, Nt) : xt(jt, ee * Mt, Nt);
                  };
                }, de = function(Pt, re) {
                  le.call(this, Pt, re), this.allowedChildren = ["use", "g", "a", "svg", "image", "rect", "circle", "ellipse", "line", "polyline", "polygon", "path", "text"], this.getBoundingShape = function() {
                    for (var Bt = new zt(), Nt = this.getChildren(), Mt = 0; Mt < Nt.length; Mt++)
                      if (Nt[Mt].get("display") !== "none" && typeof Nt[Mt].getBoundingShape == "function") {
                        var jt = Nt[Mt].getBoundingShape().clone();
                        typeof Nt[Mt].getTransformation == "function" && jt.transform(Nt[Mt].getTransformation()), Bt.mergeShape(jt);
                      }
                    return Bt;
                  }, this.drawChildren = function(Bt, Nt) {
                    for (var Mt = this.getChildren(), jt = 0; jt < Mt.length; jt++)
                      Mt[jt].get("display") !== "none" && typeof Mt[jt].drawInDocument == "function" && Mt[jt].drawInDocument(Bt, Nt);
                  };
                }, be = function(Pt, re) {
                  de.call(this, Pt, re), this.drawContent = function(Bt, Nt) {
                    this.transform();
                    var Mt = this.clip(), jt = this.mask(), ee;
                    (this.get("opacity") < 1 || Mt || jt) && !Bt && (ee = m(Lt())), this.drawChildren(Bt, Nt), ee && (w(ee), n.fillOpacity(this.get("opacity")), D(ee));
                  };
                }, Oe = function(Pt, re) {
                  be.call(this, Pt, re);
                  var Bt = this.getLength("x", this.getVWidth(), 0), Nt = this.getLength("y", this.getVHeight(), 0), Mt = this.getUrl("href") || this.getUrl("xlink:href");
                  Mt && (Mt = Ae(Mt, this)), this.getChildren = function() {
                    return Mt ? [Mt] : [];
                  }, this.drawInDocument = function(jt, ee) {
                    n.save(), this.drawContent(jt, ee), n.restore();
                  }, this.getTransformation = function() {
                    return bt(this.get("transform"), [1, 0, 0, 1, Bt, Nt]);
                  };
                }, Fe = function(Pt, re) {
                  be.call(this, Pt, re);
                  var Bt = this.getLength("width", this.getParentVWidth(), this.getParentVWidth()), Nt = this.getLength("height", this.getParentVHeight(), this.getParentVHeight());
                  re instanceof Oe && (Bt = re.getLength("width", re.getParentVWidth(), Bt), Nt = re.getLength("height", re.getParentVHeight(), Nt));
                  var Mt = (this.attr("preserveAspectRatio") || "").trim(), jt = this.getViewbox("viewBox", [0, 0, Bt, Nt]);
                  this.getVWidth = function() {
                    return jt[2];
                  }, this.getVHeight = function() {
                    return jt[3];
                  }, this.drawInDocument = function(ee, kt) {
                    n.save(), this.drawContent(ee, kt), n.restore();
                  }, this.getTransformation = function() {
                    return bt(S(Mt, Bt, Nt, jt[2], jt[3]), [1, 0, 0, 1, -jt[0], -jt[1]]);
                  };
                }, Ft = function(Pt, re) {
                  be.call(this, Pt, re), this.drawInDocument = function(Bt, Nt) {
                    n.save(), this.link && !Bt && !Nt && this.addLink(), this.drawContent(Bt, Nt), n.restore();
                  }, this.getTransformation = function() {
                    return this.get("transform");
                  };
                }, fe = function(Pt, re) {
                  re && re.isText ? (rn.call(this, Pt, re), this.allowedChildren = ["textPath", "tspan", "#text", "#cdata-section", "a"]) : Ft.call(this, Pt, re), this.link = this.attr("href") || this.attr("xlink:href"), this.addLink = function() {
                    if (this.link.match(/^(?:[a-z][a-z0-9+.-]*:|\/\/)?/i) && this.getChildren().length) {
                      var Bt = this.getBoundingShape().transform(It()).getBoundingBox();
                      J(Bt[0], Bt[1], Bt[2], Bt[3], this.link);
                    }
                  };
                }, ot = function(Pt, re) {
                  be.call(this, Pt, re);
                  var Bt = this.getLength("width", this.getParentVWidth(), this.getParentVWidth()), Nt = this.getLength("height", this.getParentVHeight(), this.getParentVHeight()), Mt = this.getLength("x", this.getParentVWidth(), 0), jt = this.getLength("y", this.getParentVHeight(), 0);
                  re instanceof Oe && (Bt = re.getLength("width", re.getParentVWidth(), Bt), Nt = re.getLength("height", re.getParentVHeight(), Nt));
                  var ee = this.attr("preserveAspectRatio"), kt = this.getViewbox("viewBox", [0, 0, Bt, Nt]);
                  this.isOuterElement && Cn && (Mt = jt = 0, Bt = Ir, Nt = Zr, ee = Cn), this.getVWidth = function() {
                    return kt[2];
                  }, this.getVHeight = function() {
                    return kt[3];
                  }, this.drawInDocument = function(ie, Zt) {
                    n.save(), this.get("overflow") === "hidden" && (new zt().M(Mt, jt).L(Mt + Bt, jt).L(Mt + Bt, jt + Nt).L(Mt, jt + Nt).Z().transform(this.get("transform")).insertInDocument(), n.clip()), this.drawContent(ie, Zt), n.restore();
                  }, this.getTransformation = function() {
                    return bt(this.get("transform"), [1, 0, 0, 1, Mt, jt], S(ee, Bt, Nt, kt[2], kt[3]), [1, 0, 0, 1, -kt[0], -kt[1]]);
                  };
                }, Y = function(Pt, re) {
                  le.call(this, Pt, re);
                  var Bt = Mr(this.attr("href") || this.attr("xlink:href") || ""), Nt = this.getLength("x", this.getVWidth(), 0), Mt = this.getLength("y", this.getVHeight(), 0), jt = this.getLength("width", this.getVWidth(), "auto"), ee = this.getLength("height", this.getVHeight(), "auto"), kt;
                  try {
                    kt = n.openImage(Bt);
                  } catch {
                    rr('SVGElemImage: failed to open image "' + Bt + '" in PDFKit');
                  }
                  kt && (jt === "auto" && ee !== "auto" ? jt = ee * kt.width / kt.height : ee === "auto" && jt !== "auto" ? ee = jt * kt.height / kt.width : jt === "auto" && ee === "auto" && (jt = kt.width, ee = kt.height)), (jt === "auto" || jt < 0) && (jt = 0), (ee === "auto" || ee < 0) && (ee = 0), this.getTransformation = function() {
                    return this.get("transform");
                  }, this.getBoundingShape = function() {
                    return new zt().M(Nt, Mt).L(Nt + jt, Mt).M(Nt + jt, Mt + ee).L(Nt, Mt + ee);
                  }, this.drawInDocument = function(ie, Zt) {
                    this.get("visibility") === "hidden" || !kt || (n.save(), this.transform(), this.get("overflow") === "hidden" && n.rect(Nt, Mt, jt, ee).clip(), this.clip(), this.mask(), n.translate(Nt, Mt), n.transform.apply(n, S(this.attr("preserveAspectRatio"), jt, ee, kt ? kt.width : jt, kt ? kt.height : ee)), ie ? (n.rect(0, 0, kt.width, kt.height), U(a.white).fill()) : (n.fillOpacity(this.get("opacity")), n.image(kt, 0, 0)), n.restore());
                  };
                }, j = function Kt(Pt, re, Bt) {
                  de.call(this, Pt, re), this.ref = function() {
                    var jt = this.getUrl("href") || this.getUrl("xlink:href");
                    if (jt && jt.nodeName === Pt.nodeName)
                      return new Kt(jt, re, Bt);
                  }.call(this);
                  var Nt = this.attr;
                  this.attr = function(jt) {
                    var ee = Nt.call(this, jt);
                    return ee != null || jt === "href" || jt === "xlink:href" ? ee : this.ref ? this.ref.attr(jt) : null;
                  };
                  var Mt = this.getChildren;
                  this.getChildren = function() {
                    var jt = Mt.call(this);
                    return jt.length > 0 ? jt : this.ref ? this.ref.getChildren() : [];
                  }, this.getPaint = function(jt, ee, kt, ie) {
                    var Zt = this.attr("patternUnits") !== "userSpaceOnUse", me = this.attr("patternContentUnits") === "objectBoundingBox", Pe = this.getLength("x", Zt ? 1 : this.getParentVWidth(), 0), Be = this.getLength("y", Zt ? 1 : this.getParentVHeight(), 0), je = this.getLength("width", Zt ? 1 : this.getParentVWidth(), 0), Je = this.getLength("height", Zt ? 1 : this.getParentVHeight(), 0);
                    me && !Zt ? (Pe = (Pe - jt[0]) / (jt[2] - jt[0]) || 0, Be = (Be - jt[1]) / (jt[3] - jt[1]) || 0, je = je / (jt[2] - jt[0]) || 0, Je = Je / (jt[3] - jt[1]) || 0) : !me && Zt && (Pe = jt[0] + Pe * (jt[2] - jt[0]), Be = jt[1] + Be * (jt[3] - jt[1]), je = je * (jt[2] - jt[0]), Je = Je * (jt[3] - jt[1]));
                    var nr = this.getViewbox("viewBox", [0, 0, je, Je]), ve = (this.attr("preserveAspectRatio") || "").trim(), Re = bt(S(ve, je, Je, nr[2], nr[3], 0), [1, 0, 0, 1, -nr[0], -nr[1]]), $e = k(this.attr("patternTransform"));
                    if (me && ($e = bt([jt[2] - jt[0], 0, 0, jt[3] - jt[1], jt[0], jt[1]], $e)), $e = bt($e, [1, 0, 0, 1, Pe, Be]), ($e = $($e)) && (Re = $(Re)) && (je = G(je)) && (Je = G(Je))) {
                      var We = m([0, 0, je, Je]);
                      return n.transform.apply(n, Re), this.drawChildren(kt, ie), w(We), [E(We, je, Je, $e), ee];
                    } else
                      return Bt ? [Bt[0], Bt[1] * ee] : void 0;
                  }, this.getVWidth = function() {
                    var jt = this.attr("patternUnits") !== "userSpaceOnUse", ee = this.getLength("width", jt ? 1 : this.getParentVWidth(), 0);
                    return this.getViewbox("viewBox", [0, 0, ee, 0])[2];
                  }, this.getVHeight = function() {
                    var jt = this.attr("patternUnits") !== "userSpaceOnUse", ee = this.getLength("height", jt ? 1 : this.getParentVHeight(), 0);
                    return this.getViewbox("viewBox", [0, 0, 0, ee])[3];
                  };
                }, mt = function Kt(Pt, re, Bt) {
                  Qt.call(this, Pt, re), this.allowedChildren = ["stop"], this.ref = function() {
                    var jt = this.getUrl("href") || this.getUrl("xlink:href");
                    if (jt && jt.nodeName === Pt.nodeName)
                      return new Kt(jt, re, Bt);
                  }.call(this);
                  var Nt = this.attr;
                  this.attr = function(jt) {
                    var ee = Nt.call(this, jt);
                    return ee != null || jt === "href" || jt === "xlink:href" ? ee : this.ref ? this.ref.attr(jt) : null;
                  };
                  var Mt = this.getChildren;
                  this.getChildren = function() {
                    var jt = Mt.call(this);
                    return jt.length > 0 ? jt : this.ref ? this.ref.getChildren() : [];
                  }, this.getPaint = function(jt, ee, kt, ie) {
                    var Zt = this.getChildren();
                    if (Zt.length !== 0) {
                      if (Zt.length === 1) {
                        var me = Zt[0], Pe = me.get("stop-color");
                        return Pe === "none" ? void 0 : xt(Pe, me.get("stop-opacity") * ee, ie);
                      }
                      var Be = this.attr("gradientUnits") !== "userSpaceOnUse", je = k(this.attr("gradientTransform")), Je = this.attr("spreadMethod"), nr, ve, Re, $e, We, ar, Ye = 0, cr = 0, ir = 1;
                      if (Be && (je = bt([jt[2] - jt[0], 0, 0, jt[3] - jt[1], jt[0], jt[1]], je)), je = $(je)) {
                        if (this.name === "linearGradient")
                          ve = this.getLength("x1", Be ? 1 : this.getVWidth(), 0), Re = this.getLength("x2", Be ? 1 : this.getVWidth(), Be ? 1 : this.getVWidth()), $e = this.getLength("y1", Be ? 1 : this.getVHeight(), 0), We = this.getLength("y2", Be ? 1 : this.getVHeight(), 0);
                        else {
                          Re = this.getLength("cx", Be ? 1 : this.getVWidth(), Be ? 0.5 : 0.5 * this.getVWidth()), We = this.getLength("cy", Be ? 1 : this.getVHeight(), Be ? 0.5 : 0.5 * this.getVHeight()), ar = this.getLength("r", Be ? 1 : this.getViewport(), Be ? 0.5 : 0.5 * this.getViewport()), ve = this.getLength("fx", Be ? 1 : this.getVWidth(), Re), $e = this.getLength("fy", Be ? 1 : this.getVHeight(), We), ar < 0 && rr("SvgElemGradient: negative r value");
                          var Ar = Math.sqrt(Math.pow(Re - ve, 2) + Math.pow(We - $e, 2)), kr = 1;
                          Ar > ar && (kr = ar / Ar, ve = Re + (ve - Re) * kr, $e = We + ($e - We) * kr), ar = Math.max(ar, Ar * kr * (1 + 1e-6));
                        }
                        if (Je === "reflect" || Je === "repeat") {
                          var Dr = Ut(je), Tr = Tt([jt[0], jt[1]], Dr), Pr = Tt([jt[2], jt[1]], Dr), _r = Tt([jt[2], jt[3]], Dr), En = Tt([jt[0], jt[3]], Dr);
                          this.name === "linearGradient" ? (Ye = Math.max((Tr[0] - Re) * (Re - ve) + (Tr[1] - We) * (We - $e), (Pr[0] - Re) * (Re - ve) + (Pr[1] - We) * (We - $e), (_r[0] - Re) * (Re - ve) + (_r[1] - We) * (We - $e), (En[0] - Re) * (Re - ve) + (En[1] - We) * (We - $e)) / (Math.pow(Re - ve, 2) + Math.pow(We - $e, 2)), cr = Math.max((Tr[0] - ve) * (ve - Re) + (Tr[1] - $e) * ($e - We), (Pr[0] - ve) * (ve - Re) + (Pr[1] - $e) * ($e - We), (_r[0] - ve) * (ve - Re) + (_r[1] - $e) * ($e - We), (En[0] - ve) * (ve - Re) + (En[1] - $e) * ($e - We)) / (Math.pow(Re - ve, 2) + Math.pow(We - $e, 2))) : Ye = Math.sqrt(Math.max(Math.pow(Tr[0] - Re, 2) + Math.pow(Tr[1] - We, 2), Math.pow(Pr[0] - Re, 2) + Math.pow(Pr[1] - We, 2), Math.pow(_r[0] - Re, 2) + Math.pow(_r[1] - We, 2), Math.pow(En[0] - Re, 2) + Math.pow(En[1] - We, 2))) / ar - 1, Ye = Math.ceil(Ye + 0.5), cr = Math.ceil(cr + 0.5), ir = cr + 1 + Ye;
                        }
                        this.name === "linearGradient" ? nr = n.linearGradient(ve - cr * (Re - ve), $e - cr * (We - $e), Re + Ye * (Re - ve), We + Ye * (We - $e)) : nr = n.radialGradient(ve, $e, 0, Re, We, ar + Ye * ar);
                        for (var an = 0; an < ir; an++)
                          for (var bn = 0, Dn = Je !== "reflect" || (an - cr) % 2 === 0, on = 0; on < Zt.length; on++) {
                            var cn = Zt[Dn ? on : Zt.length - 1 - on], ln = cn.get("stop-color");
                            ln === "none" && (ln = a.transparent), ln = xt(ln, cn.get("stop-opacity") * ee, ie), bn = Math.max(bn, Dn ? cn.getPercent("offset", 0) : 1 - cn.getPercent("offset", 0)), on === 0 && ln[0].length === 4 && (nr._colorSpace = "DeviceCMYK"), on === 0 && bn > 0 && nr.stop((an + 0) / ir, ln[0], ln[1]), nr.stop((an + bn) / (Ye + cr + 1), ln[0], ln[1]), on === Zt.length - 1 && bn < 1 && nr.stop((an + 1) / ir, ln[0], ln[1]);
                          }
                        return nr.setTransform.apply(nr, je), [nr, 1];
                      } else
                        return Bt ? [Bt[0], Bt[1] * ee] : void 0;
                    }
                  };
                }, at = function(Pt, re) {
                  le.call(this, Pt, re), this.dashScale = 1, this.getBoundingShape = function() {
                    return this.shape;
                  }, this.getTransformation = function() {
                    return this.get("transform");
                  }, this.drawInDocument = function(Bt, Nt) {
                    if (!(this.get("visibility") === "hidden" || !this.shape)) {
                      if (n.save(), this.transform(), this.clip(), Bt)
                        this.shape.insertInDocument(), U(a.white), n.fill(this.get("clip-rule"));
                      else {
                        var Mt = this.mask(), jt;
                        Mt && (jt = m(Lt()));
                        var ee = this.shape.getSubPaths(), kt = this.getFill(Bt, Nt), ie = this.getStroke(Bt, Nt), Zt = this.get("stroke-width"), me = this.get("stroke-linecap");
                        if (kt || ie) {
                          if (kt && U(kt), ie) {
                            for (var Pe = 0; Pe < ee.length; Pe++)
                              if (st(ee[Pe].totalLength, 0) && (me === "square" || me === "round") && Zt > 0 && ee[Pe].startPoint && ee[Pe].startPoint.length > 1) {
                                var Be = ee[Pe].startPoint[0], je = ee[Pe].startPoint[1];
                                U(ie), me === "square" ? n.rect(Be - 0.5 * Zt, je - 0.5 * Zt, Zt, Zt) : me === "round" && n.circle(Be, je, 0.5 * Zt), n.fill();
                              }
                            var Je = this.get("stroke-dasharray"), nr = this.get("stroke-dashoffset");
                            if (yt(this.dashScale, 1)) {
                              for (var ve = 0; ve < Je.length; ve++)
                                Je[ve] *= this.dashScale;
                              nr *= this.dashScale;
                            }
                            W(ie), n.lineWidth(Zt).miterLimit(this.get("stroke-miterlimit")).lineJoin(this.get("stroke-linejoin")).lineCap(me).dash(Je, {
                              phase: nr
                            });
                          }
                          for (var Re = 0; Re < ee.length; Re++)
                            ee[Re].totalLength > 0 && ee[Re].insertInDocument();
                          kt && ie ? n.fillAndStroke(this.get("fill-rule")) : kt ? n.fill(this.get("fill-rule")) : ie && n.stroke();
                        }
                        var $e = this.get("marker-start"), We = this.get("marker-mid"), ar = this.get("marker-end");
                        if ($e !== "none" || We !== "none" || ar !== "none") {
                          var Ye = this.shape.getMarkers();
                          if ($e !== "none") {
                            var cr = new oe($e, null);
                            cr.drawMarker(!1, Nt, Ye[0], Zt);
                          }
                          if (We !== "none")
                            for (var ir = 1; ir < Ye.length - 1; ir++) {
                              var Ar = new oe(We, null);
                              Ar.drawMarker(!1, Nt, Ye[ir], Zt);
                            }
                          if (ar !== "none") {
                            var kr = new oe(ar, null);
                            kr.drawMarker(!1, Nt, Ye[Ye.length - 1], Zt);
                          }
                        }
                        jt && (w(jt), D(jt));
                      }
                      n.restore();
                    }
                  };
                }, Wt = function(Pt, re) {
                  at.call(this, Pt, re);
                  var Bt = this.getLength("x", this.getVWidth(), 0), Nt = this.getLength("y", this.getVHeight(), 0), Mt = this.getLength("width", this.getVWidth(), 0), jt = this.getLength("height", this.getVHeight(), 0), ee = this.getLength("rx", this.getVWidth()), kt = this.getLength("ry", this.getVHeight());
                  ee === void 0 && kt === void 0 ? ee = kt = 0 : ee === void 0 && kt !== void 0 ? ee = kt : ee !== void 0 && kt === void 0 && (kt = ee), Mt > 0 && jt > 0 ? ee && kt ? (ee = Math.min(ee, 0.5 * Mt), kt = Math.min(kt, 0.5 * jt), this.shape = new zt().M(Bt + ee, Nt).L(Bt + Mt - ee, Nt).A(ee, kt, 0, 0, 1, Bt + Mt, Nt + kt).L(Bt + Mt, Nt + jt - kt).A(ee, kt, 0, 0, 1, Bt + Mt - ee, Nt + jt).L(Bt + ee, Nt + jt).A(ee, kt, 0, 0, 1, Bt, Nt + jt - kt).L(Bt, Nt + kt).A(ee, kt, 0, 0, 1, Bt + ee, Nt).Z()) : this.shape = new zt().M(Bt, Nt).L(Bt + Mt, Nt).L(Bt + Mt, Nt + jt).L(Bt, Nt + jt).Z() : this.shape = new zt();
                }, _t = function(Pt, re) {
                  at.call(this, Pt, re);
                  var Bt = this.getLength("cx", this.getVWidth(), 0), Nt = this.getLength("cy", this.getVHeight(), 0), Mt = this.getLength("r", this.getViewport(), 0);
                  Mt > 0 ? this.shape = new zt().M(Bt + Mt, Nt).A(Mt, Mt, 0, 0, 1, Bt - Mt, Nt).A(Mt, Mt, 0, 0, 1, Bt + Mt, Nt).Z() : this.shape = new zt();
                }, Q = function(Pt, re) {
                  at.call(this, Pt, re);
                  var Bt = this.getLength("cx", this.getVWidth(), 0), Nt = this.getLength("cy", this.getVHeight(), 0), Mt = this.getLength("rx", this.getVWidth(), 0), jt = this.getLength("ry", this.getVHeight(), 0);
                  Mt > 0 && jt > 0 ? this.shape = new zt().M(Bt + Mt, Nt).A(Mt, jt, 0, 0, 1, Bt - Mt, Nt).A(Mt, jt, 0, 0, 1, Bt + Mt, Nt).Z() : this.shape = new zt();
                }, Jt = function(Pt, re) {
                  at.call(this, Pt, re);
                  var Bt = this.getLength("x1", this.getVWidth(), 0), Nt = this.getLength("y1", this.getVHeight(), 0), Mt = this.getLength("x2", this.getVWidth(), 0), jt = this.getLength("y2", this.getVHeight(), 0);
                  this.shape = new zt().M(Bt, Nt).L(Mt, jt);
                }, te = function(Pt, re) {
                  at.call(this, Pt, re);
                  var Bt = this.getNumberList("points");
                  this.shape = new zt();
                  for (var Nt = 0; Nt < Bt.length - 1; Nt += 2)
                    Nt === 0 ? this.shape.M(Bt[Nt], Bt[Nt + 1]) : this.shape.L(Bt[Nt], Bt[Nt + 1]);
                  Bt.error && rr("SvgElemPolygon: unexpected string " + Bt.error), Bt.length % 2 === 1 && rr("SvgElemPolyline: uneven number of coordinates");
                }, Ct = function(Pt, re) {
                  at.call(this, Pt, re);
                  var Bt = this.getNumberList("points");
                  this.shape = new zt();
                  for (var Nt = 0; Nt < Bt.length - 1; Nt += 2)
                    Nt === 0 ? this.shape.M(Bt[Nt], Bt[Nt + 1]) : this.shape.L(Bt[Nt], Bt[Nt + 1]);
                  this.shape.Z(), Bt.error && rr("SvgElemPolygon: unexpected string " + Bt.error), Bt.length % 2 === 1 && rr("SvgElemPolygon: uneven number of coordinates");
                }, Ht = function(Pt, re) {
                  at.call(this, Pt, re), this.shape = new zt().path(this.attr("d"));
                  var Bt = this.getLength("pathLength", this.getViewport());
                  this.pathLength = Bt > 0 ? Bt : void 0, this.dashScale = this.pathLength !== void 0 ? this.shape.totalLength / this.pathLength : 1;
                }, oe = function(Pt, re) {
                  de.call(this, Pt, re);
                  var Bt = this.getLength("markerWidth", this.getParentVWidth(), 3), Nt = this.getLength("markerHeight", this.getParentVHeight(), 3), Mt = this.getViewbox("viewBox", [0, 0, Bt, Nt]);
                  this.getVWidth = function() {
                    return Mt[2];
                  }, this.getVHeight = function() {
                    return Mt[3];
                  }, this.drawMarker = function(jt, ee, kt, ie) {
                    n.save();
                    var Zt = this.attr("orient"), me = this.attr("markerUnits"), Pe = Zt === "auto" ? kt[2] : (parseFloat(Zt) || 0) * Math.PI / 180, Be = me === "userSpaceOnUse" ? 1 : ie;
                    n.transform(Math.cos(Pe) * Be, Math.sin(Pe) * Be, -Math.sin(Pe) * Be, Math.cos(Pe) * Be, kt[0], kt[1]);
                    var je = this.getLength("refX", this.getVWidth(), 0), Je = this.getLength("refY", this.getVHeight(), 0), nr = S(this.attr("preserveAspectRatio"), Bt, Nt, Mt[2], Mt[3], 0.5);
                    this.get("overflow") === "hidden" && n.rect(nr[0] * (Mt[0] + Mt[2] / 2 - je) - Bt / 2, nr[3] * (Mt[1] + Mt[3] / 2 - Je) - Nt / 2, Bt, Nt).clip(), n.transform.apply(n, nr), n.translate(-je, -Je);
                    var ve;
                    this.get("opacity") < 1 && !jt && (ve = m(Lt())), this.drawChildren(jt, ee), ve && (w(ve), n.fillOpacity(this.get("opacity")), D(ve)), n.restore();
                  };
                }, Le = function(Pt, re) {
                  de.call(this, Pt, re), this.useMask = function(Bt) {
                    var Nt = m(Lt());
                    n.save(), this.attr("clipPathUnits") === "objectBoundingBox" && n.transform(Bt[2] - Bt[0], 0, 0, Bt[3] - Bt[1], Bt[0], Bt[1]), this.clip(), this.drawChildren(!0, !1), n.restore(), w(Nt), I(Nt, !0);
                  };
                }, De = function(Pt, re) {
                  de.call(this, Pt, re), this.useMask = function(Bt) {
                    var Nt = m(Lt());
                    n.save();
                    var Mt, jt, ee, kt;
                    this.attr("maskUnits") === "userSpaceOnUse" ? (Mt = this.getLength("x", this.getVWidth(), -0.1 * (Bt[2] - Bt[0]) + Bt[0]), jt = this.getLength("y", this.getVHeight(), -0.1 * (Bt[3] - Bt[1]) + Bt[1]), ee = this.getLength("width", this.getVWidth(), 1.2 * (Bt[2] - Bt[0])), kt = this.getLength("height", this.getVHeight(), 1.2 * (Bt[3] - Bt[1]))) : (Mt = this.getLength("x", this.getVWidth(), -0.1) * (Bt[2] - Bt[0]) + Bt[0], jt = this.getLength("y", this.getVHeight(), -0.1) * (Bt[3] - Bt[1]) + Bt[1], ee = this.getLength("width", this.getVWidth(), 1.2) * (Bt[2] - Bt[0]), kt = this.getLength("height", this.getVHeight(), 1.2) * (Bt[3] - Bt[1])), n.rect(Mt, jt, ee, kt).clip(), this.attr("maskContentUnits") === "objectBoundingBox" && n.transform(Bt[2] - Bt[0], 0, 0, Bt[3] - Bt[1], Bt[0], Bt[1]), this.clip(), this.drawChildren(!1, !0), n.restore(), w(Nt), I(Nt, !0);
                  };
                }, ke = function(Pt, re) {
                  le.call(this, Pt, re), this.allowedChildren = ["tspan", "#text", "#cdata-section", "a"], this.isText = !0, this.getBoundingShape = function() {
                    for (var Bt = new zt(), Nt = 0; Nt < this._pos.length; Nt++) {
                      var Mt = this._pos[Nt];
                      if (!Mt.hidden) {
                        var jt = Mt.ascent * Math.sin(Mt.rotate), ee = -Mt.ascent * Math.cos(Mt.rotate), kt = Mt.descent * Math.sin(Mt.rotate), ie = -Mt.descent * Math.cos(Mt.rotate), Zt = Mt.width * Math.cos(Mt.rotate), me = Mt.width * Math.sin(Mt.rotate);
                        Bt.M(Mt.x + jt, Mt.y + ee).L(Mt.x + jt + Zt, Mt.y + ee + me).M(Mt.x + kt + Zt, Mt.y + ie + me).L(Mt.x + kt, Mt.y + ie);
                      }
                    }
                    return Bt;
                  }, this.drawTextInDocument = function(Bt, Nt) {
                    this.link && !Bt && !Nt && this.addLink(), this.get("text-decoration") === "underline" && this.decorate(0.05 * this._font.size, -0.075 * this._font.size, Bt, Nt), this.get("text-decoration") === "overline" && this.decorate(0.05 * this._font.size, Rt(this._font.font, this._font.size) + 0.075 * this._font.size, Bt, Nt);
                    var Mt = this.getFill(Bt, Nt), jt = this.getStroke(Bt, Nt), ee = this.get("stroke-width");
                    this._font.fauxBold && (jt ? ee += this._font.size * 0.03 : (jt = Mt, ee = this._font.size * 0.03));
                    for (var kt = this.getChildren(), ie = 0; ie < kt.length; ie++) {
                      var Zt = kt[ie];
                      switch (Zt.name) {
                        case "tspan":
                        case "textPath":
                        case "a":
                          Zt.get("display") !== "none" && Zt.drawTextInDocument(Bt, Nt);
                          break;
                        case "#text":
                        case "#cdata-section":
                          if (this.get("visibility") === "hidden")
                            continue;
                          if (Mt || jt || Bt) {
                            Mt && U(Mt), jt && ee && (W(jt), n.lineWidth(ee).miterLimit(this.get("stroke-miterlimit")).lineJoin(this.get("stroke-linejoin")).lineCap(this.get("stroke-linecap")).dash(this.get("stroke-dasharray"), {
                              phase: this.get("stroke-dashoffset")
                            })), A(this._font.font, this._font.size), b(!!Mt, !!jt);
                            for (var me = 0, Pe = Zt._pos; me < Pe.length; me++)
                              if (!Pe[me].hidden && yt(Pe[me].width, 0)) {
                                var Be = Math.cos(Pe[me].rotate), je = Math.sin(Pe[me].rotate), Je = this._font.fauxItalic ? -0.25 : 0;
                                F(Be * Pe[me].scale, je * Pe[me].scale, Be * Je - je, je * Je + Be, Pe[me].x, Pe[me].y), R(Pe[me].glyph);
                              }
                            N();
                          }
                          break;
                      }
                    }
                    this.get("text-decoration") === "line-through" && this.decorate(0.05 * this._font.size, 0.5 * (Rt(this._font.font, this._font.size) + Yt(this._font.font, this._font.size)), Bt, Nt);
                  }, this.decorate = function(Bt, Nt, Mt, jt) {
                    var ee = this.getFill(Mt, jt), kt = this.getStroke(Mt, jt);
                    ee && U(ee), kt && (W(kt), n.lineWidth(this.get("stroke-width")).miterLimit(this.get("stroke-miterlimit")).lineJoin(this.get("stroke-linejoin")).lineCap(this.get("stroke-linecap")).dash(this.get("stroke-dasharray"), {
                      phase: this.get("stroke-dashoffset")
                    }));
                    for (var ie = 0, Zt = this._pos; ie < Zt.length; ie++)
                      if (!Zt[ie].hidden && yt(Zt[ie].width, 0)) {
                        var me = (Nt + Bt / 2) * Math.sin(Zt[ie].rotate), Pe = -(Nt + Bt / 2) * Math.cos(Zt[ie].rotate), Be = (Nt - Bt / 2) * Math.sin(Zt[ie].rotate), je = -(Nt - Bt / 2) * Math.cos(Zt[ie].rotate), Je = Zt[ie].width * Math.cos(Zt[ie].rotate), nr = Zt[ie].width * Math.sin(Zt[ie].rotate);
                        new zt().M(Zt[ie].x + me, Zt[ie].y + Pe).L(Zt[ie].x + me + Je, Zt[ie].y + Pe + nr).L(Zt[ie].x + Be + Je, Zt[ie].y + je + nr).L(Zt[ie].x + Be, Zt[ie].y + je).Z().insertInDocument(), ee && kt ? n.fillAndStroke() : ee ? n.fill() : kt && n.stroke();
                      }
                  };
                }, Ne = function(Pt, re) {
                  this.name = Pt.nodeName, this.textContent = Pt.nodeValue;
                }, rn = function(Pt, re) {
                  ke.call(this, Pt, re);
                }, tr = function(Pt, re) {
                  ke.call(this, Pt, re);
                  var Bt;
                  if ((Bt = this.attr("path")) && Bt.trim() !== "") {
                    var Nt = this.getLength("pathLength", this.getViewport());
                    this.pathObject = new zt().path(Bt), this.pathLength = Nt > 0 ? Nt : this.pathObject.totalLength, this.pathScale = this.pathObject.totalLength / this.pathLength;
                  } else if ((Bt = this.getUrl("href") || this.getUrl("xlink:href")) && Bt.nodeName === "path") {
                    var Mt = new Ht(Bt, this);
                    this.pathObject = Mt.shape.clone().transform(Mt.get("transform")), this.pathLength = this.chooseValue(Mt.pathLength, this.pathObject.totalLength), this.pathScale = this.pathObject.totalLength / this.pathLength;
                  }
                }, Ze = function(Pt, re) {
                  ke.call(this, Pt, re), this.allowedChildren = ["textPath", "tspan", "#text", "#cdata-section", "a"], function(Bt) {
                    var Nt = "", Mt = Pt.textContent, jt = [], ee = [], kt, ie, Zt = 0, me = 0;
                    function Pe() {
                      if (ee.length)
                        for (var ve = ee[ee.length - 1], Re = ee[0], $e = ve.x + ve.width - Re.x, We = {
                          startltr: 0,
                          middleltr: 0.5,
                          endltr: 1,
                          startrtl: 1,
                          middlertl: 0.5,
                          endrtl: 0
                        }[kt + ie] * $e || 0, ar = 0; ar < ee.length; ar++)
                          ee[ar].x -= We;
                      ee = [];
                    }
                    function Be(ve, Re, $e) {
                      var We = ve[0], ar = ve[ve.length - 1], Ye = We.x, cr = ar.x + ar.width;
                      if ($e) {
                        var ir = Re / (cr - Ye);
                        if (ir > 0 && ir < 1 / 0)
                          for (var Ar = 0; Ar < ve.length; Ar++)
                            ve[Ar].x = Ye + ir * (ve[Ar].x - Ye), ve[Ar].scale *= ir, ve[Ar].width *= ir;
                      } else if (ve.length >= 2)
                        for (var kr = (Re - (cr - Ye)) / (ve.length - 1), Dr = 0; Dr < ve.length; Dr++)
                          ve[Dr].x += Dr * kr;
                      Zt += Re - (cr - Ye);
                    }
                    function je(ve, Re) {
                      ve._x = At(ve.getLengthList("x", ve.getVWidth()), Re ? Re._x.slice(Re._pos.length) : []), ve._y = At(ve.getLengthList("y", ve.getVHeight()), Re ? Re._y.slice(Re._pos.length) : []), ve._dx = At(ve.getLengthList("dx", ve.getVWidth()), Re ? Re._dx.slice(Re._pos.length) : []), ve._dy = At(ve.getLengthList("dy", ve.getVHeight()), Re ? Re._dy.slice(Re._pos.length) : []), ve._rot = At(ve.getNumberList("rotate"), Re ? Re._rot.slice(Re._pos.length) : []), ve._defRot = ve.chooseValue(ve._rot[ve._rot.length - 1], Re && Re._defRot, 0), ve.name === "textPath" && (ve._y = []);
                      var $e = {
                        fauxItalic: !1,
                        fauxBold: !1
                      }, We = nn(ve.get("font-family"), ve.get("font-weight") === "bold", ve.get("font-style") === "italic", $e);
                      try {
                        n.font(We);
                      } catch {
                        rr('SVGElemText: failed to open font "' + We + '" in PDFKit');
                      }
                      ve._pos = [], ve._index = 0, ve._font = {
                        font: n._font,
                        size: ve.get("font-size"),
                        fauxItalic: $e.fauxItalic,
                        fauxBold: $e.fauxBold
                      };
                      var ar = ve.getLength("textLength", ve.getVWidth(), void 0), Ye = ve.attr("lengthAdjust") === "spacingAndGlyphs", cr = ve.get("word-spacing"), ir = ve.get("letter-spacing"), Ar = ve.get("text-anchor"), kr = ve.get("direction"), Dr = Dt(ve._font.font, ve._font.size, ve.get("alignment-baseline") || ve.get("dominant-baseline"), ve.get("baseline-shift"));
                      ve.name === "textPath" && (Pe(), Zt = me = 0);
                      for (var Tr = ve.getChildren(), Pr = 0; Pr < Tr.length; Pr++) {
                        var _r = Tr[Pr];
                        switch (_r.name) {
                          case "tspan":
                          case "textPath":
                          case "a":
                            je(_r, ve);
                            break;
                          case "#text":
                          case "#cdata-section":
                            var En = _r.textContent, an = En, bn = void 0;
                            _r._font = ve._font, _r._pos = [], Mt = Mt.substring(En.length), ve.get("xml:space") === "preserve" ? an = an.replace(/[\s]/g, " ") : (an = an.replace(/[\s]+/g, " "), Nt.match(/[\s]$|^$/) && (an = an.replace(/^[\s]/, "")), Mt.match(/^[\s]*$/) && (an = an.replace(/[\s]$/, ""))), Nt += En, cr === 0 ? bn = [an] : bn = an.split(/(\s)/);
                            for (var Dn = 0; Dn < bn.length; Dn++) {
                              for (var on = ae(ve._font.font, ve._font.size, bn[Dn]), cn = 0; cn < on.length; cn++) {
                                var ln = ve._index, Ya = ve._x[ln], oa = ve._y[ln], Ka = ve._dx[ln], Ja = ve._dy[ln], Na = ve._rot[ln], sa = !(Dn === 0 && cn === 0);
                                Ya !== void 0 && (sa = !1, Pe(), Zt = Ya), oa !== void 0 && (sa = !1, Pe(), me = oa), Ka !== void 0 && (sa = !1, Zt += Ka), Ja !== void 0 && (sa = !1, me += Ja), (Na !== void 0 || ve._defRot !== 0) && (sa = !1);
                                var Ma = {
                                  glyph: on[cn].glyph,
                                  rotate: Math.PI / 180 * ve.chooseValue(Na, ve._defRot),
                                  x: Zt + on[cn].xOffset,
                                  y: me + Dr + on[cn].yOffset,
                                  width: on[cn].width,
                                  ascent: Rt(ve._font.font, ve._font.size),
                                  descent: Yt(ve._font.font, ve._font.size),
                                  scale: 1,
                                  hidden: !1,
                                  continuous: sa
                                };
                                ee.push(Ma), _r._pos.push(Ma), ve._pos.push(Ma), ve._index += on[cn].unicode.length, ee.length === 1 && (kt = Ar, ie = kr), Zt += on[cn].xAdvance + ir, me += on[cn].yAdvance;
                              }
                              bn[Dn] === " " && (Zt += cr);
                            }
                            break;
                          default:
                            Mt = Mt.substring(_r.textContent.length);
                        }
                      }
                      if (ar && ve._pos.length && Be(ve._pos, ar, Ye), (ve.name === "textPath" || ve.name === "text") && Pe(), ve.name === "textPath") {
                        jt.push(ve);
                        var pa = ve.pathObject;
                        pa && (Zt = pa.endPoint[0], me = pa.endPoint[1]);
                      }
                      Re && (Re._pos = Re._pos.concat(ve._pos), Re._index += ve._index);
                    }
                    function Je(ve) {
                      var Re = ve.pathObject, $e = ve.pathLength, We = ve.pathScale;
                      if (Re)
                        for (var ar = ve.getLength("startOffset", $e, 0), Ye = 0; Ye < ve._pos.length; Ye++) {
                          var cr = ar + ve._pos[Ye].x + 0.5 * ve._pos[Ye].width;
                          if (cr > $e || cr < 0)
                            ve._pos[Ye].hidden = !0;
                          else {
                            var ir = Re.getPointAtLength(cr * We);
                            yt(We, 1) && (ve._pos[Ye].scale *= We, ve._pos[Ye].width *= We), ve._pos[Ye].x = ir[0] - 0.5 * ve._pos[Ye].width * Math.cos(ir[2]) - ve._pos[Ye].y * Math.sin(ir[2]), ve._pos[Ye].y = ir[1] - 0.5 * ve._pos[Ye].width * Math.sin(ir[2]) + ve._pos[Ye].y * Math.cos(ir[2]), ve._pos[Ye].rotate = ir[2] + ve._pos[Ye].rotate, ve._pos[Ye].continuous = !1;
                          }
                        }
                      else
                        for (var Ar = 0; Ar < ve._pos.length; Ar++)
                          ve._pos[Ar].hidden = !0;
                    }
                    je(Bt, null);
                    for (var nr = 0; nr < jt.length; nr++)
                      Je(jt[nr]);
                  }(this), this.getTransformation = function() {
                    return this.get("transform");
                  }, this.drawInDocument = function(Bt, Nt) {
                    n.save(), this.transform(), this.clip();
                    var Mt = this.mask(), jt;
                    Mt && (jt = m(Lt())), this.drawTextInDocument(Bt, Nt), jt && (w(jt), D(jt)), n.restore();
                  };
                };
                u = u || {};
                var br = u.assumePt ? 1 : 72 / 96, Ir = (u.width || n.page.width) / br, Zr = (u.height || n.page.height) / br, Cn = u.preserveAspectRatio || null, Mn = u.useCSS && typeof SVGElement < "u" && i instanceof SVGElement && typeof getComputedStyle == "function", rr = u.warningCallback, nn = u.fontCallback, Mr = u.imageCallback, $r = u.colorCallback, Wr = u.documentCallback, Hn = Math.ceil(Math.max(1, u.precision)) || 3, jn = [], Ue = {}, ze = [], Qe = [];
                if (typeof rr != "function" && (rr = function(Pt) {
                  typeof console !== void 0 && typeof console.warn == "function" && console.warn(Pt);
                }), typeof nn != "function" && (nn = function(Pt, re, Bt, Nt) {
                  if (re && Bt) {
                    if (n._registeredFonts.hasOwnProperty(Pt + "-BoldItalic"))
                      return Pt + "-BoldItalic";
                    if (n._registeredFonts.hasOwnProperty(Pt + "-Italic"))
                      return Nt.fauxBold = !0, Pt + "-Italic";
                    if (n._registeredFonts.hasOwnProperty(Pt + "-Bold"))
                      return Nt.fauxItalic = !0, Pt + "-Bold";
                    if (n._registeredFonts.hasOwnProperty(Pt))
                      return Nt.fauxBold = !0, Nt.fauxItalic = !0, Pt;
                  }
                  if (re && !Bt) {
                    if (n._registeredFonts.hasOwnProperty(Pt + "-Bold"))
                      return Pt + "-Bold";
                    if (n._registeredFonts.hasOwnProperty(Pt))
                      return Nt.fauxBold = !0, Pt;
                  }
                  if (!re && Bt) {
                    if (n._registeredFonts.hasOwnProperty(Pt + "-Italic"))
                      return Pt + "-Italic";
                    if (n._registeredFonts.hasOwnProperty(Pt))
                      return Nt.fauxItalic = !0, Pt;
                  }
                  if (!re && !Bt && n._registeredFonts.hasOwnProperty(Pt))
                    return Pt;
                  if (Pt.match(/(?:^|,)\s*serif\s*$/)) {
                    if (re && Bt)
                      return "Times-BoldItalic";
                    if (re && !Bt)
                      return "Times-Bold";
                    if (!re && Bt)
                      return "Times-Italic";
                    if (!re && !Bt)
                      return "Times-Roman";
                  } else if (Pt.match(/(?:^|,)\s*monospace\s*$/)) {
                    if (re && Bt)
                      return "Courier-BoldOblique";
                    if (re && !Bt)
                      return "Courier-Bold";
                    if (!re && Bt)
                      return "Courier-Oblique";
                    if (!re && !Bt)
                      return "Courier";
                  } else {
                    if (Pt.match(/(?:^|,)\s*sans-serif\s*$/), re && Bt)
                      return "Helvetica-BoldOblique";
                    if (re && !Bt)
                      return "Helvetica-Bold";
                    if (!re && Bt)
                      return "Helvetica-Oblique";
                    if (!re && !Bt)
                      return "Helvetica";
                  }
                }), typeof Mr != "function" && (Mr = function(Pt) {
                  return Pt.replace(/\s+/g, "");
                }), typeof $r != "function")
                  $r = null;
                else
                  for (var ur in a) {
                    var xn = $r(a[ur]);
                    a[ur][0] = xn[0], a[ur][1] = xn[1];
                  }
                if (typeof Wr != "function" && (Wr = null), typeof i == "string" && (i = ht(i)), i) {
                  for (var wn = i.getElementsByTagName("style"), Yn = 0; Yn < wn.length; Yn++)
                    Qe = Qe.concat(it(wn[Yn].textContent));
                  var va = Ae(i, null);
                  if (typeof va.drawInDocument == "function") {
                    u.useCSS && !Mn && rr("SVGtoPDF: useCSS option can only be used for SVG *elements* in compatible browsers");
                    var Kn = n._fillColor;
                    n.save().translate(f || 0, l || 0).scale(br), va.drawInDocument();
                    for (var Jn = 0; Jn < ze.length; Jn++)
                      n.page.annotations.push(ze[Jn]);
                    n.restore(), n._fillColor = Kn;
                  } else
                    rr("SVGtoPDF: this element can't be rendered directly: " + i.nodeName);
                } else
                  rr("SVGtoPDF: the input does not look like a valid SVG");
              };
              c && typeof c.exports < "u" && (c.exports = o);
            }
          ),
          /***/
          83036: (
            /***/
            function(c, d, t) {
              var o = "/", r = t(43060).Buffer;
              Object.defineProperty(d, "__esModule", {
                value: !0
              }), d.default = void 0, t(80044), t(26364), t(19701), t(10853), t(80238), t(6208), t(12938), t(56908), t(54130), t(33290), t(86632), t(61928), t(54883), t(45007), t(68995), t(4845), t(18821), t(54994), t(39275), t(55281), t(55862), t(85005), t(22321), t(73214), t(18481), t(66923), t(12798), t(18183), t(14686), t(80174), t(67838), t(75668), t(67666), t(79627), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(36501), t(83382), t(33130), t(29897), t(86125), t(54902), t(35054);
              var n = v(t(20202)), i = v(t(63339)), f = v(t(35243)), l = v(t(89233)), u = t(5939), h = v(t(46982)), a = v(t(45968));
              function v(wt) {
                return wt && wt.__esModule ? wt : { default: wt };
              }
              var y = t(52773);
              function p(wt, Z) {
                if (!(wt instanceof Z))
                  throw new TypeError("Cannot call a class as a function");
              }
              function e(wt, Z) {
                for (var z = 0; z < Z.length; z++) {
                  var rt = Z[z];
                  rt.enumerable = rt.enumerable || !1, rt.configurable = !0, "value" in rt && (rt.writable = !0), Object.defineProperty(wt, rt.key, rt);
                }
              }
              function m(wt, Z, z) {
                return Z && e(wt.prototype, Z), z && e(wt, z), wt;
              }
              function w(wt, Z, z) {
                return Z in wt ? Object.defineProperty(wt, Z, {
                  value: z,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0
                }) : wt[Z] = z, wt;
              }
              function D(wt, Z) {
                var z = Object.keys(wt);
                if (Object.getOwnPropertySymbols) {
                  var rt = Object.getOwnPropertySymbols(wt);
                  Z && (rt = rt.filter(function(q) {
                    return Object.getOwnPropertyDescriptor(wt, q).enumerable;
                  })), z.push.apply(z, rt);
                }
                return z;
              }
              function I(wt) {
                for (var Z = 1; Z < arguments.length; Z++) {
                  var z = arguments[Z] != null ? arguments[Z] : {};
                  Z % 2 ? D(Object(z), !0).forEach(function(rt) {
                    w(wt, rt, z[rt]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(wt, Object.getOwnPropertyDescriptors(z)) : D(Object(z)).forEach(function(rt) {
                    Object.defineProperty(wt, rt, Object.getOwnPropertyDescriptor(z, rt));
                  });
                }
                return wt;
              }
              function E(wt, Z) {
                if (typeof Z != "function" && Z !== null)
                  throw new TypeError("Super expression must either be null or a function");
                wt.prototype = Object.create(Z && Z.prototype, {
                  constructor: {
                    value: wt,
                    writable: !0,
                    configurable: !0
                  }
                }), Z && A(wt, Z);
              }
              function T(wt) {
                return T = Object.setPrototypeOf ? Object.getPrototypeOf : function(z) {
                  return z.__proto__ || Object.getPrototypeOf(z);
                }, T(wt);
              }
              function A(wt, Z) {
                return A = Object.setPrototypeOf || function(rt, q) {
                  return rt.__proto__ = q, rt;
                }, A(wt, Z);
              }
              function F() {
                if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
                  return !1;
                if (typeof Proxy == "function")
                  return !0;
                try {
                  return Date.prototype.toString.call(Reflect.construct(Date, [], function() {
                  })), !0;
                } catch {
                  return !1;
                }
              }
              function b(wt) {
                if (wt === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return wt;
              }
              function R(wt, Z) {
                return Z && (typeof Z == "object" || typeof Z == "function") ? Z : b(wt);
              }
              function N(wt) {
                var Z = F();
                return function() {
                  var rt = T(wt), q;
                  if (Z) {
                    var pt = T(this).constructor;
                    q = Reflect.construct(rt, arguments, pt);
                  } else
                    q = rt.apply(this, arguments);
                  return R(this, q);
                };
              }
              function U(wt, Z) {
                return ht(wt) || nt(wt, Z) || xt(wt, Z) || It();
              }
              function W(wt) {
                return J(wt) || K(wt) || xt(wt) || Tt();
              }
              function J(wt) {
                if (Array.isArray(wt))
                  return bt(wt);
              }
              function ht(wt) {
                if (Array.isArray(wt))
                  return wt;
              }
              function K(wt) {
                if (typeof Symbol < "u" && Symbol.iterator in Object(wt))
                  return Array.from(wt);
              }
              function nt(wt, Z) {
                if (!(typeof Symbol > "u" || !(Symbol.iterator in Object(wt)))) {
                  var z = [], rt = !0, q = !1, pt = void 0;
                  try {
                    for (var St = wt[Symbol.iterator](), qt; !(rt = (qt = St.next()).done) && (z.push(qt.value), !(Z && z.length === Z)); rt = !0)
                      ;
                  } catch (ne) {
                    q = !0, pt = ne;
                  } finally {
                    try {
                      !rt && St.return != null && St.return();
                    } finally {
                      if (q)
                        throw pt;
                    }
                  }
                  return z;
                }
              }
              function xt(wt, Z) {
                if (wt) {
                  if (typeof wt == "string")
                    return bt(wt, Z);
                  var z = Object.prototype.toString.call(wt).slice(8, -1);
                  if (z === "Object" && wt.constructor && (z = wt.constructor.name), z === "Map" || z === "Set")
                    return Array.from(wt);
                  if (z === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(z))
                    return bt(wt, Z);
                }
              }
              function bt(wt, Z) {
                (Z == null || Z > wt.length) && (Z = wt.length);
                for (var z = 0, rt = new Array(Z); z < Z; z++)
                  rt[z] = wt[z];
                return rt;
              }
              function Tt() {
                throw new TypeError(`Invalid attempt to spread non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function It() {
                throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function Lt(wt, Z) {
                var z;
                if (typeof Symbol > "u" || wt[Symbol.iterator] == null) {
                  if (Array.isArray(wt) || (z = xt(wt)) || Z && wt && typeof wt.length == "number") {
                    z && (wt = z);
                    var rt = 0, q = function() {
                    };
                    return {
                      s: q,
                      n: function() {
                        return rt >= wt.length ? {
                          done: !0
                        } : {
                          done: !1,
                          value: wt[rt++]
                        };
                      },
                      e: function(he) {
                        throw he;
                      },
                      f: q
                    };
                  }
                  throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
                }
                var pt = !0, St = !1, qt;
                return {
                  s: function() {
                    z = wt[Symbol.iterator]();
                  },
                  n: function() {
                    var he = z.next();
                    return pt = he.done, he;
                  },
                  e: function(he) {
                    St = !0, qt = he;
                  },
                  f: function() {
                    try {
                      !pt && z.return != null && z.return();
                    } finally {
                      if (St)
                        throw qt;
                    }
                  }
                };
              }
              var Ut = /* @__PURE__ */ function() {
                function wt() {
                  p(this, wt);
                }
                return m(wt, [{
                  key: "toString",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }]), wt;
              }(), $ = /* @__PURE__ */ function() {
                function wt() {
                  var Z = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                  p(this, wt), this._items = {}, this.limits = typeof Z.limits == "boolean" ? Z.limits : !0;
                }
                return m(wt, [{
                  key: "add",
                  value: function(z, rt) {
                    return this._items[z] = rt;
                  }
                }, {
                  key: "get",
                  value: function(z) {
                    return this._items[z];
                  }
                }, {
                  key: "toString",
                  value: function() {
                    var z = this, rt = Object.keys(this._items).sort(function(ye, Se) {
                      return z._compareKeys(ye, Se);
                    }), q = ["<<"];
                    if (this.limits && rt.length > 1) {
                      var pt = rt[0], St = rt[rt.length - 1];
                      q.push("  /Limits ".concat(G.convert([this._dataForKey(pt), this._dataForKey(St)])));
                    }
                    q.push("  /".concat(this._keysName(), " ["));
                    var qt = Lt(rt), ne;
                    try {
                      for (qt.s(); !(ne = qt.n()).done; ) {
                        var he = ne.value;
                        q.push("    ".concat(G.convert(this._dataForKey(he)), " ").concat(G.convert(this._items[he])));
                      }
                    } catch (ye) {
                      qt.e(ye);
                    } finally {
                      qt.f();
                    }
                    return q.push("]"), q.push(">>"), q.join(`
`);
                  }
                }, {
                  key: "_compareKeys",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }, {
                  key: "_keysName",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }, {
                  key: "_dataForKey",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }]), wt;
              }(), gt = function(Z, z) {
                return (Array(z + 1).join("0") + Z).slice(-z);
              }, ut = /[\n\r\t\b\f()\\]/g, st = {
                "\n": "\\n",
                "\r": "\\r",
                "	": "\\t",
                "\b": "\\b",
                "\f": "\\f",
                "\\": "\\\\",
                "(": "\\(",
                ")": "\\)"
              }, yt = function(Z) {
                var z = Z.length;
                if (z & 1)
                  throw new Error("Buffer length must be even");
                for (var rt = 0, q = z - 1; rt < q; rt += 2) {
                  var pt = Z[rt];
                  Z[rt] = Z[rt + 1], Z[rt + 1] = pt;
                }
                return Z;
              }, G = /* @__PURE__ */ function() {
                function wt() {
                  p(this, wt);
                }
                return m(wt, null, [{
                  key: "convert",
                  value: function(z) {
                    var rt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                    if (typeof z == "string")
                      return "/".concat(z);
                    if (z instanceof String) {
                      for (var q = z, pt = !1, St = 0, qt = q.length; St < qt; St++)
                        if (q.charCodeAt(St) > 127) {
                          pt = !0;
                          break;
                        }
                      var ne;
                      return pt ? ne = yt(r.from("\uFEFF".concat(q), "utf16le")) : ne = r.from(q.valueOf(), "ascii"), rt ? q = rt(ne).toString("binary") : q = ne.toString("binary"), q = q.replace(ut, function(Ge) {
                        return st[Ge];
                      }), "(".concat(q, ")");
                    } else {
                      if (r.isBuffer(z))
                        return "<".concat(z.toString("hex"), ">");
                      if (z instanceof Ut || z instanceof $)
                        return z.toString();
                      if (z instanceof Date) {
                        var he = "D:".concat(gt(z.getUTCFullYear(), 4)) + gt(z.getUTCMonth() + 1, 2) + gt(z.getUTCDate(), 2) + gt(z.getUTCHours(), 2) + gt(z.getUTCMinutes(), 2) + gt(z.getUTCSeconds(), 2) + "Z";
                        return rt && (he = rt(r.from(he, "ascii")).toString("binary"), he = he.replace(ut, function(Ge) {
                          return st[Ge];
                        })), "(".concat(he, ")");
                      } else if (Array.isArray(z)) {
                        var ye = z.map(function(Ge) {
                          return wt.convert(Ge, rt);
                        }).join(" ");
                        return "[".concat(ye, "]");
                      } else if ({}.toString.call(z) === "[object Object]") {
                        var Se = ["<<"];
                        for (var Ce in z) {
                          var Ie = z[Ce];
                          Se.push("/".concat(Ce, " ").concat(wt.convert(Ie, rt)));
                        }
                        return Se.push(">>"), Se.join(`
`);
                      } else
                        return typeof z == "number" ? wt.number(z) : "".concat(z);
                    }
                  }
                }, {
                  key: "number",
                  value: function(z) {
                    if (z > -1e21 && z < 1e21)
                      return Math.round(z * 1e6) / 1e6;
                    throw new Error("unsupported number: ".concat(z));
                  }
                }]), wt;
              }(), Et = /* @__PURE__ */ function(wt) {
                E(z, wt);
                var Z = N(z);
                function z(rt, q) {
                  var pt, St = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                  return p(this, z), pt = Z.call(this), pt.document = rt, pt.id = q, pt.data = St, pt.gen = 0, pt.compress = pt.document.compress && !pt.data.Filter, pt.uncompressedLength = 0, pt.buffer = [], pt;
                }
                return m(z, [{
                  key: "write",
                  value: function(q) {
                    if (r.isBuffer(q) || (q = r.from(q + `
`, "binary")), this.uncompressedLength += q.length, this.data.Length == null && (this.data.Length = 0), this.buffer.push(q), this.data.Length += q.length, this.compress)
                      return this.data.Filter = "FlateDecode";
                  }
                }, {
                  key: "end",
                  value: function(q) {
                    return q && this.write(q), this.finalize();
                  }
                }, {
                  key: "finalize",
                  value: function() {
                    this.offset = this.document._offset;
                    var q = this.document._security ? this.document._security.getEncryptFn(this.id, this.gen) : null;
                    this.buffer.length && (this.buffer = r.concat(this.buffer), this.compress && (this.buffer = i.default.deflateSync(this.buffer)), q && (this.buffer = q(this.buffer)), this.data.Length = this.buffer.length), this.document._write("".concat(this.id, " ").concat(this.gen, " obj")), this.document._write(G.convert(this.data, q)), this.buffer.length && (this.document._write("stream"), this.document._write(this.buffer), this.buffer = [], this.document._write(`
endstream`)), this.document._write("endobj"), this.document._refEnd(this);
                  }
                }, {
                  key: "toString",
                  value: function() {
                    return "".concat(this.id, " ").concat(this.gen, " R");
                  }
                }]), z;
              }(Ut), k = {
                top: 72,
                left: 72,
                bottom: 72,
                right: 72
              }, S = {
                "4A0": [4767.87, 6740.79],
                "2A0": [3370.39, 4767.87],
                A0: [2383.94, 3370.39],
                A1: [1683.78, 2383.94],
                A2: [1190.55, 1683.78],
                A3: [841.89, 1190.55],
                A4: [595.28, 841.89],
                A5: [419.53, 595.28],
                A6: [297.64, 419.53],
                A7: [209.76, 297.64],
                A8: [147.4, 209.76],
                A9: [104.88, 147.4],
                A10: [73.7, 104.88],
                B0: [2834.65, 4008.19],
                B1: [2004.09, 2834.65],
                B2: [1417.32, 2004.09],
                B3: [1000.63, 1417.32],
                B4: [708.66, 1000.63],
                B5: [498.9, 708.66],
                B6: [354.33, 498.9],
                B7: [249.45, 354.33],
                B8: [175.75, 249.45],
                B9: [124.72, 175.75],
                B10: [87.87, 124.72],
                C0: [2599.37, 3676.54],
                C1: [1836.85, 2599.37],
                C2: [1298.27, 1836.85],
                C3: [918.43, 1298.27],
                C4: [649.13, 918.43],
                C5: [459.21, 649.13],
                C6: [323.15, 459.21],
                C7: [229.61, 323.15],
                C8: [161.57, 229.61],
                C9: [113.39, 161.57],
                C10: [79.37, 113.39],
                RA0: [2437.8, 3458.27],
                RA1: [1729.13, 2437.8],
                RA2: [1218.9, 1729.13],
                RA3: [864.57, 1218.9],
                RA4: [609.45, 864.57],
                SRA0: [2551.18, 3628.35],
                SRA1: [1814.17, 2551.18],
                SRA2: [1275.59, 1814.17],
                SRA3: [907.09, 1275.59],
                SRA4: [637.8, 907.09],
                EXECUTIVE: [521.86, 756],
                FOLIO: [612, 936],
                LEGAL: [612, 1008],
                LETTER: [612, 792],
                TABLOID: [792, 1224]
              }, L = /* @__PURE__ */ function() {
                function wt(Z) {
                  var z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  p(this, wt), this.document = Z, this.size = z.size || "letter", this.layout = z.layout || "portrait", typeof z.margin == "number" ? this.margins = {
                    top: z.margin,
                    left: z.margin,
                    bottom: z.margin,
                    right: z.margin
                  } : this.margins = z.margins || k;
                  var rt = Array.isArray(this.size) ? this.size : S[this.size.toUpperCase()];
                  this.width = rt[this.layout === "portrait" ? 0 : 1], this.height = rt[this.layout === "portrait" ? 1 : 0], this.content = this.document.ref(), this.resources = this.document.ref({
                    ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"]
                  }), this.dictionary = this.document.ref({
                    Type: "Page",
                    Parent: this.document._root.data.Pages,
                    MediaBox: [0, 0, this.width, this.height],
                    Contents: this.content,
                    Resources: this.resources
                  }), this.markings = [];
                }
                return m(wt, [{
                  key: "maxY",
                  value: function() {
                    return this.height - this.margins.bottom;
                  }
                }, {
                  key: "write",
                  value: function(z) {
                    return this.content.write(z);
                  }
                }, {
                  key: "end",
                  value: function() {
                    return this.dictionary.end(), this.resources.end(), this.content.end();
                  }
                }, {
                  key: "fonts",
                  get: function() {
                    var z = this.resources.data;
                    return z.Font != null ? z.Font : z.Font = {};
                  }
                }, {
                  key: "xobjects",
                  get: function() {
                    var z = this.resources.data;
                    return z.XObject != null ? z.XObject : z.XObject = {};
                  }
                }, {
                  key: "ext_gstates",
                  get: function() {
                    var z = this.resources.data;
                    return z.ExtGState != null ? z.ExtGState : z.ExtGState = {};
                  }
                }, {
                  key: "patterns",
                  get: function() {
                    var z = this.resources.data;
                    return z.Pattern != null ? z.Pattern : z.Pattern = {};
                  }
                }, {
                  key: "colorSpaces",
                  get: function() {
                    var z = this.resources.data;
                    return z.ColorSpace || (z.ColorSpace = {});
                  }
                }, {
                  key: "annotations",
                  get: function() {
                    var z = this.dictionary.data;
                    return z.Annots != null ? z.Annots : z.Annots = [];
                  }
                }, {
                  key: "structParentTreeKey",
                  get: function() {
                    var z = this.dictionary.data;
                    return z.StructParents != null ? z.StructParents : z.StructParents = this.document.createStructParentTreeNextKey();
                  }
                }]), wt;
              }(), V = /* @__PURE__ */ function(wt) {
                E(z, wt);
                var Z = N(z);
                function z() {
                  return p(this, z), Z.apply(this, arguments);
                }
                return m(z, [{
                  key: "_compareKeys",
                  value: function(q, pt) {
                    return q.localeCompare(pt);
                  }
                }, {
                  key: "_keysName",
                  value: function() {
                    return "Names";
                  }
                }, {
                  key: "_dataForKey",
                  value: function(q) {
                    return new String(q);
                  }
                }]), z;
              }($);
              function it(wt, Z) {
                if (wt < Z[0])
                  return !1;
                for (var z = 0, rt = Z.length / 2; z <= rt; ) {
                  var q = Math.floor((z + rt) / 2), pt = q * 2;
                  if (wt >= Z[pt] && wt <= Z[pt + 1])
                    return !0;
                  wt > Z[pt + 1] ? z = q + 1 : rt = q - 1;
                }
                return !1;
              }
              var tt = [545, 545, 564, 591, 686, 687, 751, 767, 848, 863, 880, 883, 886, 889, 891, 893, 895, 899, 907, 907, 909, 909, 930, 930, 975, 975, 1015, 1023, 1159, 1159, 1231, 1231, 1270, 1271, 1274, 1279, 1296, 1328, 1367, 1368, 1376, 1376, 1416, 1416, 1419, 1424, 1442, 1442, 1466, 1466, 1477, 1487, 1515, 1519, 1525, 1547, 1549, 1562, 1564, 1566, 1568, 1568, 1595, 1599, 1622, 1631, 1774, 1775, 1791, 1791, 1806, 1806, 1837, 1839, 1867, 1919, 1970, 2304, 2308, 2308, 2362, 2363, 2382, 2383, 2389, 2391, 2417, 2432, 2436, 2436, 2445, 2446, 2449, 2450, 2473, 2473, 2481, 2481, 2483, 2485, 2490, 2491, 2493, 2493, 2501, 2502, 2505, 2506, 2510, 2518, 2520, 2523, 2526, 2526, 2532, 2533, 2555, 2561, 2563, 2564, 2571, 2574, 2577, 2578, 2601, 2601, 2609, 2609, 2612, 2612, 2615, 2615, 2618, 2619, 2621, 2621, 2627, 2630, 2633, 2634, 2638, 2648, 2653, 2653, 2655, 2661, 2677, 2688, 2692, 2692, 2700, 2700, 2702, 2702, 2706, 2706, 2729, 2729, 2737, 2737, 2740, 2740, 2746, 2747, 2758, 2758, 2762, 2762, 2766, 2767, 2769, 2783, 2785, 2789, 2800, 2816, 2820, 2820, 2829, 2830, 2833, 2834, 2857, 2857, 2865, 2865, 2868, 2869, 2874, 2875, 2884, 2886, 2889, 2890, 2894, 2901, 2904, 2907, 2910, 2910, 2914, 2917, 2929, 2945, 2948, 2948, 2955, 2957, 2961, 2961, 2966, 2968, 2971, 2971, 2973, 2973, 2976, 2978, 2981, 2983, 2987, 2989, 2998, 2998, 3002, 3005, 3011, 3013, 3017, 3017, 3022, 3030, 3032, 3046, 3059, 3072, 3076, 3076, 3085, 3085, 3089, 3089, 3113, 3113, 3124, 3124, 3130, 3133, 3141, 3141, 3145, 3145, 3150, 3156, 3159, 3167, 3170, 3173, 3184, 3201, 3204, 3204, 3213, 3213, 3217, 3217, 3241, 3241, 3252, 3252, 3258, 3261, 3269, 3269, 3273, 3273, 3278, 3284, 3287, 3293, 3295, 3295, 3298, 3301, 3312, 3329, 3332, 3332, 3341, 3341, 3345, 3345, 3369, 3369, 3386, 3389, 3396, 3397, 3401, 3401, 3406, 3414, 3416, 3423, 3426, 3429, 3440, 3457, 3460, 3460, 3479, 3481, 3506, 3506, 3516, 3516, 3518, 3519, 3527, 3529, 3531, 3534, 3541, 3541, 3543, 3543, 3552, 3569, 3573, 3584, 3643, 3646, 3676, 3712, 3715, 3715, 3717, 3718, 3721, 3721, 3723, 3724, 3726, 3731, 3736, 3736, 3744, 3744, 3748, 3748, 3750, 3750, 3752, 3753, 3756, 3756, 3770, 3770, 3774, 3775, 3781, 3781, 3783, 3783, 3790, 3791, 3802, 3803, 3806, 3839, 3912, 3912, 3947, 3952, 3980, 3983, 3992, 3992, 4029, 4029, 4045, 4046, 4048, 4095, 4130, 4130, 4136, 4136, 4139, 4139, 4147, 4149, 4154, 4159, 4186, 4255, 4294, 4303, 4345, 4346, 4348, 4351, 4442, 4446, 4515, 4519, 4602, 4607, 4615, 4615, 4679, 4679, 4681, 4681, 4686, 4687, 4695, 4695, 4697, 4697, 4702, 4703, 4743, 4743, 4745, 4745, 4750, 4751, 4783, 4783, 4785, 4785, 4790, 4791, 4799, 4799, 4801, 4801, 4806, 4807, 4815, 4815, 4823, 4823, 4847, 4847, 4879, 4879, 4881, 4881, 4886, 4887, 4895, 4895, 4935, 4935, 4955, 4960, 4989, 5023, 5109, 5120, 5751, 5759, 5789, 5791, 5873, 5887, 5901, 5901, 5909, 5919, 5943, 5951, 5972, 5983, 5997, 5997, 6001, 6001, 6004, 6015, 6109, 6111, 6122, 6143, 6159, 6159, 6170, 6175, 6264, 6271, 6314, 7679, 7836, 7839, 7930, 7935, 7958, 7959, 7966, 7967, 8006, 8007, 8014, 8015, 8024, 8024, 8026, 8026, 8028, 8028, 8030, 8030, 8062, 8063, 8117, 8117, 8133, 8133, 8148, 8149, 8156, 8156, 8176, 8177, 8181, 8181, 8191, 8191, 8275, 8278, 8280, 8286, 8292, 8297, 8306, 8307, 8335, 8351, 8370, 8399, 8427, 8447, 8507, 8508, 8524, 8530, 8580, 8591, 9167, 9215, 9255, 9279, 9291, 9311, 9471, 9471, 9748, 9749, 9752, 9752, 9854, 9855, 9866, 9984, 9989, 9989, 9994, 9995, 10024, 10024, 10060, 10060, 10062, 10062, 10067, 10069, 10071, 10071, 10079, 10080, 10133, 10135, 10160, 10160, 10175, 10191, 10220, 10223, 11008, 11903, 11930, 11930, 12020, 12031, 12246, 12271, 12284, 12287, 12352, 12352, 12439, 12440, 12544, 12548, 12589, 12592, 12687, 12687, 12728, 12783, 12829, 12831, 12868, 12880, 12924, 12926, 13004, 13007, 13055, 13055, 13175, 13178, 13278, 13279, 13311, 13311, 19894, 19967, 40870, 40959, 42125, 42127, 42183, 44031, 55204, 55295, 64046, 64047, 64107, 64255, 64263, 64274, 64280, 64284, 64311, 64311, 64317, 64317, 64319, 64319, 64322, 64322, 64325, 64325, 64434, 64466, 64832, 64847, 64912, 64913, 64968, 64975, 65021, 65023, 65040, 65055, 65060, 65071, 65095, 65096, 65107, 65107, 65127, 65127, 65132, 65135, 65141, 65141, 65277, 65278, 65280, 65280, 65471, 65473, 65480, 65481, 65488, 65489, 65496, 65497, 65501, 65503, 65511, 65511, 65519, 65528, 65536, 66303, 66335, 66335, 66340, 66351, 66379, 66559, 66598, 66599, 66638, 118783, 119030, 119039, 119079, 119081, 119262, 119807, 119893, 119893, 119965, 119965, 119968, 119969, 119971, 119972, 119975, 119976, 119981, 119981, 119994, 119994, 119996, 119996, 120001, 120001, 120004, 120004, 120070, 120070, 120075, 120076, 120085, 120085, 120093, 120093, 120122, 120122, 120127, 120127, 120133, 120133, 120135, 120137, 120145, 120145, 120484, 120487, 120778, 120781, 120832, 131069, 173783, 194559, 195102, 196605, 196608, 262141, 262144, 327677, 327680, 393213, 393216, 458749, 458752, 524285, 524288, 589821, 589824, 655357, 655360, 720893, 720896, 786429, 786432, 851965, 851968, 917501, 917504, 917504, 917506, 917535, 917632, 983037], _ = function(Z) {
                return it(Z, tt);
              }, At = [173, 173, 847, 847, 6150, 6150, 6155, 6155, 6156, 6156, 6157, 6157, 8203, 8203, 8204, 8204, 8205, 8205, 8288, 8288, 65024, 65024, 65025, 65025, 65026, 65026, 65027, 65027, 65028, 65028, 65029, 65029, 65030, 65030, 65031, 65031, 65032, 65032, 65033, 65033, 65034, 65034, 65035, 65035, 65036, 65036, 65037, 65037, 65038, 65038, 65039, 65039, 65279, 65279], Rt = function(Z) {
                return it(Z, At);
              }, Yt = [
                160,
                160,
                5760,
                5760,
                8192,
                8192,
                8193,
                8193,
                8194,
                8194,
                8195,
                8195,
                8196,
                8196,
                8197,
                8197,
                8198,
                8198,
                8199,
                8199,
                8200,
                8200,
                8201,
                8201,
                8202,
                8202,
                8203,
                8203,
                8239,
                8239,
                8287,
                8287,
                12288,
                12288
                /* IDEOGRAPHIC SPACE */
              ], Gt = function(Z) {
                return it(Z, Yt);
              }, Dt = [
                /**
                 * C.2.2 Non-ASCII control characters
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.2.2
                 */
                128,
                159,
                1757,
                1757,
                1807,
                1807,
                6158,
                6158,
                8204,
                8204,
                8205,
                8205,
                8232,
                8232,
                8233,
                8233,
                8288,
                8288,
                8289,
                8289,
                8290,
                8290,
                8291,
                8291,
                8298,
                8303,
                65279,
                65279,
                65529,
                65532,
                119155,
                119162
                /* [MUSICAL CONTROL CHARACTERS] */
              ], ae = [
                /**
                 * C.4 Non-character code points
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.4
                 */
                64976,
                65007,
                65534,
                65535,
                131070,
                131071,
                196606,
                196607,
                262142,
                262143,
                327678,
                327679,
                393214,
                393215,
                458750,
                458751,
                524286,
                524287,
                589822,
                589823,
                655358,
                655359,
                720894,
                720895,
                786430,
                786431,
                851966,
                851967,
                917502,
                917503,
                983038,
                983039,
                1114110,
                1114111
                /* [NONCHARACTER CODE POINTS] */
              ], Ae = [
                /**
                 * C.2.1 ASCII control characters
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.2.1
                 */
                0,
                31,
                127,
                127,
                /**
                 * C.8 Change display properties or are deprecated
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.8
                 */
                832,
                832,
                833,
                833,
                8206,
                8206,
                8207,
                8207,
                8234,
                8234,
                8235,
                8235,
                8236,
                8236,
                8237,
                8237,
                8238,
                8238,
                8298,
                8298,
                8299,
                8299,
                8300,
                8300,
                8301,
                8301,
                8302,
                8302,
                8303,
                8303,
                /**
                 * C.7 Inappropriate for canonical representation
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.7
                 */
                12272,
                12283,
                /**
                 * C.5 Surrogate codes
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.5
                 */
                55296,
                57343,
                /**
                 * C.3 Private use
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.3
                 */
                57344,
                63743,
                /**
                 * C.6 Inappropriate for plain text
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.6
                 */
                65529,
                65529,
                65530,
                65530,
                65531,
                65531,
                65532,
                65532,
                65533,
                65533,
                /**
                 * C.9 Tagging characters
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.9
                 */
                917505,
                917505,
                917536,
                917631,
                /**
                 * C.3 Private use
                 * @link https://tools.ietf.org/html/rfc3454#appendix-C.3
                 */
                983040,
                1048573,
                1048576,
                1114109
                /* [PRIVATE USE, PLANE 16] */
              ], xe = function(Z) {
                return it(Z, Yt) || it(Z, Ae) || it(Z, Dt) || it(Z, ae);
              }, ce = [1470, 1470, 1472, 1472, 1475, 1475, 1488, 1514, 1520, 1524, 1563, 1563, 1567, 1567, 1569, 1594, 1600, 1610, 1645, 1647, 1649, 1749, 1757, 1757, 1765, 1766, 1786, 1790, 1792, 1805, 1808, 1808, 1810, 1836, 1920, 1957, 1969, 1969, 8207, 8207, 64285, 64285, 64287, 64296, 64298, 64310, 64312, 64316, 64318, 64318, 64320, 64321, 64323, 64324, 64326, 64433, 64467, 64829, 64848, 64911, 64914, 64967, 65008, 65020, 65136, 65140, 65142, 65276], we = function(Z) {
                return it(Z, ce);
              }, zt = [65, 90, 97, 122, 170, 170, 181, 181, 186, 186, 192, 214, 216, 246, 248, 544, 546, 563, 592, 685, 688, 696, 699, 705, 720, 721, 736, 740, 750, 750, 890, 890, 902, 902, 904, 906, 908, 908, 910, 929, 931, 974, 976, 1013, 1024, 1154, 1162, 1230, 1232, 1269, 1272, 1273, 1280, 1295, 1329, 1366, 1369, 1375, 1377, 1415, 1417, 1417, 2307, 2307, 2309, 2361, 2365, 2368, 2377, 2380, 2384, 2384, 2392, 2401, 2404, 2416, 2434, 2435, 2437, 2444, 2447, 2448, 2451, 2472, 2474, 2480, 2482, 2482, 2486, 2489, 2494, 2496, 2503, 2504, 2507, 2508, 2519, 2519, 2524, 2525, 2527, 2529, 2534, 2545, 2548, 2554, 2565, 2570, 2575, 2576, 2579, 2600, 2602, 2608, 2610, 2611, 2613, 2614, 2616, 2617, 2622, 2624, 2649, 2652, 2654, 2654, 2662, 2671, 2674, 2676, 2691, 2691, 2693, 2699, 2701, 2701, 2703, 2705, 2707, 2728, 2730, 2736, 2738, 2739, 2741, 2745, 2749, 2752, 2761, 2761, 2763, 2764, 2768, 2768, 2784, 2784, 2790, 2799, 2818, 2819, 2821, 2828, 2831, 2832, 2835, 2856, 2858, 2864, 2866, 2867, 2870, 2873, 2877, 2878, 2880, 2880, 2887, 2888, 2891, 2892, 2903, 2903, 2908, 2909, 2911, 2913, 2918, 2928, 2947, 2947, 2949, 2954, 2958, 2960, 2962, 2965, 2969, 2970, 2972, 2972, 2974, 2975, 2979, 2980, 2984, 2986, 2990, 2997, 2999, 3001, 3006, 3007, 3009, 3010, 3014, 3016, 3018, 3020, 3031, 3031, 3047, 3058, 3073, 3075, 3077, 3084, 3086, 3088, 3090, 3112, 3114, 3123, 3125, 3129, 3137, 3140, 3168, 3169, 3174, 3183, 3202, 3203, 3205, 3212, 3214, 3216, 3218, 3240, 3242, 3251, 3253, 3257, 3262, 3262, 3264, 3268, 3271, 3272, 3274, 3275, 3285, 3286, 3294, 3294, 3296, 3297, 3302, 3311, 3330, 3331, 3333, 3340, 3342, 3344, 3346, 3368, 3370, 3385, 3390, 3392, 3398, 3400, 3402, 3404, 3415, 3415, 3424, 3425, 3430, 3439, 3458, 3459, 3461, 3478, 3482, 3505, 3507, 3515, 3517, 3517, 3520, 3526, 3535, 3537, 3544, 3551, 3570, 3572, 3585, 3632, 3634, 3635, 3648, 3654, 3663, 3675, 3713, 3714, 3716, 3716, 3719, 3720, 3722, 3722, 3725, 3725, 3732, 3735, 3737, 3743, 3745, 3747, 3749, 3749, 3751, 3751, 3754, 3755, 3757, 3760, 3762, 3763, 3773, 3773, 3776, 3780, 3782, 3782, 3792, 3801, 3804, 3805, 3840, 3863, 3866, 3892, 3894, 3894, 3896, 3896, 3902, 3911, 3913, 3946, 3967, 3967, 3973, 3973, 3976, 3979, 4030, 4037, 4039, 4044, 4047, 4047, 4096, 4129, 4131, 4135, 4137, 4138, 4140, 4140, 4145, 4145, 4152, 4152, 4160, 4183, 4256, 4293, 4304, 4344, 4347, 4347, 4352, 4441, 4447, 4514, 4520, 4601, 4608, 4614, 4616, 4678, 4680, 4680, 4682, 4685, 4688, 4694, 4696, 4696, 4698, 4701, 4704, 4742, 4744, 4744, 4746, 4749, 4752, 4782, 4784, 4784, 4786, 4789, 4792, 4798, 4800, 4800, 4802, 4805, 4808, 4814, 4816, 4822, 4824, 4846, 4848, 4878, 4880, 4880, 4882, 4885, 4888, 4894, 4896, 4934, 4936, 4954, 4961, 4988, 5024, 5108, 5121, 5750, 5761, 5786, 5792, 5872, 5888, 5900, 5902, 5905, 5920, 5937, 5941, 5942, 5952, 5969, 5984, 5996, 5998, 6e3, 6016, 6070, 6078, 6085, 6087, 6088, 6100, 6106, 6108, 6108, 6112, 6121, 6160, 6169, 6176, 6263, 6272, 6312, 7680, 7835, 7840, 7929, 7936, 7957, 7960, 7965, 7968, 8005, 8008, 8013, 8016, 8023, 8025, 8025, 8027, 8027, 8029, 8029, 8031, 8061, 8064, 8116, 8118, 8124, 8126, 8126, 8130, 8132, 8134, 8140, 8144, 8147, 8150, 8155, 8160, 8172, 8178, 8180, 8182, 8188, 8206, 8206, 8305, 8305, 8319, 8319, 8450, 8450, 8455, 8455, 8458, 8467, 8469, 8469, 8473, 8477, 8484, 8484, 8486, 8486, 8488, 8488, 8490, 8493, 8495, 8497, 8499, 8505, 8509, 8511, 8517, 8521, 8544, 8579, 9014, 9082, 9109, 9109, 9372, 9449, 12293, 12295, 12321, 12329, 12337, 12341, 12344, 12348, 12353, 12438, 12445, 12447, 12449, 12538, 12540, 12543, 12549, 12588, 12593, 12686, 12688, 12727, 12784, 12828, 12832, 12867, 12896, 12923, 12927, 12976, 12992, 13003, 13008, 13054, 13056, 13174, 13179, 13277, 13280, 13310, 13312, 19893, 19968, 40869, 40960, 42124, 44032, 55203, 55296, 64045, 64048, 64106, 64256, 64262, 64275, 64279, 65313, 65338, 65345, 65370, 65382, 65470, 65474, 65479, 65482, 65487, 65490, 65495, 65498, 65500, 66304, 66334, 66336, 66339, 66352, 66378, 66560, 66597, 66600, 66637, 118784, 119029, 119040, 119078, 119082, 119142, 119146, 119154, 119171, 119172, 119180, 119209, 119214, 119261, 119808, 119892, 119894, 119964, 119966, 119967, 119970, 119970, 119973, 119974, 119977, 119980, 119982, 119993, 119995, 119995, 119997, 12e4, 120002, 120003, 120005, 120069, 120071, 120074, 120077, 120084, 120086, 120092, 120094, 120121, 120123, 120126, 120128, 120132, 120134, 120134, 120138, 120144, 120146, 120483, 120488, 120777, 131072, 173782, 194560, 195101, 983040, 1048573, 1048576, 1114109], Qt = function(Z) {
                return it(Z, zt);
              }, le = Gt, de = Rt, be = function(Z) {
                return Z.codePointAt(0);
              }, Oe = function(Z) {
                return Z[0];
              }, Fe = function(Z) {
                return Z[Z.length - 1];
              };
              function Ft(wt) {
                for (var Z = [], z = wt.length, rt = 0; rt < z; rt += 1) {
                  var q = wt.charCodeAt(rt);
                  if (q >= 55296 && q <= 56319 && z > rt + 1) {
                    var pt = wt.charCodeAt(rt + 1);
                    if (pt >= 56320 && pt <= 57343) {
                      Z.push((q - 55296) * 1024 + pt - 56320 + 65536), rt += 1;
                      continue;
                    }
                  }
                  Z.push(q);
                }
                return Z;
              }
              function fe(wt) {
                var Z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                if (typeof wt != "string")
                  throw new TypeError("Expected string.");
                if (wt.length === 0)
                  return "";
                var z = Ft(wt).map(function(Se) {
                  return le(Se) ? 32 : Se;
                }).filter(function(Se) {
                  return !de(Se);
                }), rt = String.fromCodePoint.apply(null, z).normalize("NFKC"), q = Ft(rt), pt = q.some(xe);
                if (pt)
                  throw new Error("Prohibited character, see https://tools.ietf.org/html/rfc4013#section-2.3");
                if (Z.allowUnassigned !== !0) {
                  var St = q.some(_);
                  if (St)
                    throw new Error("Unassigned code point, see https://tools.ietf.org/html/rfc4013#section-2.5");
                }
                var qt = q.some(we), ne = q.some(Qt);
                if (qt && ne)
                  throw new Error("String must not contain RandALCat and LCat at the same time, see https://tools.ietf.org/html/rfc3454#section-6");
                var he = we(be(Oe(rt))), ye = we(be(Fe(rt)));
                if (qt && !(he && ye))
                  throw new Error("Bidirectional RandALCat character must be the first and the last character of the string, see https://tools.ietf.org/html/rfc3454#section-6");
                return rt;
              }
              var ot = /* @__PURE__ */ function() {
                m(wt, null, [{
                  key: "generateFileID",
                  value: function() {
                    var z = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, rt = "".concat(z.CreationDate.getTime(), `
`);
                    for (var q in z)
                      z.hasOwnProperty(q) && (rt += "".concat(q, ": ").concat(z[q].valueOf(), `
`));
                    return Ne(f.default.MD5(rt));
                  }
                }, {
                  key: "generateRandomWordArray",
                  value: function(z) {
                    return f.default.lib.WordArray.random(z);
                  }
                }, {
                  key: "create",
                  value: function(z) {
                    var rt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                    return !rt.ownerPassword && !rt.userPassword ? null : new wt(z, rt);
                  }
                }]);
                function wt(Z) {
                  var z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  if (p(this, wt), !z.ownerPassword && !z.userPassword)
                    throw new Error("None of owner password and user password is defined.");
                  this.document = Z, this._setupEncryption(z);
                }
                return m(wt, [{
                  key: "_setupEncryption",
                  value: function(z) {
                    switch (z.pdfVersion) {
                      case "1.4":
                      case "1.5":
                        this.version = 2;
                        break;
                      case "1.6":
                      case "1.7":
                        this.version = 4;
                        break;
                      case "1.7ext3":
                        this.version = 5;
                        break;
                      default:
                        this.version = 1;
                        break;
                    }
                    var rt = {
                      Filter: "Standard"
                    };
                    switch (this.version) {
                      case 1:
                      case 2:
                      case 4:
                        this._setupEncryptionV1V2V4(this.version, rt, z);
                        break;
                      case 5:
                        this._setupEncryptionV5(rt, z);
                        break;
                    }
                    this.dictionary = this.document.ref(rt);
                  }
                }, {
                  key: "_setupEncryptionV1V2V4",
                  value: function(z, rt, q) {
                    var pt, St;
                    switch (z) {
                      case 1:
                        pt = 2, this.keyBits = 40, St = Y(q.permissions);
                        break;
                      case 2:
                        pt = 3, this.keyBits = 128, St = j(q.permissions);
                        break;
                      case 4:
                        pt = 4, this.keyBits = 128, St = j(q.permissions);
                        break;
                    }
                    var qt = Le(q.userPassword), ne = q.ownerPassword ? Le(q.ownerPassword) : qt, he = Wt(pt, this.keyBits, qt, ne);
                    this.encryptionKey = _t(pt, this.keyBits, this.document._id, qt, he, St);
                    var ye;
                    pt === 2 ? ye = mt(this.encryptionKey) : ye = at(this.document._id, this.encryptionKey), rt.V = z, z >= 2 && (rt.Length = this.keyBits), z === 4 && (rt.CF = {
                      StdCF: {
                        AuthEvent: "DocOpen",
                        CFM: "AESV2",
                        Length: this.keyBits / 8
                      }
                    }, rt.StmF = "StdCF", rt.StrF = "StdCF"), rt.R = pt, rt.O = Ne(he), rt.U = Ne(ye), rt.P = St;
                  }
                }, {
                  key: "_setupEncryptionV5",
                  value: function(z, rt) {
                    this.keyBits = 256;
                    var q = j(rt.permissions), pt = De(rt.userPassword), St = rt.ownerPassword ? De(rt.ownerPassword) : pt;
                    this.encryptionKey = Ht(wt.generateRandomWordArray);
                    var qt = Q(pt, wt.generateRandomWordArray), ne = f.default.lib.WordArray.create(qt.words.slice(10, 12), 8), he = Jt(pt, ne, this.encryptionKey), ye = te(St, qt, wt.generateRandomWordArray), Se = f.default.lib.WordArray.create(ye.words.slice(10, 12), 8), Ce = Ct(St, Se, qt, this.encryptionKey), Ie = oe(q, this.encryptionKey, wt.generateRandomWordArray);
                    z.V = 5, z.Length = this.keyBits, z.CF = {
                      StdCF: {
                        AuthEvent: "DocOpen",
                        CFM: "AESV3",
                        Length: this.keyBits / 8
                      }
                    }, z.StmF = "StdCF", z.StrF = "StdCF", z.R = 5, z.O = Ne(ye), z.OE = Ne(Ce), z.U = Ne(qt), z.UE = Ne(he), z.P = q, z.Perms = Ne(Ie);
                  }
                }, {
                  key: "getEncryptFn",
                  value: function(z, rt) {
                    var q;
                    if (this.version < 5 && (q = this.encryptionKey.clone().concat(f.default.lib.WordArray.create([(z & 255) << 24 | (z & 65280) << 8 | z >> 8 & 65280 | rt & 255, (rt & 65280) << 16], 5))), this.version === 1 || this.version === 2) {
                      var pt = f.default.MD5(q);
                      return pt.sigBytes = Math.min(16, this.keyBits / 8 + 5), function(he) {
                        return Ne(f.default.RC4.encrypt(f.default.lib.WordArray.create(he), pt).ciphertext);
                      };
                    }
                    var St;
                    this.version === 4 ? St = f.default.MD5(q.concat(f.default.lib.WordArray.create([1933667412], 4))) : St = this.encryptionKey;
                    var qt = wt.generateRandomWordArray(16), ne = {
                      mode: f.default.mode.CBC,
                      padding: f.default.pad.Pkcs7,
                      iv: qt
                    };
                    return function(he) {
                      return Ne(qt.clone().concat(f.default.AES.encrypt(f.default.lib.WordArray.create(he), St, ne).ciphertext));
                    };
                  }
                }, {
                  key: "end",
                  value: function() {
                    this.dictionary.end();
                  }
                }]), wt;
              }();
              function Y() {
                var wt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Z = -64;
                return wt.printing && (Z |= 4), wt.modifying && (Z |= 8), wt.copying && (Z |= 16), wt.annotating && (Z |= 32), Z;
              }
              function j() {
                var wt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, Z = -3904;
                return wt.printing === "lowResolution" && (Z |= 4), wt.printing === "highResolution" && (Z |= 2052), wt.modifying && (Z |= 8), wt.copying && (Z |= 16), wt.annotating && (Z |= 32), wt.fillingForms && (Z |= 256), wt.contentAccessibility && (Z |= 512), wt.documentAssembly && (Z |= 1024), Z;
              }
              function mt(wt) {
                return f.default.RC4.encrypt(Le(), wt).ciphertext;
              }
              function at(wt, Z) {
                for (var z = Z.clone(), rt = f.default.MD5(Le().concat(f.default.lib.WordArray.create(wt))), q = 0; q < 20; q++) {
                  for (var pt = Math.ceil(z.sigBytes / 4), St = 0; St < pt; St++)
                    z.words[St] = Z.words[St] ^ (q | q << 8 | q << 16 | q << 24);
                  rt = f.default.RC4.encrypt(rt, z).ciphertext;
                }
                return rt.concat(f.default.lib.WordArray.create(null, 16));
              }
              function Wt(wt, Z, z, rt) {
                for (var q = rt, pt = wt >= 3 ? 51 : 1, St = 0; St < pt; St++)
                  q = f.default.MD5(q);
                var qt = q.clone();
                qt.sigBytes = Z / 8;
                var ne = z;
                pt = wt >= 3 ? 20 : 1;
                for (var he = 0; he < pt; he++) {
                  for (var ye = Math.ceil(qt.sigBytes / 4), Se = 0; Se < ye; Se++)
                    qt.words[Se] = q.words[Se] ^ (he | he << 8 | he << 16 | he << 24);
                  ne = f.default.RC4.encrypt(ne, qt).ciphertext;
                }
                return ne;
              }
              function _t(wt, Z, z, rt, q, pt) {
                for (var St = rt.clone().concat(q).concat(f.default.lib.WordArray.create([ke(pt)], 4)).concat(f.default.lib.WordArray.create(z)), qt = wt >= 3 ? 51 : 1, ne = 0; ne < qt; ne++)
                  St = f.default.MD5(St), St.sigBytes = Z / 8;
                return St;
              }
              function Q(wt, Z) {
                var z = Z(8), rt = Z(8);
                return f.default.SHA256(wt.clone().concat(z)).concat(z).concat(rt);
              }
              function Jt(wt, Z, z) {
                var rt = f.default.SHA256(wt.clone().concat(Z)), q = {
                  mode: f.default.mode.CBC,
                  padding: f.default.pad.NoPadding,
                  iv: f.default.lib.WordArray.create(null, 16)
                };
                return f.default.AES.encrypt(z, rt, q).ciphertext;
              }
              function te(wt, Z, z) {
                var rt = z(8), q = z(8);
                return f.default.SHA256(wt.clone().concat(rt).concat(Z)).concat(rt).concat(q);
              }
              function Ct(wt, Z, z, rt) {
                var q = f.default.SHA256(wt.clone().concat(Z).concat(z)), pt = {
                  mode: f.default.mode.CBC,
                  padding: f.default.pad.NoPadding,
                  iv: f.default.lib.WordArray.create(null, 16)
                };
                return f.default.AES.encrypt(rt, q, pt).ciphertext;
              }
              function Ht(wt) {
                return wt(32);
              }
              function oe(wt, Z, z) {
                var rt = f.default.lib.WordArray.create([ke(wt), 4294967295, 1415668834], 12).concat(z(4)), q = {
                  mode: f.default.mode.ECB,
                  padding: f.default.pad.NoPadding
                };
                return f.default.AES.encrypt(rt, Z, q).ciphertext;
              }
              function Le() {
                for (var wt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "", Z = r.alloc(32), z = wt.length, rt = 0; rt < z && rt < 32; ) {
                  var q = wt.charCodeAt(rt);
                  if (q > 255)
                    throw new Error("Password contains one or more invalid characters.");
                  Z[rt] = q, rt++;
                }
                for (; rt < 32; )
                  Z[rt] = rn[rt - z], rt++;
                return f.default.lib.WordArray.create(Z);
              }
              function De() {
                var wt = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
                wt = unescape(encodeURIComponent(fe(wt)));
                for (var Z = Math.min(127, wt.length), z = r.alloc(Z), rt = 0; rt < Z; rt++)
                  z[rt] = wt.charCodeAt(rt);
                return f.default.lib.WordArray.create(z);
              }
              function ke(wt) {
                return (wt & 255) << 24 | (wt & 65280) << 8 | wt >> 8 & 65280 | wt >> 24 & 255;
              }
              function Ne(wt) {
                for (var Z = [], z = 0; z < wt.sigBytes; z++)
                  Z.push(wt.words[Math.floor(z / 4)] >> 8 * (3 - z % 4) & 255);
                return r.from(Z);
              }
              var rn = [40, 191, 78, 94, 78, 117, 138, 65, 100, 0, 78, 86, 255, 250, 1, 8, 46, 46, 0, 182, 208, 104, 62, 128, 47, 12, 169, 254, 100, 83, 105, 122], tr = G.number, Ze = /* @__PURE__ */ function() {
                function wt(Z) {
                  p(this, wt), this.doc = Z, this.stops = [], this.embedded = !1, this.transform = [1, 0, 0, 1, 0, 0];
                }
                return m(wt, [{
                  key: "stop",
                  value: function(z, rt, q) {
                    if (q == null && (q = 1), rt = this.doc._normalizeColor(rt), this.stops.length === 0)
                      if (rt.length === 3)
                        this._colorSpace = "DeviceRGB";
                      else if (rt.length === 4)
                        this._colorSpace = "DeviceCMYK";
                      else if (rt.length === 1)
                        this._colorSpace = "DeviceGray";
                      else
                        throw new Error("Unknown color space");
                    else if (this._colorSpace === "DeviceRGB" && rt.length !== 3 || this._colorSpace === "DeviceCMYK" && rt.length !== 4 || this._colorSpace === "DeviceGray" && rt.length !== 1)
                      throw new Error("All gradient stops must use the same color space");
                    return q = Math.max(0, Math.min(1, q)), this.stops.push([z, rt, q]), this;
                  }
                }, {
                  key: "setTransform",
                  value: function(z, rt, q, pt, St, qt) {
                    return this.transform = [z, rt, q, pt, St, qt], this;
                  }
                }, {
                  key: "embed",
                  value: function(z) {
                    var rt, q = this.stops.length;
                    if (q !== 0) {
                      this.embedded = !0, this.matrix = z;
                      var pt = this.stops[q - 1];
                      pt[0] < 1 && this.stops.push([1, pt[1], pt[2]]);
                      for (var St = [], qt = [], ne = [], he = 0; he < q - 1; he++)
                        qt.push(0, 1), he + 2 !== q && St.push(this.stops[he + 1][0]), rt = this.doc.ref({
                          FunctionType: 2,
                          Domain: [0, 1],
                          C0: this.stops[he + 0][1],
                          C1: this.stops[he + 1][1],
                          N: 1
                        }), ne.push(rt), rt.end();
                      q === 1 ? rt = ne[0] : (rt = this.doc.ref({
                        FunctionType: 3,
                        // stitching function
                        Domain: [0, 1],
                        Functions: ne,
                        Bounds: St,
                        Encode: qt
                      }), rt.end()), this.id = "Sh".concat(++this.doc._gradCount);
                      var ye = this.shader(rt);
                      ye.end();
                      var Se = this.doc.ref({
                        Type: "Pattern",
                        PatternType: 2,
                        Shading: ye,
                        Matrix: this.matrix.map(tr)
                      });
                      if (Se.end(), this.stops.some(function(yr) {
                        return yr[2] < 1;
                      })) {
                        var Ce = this.opacityGradient();
                        Ce._colorSpace = "DeviceGray";
                        var Ie = Lt(this.stops), Ge;
                        try {
                          for (Ie.s(); !(Ge = Ie.n()).done; ) {
                            var Ve = Ge.value;
                            Ce.stop(Ve[0], [Ve[2]]);
                          }
                        } catch (yr) {
                          Ie.e(yr);
                        } finally {
                          Ie.f();
                        }
                        Ce = Ce.embed(this.matrix);
                        var qe = [0, 0, this.doc.page.width, this.doc.page.height], lr = this.doc.ref({
                          Type: "XObject",
                          Subtype: "Form",
                          FormType: 1,
                          BBox: qe,
                          Group: {
                            Type: "Group",
                            S: "Transparency",
                            CS: "DeviceGray"
                          },
                          Resources: {
                            ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"],
                            Pattern: {
                              Sh1: Ce
                            }
                          }
                        });
                        lr.write("/Pattern cs /Sh1 scn"), lr.end("".concat(qe.join(" "), " re f"));
                        var Fr = this.doc.ref({
                          Type: "ExtGState",
                          SMask: {
                            Type: "Mask",
                            S: "Luminosity",
                            G: lr
                          }
                        });
                        Fr.end();
                        var qr = this.doc.ref({
                          Type: "Pattern",
                          PatternType: 1,
                          PaintType: 1,
                          TilingType: 2,
                          BBox: qe,
                          XStep: qe[2],
                          YStep: qe[3],
                          Resources: {
                            ProcSet: ["PDF", "Text", "ImageB", "ImageC", "ImageI"],
                            Pattern: {
                              Sh1: Se
                            },
                            ExtGState: {
                              Gs1: Fr
                            }
                          }
                        });
                        qr.write("/Gs1 gs /Pattern cs /Sh1 scn"), qr.end("".concat(qe.join(" "), " re f")), this.doc.page.patterns[this.id] = qr;
                      } else
                        this.doc.page.patterns[this.id] = Se;
                      return Se;
                    }
                  }
                }, {
                  key: "apply",
                  value: function(z) {
                    var rt = U(this.doc._ctm, 6), q = rt[0], pt = rt[1], St = rt[2], qt = rt[3], ne = rt[4], he = rt[5], ye = U(this.transform, 6), Se = ye[0], Ce = ye[1], Ie = ye[2], Ge = ye[3], Ve = ye[4], qe = ye[5], lr = [q * Se + St * Ce, pt * Se + qt * Ce, q * Ie + St * Ge, pt * Ie + qt * Ge, q * Ve + St * qe + ne, pt * Ve + qt * qe + he];
                    (!this.embedded || lr.join(" ") !== this.matrix.join(" ")) && this.embed(lr), this.doc._setColorSpace("Pattern", z);
                    var Fr = z ? "SCN" : "scn";
                    return this.doc.addContent("/".concat(this.id, " ").concat(Fr));
                  }
                }]), wt;
              }(), br = /* @__PURE__ */ function(wt) {
                E(z, wt);
                var Z = N(z);
                function z(rt, q, pt, St, qt) {
                  var ne;
                  return p(this, z), ne = Z.call(this, rt), ne.x1 = q, ne.y1 = pt, ne.x2 = St, ne.y2 = qt, ne;
                }
                return m(z, [{
                  key: "shader",
                  value: function(q) {
                    return this.doc.ref({
                      ShadingType: 2,
                      ColorSpace: this._colorSpace,
                      Coords: [this.x1, this.y1, this.x2, this.y2],
                      Function: q,
                      Extend: [!0, !0]
                    });
                  }
                }, {
                  key: "opacityGradient",
                  value: function() {
                    return new z(this.doc, this.x1, this.y1, this.x2, this.y2);
                  }
                }]), z;
              }(Ze), Ir = /* @__PURE__ */ function(wt) {
                E(z, wt);
                var Z = N(z);
                function z(rt, q, pt, St, qt, ne, he) {
                  var ye;
                  return p(this, z), ye = Z.call(this, rt), ye.doc = rt, ye.x1 = q, ye.y1 = pt, ye.r1 = St, ye.x2 = qt, ye.y2 = ne, ye.r2 = he, ye;
                }
                return m(z, [{
                  key: "shader",
                  value: function(q) {
                    return this.doc.ref({
                      ShadingType: 3,
                      ColorSpace: this._colorSpace,
                      Coords: [this.x1, this.y1, this.r1, this.x2, this.y2, this.r2],
                      Function: q,
                      Extend: [!0, !0]
                    });
                  }
                }, {
                  key: "opacityGradient",
                  value: function() {
                    return new z(this.doc, this.x1, this.y1, this.r1, this.x2, this.y2, this.r2);
                  }
                }]), z;
              }(Ze), Zr = {
                PDFGradient: Ze,
                PDFLinearGradient: br,
                PDFRadialGradient: Ir
              }, Cn = ["DeviceCMYK", "DeviceRGB"], Mn = /* @__PURE__ */ function() {
                function wt(Z, z, rt, q, pt) {
                  p(this, wt), this.doc = Z, this.bBox = z, this.xStep = rt, this.yStep = q, this.stream = pt;
                }
                return m(wt, [{
                  key: "createPattern",
                  value: function() {
                    var z = this.doc.ref();
                    z.end();
                    var rt = U(this.doc._ctm, 6), q = rt[0], pt = rt[1], St = rt[2], qt = rt[3], ne = rt[4], he = rt[5], ye = 1, Se = 0, Ce = 0, Ie = 1, Ge = 0, Ve = 0, qe = [q * ye + St * Se, pt * ye + qt * Se, q * Ce + St * Ie, pt * Ce + qt * Ie, q * Ge + St * Ve + ne, pt * Ge + qt * Ve + he], lr = this.doc.ref({
                      Type: "Pattern",
                      PatternType: 1,
                      // tiling
                      PaintType: 2,
                      // 1-colored, 2-uncolored
                      TilingType: 2,
                      // 2-no distortion
                      BBox: this.bBox,
                      XStep: this.xStep,
                      YStep: this.yStep,
                      Matrix: qe.map(function(Fr) {
                        return +Fr.toFixed(5);
                      }),
                      Resources: z
                    });
                    return lr.end(this.stream), lr;
                  }
                }, {
                  key: "embedPatternColorSpaces",
                  value: function() {
                    var z = this;
                    Cn.forEach(function(rt) {
                      var q = z.getPatternColorSpaceId(rt);
                      if (!z.doc.page.colorSpaces[q]) {
                        var pt = z.doc.ref(["Pattern", rt]);
                        pt.end(), z.doc.page.colorSpaces[q] = pt;
                      }
                    });
                  }
                }, {
                  key: "getPatternColorSpaceId",
                  value: function(z) {
                    return "CsP".concat(z);
                  }
                }, {
                  key: "embed",
                  value: function() {
                    this.id || (this.doc._patternCount = this.doc._patternCount + 1, this.id = "P" + this.doc._patternCount, this.pattern = this.createPattern()), this.doc.page.patterns[this.id] || (this.doc.page.patterns[this.id] = this.pattern);
                  }
                }, {
                  key: "apply",
                  value: function(z, rt) {
                    this.embedPatternColorSpaces(), this.embed();
                    var q = this.doc._normalizeColor(rt);
                    if (!q)
                      throw Error("invalid pattern color. (value: ".concat(rt, ")"));
                    var pt = this.getPatternColorSpaceId(this.doc._getColorSpace(q));
                    this.doc._setColorSpace(pt, z);
                    var St = z ? "SCN" : "scn";
                    return this.doc.addContent("".concat(q.join(" "), " /").concat(this.id, " ").concat(St));
                  }
                }]), wt;
              }(), rr = {
                PDFTilingPattern: Mn
              }, nn = Zr.PDFGradient, Mr = Zr.PDFLinearGradient, $r = Zr.PDFRadialGradient, Wr = rr.PDFTilingPattern, Hn = {
                initColor: function() {
                  return this._opacityRegistry = {}, this._opacityCount = 0, this._patternCount = 0, this._gradCount = 0;
                },
                _normalizeColor: function(Z) {
                  if (typeof Z == "string")
                    if (Z.charAt(0) === "#") {
                      Z.length === 4 && (Z = Z.replace(/#([0-9A-F])([0-9A-F])([0-9A-F])/i, "#$1$1$2$2$3$3"));
                      var z = parseInt(Z.slice(1), 16);
                      Z = [z >> 16, z >> 8 & 255, z & 255];
                    } else
                      jn[Z] && (Z = jn[Z]);
                  return Array.isArray(Z) ? (Z.length === 3 ? Z = Z.map(function(rt) {
                    return rt / 255;
                  }) : Z.length === 4 && (Z = Z.map(function(rt) {
                    return rt / 100;
                  })), Z) : null;
                },
                _setColor: function(Z, z) {
                  return Z instanceof nn ? (Z.apply(z), !0) : Array.isArray(Z) && Z[0] instanceof Wr ? (Z[0].apply(z, Z[1]), !0) : this._setColorCore(Z, z);
                },
                _setColorCore: function(Z, z) {
                  if (Z = this._normalizeColor(Z), !Z)
                    return !1;
                  var rt = z ? "SCN" : "scn", q = this._getColorSpace(Z);
                  return this._setColorSpace(q, z), Z = Z.join(" "), this.addContent("".concat(Z, " ").concat(rt)), !0;
                },
                _setColorSpace: function(Z, z) {
                  var rt = z ? "CS" : "cs";
                  return this.addContent("/".concat(Z, " ").concat(rt));
                },
                _getColorSpace: function(Z) {
                  return Z.length === 4 ? "DeviceCMYK" : "DeviceRGB";
                },
                fillColor: function(Z, z) {
                  var rt = this._setColor(Z, !1);
                  return rt && this.fillOpacity(z), this._fillColor = [Z, z], this;
                },
                strokeColor: function(Z, z) {
                  var rt = this._setColor(Z, !0);
                  return rt && this.strokeOpacity(z), this;
                },
                opacity: function(Z) {
                  return this._doOpacity(Z, Z), this;
                },
                fillOpacity: function(Z) {
                  return this._doOpacity(Z, null), this;
                },
                strokeOpacity: function(Z) {
                  return this._doOpacity(null, Z), this;
                },
                _doOpacity: function(Z, z) {
                  var rt, q;
                  if (!(Z == null && z == null)) {
                    Z != null && (Z = Math.max(0, Math.min(1, Z))), z != null && (z = Math.max(0, Math.min(1, z)));
                    var pt = "".concat(Z, "_").concat(z);
                    if (this._opacityRegistry[pt]) {
                      var St = U(this._opacityRegistry[pt], 2);
                      rt = St[0], q = St[1];
                    } else {
                      rt = {
                        Type: "ExtGState"
                      }, Z != null && (rt.ca = Z), z != null && (rt.CA = z), rt = this.ref(rt), rt.end();
                      var qt = ++this._opacityCount;
                      q = "Gs".concat(qt), this._opacityRegistry[pt] = [rt, q];
                    }
                    return this.page.ext_gstates[q] = rt, this.addContent("/".concat(q, " gs"));
                  }
                },
                linearGradient: function(Z, z, rt, q) {
                  return new Mr(this, Z, z, rt, q);
                },
                radialGradient: function(Z, z, rt, q, pt, St) {
                  return new $r(this, Z, z, rt, q, pt, St);
                },
                pattern: function(Z, z, rt, q) {
                  return new Wr(this, Z, z, rt, q);
                }
              }, jn = {
                aliceblue: [240, 248, 255],
                antiquewhite: [250, 235, 215],
                aqua: [0, 255, 255],
                aquamarine: [127, 255, 212],
                azure: [240, 255, 255],
                beige: [245, 245, 220],
                bisque: [255, 228, 196],
                black: [0, 0, 0],
                blanchedalmond: [255, 235, 205],
                blue: [0, 0, 255],
                blueviolet: [138, 43, 226],
                brown: [165, 42, 42],
                burlywood: [222, 184, 135],
                cadetblue: [95, 158, 160],
                chartreuse: [127, 255, 0],
                chocolate: [210, 105, 30],
                coral: [255, 127, 80],
                cornflowerblue: [100, 149, 237],
                cornsilk: [255, 248, 220],
                crimson: [220, 20, 60],
                cyan: [0, 255, 255],
                darkblue: [0, 0, 139],
                darkcyan: [0, 139, 139],
                darkgoldenrod: [184, 134, 11],
                darkgray: [169, 169, 169],
                darkgreen: [0, 100, 0],
                darkgrey: [169, 169, 169],
                darkkhaki: [189, 183, 107],
                darkmagenta: [139, 0, 139],
                darkolivegreen: [85, 107, 47],
                darkorange: [255, 140, 0],
                darkorchid: [153, 50, 204],
                darkred: [139, 0, 0],
                darksalmon: [233, 150, 122],
                darkseagreen: [143, 188, 143],
                darkslateblue: [72, 61, 139],
                darkslategray: [47, 79, 79],
                darkslategrey: [47, 79, 79],
                darkturquoise: [0, 206, 209],
                darkviolet: [148, 0, 211],
                deeppink: [255, 20, 147],
                deepskyblue: [0, 191, 255],
                dimgray: [105, 105, 105],
                dimgrey: [105, 105, 105],
                dodgerblue: [30, 144, 255],
                firebrick: [178, 34, 34],
                floralwhite: [255, 250, 240],
                forestgreen: [34, 139, 34],
                fuchsia: [255, 0, 255],
                gainsboro: [220, 220, 220],
                ghostwhite: [248, 248, 255],
                gold: [255, 215, 0],
                goldenrod: [218, 165, 32],
                gray: [128, 128, 128],
                grey: [128, 128, 128],
                green: [0, 128, 0],
                greenyellow: [173, 255, 47],
                honeydew: [240, 255, 240],
                hotpink: [255, 105, 180],
                indianred: [205, 92, 92],
                indigo: [75, 0, 130],
                ivory: [255, 255, 240],
                khaki: [240, 230, 140],
                lavender: [230, 230, 250],
                lavenderblush: [255, 240, 245],
                lawngreen: [124, 252, 0],
                lemonchiffon: [255, 250, 205],
                lightblue: [173, 216, 230],
                lightcoral: [240, 128, 128],
                lightcyan: [224, 255, 255],
                lightgoldenrodyellow: [250, 250, 210],
                lightgray: [211, 211, 211],
                lightgreen: [144, 238, 144],
                lightgrey: [211, 211, 211],
                lightpink: [255, 182, 193],
                lightsalmon: [255, 160, 122],
                lightseagreen: [32, 178, 170],
                lightskyblue: [135, 206, 250],
                lightslategray: [119, 136, 153],
                lightslategrey: [119, 136, 153],
                lightsteelblue: [176, 196, 222],
                lightyellow: [255, 255, 224],
                lime: [0, 255, 0],
                limegreen: [50, 205, 50],
                linen: [250, 240, 230],
                magenta: [255, 0, 255],
                maroon: [128, 0, 0],
                mediumaquamarine: [102, 205, 170],
                mediumblue: [0, 0, 205],
                mediumorchid: [186, 85, 211],
                mediumpurple: [147, 112, 219],
                mediumseagreen: [60, 179, 113],
                mediumslateblue: [123, 104, 238],
                mediumspringgreen: [0, 250, 154],
                mediumturquoise: [72, 209, 204],
                mediumvioletred: [199, 21, 133],
                midnightblue: [25, 25, 112],
                mintcream: [245, 255, 250],
                mistyrose: [255, 228, 225],
                moccasin: [255, 228, 181],
                navajowhite: [255, 222, 173],
                navy: [0, 0, 128],
                oldlace: [253, 245, 230],
                olive: [128, 128, 0],
                olivedrab: [107, 142, 35],
                orange: [255, 165, 0],
                orangered: [255, 69, 0],
                orchid: [218, 112, 214],
                palegoldenrod: [238, 232, 170],
                palegreen: [152, 251, 152],
                paleturquoise: [175, 238, 238],
                palevioletred: [219, 112, 147],
                papayawhip: [255, 239, 213],
                peachpuff: [255, 218, 185],
                peru: [205, 133, 63],
                pink: [255, 192, 203],
                plum: [221, 160, 221],
                powderblue: [176, 224, 230],
                purple: [128, 0, 128],
                red: [255, 0, 0],
                rosybrown: [188, 143, 143],
                royalblue: [65, 105, 225],
                saddlebrown: [139, 69, 19],
                salmon: [250, 128, 114],
                sandybrown: [244, 164, 96],
                seagreen: [46, 139, 87],
                seashell: [255, 245, 238],
                sienna: [160, 82, 45],
                silver: [192, 192, 192],
                skyblue: [135, 206, 235],
                slateblue: [106, 90, 205],
                slategray: [112, 128, 144],
                slategrey: [112, 128, 144],
                snow: [255, 250, 250],
                springgreen: [0, 255, 127],
                steelblue: [70, 130, 180],
                tan: [210, 180, 140],
                teal: [0, 128, 128],
                thistle: [216, 191, 216],
                tomato: [255, 99, 71],
                turquoise: [64, 224, 208],
                violet: [238, 130, 238],
                wheat: [245, 222, 179],
                white: [255, 255, 255],
                whitesmoke: [245, 245, 245],
                yellow: [255, 255, 0],
                yellowgreen: [154, 205, 50]
              }, Ue, ze, Qe, ur, xn, wn;
              Ue = ze = Qe = ur = xn = wn = 0;
              var Yn = {
                A: 7,
                a: 7,
                C: 6,
                c: 6,
                H: 1,
                h: 1,
                L: 2,
                l: 2,
                M: 2,
                m: 2,
                Q: 4,
                q: 4,
                S: 4,
                s: 4,
                T: 2,
                t: 2,
                V: 1,
                v: 1,
                Z: 0,
                z: 0
              }, va = function(Z) {
                var z, rt = [], q = [], pt = "", St = !1, qt = 0, ne = Lt(Z), he;
                try {
                  for (ne.s(); !(he = ne.n()).done; ) {
                    var ye = he.value;
                    if (Yn[ye] != null)
                      qt = Yn[ye], z && (pt.length > 0 && (q[q.length] = +pt), rt[rt.length] = {
                        cmd: z,
                        args: q
                      }, q = [], pt = "", St = !1), z = ye;
                    else if ([" ", ","].includes(ye) || ye === "-" && pt.length > 0 && pt[pt.length - 1] !== "e" || ye === "." && St) {
                      if (pt.length === 0)
                        continue;
                      q.length === qt ? (rt[rt.length] = {
                        cmd: z,
                        args: q
                      }, q = [+pt], z === "M" && (z = "L"), z === "m" && (z = "l")) : q[q.length] = +pt, St = ye === ".", pt = ["-", "."].includes(ye) ? ye : "";
                    } else
                      pt += ye, ye === "." && (St = !0);
                  }
                } catch (Se) {
                  ne.e(Se);
                } finally {
                  ne.f();
                }
                return pt.length > 0 && (q.length === qt ? (rt[rt.length] = {
                  cmd: z,
                  args: q
                }, q = [+pt], z === "M" && (z = "L"), z === "m" && (z = "l")) : q[q.length] = +pt), rt[rt.length] = {
                  cmd: z,
                  args: q
                }, rt;
              }, Kn = function(Z, z) {
                Ue = ze = Qe = ur = xn = wn = 0;
                for (var rt = 0; rt < Z.length; rt++) {
                  var q = Z[rt];
                  typeof Jn[q.cmd] == "function" && Jn[q.cmd](z, q.args);
                }
              }, Jn = {
                M: function(Z, z) {
                  return Ue = z[0], ze = z[1], Qe = ur = null, xn = Ue, wn = ze, Z.moveTo(Ue, ze);
                },
                m: function(Z, z) {
                  return Ue += z[0], ze += z[1], Qe = ur = null, xn = Ue, wn = ze, Z.moveTo(Ue, ze);
                },
                C: function(Z, z) {
                  return Ue = z[4], ze = z[5], Qe = z[2], ur = z[3], Z.bezierCurveTo.apply(Z, W(z));
                },
                c: function(Z, z) {
                  return Z.bezierCurveTo(z[0] + Ue, z[1] + ze, z[2] + Ue, z[3] + ze, z[4] + Ue, z[5] + ze), Qe = Ue + z[2], ur = ze + z[3], Ue += z[4], ze += z[5];
                },
                S: function(Z, z) {
                  return Qe === null && (Qe = Ue, ur = ze), Z.bezierCurveTo(Ue - (Qe - Ue), ze - (ur - ze), z[0], z[1], z[2], z[3]), Qe = z[0], ur = z[1], Ue = z[2], ze = z[3];
                },
                s: function(Z, z) {
                  return Qe === null && (Qe = Ue, ur = ze), Z.bezierCurveTo(Ue - (Qe - Ue), ze - (ur - ze), Ue + z[0], ze + z[1], Ue + z[2], ze + z[3]), Qe = Ue + z[0], ur = ze + z[1], Ue += z[2], ze += z[3];
                },
                Q: function(Z, z) {
                  return Qe = z[0], ur = z[1], Ue = z[2], ze = z[3], Z.quadraticCurveTo(z[0], z[1], Ue, ze);
                },
                q: function(Z, z) {
                  return Z.quadraticCurveTo(z[0] + Ue, z[1] + ze, z[2] + Ue, z[3] + ze), Qe = Ue + z[0], ur = ze + z[1], Ue += z[2], ze += z[3];
                },
                T: function(Z, z) {
                  return Qe === null ? (Qe = Ue, ur = ze) : (Qe = Ue - (Qe - Ue), ur = ze - (ur - ze)), Z.quadraticCurveTo(Qe, ur, z[0], z[1]), Qe = Ue - (Qe - Ue), ur = ze - (ur - ze), Ue = z[0], ze = z[1];
                },
                t: function(Z, z) {
                  return Qe === null ? (Qe = Ue, ur = ze) : (Qe = Ue - (Qe - Ue), ur = ze - (ur - ze)), Z.quadraticCurveTo(Qe, ur, Ue + z[0], ze + z[1]), Ue += z[0], ze += z[1];
                },
                A: function(Z, z) {
                  return Kt(Z, Ue, ze, z), Ue = z[5], ze = z[6];
                },
                a: function(Z, z) {
                  return z[5] += Ue, z[6] += ze, Kt(Z, Ue, ze, z), Ue = z[5], ze = z[6];
                },
                L: function(Z, z) {
                  return Ue = z[0], ze = z[1], Qe = ur = null, Z.lineTo(Ue, ze);
                },
                l: function(Z, z) {
                  return Ue += z[0], ze += z[1], Qe = ur = null, Z.lineTo(Ue, ze);
                },
                H: function(Z, z) {
                  return Ue = z[0], Qe = ur = null, Z.lineTo(Ue, ze);
                },
                h: function(Z, z) {
                  return Ue += z[0], Qe = ur = null, Z.lineTo(Ue, ze);
                },
                V: function(Z, z) {
                  return ze = z[0], Qe = ur = null, Z.lineTo(Ue, ze);
                },
                v: function(Z, z) {
                  return ze += z[0], Qe = ur = null, Z.lineTo(Ue, ze);
                },
                Z: function(Z) {
                  return Z.closePath(), Ue = xn, ze = wn;
                },
                z: function(Z) {
                  return Z.closePath(), Ue = xn, ze = wn;
                }
              }, Kt = function(Z, z, rt, q) {
                var pt = U(q, 7), St = pt[0], qt = pt[1], ne = pt[2], he = pt[3], ye = pt[4], Se = pt[5], Ce = pt[6], Ie = Pt(Se, Ce, St, qt, he, ye, ne, z, rt), Ge = Lt(Ie), Ve;
                try {
                  for (Ge.s(); !(Ve = Ge.n()).done; ) {
                    var qe = Ve.value, lr = re.apply(void 0, W(qe));
                    Z.bezierCurveTo.apply(Z, W(lr));
                  }
                } catch (Fr) {
                  Ge.e(Fr);
                } finally {
                  Ge.f();
                }
              }, Pt = function(Z, z, rt, q, pt, St, qt, ne, he) {
                var ye = qt * (Math.PI / 180), Se = Math.sin(ye), Ce = Math.cos(ye);
                rt = Math.abs(rt), q = Math.abs(q), Qe = Ce * (ne - Z) * 0.5 + Se * (he - z) * 0.5, ur = Ce * (he - z) * 0.5 - Se * (ne - Z) * 0.5;
                var Ie = Qe * Qe / (rt * rt) + ur * ur / (q * q);
                Ie > 1 && (Ie = Math.sqrt(Ie), rt *= Ie, q *= Ie);
                var Ge = Ce / rt, Ve = Se / rt, qe = -Se / q, lr = Ce / q, Fr = Ge * ne + Ve * he, qr = qe * ne + lr * he, yr = Ge * Z + Ve * z, Yr = qe * Z + lr * z, gn = (yr - Fr) * (yr - Fr) + (Yr - qr) * (Yr - qr), Kr = 1 / gn - 0.25;
                Kr < 0 && (Kr = 0);
                var yn = Math.sqrt(Kr);
                St === pt && (yn = -yn);
                var Tn = 0.5 * (Fr + yr) - yn * (Yr - qr), fa = 0.5 * (qr + Yr) + yn * (yr - Fr), ea = Math.atan2(qr - fa, Fr - Tn), hi = Math.atan2(Yr - fa, yr - Tn), ra = hi - ea;
                ra < 0 && St === 1 ? ra += 2 * Math.PI : ra > 0 && St === 0 && (ra -= 2 * Math.PI);
                for (var ga = Math.ceil(Math.abs(ra / (Math.PI * 0.5 + 1e-3))), la = [], ua = 0; ua < ga; ua++) {
                  var Qn = ea + ua * ra / ga, di = ea + (ua + 1) * ra / ga;
                  la[ua] = [Tn, fa, Qn, di, rt, q, Se, Ce];
                }
                return la;
              }, re = function(Z, z, rt, q, pt, St, qt, ne) {
                var he = ne * pt, ye = -qt * St, Se = qt * pt, Ce = ne * St, Ie = 0.5 * (q - rt), Ge = 8 / 3 * Math.sin(Ie * 0.5) * Math.sin(Ie * 0.5) / Math.sin(Ie), Ve = Z + Math.cos(rt) - Ge * Math.sin(rt), qe = z + Math.sin(rt) + Ge * Math.cos(rt), lr = Z + Math.cos(q), Fr = z + Math.sin(q), qr = lr + Ge * Math.sin(q), yr = Fr - Ge * Math.cos(q);
                return [he * Ve + ye * qe, Se * Ve + Ce * qe, he * qr + ye * yr, Se * qr + Ce * yr, he * lr + ye * Fr, Se * lr + Ce * Fr];
              }, Bt = /* @__PURE__ */ function() {
                function wt() {
                  p(this, wt);
                }
                return m(wt, null, [{
                  key: "apply",
                  value: function(z, rt) {
                    var q = va(rt);
                    Kn(q, z);
                  }
                }]), wt;
              }(), Nt = G.number, Mt = 4 * ((Math.sqrt(2) - 1) / 3), jt = {
                initVector: function() {
                  return this._ctm = [1, 0, 0, 1, 0, 0], this._ctmStack = [];
                },
                save: function() {
                  return this._ctmStack.push(this._ctm.slice()), this.addContent("q");
                },
                restore: function() {
                  return this._ctm = this._ctmStack.pop() || [1, 0, 0, 1, 0, 0], this.addContent("Q");
                },
                closePath: function() {
                  return this.addContent("h");
                },
                lineWidth: function(Z) {
                  return this.addContent("".concat(Nt(Z), " w"));
                },
                _CAP_STYLES: {
                  BUTT: 0,
                  ROUND: 1,
                  SQUARE: 2
                },
                lineCap: function(Z) {
                  return typeof Z == "string" && (Z = this._CAP_STYLES[Z.toUpperCase()]), this.addContent("".concat(Z, " J"));
                },
                _JOIN_STYLES: {
                  MITER: 0,
                  ROUND: 1,
                  BEVEL: 2
                },
                lineJoin: function(Z) {
                  return typeof Z == "string" && (Z = this._JOIN_STYLES[Z.toUpperCase()]), this.addContent("".concat(Z, " j"));
                },
                miterLimit: function(Z) {
                  return this.addContent("".concat(Nt(Z), " M"));
                },
                dash: function(Z) {
                  var z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, rt = Z;
                  Array.isArray(Z) || (Z = [Z, z.space || Z]);
                  var q = Z.every(function(pt) {
                    return Number.isFinite(pt) && pt > 0;
                  });
                  if (!q)
                    throw new Error("dash(".concat(JSON.stringify(rt), ", ").concat(JSON.stringify(z), ") invalid, lengths must be numeric and greater than zero"));
                  return Z = Z.map(Nt).join(" "), this.addContent("[".concat(Z, "] ").concat(Nt(z.phase || 0), " d"));
                },
                undash: function() {
                  return this.addContent("[] 0 d");
                },
                moveTo: function(Z, z) {
                  return this.addContent("".concat(Nt(Z), " ").concat(Nt(z), " m"));
                },
                lineTo: function(Z, z) {
                  return this.addContent("".concat(Nt(Z), " ").concat(Nt(z), " l"));
                },
                bezierCurveTo: function(Z, z, rt, q, pt, St) {
                  return this.addContent("".concat(Nt(Z), " ").concat(Nt(z), " ").concat(Nt(rt), " ").concat(Nt(q), " ").concat(Nt(pt), " ").concat(Nt(St), " c"));
                },
                quadraticCurveTo: function(Z, z, rt, q) {
                  return this.addContent("".concat(Nt(Z), " ").concat(Nt(z), " ").concat(Nt(rt), " ").concat(Nt(q), " v"));
                },
                rect: function(Z, z, rt, q) {
                  return this.addContent("".concat(Nt(Z), " ").concat(Nt(z), " ").concat(Nt(rt), " ").concat(Nt(q), " re"));
                },
                roundedRect: function(Z, z, rt, q, pt) {
                  pt == null && (pt = 0), pt = Math.min(pt, 0.5 * rt, 0.5 * q);
                  var St = pt * (1 - Mt);
                  return this.moveTo(Z + pt, z), this.lineTo(Z + rt - pt, z), this.bezierCurveTo(Z + rt - St, z, Z + rt, z + St, Z + rt, z + pt), this.lineTo(Z + rt, z + q - pt), this.bezierCurveTo(Z + rt, z + q - St, Z + rt - St, z + q, Z + rt - pt, z + q), this.lineTo(Z + pt, z + q), this.bezierCurveTo(Z + St, z + q, Z, z + q - St, Z, z + q - pt), this.lineTo(Z, z + pt), this.bezierCurveTo(Z, z + St, Z + St, z, Z + pt, z), this.closePath();
                },
                ellipse: function(Z, z, rt, q) {
                  q == null && (q = rt), Z -= rt, z -= q;
                  var pt = rt * Mt, St = q * Mt, qt = Z + rt * 2, ne = z + q * 2, he = Z + rt, ye = z + q;
                  return this.moveTo(Z, ye), this.bezierCurveTo(Z, ye - St, he - pt, z, he, z), this.bezierCurveTo(he + pt, z, qt, ye - St, qt, ye), this.bezierCurveTo(qt, ye + St, he + pt, ne, he, ne), this.bezierCurveTo(he - pt, ne, Z, ye + St, Z, ye), this.closePath();
                },
                circle: function(Z, z, rt) {
                  return this.ellipse(Z, z, rt);
                },
                arc: function(Z, z, rt, q, pt, St) {
                  St == null && (St = !1);
                  var qt = 2 * Math.PI, ne = 0.5 * Math.PI, he = pt - q;
                  if (Math.abs(he) > qt)
                    he = qt;
                  else if (he !== 0 && St !== he < 0) {
                    var ye = St ? -1 : 1;
                    he = ye * qt + he;
                  }
                  var Se = Math.ceil(Math.abs(he) / ne), Ce = he / Se, Ie = Ce / ne * Mt * rt, Ge = q, Ve = -Math.sin(Ge) * Ie, qe = Math.cos(Ge) * Ie, lr = Z + Math.cos(Ge) * rt, Fr = z + Math.sin(Ge) * rt;
                  this.moveTo(lr, Fr);
                  for (var qr = 0; qr < Se; qr++) {
                    var yr = lr + Ve, Yr = Fr + qe;
                    Ge += Ce, lr = Z + Math.cos(Ge) * rt, Fr = z + Math.sin(Ge) * rt, Ve = -Math.sin(Ge) * Ie, qe = Math.cos(Ge) * Ie;
                    var gn = lr - Ve, Kr = Fr - qe;
                    this.bezierCurveTo(yr, Yr, gn, Kr, lr, Fr);
                  }
                  return this;
                },
                polygon: function() {
                  for (var Z = arguments.length, z = new Array(Z), rt = 0; rt < Z; rt++)
                    z[rt] = arguments[rt];
                  this.moveTo.apply(this, W(z.shift() || []));
                  for (var q = 0, pt = z; q < pt.length; q++) {
                    var St = pt[q];
                    this.lineTo.apply(this, W(St || []));
                  }
                  return this.closePath();
                },
                path: function(Z) {
                  return Bt.apply(this, Z), this;
                },
                _windingRule: function(Z) {
                  return /even-?odd/.test(Z) ? "*" : "";
                },
                fill: function(Z, z) {
                  return /(even-?odd)|(non-?zero)/.test(Z) && (z = Z, Z = null), Z && this.fillColor(Z), this.addContent("f".concat(this._windingRule(z)));
                },
                stroke: function(Z) {
                  return Z && this.strokeColor(Z), this.addContent("S");
                },
                fillAndStroke: function(Z, z, rt) {
                  z == null && (z = Z);
                  var q = /(even-?odd)|(non-?zero)/;
                  return q.test(Z) && (rt = Z, Z = null), q.test(z) && (rt = z, z = Z), Z && (this.fillColor(Z), this.strokeColor(z)), this.addContent("B".concat(this._windingRule(rt)));
                },
                clip: function(Z) {
                  return this.addContent("W".concat(this._windingRule(Z), " n"));
                },
                transform: function(Z, z, rt, q, pt, St) {
                  var qt = this._ctm, ne = U(qt, 6), he = ne[0], ye = ne[1], Se = ne[2], Ce = ne[3], Ie = ne[4], Ge = ne[5];
                  qt[0] = he * Z + Se * z, qt[1] = ye * Z + Ce * z, qt[2] = he * rt + Se * q, qt[3] = ye * rt + Ce * q, qt[4] = he * pt + Se * St + Ie, qt[5] = ye * pt + Ce * St + Ge;
                  var Ve = [Z, z, rt, q, pt, St].map(function(qe) {
                    return Nt(qe);
                  }).join(" ");
                  return this.addContent("".concat(Ve, " cm"));
                },
                translate: function(Z, z) {
                  return this.transform(1, 0, 0, 1, Z, z);
                },
                rotate: function(Z) {
                  var z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, rt, q = Z * Math.PI / 180, pt = Math.cos(q), St = Math.sin(q), qt = rt = 0;
                  if (z.origin != null) {
                    var ne = U(z.origin, 2);
                    qt = ne[0], rt = ne[1];
                    var he = qt * pt - rt * St, ye = qt * St + rt * pt;
                    qt -= he, rt -= ye;
                  }
                  return this.transform(pt, St, -St, pt, qt, rt);
                },
                scale: function(Z, z) {
                  var rt = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, q;
                  z == null && (z = Z), typeof z == "object" && (rt = z, z = Z);
                  var pt = q = 0;
                  if (rt.origin != null) {
                    var St = U(rt.origin, 2);
                    pt = St[0], q = St[1], pt -= Z * pt, q -= z * q;
                  }
                  return this.transform(Z, 0, 0, z, pt, q);
                }
              }, ee = {
                402: 131,
                8211: 150,
                8212: 151,
                8216: 145,
                8217: 146,
                8218: 130,
                8220: 147,
                8221: 148,
                8222: 132,
                8224: 134,
                8225: 135,
                8226: 149,
                8230: 133,
                8364: 128,
                8240: 137,
                8249: 139,
                8250: 155,
                710: 136,
                8482: 153,
                338: 140,
                339: 156,
                732: 152,
                352: 138,
                353: 154,
                376: 159,
                381: 142,
                382: 158
              }, kt = `.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
.notdef       .notdef        .notdef        .notdef
  
space         exclam         quotedbl       numbersign
dollar        percent        ampersand      quotesingle
parenleft     parenright     asterisk       plus
comma         hyphen         period         slash
zero          one            two            three
four          five           six            seven
eight         nine           colon          semicolon
less          equal          greater        question
  
at            A              B              C
D             E              F              G
H             I              J              K
L             M              N              O
P             Q              R              S
T             U              V              W
X             Y              Z              bracketleft
backslash     bracketright   asciicircum    underscore
  
grave         a              b              c
d             e              f              g
h             i              j              k
l             m              n              o
p             q              r              s
t             u              v              w
x             y              z              braceleft
bar           braceright     asciitilde     .notdef
  
Euro          .notdef        quotesinglbase florin
quotedblbase  ellipsis       dagger         daggerdbl
circumflex    perthousand    Scaron         guilsinglleft
OE            .notdef        Zcaron         .notdef
.notdef       quoteleft      quoteright     quotedblleft
quotedblright bullet         endash         emdash
tilde         trademark      scaron         guilsinglright
oe            .notdef        zcaron         ydieresis
  
space         exclamdown     cent           sterling
currency      yen            brokenbar      section
dieresis      copyright      ordfeminine    guillemotleft
logicalnot    hyphen         registered     macron
degree        plusminus      twosuperior    threesuperior
acute         mu             paragraph      periodcentered
cedilla       onesuperior    ordmasculine   guillemotright
onequarter    onehalf        threequarters  questiondown
  
Agrave        Aacute         Acircumflex    Atilde
Adieresis     Aring          AE             Ccedilla
Egrave        Eacute         Ecircumflex    Edieresis
Igrave        Iacute         Icircumflex    Idieresis
Eth           Ntilde         Ograve         Oacute
Ocircumflex   Otilde         Odieresis      multiply
Oslash        Ugrave         Uacute         Ucircumflex
Udieresis     Yacute         Thorn          germandbls
  
agrave        aacute         acircumflex    atilde
adieresis     aring          ae             ccedilla
egrave        eacute         ecircumflex    edieresis
igrave        iacute         icircumflex    idieresis
eth           ntilde         ograve         oacute
ocircumflex   otilde         odieresis      divide
oslash        ugrave         uacute         ucircumflex
udieresis     yacute         thorn          ydieresis`.split(/\s+/), ie = /* @__PURE__ */ function() {
                m(wt, null, [{
                  key: "open",
                  value: function(z) {
                    return new wt(y.readFileSync(z, "utf8"));
                  }
                }]);
                function wt(Z) {
                  p(this, wt), this.contents = Z, this.attributes = {}, this.glyphWidths = {}, this.boundingBoxes = {}, this.kernPairs = {}, this.parse(), this.charWidths = new Array(256);
                  for (var z = 0; z <= 255; z++)
                    this.charWidths[z] = this.glyphWidths[kt[z]];
                  this.bbox = this.attributes.FontBBox.split(/\s+/).map(function(rt) {
                    return +rt;
                  }), this.ascender = +(this.attributes.Ascender || 0), this.descender = +(this.attributes.Descender || 0), this.xHeight = +(this.attributes.XHeight || 0), this.capHeight = +(this.attributes.CapHeight || 0), this.lineGap = this.bbox[3] - this.bbox[1] - (this.ascender - this.descender);
                }
                return m(wt, [{
                  key: "parse",
                  value: function() {
                    var z = "", rt = Lt(this.contents.split(`
`)), q;
                    try {
                      for (rt.s(); !(q = rt.n()).done; ) {
                        var pt = q.value, St, qt;
                        if (St = pt.match(/^Start(\w+)/)) {
                          z = St[1];
                          continue;
                        } else if (St = pt.match(/^End(\w+)/)) {
                          z = "";
                          continue;
                        }
                        switch (z) {
                          case "FontMetrics":
                            St = pt.match(/(^\w+)\s+(.*)/);
                            var ne = St[1], he = St[2];
                            (qt = this.attributes[ne]) ? (Array.isArray(qt) || (qt = this.attributes[ne] = [qt]), qt.push(he)) : this.attributes[ne] = he;
                            break;
                          case "CharMetrics":
                            if (!/^CH?\s/.test(pt))
                              continue;
                            var ye = pt.match(/\bN\s+(\.?\w+)\s*;/)[1];
                            this.glyphWidths[ye] = +pt.match(/\bWX\s+(\d+)\s*;/)[1];
                            break;
                          case "KernPairs":
                            St = pt.match(/^KPX\s+(\.?\w+)\s+(\.?\w+)\s+(-?\d+)/), St && (this.kernPairs[St[1] + "\0" + St[2]] = parseInt(St[3]));
                            break;
                        }
                      }
                    } catch (Se) {
                      rt.e(Se);
                    } finally {
                      rt.f();
                    }
                  }
                }, {
                  key: "encodeText",
                  value: function(z) {
                    for (var rt = [], q = 0, pt = z.length; q < pt; q++) {
                      var St = z.charCodeAt(q);
                      St = ee[St] || St, rt.push(St.toString(16));
                    }
                    return rt;
                  }
                }, {
                  key: "glyphsForString",
                  value: function(z) {
                    for (var rt = [], q = 0, pt = z.length; q < pt; q++) {
                      var St = z.charCodeAt(q);
                      rt.push(this.characterToGlyph(St));
                    }
                    return rt;
                  }
                }, {
                  key: "characterToGlyph",
                  value: function(z) {
                    return kt[ee[z] || z] || ".notdef";
                  }
                }, {
                  key: "widthOfGlyph",
                  value: function(z) {
                    return this.glyphWidths[z] || 0;
                  }
                }, {
                  key: "getKernPair",
                  value: function(z, rt) {
                    return this.kernPairs[z + "\0" + rt] || 0;
                  }
                }, {
                  key: "advancesForGlyphs",
                  value: function(z) {
                    for (var rt = [], q = 0; q < z.length; q++) {
                      var pt = z[q], St = z[q + 1];
                      rt.push(this.widthOfGlyph(pt) + this.getKernPair(pt, St));
                    }
                    return rt;
                  }
                }]), wt;
              }(), Zt = /* @__PURE__ */ function() {
                function wt() {
                  p(this, wt);
                }
                return m(wt, [{
                  key: "encode",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }, {
                  key: "widthOfString",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }, {
                  key: "ref",
                  value: function() {
                    return this.dictionary != null ? this.dictionary : this.dictionary = this.document.ref();
                  }
                }, {
                  key: "finalize",
                  value: function() {
                    if (!(this.embedded || this.dictionary == null))
                      return this.embed(), this.embedded = !0;
                  }
                }, {
                  key: "embed",
                  value: function() {
                    throw new Error("Must be implemented by subclasses");
                  }
                }, {
                  key: "lineHeight",
                  value: function(z, rt) {
                    rt == null && (rt = !1);
                    var q = rt ? this.lineGap : 0;
                    return (this.ascender + q - this.descender) / 1e3 * z;
                  }
                }]), wt;
              }(), me = {
                Courier: function() {
                  return y.readFileSync(o + "/data/Courier.afm", "utf8");
                },
                "Courier-Bold": function() {
                  return y.readFileSync(o + "/data/Courier-Bold.afm", "utf8");
                },
                "Courier-Oblique": function() {
                  return y.readFileSync(o + "/data/Courier-Oblique.afm", "utf8");
                },
                "Courier-BoldOblique": function() {
                  return y.readFileSync(o + "/data/Courier-BoldOblique.afm", "utf8");
                },
                Helvetica: function() {
                  return y.readFileSync(o + "/data/Helvetica.afm", "utf8");
                },
                "Helvetica-Bold": function() {
                  return y.readFileSync(o + "/data/Helvetica-Bold.afm", "utf8");
                },
                "Helvetica-Oblique": function() {
                  return y.readFileSync(o + "/data/Helvetica-Oblique.afm", "utf8");
                },
                "Helvetica-BoldOblique": function() {
                  return y.readFileSync(o + "/data/Helvetica-BoldOblique.afm", "utf8");
                },
                "Times-Roman": function() {
                  return y.readFileSync(o + "/data/Times-Roman.afm", "utf8");
                },
                "Times-Bold": function() {
                  return y.readFileSync(o + "/data/Times-Bold.afm", "utf8");
                },
                "Times-Italic": function() {
                  return y.readFileSync(o + "/data/Times-Italic.afm", "utf8");
                },
                "Times-BoldItalic": function() {
                  return y.readFileSync(o + "/data/Times-BoldItalic.afm", "utf8");
                },
                Symbol: function() {
                  return y.readFileSync(o + "/data/Symbol.afm", "utf8");
                },
                ZapfDingbats: function() {
                  return y.readFileSync(o + "/data/ZapfDingbats.afm", "utf8");
                }
              }, Pe = /* @__PURE__ */ function(wt) {
                E(z, wt);
                var Z = N(z);
                function z(rt, q, pt) {
                  var St;
                  p(this, z), St = Z.call(this), St.document = rt, St.name = q, St.id = pt, St.font = new ie(me[St.name]());
                  var qt = St.font;
                  return St.ascender = qt.ascender, St.descender = qt.descender, St.bbox = qt.bbox, St.lineGap = qt.lineGap, St.xHeight = qt.xHeight, St.capHeight = qt.capHeight, St;
                }
                return m(z, [{
                  key: "embed",
                  value: function() {
                    return this.dictionary.data = {
                      Type: "Font",
                      BaseFont: this.name,
                      Subtype: "Type1",
                      Encoding: "WinAnsiEncoding"
                    }, this.dictionary.end();
                  }
                }, {
                  key: "encode",
                  value: function(q) {
                    for (var pt = this.font.encodeText(q), St = this.font.glyphsForString("".concat(q)), qt = this.font.advancesForGlyphs(St), ne = [], he = 0; he < St.length; he++) {
                      var ye = St[he];
                      ne.push({
                        xAdvance: qt[he],
                        yAdvance: 0,
                        xOffset: 0,
                        yOffset: 0,
                        advanceWidth: this.font.widthOfGlyph(ye)
                      });
                    }
                    return [pt, ne];
                  }
                }, {
                  key: "widthOfString",
                  value: function(q, pt) {
                    var St = this.font.glyphsForString("".concat(q)), qt = this.font.advancesForGlyphs(St), ne = 0, he = Lt(qt), ye;
                    try {
                      for (he.s(); !(ye = he.n()).done; ) {
                        var Se = ye.value;
                        ne += Se;
                      }
                    } catch (Ie) {
                      he.e(Ie);
                    } finally {
                      he.f();
                    }
                    var Ce = pt / 1e3;
                    return ne * Ce;
                  }
                }], [{
                  key: "isStandardFont",
                  value: function(q) {
                    return q in me;
                  }
                }]), z;
              }(Zt), Be = function(Z) {
                return "0000".concat(Z.toString(16)).slice(-4);
              }, je = /* @__PURE__ */ function(wt) {
                E(z, wt);
                var Z = N(z);
                function z(rt, q, pt) {
                  var St;
                  return p(this, z), St = Z.call(this), St.document = rt, St.font = q, St.id = pt, St.subset = St.font.createSubset(), St.unicode = [[0]], St.widths = [St.font.getGlyph(0).advanceWidth], St.name = St.font.postscriptName, St.scale = 1e3 / St.font.unitsPerEm, St.ascender = St.font.ascent * St.scale, St.descender = St.font.descent * St.scale, St.xHeight = St.font.xHeight * St.scale, St.capHeight = St.font.capHeight * St.scale, St.lineGap = St.font.lineGap * St.scale, St.bbox = St.font.bbox, rt.options.fontLayoutCache !== !1 && (St.layoutCache = /* @__PURE__ */ Object.create(null)), St;
                }
                return m(z, [{
                  key: "layoutRun",
                  value: function(q, pt) {
                    for (var St = this.font.layout(q, pt), qt = 0; qt < St.positions.length; qt++) {
                      var ne = St.positions[qt];
                      for (var he in ne)
                        ne[he] *= this.scale;
                      ne.advanceWidth = St.glyphs[qt].advanceWidth * this.scale;
                    }
                    return St;
                  }
                }, {
                  key: "layoutCached",
                  value: function(q) {
                    if (!this.layoutCache)
                      return this.layoutRun(q);
                    var pt;
                    if (pt = this.layoutCache[q])
                      return pt;
                    var St = this.layoutRun(q);
                    return this.layoutCache[q] = St, St;
                  }
                }, {
                  key: "layout",
                  value: function(q, pt, St) {
                    if (pt)
                      return this.layoutRun(q, pt);
                    for (var qt = St ? null : [], ne = St ? null : [], he = 0, ye = 0, Se = 0; Se <= q.length; ) {
                      var Ce;
                      if (Se === q.length && ye < Se || (Ce = q.charAt(Se), [" ", "	"].includes(Ce))) {
                        var Ie = this.layoutCached(q.slice(ye, ++Se));
                        St || (qt = qt.concat(Ie.glyphs), ne = ne.concat(Ie.positions)), he += Ie.advanceWidth, ye = Se;
                      } else
                        Se++;
                    }
                    return {
                      glyphs: qt,
                      positions: ne,
                      advanceWidth: he
                    };
                  }
                }, {
                  key: "encode",
                  value: function(q, pt) {
                    for (var St = this.layout(q, pt), qt = St.glyphs, ne = St.positions, he = [], ye = 0; ye < qt.length; ye++) {
                      var Se = qt[ye], Ce = this.subset.includeGlyph(Se.id);
                      he.push("0000".concat(Ce.toString(16)).slice(-4)), this.widths[Ce] == null && (this.widths[Ce] = Se.advanceWidth * this.scale), this.unicode[Ce] == null && (this.unicode[Ce] = Se.codePoints);
                    }
                    return [he, ne];
                  }
                }, {
                  key: "widthOfString",
                  value: function(q, pt, St) {
                    var qt = this.layout(q, St, !0).advanceWidth, ne = pt / 1e3;
                    return qt * ne;
                  }
                }, {
                  key: "embed",
                  value: function() {
                    var q = this, pt = this.subset.cff != null, St = this.document.ref();
                    pt && (St.data.Subtype = "CIDFontType0C"), this.subset.encodeStream().on("data", function(lr) {
                      return St.write(lr);
                    }).on("end", function() {
                      return St.end();
                    });
                    var qt = ((this.font["OS/2"] != null ? this.font["OS/2"].sFamilyClass : void 0) || 0) >> 8, ne = 0;
                    this.font.post.isFixedPitch && (ne |= 1), 1 <= qt && qt <= 7 && (ne |= 2), ne |= 4, qt === 10 && (ne |= 8), this.font.head.macStyle.italic && (ne |= 64);
                    var he = [1, 2, 3, 4, 5, 6].map(function(lr) {
                      return String.fromCharCode((q.id.charCodeAt(lr) || 73) + 17);
                    }).join(""), ye = he + "+" + this.font.postscriptName, Se = this.font.bbox, Ce = this.document.ref({
                      Type: "FontDescriptor",
                      FontName: ye,
                      Flags: ne,
                      FontBBox: [Se.minX * this.scale, Se.minY * this.scale, Se.maxX * this.scale, Se.maxY * this.scale],
                      ItalicAngle: this.font.italicAngle,
                      Ascent: this.ascender,
                      Descent: this.descender,
                      CapHeight: (this.font.capHeight || this.font.ascent) * this.scale,
                      XHeight: (this.font.xHeight || 0) * this.scale,
                      StemV: 0
                    });
                    if (pt ? Ce.data.FontFile3 = St : Ce.data.FontFile2 = St, this.document.subset) {
                      var Ie = r.from("FFFFFFFFC0", "hex"), Ge = this.document.ref();
                      Ge.write(Ie), Ge.end(), Ce.data.CIDSet = Ge;
                    }
                    Ce.end();
                    var Ve = {
                      Type: "Font",
                      Subtype: "CIDFontType0",
                      BaseFont: ye,
                      CIDSystemInfo: {
                        Registry: new String("Adobe"),
                        Ordering: new String("Identity"),
                        Supplement: 0
                      },
                      FontDescriptor: Ce,
                      W: [0, this.widths]
                    };
                    pt || (Ve.Subtype = "CIDFontType2", Ve.CIDToGIDMap = "Identity");
                    var qe = this.document.ref(Ve);
                    return qe.end(), this.dictionary.data = {
                      Type: "Font",
                      Subtype: "Type0",
                      BaseFont: ye,
                      Encoding: "Identity-H",
                      DescendantFonts: [qe],
                      ToUnicode: this.toUnicodeCmap()
                    }, this.dictionary.end();
                  }
                  // Maps the glyph ids encoded in the PDF back to unicode strings
                  // Because of ligature substitutions and the like, there may be one or more
                  // unicode characters represented by each glyph.
                }, {
                  key: "toUnicodeCmap",
                  value: function() {
                    var q = this.document.ref(), pt = [], St = Lt(this.unicode), qt;
                    try {
                      for (St.s(); !(qt = St.n()).done; ) {
                        var ne = qt.value, he = [], ye = Lt(ne), Se;
                        try {
                          for (ye.s(); !(Se = ye.n()).done; ) {
                            var Ce = Se.value;
                            Ce > 65535 && (Ce -= 65536, he.push(Be(Ce >>> 10 & 1023 | 55296)), Ce = 56320 | Ce & 1023), he.push(Be(Ce));
                          }
                        } catch (Ie) {
                          ye.e(Ie);
                        } finally {
                          ye.f();
                        }
                        pt.push("<".concat(he.join(" "), ">"));
                      }
                    } catch (Ie) {
                      St.e(Ie);
                    } finally {
                      St.f();
                    }
                    return q.end(`/CIDInit /ProcSet findresource begin
12 dict begin
begincmap
/CIDSystemInfo <<
  /Registry (Adobe)
  /Ordering (UCS)
  /Supplement 0
>> def
/CMapName /Adobe-Identity-UCS def
/CMapType 2 def
1 begincodespacerange
<0000><ffff>
endcodespacerange
1 beginbfrange
<0000> <`.concat(Be(pt.length - 1), "> [").concat(pt.join(" "), `]
endbfrange
endcmap
CMapName currentdict /CMap defineresource pop
end
end`)), q;
                  }
                }]), z;
              }(Zt), Je = /* @__PURE__ */ function() {
                function wt() {
                  p(this, wt);
                }
                return m(wt, null, [{
                  key: "open",
                  value: function(z, rt, q, pt) {
                    var St;
                    if (typeof rt == "string") {
                      if (Pe.isStandardFont(rt))
                        return new Pe(z, rt, pt);
                      rt = y.readFileSync(rt);
                    }
                    if (r.isBuffer(rt) ? St = l.default.create(rt, q) : rt instanceof Uint8Array ? St = l.default.create(r.from(rt), q) : rt instanceof ArrayBuffer && (St = l.default.create(r.from(new Uint8Array(rt)), q)), St == null)
                      throw new Error("Not a supported font format or standard PDF font.");
                    return new je(z, St, pt);
                  }
                }]), wt;
              }(), nr = {
                initFonts: function() {
                  var Z = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "Helvetica";
                  this._fontFamilies = {}, this._fontCount = 0, this._fontSize = 12, this._font = null, this._registeredFonts = {}, Z && this.font(Z);
                },
                font: function(Z, z, rt) {
                  var q, pt;
                  if (typeof z == "number" && (rt = z, z = null), typeof Z == "string" && this._registeredFonts[Z]) {
                    q = Z;
                    var St = this._registeredFonts[Z];
                    Z = St.src, z = St.family;
                  } else
                    q = z || Z, typeof q != "string" && (q = null);
                  if (rt != null && this.fontSize(rt), pt = this._fontFamilies[q])
                    return this._font = pt, this;
                  var qt = "F".concat(++this._fontCount);
                  return this._font = Je.open(this, Z, z, qt), (pt = this._fontFamilies[this._font.name]) ? (this._font = pt, this) : (q && (this._fontFamilies[q] = this._font), this._font.name && (this._fontFamilies[this._font.name] = this._font), this);
                },
                fontSize: function(Z) {
                  return this._fontSize = Z, this;
                },
                currentLineHeight: function(Z) {
                  return Z == null && (Z = !1), this._font.lineHeight(this._fontSize, Z);
                },
                registerFont: function(Z, z, rt) {
                  return this._registeredFonts[Z] = {
                    src: z,
                    family: rt
                  }, this;
                }
              }, ve = /* @__PURE__ */ function(wt) {
                E(z, wt);
                var Z = N(z);
                function z(rt, q) {
                  var pt;
                  return p(this, z), pt = Z.call(this), pt.document = rt, pt.indent = q.indent || 0, pt.characterSpacing = q.characterSpacing || 0, pt.wordSpacing = q.wordSpacing === 0, pt.columns = q.columns || 1, pt.columnGap = q.columnGap != null ? q.columnGap : 18, pt.lineWidth = (q.width - pt.columnGap * (pt.columns - 1)) / pt.columns, pt.spaceLeft = pt.lineWidth, pt.startX = pt.document.x, pt.startY = pt.document.y, pt.column = 1, pt.ellipsis = q.ellipsis, pt.continuedX = 0, pt.features = q.features, q.height != null ? (pt.height = q.height, pt.maxY = pt.startY + q.height) : pt.maxY = pt.document.page.maxY(), pt.on("firstLine", function(St) {
                    var qt = pt.continuedX || pt.indent;
                    return pt.document.x += qt, pt.lineWidth -= qt, pt.once("line", function() {
                      if (pt.document.x -= qt, pt.lineWidth += qt, St.continued && !pt.continuedX && (pt.continuedX = pt.indent), !St.continued)
                        return pt.continuedX = 0;
                    });
                  }), pt.on("lastLine", function(St) {
                    var qt = St.align;
                    return qt === "justify" && (St.align = "left"), pt.lastLine = !0, pt.once("line", function() {
                      return pt.document.y += St.paragraphGap || 0, St.align = qt, pt.lastLine = !1;
                    });
                  }), pt;
                }
                return m(z, [{
                  key: "wordWidth",
                  value: function(q) {
                    return this.document.widthOfString(q, this) + this.characterSpacing + this.wordSpacing;
                  }
                }, {
                  key: "eachWord",
                  value: function(q, pt) {
                    for (var St, qt = new h.default(q), ne = null, he = /* @__PURE__ */ Object.create(null); St = qt.nextBreak(); ) {
                      var ye, Se = q.slice(ne?.position || 0, St.position), Ce = he[Se] != null ? he[Se] : he[Se] = this.wordWidth(Se);
                      if (Ce > this.lineWidth + this.continuedX)
                        for (var Ie = ne, Ge = {}; Se.length; ) {
                          var Ve, qe;
                          Ce > this.spaceLeft ? (Ve = Math.ceil(this.spaceLeft / (Ce / Se.length)), Ce = this.wordWidth(Se.slice(0, Ve)), qe = Ce <= this.spaceLeft && Ve < Se.length) : Ve = Se.length;
                          for (var lr = Ce > this.spaceLeft && Ve > 0; lr || qe; )
                            lr ? (Ce = this.wordWidth(Se.slice(0, --Ve)), lr = Ce > this.spaceLeft && Ve > 0) : (Ce = this.wordWidth(Se.slice(0, ++Ve)), lr = Ce > this.spaceLeft && Ve > 0, qe = Ce <= this.spaceLeft && Ve < Se.length);
                          if (Ve === 0 && this.spaceLeft === this.lineWidth && (Ve = 1), Ge.required = St.required || Ve < Se.length, ye = pt(Se.slice(0, Ve), Ce, Ge, Ie), Ie = {
                            required: !1
                          }, Se = Se.slice(Ve), Ce = this.wordWidth(Se), ye === !1)
                            break;
                        }
                      else
                        ye = pt(Se, Ce, St, ne);
                      if (ye === !1)
                        break;
                      ne = St;
                    }
                  }
                }, {
                  key: "wrap",
                  value: function(q, pt) {
                    var St = this;
                    pt.indent != null && (this.indent = pt.indent), pt.characterSpacing != null && (this.characterSpacing = pt.characterSpacing), pt.wordSpacing != null && (this.wordSpacing = pt.wordSpacing), pt.ellipsis != null && (this.ellipsis = pt.ellipsis);
                    var qt = this.document.y + this.document.currentLineHeight(!0);
                    (this.document.y > this.maxY || qt > this.maxY) && this.nextSection();
                    var ne = "", he = 0, ye = 0, Se = 0, Ce = this.document.y, Ie = function() {
                      return pt.textWidth = he + St.wordSpacing * (ye - 1), pt.wordCount = ye, pt.lineWidth = St.lineWidth, Ce = St.document.y, St.emit("line", ne, pt, St), Se++;
                    };
                    return this.emit("sectionStart", pt, this), this.eachWord(q, function(Ge, Ve, qe, lr) {
                      if ((lr == null || lr.required) && (St.emit("firstLine", pt, St), St.spaceLeft = St.lineWidth), Ve <= St.spaceLeft && (ne += Ge, he += Ve, ye++), qe.required || Ve > St.spaceLeft) {
                        var Fr = St.document.currentLineHeight(!0);
                        if (St.height != null && St.ellipsis && St.document.y + Fr * 2 > St.maxY && St.column >= St.columns) {
                          for (St.ellipsis === !0 && (St.ellipsis = "â¦"), ne = ne.replace(/\s+$/, ""), he = St.wordWidth(ne + St.ellipsis); ne && he > St.lineWidth; )
                            ne = ne.slice(0, -1).replace(/\s+$/, ""), he = St.wordWidth(ne + St.ellipsis);
                          he <= St.lineWidth && (ne = ne + St.ellipsis), he = St.wordWidth(ne);
                        }
                        if (qe.required && (Ve > St.spaceLeft && (Ie(), ne = Ge, he = Ve, ye = 1), St.emit("lastLine", pt, St)), Ie(), St.document.y + Fr > St.maxY) {
                          var qr = St.nextSection();
                          if (!qr)
                            return ye = 0, ne = "", !1;
                        }
                        return qe.required ? (St.spaceLeft = St.lineWidth, ne = "", he = 0, ye = 0) : (St.spaceLeft = St.lineWidth - Ve, ne = Ge, he = Ve, ye = 1);
                      } else
                        return St.spaceLeft -= Ve;
                    }), ye > 0 && (this.emit("lastLine", pt, this), Ie()), this.emit("sectionEnd", pt, this), pt.continued === !0 ? (Se > 1 && (this.continuedX = 0), this.continuedX += pt.textWidth || 0, this.document.y = Ce) : this.document.x = this.startX;
                  }
                }, {
                  key: "nextSection",
                  value: function(q) {
                    if (this.emit("sectionEnd", q, this), ++this.column > this.columns) {
                      if (this.height != null)
                        return !1;
                      if (this.document.continueOnNewPage(), this.column = 1, this.startY = this.document.page.margins.top, this.maxY = this.document.page.maxY(), this.document.x = this.startX, this.document._fillColor) {
                        var pt;
                        (pt = this.document).fillColor.apply(pt, W(this.document._fillColor));
                      }
                      this.emit("pageBreak", q, this);
                    } else
                      this.document.x += this.lineWidth + this.columnGap, this.document.y = this.startY, this.emit("columnBreak", q, this);
                    return this.emit("sectionStart", q, this), !0;
                  }
                }]), z;
              }(u.EventEmitter), Re = G.number, $e = {
                initText: function() {
                  return this._line = this._line.bind(this), this.x = 0, this.y = 0, this._lineGap = 0;
                },
                lineGap: function(Z) {
                  return this._lineGap = Z, this;
                },
                moveDown: function(Z) {
                  return Z == null && (Z = 1), this.y += this.currentLineHeight(!0) * Z + this._lineGap, this;
                },
                moveUp: function(Z) {
                  return Z == null && (Z = 1), this.y -= this.currentLineHeight(!0) * Z + this._lineGap, this;
                },
                _text: function(Z, z, rt, q, pt) {
                  var St = this;
                  q = this._initOptions(z, rt, q), Z = Z == null ? "" : "".concat(Z), q.wordSpacing && (Z = Z.replace(/\s{2,}/g, " "));
                  var qt = function() {
                    q.structParent && q.structParent.add(St.struct(q.structType || "P", [St.markStructureContent(q.structType || "P")]));
                  };
                  if (q.width) {
                    var ne = this._wrapper;
                    ne || (ne = new ve(this, q), ne.on("line", pt), ne.on("firstLine", qt)), this._wrapper = q.continued ? ne : null, this._textOptions = q.continued ? q : null, ne.wrap(Z, q);
                  } else {
                    var he = Lt(Z.split(`
`)), ye;
                    try {
                      for (he.s(); !(ye = he.n()).done; ) {
                        var Se = ye.value;
                        qt(), pt(Se, q);
                      }
                    } catch (Ce) {
                      he.e(Ce);
                    } finally {
                      he.f();
                    }
                  }
                  return this;
                },
                text: function(Z, z, rt, q) {
                  return this._text(Z, z, rt, q, this._line);
                },
                widthOfString: function(Z) {
                  var z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  return this._font.widthOfString(Z, this._fontSize, z.features) + (z.characterSpacing || 0) * (Z.length - 1);
                },
                heightOfString: function(Z, z) {
                  var rt = this, q = this.x, pt = this.y;
                  z = this._initOptions(z), z.height = 1 / 0;
                  var St = z.lineGap || this._lineGap || 0;
                  this._text(Z, this.x, this.y, z, function() {
                    return rt.y += rt.currentLineHeight(!0) + St;
                  });
                  var qt = this.y - pt;
                  return this.x = q, this.y = pt, qt;
                },
                list: function(Z, z, rt, q, pt) {
                  var St = this;
                  q = this._initOptions(z, rt, q);
                  var qt = q.listType || "bullet", ne = Math.round(this._font.ascender / 1e3 * this._fontSize), he = ne / 2, ye = q.bulletRadius || ne / 3, Se = q.textIndent || (qt === "bullet" ? ye * 5 : ne * 2), Ce = q.bulletIndent || (qt === "bullet" ? ye * 8 : ne * 2), Ie = 1, Ge = [], Ve = [], qe = [], lr = function yr(Yr) {
                    for (var gn = 1, Kr = 0; Kr < Yr.length; Kr++) {
                      var yn = Yr[Kr];
                      Array.isArray(yn) ? (Ie++, yr(yn), Ie--) : (Ge.push(yn), Ve.push(Ie), qt !== "bullet" && qe.push(gn++));
                    }
                  };
                  lr(Z);
                  var Fr = function(Yr) {
                    switch (qt) {
                      case "numbered":
                        return "".concat(Yr, ".");
                      case "lettered":
                        var gn = String.fromCharCode((Yr - 1) % 26 + 65), Kr = Math.floor((Yr - 1) / 26 + 1), yn = Array(Kr + 1).join(gn);
                        return "".concat(yn, ".");
                    }
                  };
                  pt = new ve(this, q), pt.on("line", this._line), Ie = 1;
                  var qr = 0;
                  return pt.on("firstLine", function() {
                    var yr, Yr, gn, Kr;
                    if (q.structParent)
                      if (q.structTypes) {
                        var yn = U(q.structTypes, 3);
                        Yr = yn[0], gn = yn[1], Kr = yn[2];
                      } else
                        Yr = "LI", gn = "Lbl", Kr = "LBody";
                    Yr ? (yr = St.struct(Yr), q.structParent.add(yr)) : q.structParent && (yr = q.structParent);
                    var Tn;
                    if ((Tn = Ve[qr++]) !== Ie) {
                      var fa = Ce * (Tn - Ie);
                      St.x += fa, pt.lineWidth -= fa, Ie = Tn;
                    }
                    switch (yr && (gn || Kr) && yr.add(St.struct(gn || Kr, [St.markStructureContent(gn || Kr)])), qt) {
                      case "bullet":
                        St.circle(St.x - Se + ye, St.y + he, ye), St.fill();
                        break;
                      case "numbered":
                      case "lettered":
                        var ea = Fr(qe[qr - 1]);
                        St._fragment(ea, St.x - Se, St.y, q);
                        break;
                    }
                    yr && gn && Kr && yr.add(St.struct(Kr, [St.markStructureContent(Kr)])), yr && yr !== q.structParent && yr.end();
                  }), pt.on("sectionStart", function() {
                    var yr = Se + Ce * (Ie - 1);
                    return St.x += yr, pt.lineWidth -= yr;
                  }), pt.on("sectionEnd", function() {
                    var yr = Se + Ce * (Ie - 1);
                    return St.x -= yr, pt.lineWidth += yr;
                  }), pt.wrap(Ge.join(`
`), q), this;
                },
                _initOptions: function() {
                  var Z = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {}, z = arguments.length > 1 ? arguments[1] : void 0, rt = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                  typeof Z == "object" && (rt = Z, Z = null);
                  var q = Object.assign({}, rt);
                  if (this._textOptions)
                    for (var pt in this._textOptions) {
                      var St = this._textOptions[pt];
                      pt !== "continued" && q[pt] === void 0 && (q[pt] = St);
                    }
                  return Z != null && (this.x = Z), z != null && (this.y = z), q.lineBreak !== !1 && (q.width == null && (q.width = this.page.width - this.x - this.page.margins.right), q.width = Math.max(q.width, 0)), q.columns || (q.columns = 0), q.columnGap == null && (q.columnGap = 18), q;
                },
                _line: function(Z) {
                  var z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, rt = arguments.length > 2 ? arguments[2] : void 0;
                  this._fragment(Z, this.x, this.y, z);
                  var q = z.lineGap || this._lineGap || 0;
                  return rt ? this.y += this.currentLineHeight(!0) + q : this.x += this.widthOfString(Z);
                },
                _fragment: function(Z, z, rt, q) {
                  var pt = this, St, qt, ne, he, ye, Se;
                  if (Z = "".concat(Z).replace(/\n/g, ""), Z.length !== 0) {
                    var Ce = q.align || "left", Ie = q.wordSpacing || 0, Ge = q.characterSpacing || 0;
                    if (q.width)
                      switch (Ce) {
                        case "right":
                          ye = this.widthOfString(Z.replace(/\s+$/, ""), q), z += q.lineWidth - ye;
                          break;
                        case "center":
                          z += q.lineWidth / 2 - q.textWidth / 2;
                          break;
                        case "justify":
                          Se = Z.trim().split(/\s+/), ye = this.widthOfString(Z.replace(/\s+/g, ""), q);
                          var Ve = this.widthOfString(" ") + Ge;
                          Ie = Math.max(0, (q.lineWidth - ye) / Math.max(1, Se.length - 1) - Ve);
                          break;
                      }
                    if (typeof q.baseline == "number")
                      St = -q.baseline;
                    else {
                      switch (q.baseline) {
                        case "svg-middle":
                          St = 0.5 * this._font.xHeight;
                          break;
                        case "middle":
                        case "svg-central":
                          St = 0.5 * (this._font.descender + this._font.ascender);
                          break;
                        case "bottom":
                        case "ideographic":
                          St = this._font.descender;
                          break;
                        case "alphabetic":
                          St = 0;
                          break;
                        case "mathematical":
                          St = 0.5 * this._font.ascender;
                          break;
                        case "hanging":
                          St = 0.8 * this._font.ascender;
                          break;
                        case "top":
                          St = this._font.ascender;
                          break;
                        default:
                          St = this._font.ascender;
                      }
                      St = St / 1e3 * this._fontSize;
                    }
                    var qe = q.textWidth + Ie * (q.wordCount - 1) + Ge * (Z.length - 1);
                    if (q.link != null && this.link(z, rt, qe, this.currentLineHeight(), q.link), q.goTo != null && this.goTo(z, rt, qe, this.currentLineHeight(), q.goTo), q.destination != null && this.addNamedDestination(q.destination, "XYZ", z, rt, null), q.underline) {
                      this.save(), q.stroke || this.strokeColor.apply(this, W(this._fillColor || []));
                      var lr = this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);
                      this.lineWidth(lr);
                      var Fr = rt + this.currentLineHeight() - lr;
                      this.moveTo(z, Fr), this.lineTo(z + qe, Fr), this.stroke(), this.restore();
                    }
                    if (q.strike) {
                      this.save(), q.stroke || this.strokeColor.apply(this, W(this._fillColor || []));
                      var qr = this._fontSize < 10 ? 0.5 : Math.floor(this._fontSize / 10);
                      this.lineWidth(qr);
                      var yr = rt + this.currentLineHeight() / 2;
                      this.moveTo(z, yr), this.lineTo(z + qe, yr), this.stroke(), this.restore();
                    }
                    if (this.save(), q.oblique) {
                      var Yr;
                      typeof q.oblique == "number" ? Yr = -Math.tan(q.oblique * Math.PI / 180) : Yr = -0.25, this.transform(1, 0, 0, 1, z, rt), this.transform(1, 0, Yr, 1, -Yr * St, 0), this.transform(1, 0, 0, 1, -z, -rt);
                    }
                    this.transform(1, 0, 0, -1, 0, this.page.height), rt = this.page.height - rt - St, this.page.fonts[this._font.id] == null && (this.page.fonts[this._font.id] = this._font.ref()), this.addContent("BT"), this.addContent("1 0 0 1 ".concat(Re(z), " ").concat(Re(rt), " Tm")), this.addContent("/".concat(this._font.id, " ").concat(Re(this._fontSize), " Tf"));
                    var gn = q.fill && q.stroke ? 2 : q.stroke ? 1 : 0;
                    if (gn && this.addContent("".concat(gn, " Tr")), Ge && this.addContent("".concat(Re(Ge), " Tc")), Ie) {
                      Se = Z.trim().split(/\s+/), Ie += this.widthOfString(" ") + Ge, Ie *= 1e3 / this._fontSize, qt = [], he = [];
                      var Kr = Lt(Se), yn;
                      try {
                        for (Kr.s(); !(yn = Kr.n()).done; ) {
                          var Tn = yn.value, fa = this._font.encode(Tn, q.features), ea = U(fa, 2), hi = ea[0], ra = ea[1];
                          qt = qt.concat(hi), he = he.concat(ra);
                          var ga = {}, la = he[he.length - 1];
                          for (var ua in la) {
                            var Qn = la[ua];
                            ga[ua] = Qn;
                          }
                          ga.xAdvance += Ie, he[he.length - 1] = ga;
                        }
                      } catch (xi) {
                        Kr.e(xi);
                      } finally {
                        Kr.f();
                      }
                    } else {
                      var di = this._font.encode(Z, q.features), vi = U(di, 2);
                      qt = vi[0], he = vi[1];
                    }
                    var pi = this._fontSize / 1e3, Qa = [], gi = 0, yi = !1, Zi = function(ya) {
                      if (gi < ya) {
                        var Vo = qt.slice(gi, ya).join(""), Xo = he[ya - 1].xAdvance - he[ya - 1].advanceWidth;
                        Qa.push("<".concat(Vo, "> ").concat(Re(-Xo)));
                      }
                      return gi = ya;
                    }, mi = function(ya) {
                      if (Zi(ya), Qa.length > 0)
                        return pt.addContent("[".concat(Qa.join(" "), "] TJ")), Qa.length = 0;
                    };
                    for (ne = 0; ne < he.length; ne++) {
                      var na = he[ne];
                      na.xOffset || na.yOffset ? (mi(ne), this.addContent("1 0 0 1 ".concat(Re(z + na.xOffset * pi), " ").concat(Re(rt + na.yOffset * pi), " Tm")), mi(ne + 1), yi = !0) : (yi && (this.addContent("1 0 0 1 ".concat(Re(z), " ").concat(Re(rt), " Tm")), yi = !1), na.xAdvance - na.advanceWidth !== 0 && Zi(ne + 1)), z += na.xAdvance * pi;
                    }
                    return mi(ne), this.addContent("ET"), this.restore();
                  }
                }
              }, We = [65472, 65473, 65474, 65475, 65477, 65478, 65479, 65480, 65481, 65482, 65483, 65484, 65485, 65486, 65487], ar = {
                1: "DeviceGray",
                3: "DeviceRGB",
                4: "DeviceCMYK"
              }, Ye = /* @__PURE__ */ function() {
                function wt(Z, z) {
                  p(this, wt);
                  var rt;
                  if (this.data = Z, this.label = z, this.data.readUInt16BE(0) !== 65496)
                    throw "SOI not found in JPEG";
                  for (var q = 2; q < this.data.length && (rt = this.data.readUInt16BE(q), q += 2, !We.includes(rt)); )
                    q += this.data.readUInt16BE(q);
                  if (!We.includes(rt))
                    throw "Invalid JPEG.";
                  q += 2, this.bits = this.data[q++], this.height = this.data.readUInt16BE(q), q += 2, this.width = this.data.readUInt16BE(q), q += 2;
                  var pt = this.data[q++];
                  this.colorSpace = ar[pt], this.obj = null;
                }
                return m(wt, [{
                  key: "embed",
                  value: function(z) {
                    if (!this.obj)
                      return this.obj = z.ref({
                        Type: "XObject",
                        Subtype: "Image",
                        BitsPerComponent: this.bits,
                        Width: this.width,
                        Height: this.height,
                        ColorSpace: this.colorSpace,
                        Filter: "DCTDecode"
                      }), this.colorSpace === "DeviceCMYK" && (this.obj.data.Decode = [1, 0, 1, 0, 1, 0, 1, 0]), this.obj.end(this.data), this.data = null;
                  }
                }]), wt;
              }(), cr = /* @__PURE__ */ function() {
                function wt(Z, z) {
                  p(this, wt), this.label = z, this.image = new a.default(Z), this.width = this.image.width, this.height = this.image.height, this.imgData = this.image.imgData, this.obj = null;
                }
                return m(wt, [{
                  key: "embed",
                  value: function(z) {
                    var rt = !1;
                    if (this.document = z, !this.obj) {
                      var q = this.image.hasAlphaChannel, pt = this.image.interlaceMethod === 1;
                      if (this.obj = this.document.ref({
                        Type: "XObject",
                        Subtype: "Image",
                        BitsPerComponent: q ? 8 : this.image.bits,
                        Width: this.width,
                        Height: this.height,
                        Filter: "FlateDecode"
                      }), !q) {
                        var St = this.document.ref({
                          Predictor: pt ? 1 : 15,
                          Colors: this.image.colors,
                          BitsPerComponent: this.image.bits,
                          Columns: this.width
                        });
                        this.obj.data.DecodeParms = St, St.end();
                      }
                      if (this.image.palette.length === 0)
                        this.obj.data.ColorSpace = this.image.colorSpace;
                      else {
                        var qt = this.document.ref();
                        qt.end(r.from(this.image.palette)), this.obj.data.ColorSpace = ["Indexed", "DeviceRGB", this.image.palette.length / 3 - 1, qt];
                      }
                      if (this.image.transparency.grayscale != null) {
                        var ne = this.image.transparency.grayscale;
                        this.obj.data.Mask = [ne, ne];
                      } else if (this.image.transparency.rgb) {
                        var he = this.image.transparency.rgb, ye = [], Se = Lt(he), Ce;
                        try {
                          for (Se.s(); !(Ce = Se.n()).done; ) {
                            var Ie = Ce.value;
                            ye.push(Ie, Ie);
                          }
                        } catch (Ge) {
                          Se.e(Ge);
                        } finally {
                          Se.f();
                        }
                        this.obj.data.Mask = ye;
                      } else {
                        if (this.image.transparency.indexed)
                          return rt = !0, this.loadIndexedAlphaChannel();
                        if (q)
                          return rt = !0, this.splitAlphaChannel();
                      }
                      if (pt && !rt)
                        return this.decodeData();
                      this.finalize();
                    }
                  }
                }, {
                  key: "finalize",
                  value: function() {
                    if (this.alphaChannel) {
                      var z = this.document.ref({
                        Type: "XObject",
                        Subtype: "Image",
                        Height: this.height,
                        Width: this.width,
                        BitsPerComponent: 8,
                        Filter: "FlateDecode",
                        ColorSpace: "DeviceGray",
                        Decode: [0, 1]
                      });
                      z.end(this.alphaChannel), this.obj.data.SMask = z;
                    }
                    return this.obj.end(this.imgData), this.image = null, this.imgData = null;
                  }
                }, {
                  key: "splitAlphaChannel",
                  value: function() {
                    var z = this;
                    return this.image.decodePixels(function(rt) {
                      for (var q, pt, St = z.image.colors, qt = z.width * z.height, ne = r.alloc(qt * St), he = r.alloc(qt), ye = pt = q = 0, Se = rt.length, Ce = z.image.bits === 16 ? 1 : 0; ye < Se; ) {
                        for (var Ie = 0; Ie < St; Ie++)
                          ne[pt++] = rt[ye++], ye += Ce;
                        he[q++] = rt[ye++], ye += Ce;
                      }
                      return z.imgData = i.default.deflateSync(ne), z.alphaChannel = i.default.deflateSync(he), z.finalize();
                    });
                  }
                }, {
                  key: "loadIndexedAlphaChannel",
                  value: function() {
                    var z = this, rt = this.image.transparency.indexed;
                    return this.image.decodePixels(function(q) {
                      for (var pt = r.alloc(z.width * z.height), St = 0, qt = 0, ne = q.length; qt < ne; qt++)
                        pt[St++] = rt[q[qt]];
                      return z.alphaChannel = i.default.deflateSync(pt), z.finalize();
                    });
                  }
                }, {
                  key: "decodeData",
                  value: function() {
                    var z = this;
                    this.image.decodePixels(function(rt) {
                      z.imgData = i.default.deflateSync(rt), z.finalize();
                    });
                  }
                }]), wt;
              }(), ir = /* @__PURE__ */ function() {
                function wt() {
                  p(this, wt);
                }
                return m(wt, null, [{
                  key: "open",
                  value: function(z, rt) {
                    var q;
                    if (r.isBuffer(z))
                      q = z;
                    else if (z instanceof ArrayBuffer)
                      q = r.from(new Uint8Array(z));
                    else {
                      var pt;
                      if (pt = /^data:.+;base64,(.*)$/.exec(z))
                        q = r.from(pt[1], "base64");
                      else if (q = y.readFileSync(z), !q)
                        return;
                    }
                    if (q[0] === 255 && q[1] === 216)
                      return new Ye(q, rt);
                    if (q[0] === 137 && q.toString("ascii", 1, 4) === "PNG")
                      return new cr(q, rt);
                    throw new Error("Unknown image format.");
                  }
                }]), wt;
              }(), Ar = {
                initImages: function() {
                  return this._imageRegistry = {}, this._imageCount = 0;
                },
                image: function(Z, z, rt) {
                  var q = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : {}, pt, St, qt, ne, he, ye, Se;
                  typeof z == "object" && (q = z, z = null), z = (ye = z ?? q.x) != null ? ye : this.x, rt = (Se = rt ?? q.y) != null ? Se : this.y, typeof Z == "string" && (ne = this._imageRegistry[Z]), ne || (Z.width && Z.height ? ne = Z : ne = this.openImage(Z)), ne.obj || ne.embed(this), this.page.xobjects[ne.label] == null && (this.page.xobjects[ne.label] = ne.obj);
                  var Ce = q.width || ne.width, Ie = q.height || ne.height;
                  if (q.width && !q.height) {
                    var Ge = Ce / ne.width;
                    Ce = ne.width * Ge, Ie = ne.height * Ge;
                  } else if (q.height && !q.width) {
                    var Ve = Ie / ne.height;
                    Ce = ne.width * Ve, Ie = ne.height * Ve;
                  } else if (q.scale)
                    Ce = ne.width * q.scale, Ie = ne.height * q.scale;
                  else if (q.fit) {
                    var qe = U(q.fit, 2);
                    qt = qe[0], pt = qe[1], St = qt / pt, he = ne.width / ne.height, he > St ? (Ce = qt, Ie = qt / he) : (Ie = pt, Ce = pt * he);
                  } else if (q.cover) {
                    var lr = U(q.cover, 2);
                    qt = lr[0], pt = lr[1], St = qt / pt, he = ne.width / ne.height, he > St ? (Ie = pt, Ce = pt * he) : (Ce = qt, Ie = qt / he);
                  }
                  return (q.fit || q.cover) && (q.align === "center" ? z = z + qt / 2 - Ce / 2 : q.align === "right" && (z = z + qt - Ce), q.valign === "center" ? rt = rt + pt / 2 - Ie / 2 : q.valign === "bottom" && (rt = rt + pt - Ie)), q.link != null && this.link(z, rt, Ce, Ie, q.link), q.goTo != null && this.goTo(z, rt, Ce, Ie, q.goTo), q.destination != null && this.addNamedDestination(q.destination, "XYZ", z, rt, null), this.y === rt && (this.y += Ie), this.save(), this.transform(Ce, 0, 0, -Ie, z, rt + Ie), this.addContent("/".concat(ne.label, " Do")), this.restore(), this;
                },
                openImage: function(Z) {
                  var z;
                  return typeof Z == "string" && (z = this._imageRegistry[Z]), z || (z = ir.open(Z, "I".concat(++this._imageCount)), typeof Z == "string" && (this._imageRegistry[Z] = z)), z;
                }
              }, kr = {
                annotate: function(Z, z, rt, q, pt) {
                  pt.Type = "Annot", pt.Rect = this._convertRect(Z, z, rt, q), pt.Border = [0, 0, 0], pt.Subtype === "Link" && typeof pt.F > "u" && (pt.F = 4), pt.Subtype !== "Link" && pt.C == null && (pt.C = this._normalizeColor(pt.color || [0, 0, 0])), delete pt.color, typeof pt.Dest == "string" && (pt.Dest = new String(pt.Dest));
                  for (var St in pt) {
                    var qt = pt[St];
                    pt[St[0].toUpperCase() + St.slice(1)] = qt;
                  }
                  var ne = this.ref(pt);
                  return this.page.annotations.push(ne), ne.end(), this;
                },
                note: function(Z, z, rt, q, pt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return St.Subtype = "Text", St.Contents = new String(pt), St.Name = "Comment", St.color == null && (St.color = [243, 223, 92]), this.annotate(Z, z, rt, q, St);
                },
                goTo: function(Z, z, rt, q, pt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return St.Subtype = "Link", St.A = this.ref({
                    S: "GoTo",
                    D: new String(pt)
                  }), St.A.end(), this.annotate(Z, z, rt, q, St);
                },
                link: function(Z, z, rt, q, pt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  if (St.Subtype = "Link", typeof pt == "number") {
                    var qt = this._root.data.Pages.data;
                    if (pt >= 0 && pt < qt.Kids.length)
                      St.A = this.ref({
                        S: "GoTo",
                        D: [qt.Kids[pt], "XYZ", null, null, null]
                      }), St.A.end();
                    else
                      throw new Error("The document has no page ".concat(pt));
                  } else
                    St.A = this.ref({
                      S: "URI",
                      URI: new String(pt)
                    }), St.A.end();
                  return this.annotate(Z, z, rt, q, St);
                },
                _markup: function(Z, z, rt, q) {
                  var pt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {}, St = this._convertRect(Z, z, rt, q), qt = U(St, 4), ne = qt[0], he = qt[1], ye = qt[2], Se = qt[3];
                  return pt.QuadPoints = [ne, Se, ye, Se, ne, he, ye, he], pt.Contents = new String(), this.annotate(Z, z, rt, q, pt);
                },
                highlight: function(Z, z, rt, q) {
                  var pt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return pt.Subtype = "Highlight", pt.color == null && (pt.color = [241, 238, 148]), this._markup(Z, z, rt, q, pt);
                },
                underline: function(Z, z, rt, q) {
                  var pt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return pt.Subtype = "Underline", this._markup(Z, z, rt, q, pt);
                },
                strike: function(Z, z, rt, q) {
                  var pt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return pt.Subtype = "StrikeOut", this._markup(Z, z, rt, q, pt);
                },
                lineAnnotation: function(Z, z, rt, q) {
                  var pt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return pt.Subtype = "Line", pt.Contents = new String(), pt.L = [Z, this.page.height - z, rt, this.page.height - q], this.annotate(Z, z, rt, q, pt);
                },
                rectAnnotation: function(Z, z, rt, q) {
                  var pt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return pt.Subtype = "Square", pt.Contents = new String(), this.annotate(Z, z, rt, q, pt);
                },
                ellipseAnnotation: function(Z, z, rt, q) {
                  var pt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {};
                  return pt.Subtype = "Circle", pt.Contents = new String(), this.annotate(Z, z, rt, q, pt);
                },
                textAnnotation: function(Z, z, rt, q, pt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return St.Subtype = "FreeText", St.Contents = new String(pt), St.DA = new String(), this.annotate(Z, z, rt, q, St);
                },
                fileAnnotation: function(Z, z, rt, q) {
                  var pt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {}, St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {}, qt = this.file(pt.src, Object.assign({
                    hidden: !0
                  }, pt));
                  return St.Subtype = "FileAttachment", St.FS = qt, St.Contents ? St.Contents = new String(St.Contents) : qt.data.Desc && (St.Contents = qt.data.Desc), this.annotate(Z, z, rt, q, St);
                },
                _convertRect: function(Z, z, rt, q) {
                  var pt = z;
                  z += q;
                  var St = Z + rt, qt = U(this._ctm, 6), ne = qt[0], he = qt[1], ye = qt[2], Se = qt[3], Ce = qt[4], Ie = qt[5];
                  return Z = ne * Z + ye * z + Ce, z = he * Z + Se * z + Ie, St = ne * St + ye * pt + Ce, pt = he * St + Se * pt + Ie, [Z, z, St, pt];
                }
              }, Dr = /* @__PURE__ */ function() {
                function wt(Z, z, rt, q) {
                  var pt = arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : {
                    expanded: !1
                  };
                  p(this, wt), this.document = Z, this.options = pt, this.outlineData = {}, q !== null && (this.outlineData.Dest = [q.dictionary, "Fit"]), z !== null && (this.outlineData.Parent = z), rt !== null && (this.outlineData.Title = new String(rt)), this.dictionary = this.document.ref(this.outlineData), this.children = [];
                }
                return m(wt, [{
                  key: "addItem",
                  value: function(z) {
                    var rt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {
                      expanded: !1
                    }, q = new wt(this.document, this.dictionary, z, this.document.page, rt);
                    return this.children.push(q), q;
                  }
                }, {
                  key: "endOutline",
                  value: function() {
                    if (this.children.length > 0) {
                      this.options.expanded && (this.outlineData.Count = this.children.length);
                      var z = this.children[0], rt = this.children[this.children.length - 1];
                      this.outlineData.First = z.dictionary, this.outlineData.Last = rt.dictionary;
                      for (var q = 0, pt = this.children.length; q < pt; q++) {
                        var St = this.children[q];
                        q > 0 && (St.outlineData.Prev = this.children[q - 1].dictionary), q < this.children.length - 1 && (St.outlineData.Next = this.children[q + 1].dictionary), St.endOutline();
                      }
                    }
                    return this.dictionary.end();
                  }
                }]), wt;
              }(), Tr = {
                initOutline: function() {
                  return this.outline = new Dr(this, null, null, null);
                },
                endOutline: function() {
                  if (this.outline.endOutline(), this.outline.children.length > 0)
                    return this._root.data.Outlines = this.outline.dictionary, this._root.data.PageMode = "UseOutlines";
                }
              }, Pr = /* @__PURE__ */ function() {
                function wt(Z, z) {
                  p(this, wt), this.refs = [{
                    pageRef: Z,
                    mcid: z
                  }];
                }
                return m(wt, [{
                  key: "push",
                  value: function(z) {
                    var rt = this;
                    z.refs.forEach(function(q) {
                      return rt.refs.push(q);
                    });
                  }
                }]), wt;
              }(), _r = /* @__PURE__ */ function() {
                function wt(Z, z) {
                  var rt = this, q = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {}, pt = arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : null;
                  p(this, wt), this.document = Z, this._attached = !1, this._ended = !1, this._flushed = !1, this.dictionary = Z.ref({
                    // Type: "StructElem",
                    S: z
                  });
                  var St = this.dictionary.data;
                  (Array.isArray(q) || this._isValidChild(q)) && (pt = q, q = {}), typeof q.title < "u" && (St.T = new String(q.title)), typeof q.lang < "u" && (St.Lang = new String(q.lang)), typeof q.alt < "u" && (St.Alt = new String(q.alt)), typeof q.expanded < "u" && (St.E = new String(q.expanded)), typeof q.actual < "u" && (St.ActualText = new String(q.actual)), this._children = [], pt && (Array.isArray(pt) || (pt = [pt]), pt.forEach(function(qt) {
                    return rt.add(qt);
                  }), this.end());
                }
                return m(wt, [{
                  key: "add",
                  value: function(z) {
                    if (this._ended)
                      throw new Error("Cannot add child to already-ended structure element");
                    if (!this._isValidChild(z))
                      throw new Error("Invalid structure element child");
                    return z instanceof wt && (z.setParent(this.dictionary), this._attached && z.setAttached()), z instanceof Pr && this._addContentToParentTree(z), typeof z == "function" && this._attached && (z = this._contentForClosure(z)), this._children.push(z), this;
                  }
                }, {
                  key: "_addContentToParentTree",
                  value: function(z) {
                    var rt = this;
                    z.refs.forEach(function(q) {
                      var pt = q.pageRef, St = q.mcid, qt = rt.document.getStructParentTree().get(pt.data.StructParents);
                      qt[St] = rt.dictionary;
                    });
                  }
                }, {
                  key: "setParent",
                  value: function(z) {
                    if (this.dictionary.data.P)
                      throw new Error("Structure element added to more than one parent");
                    this.dictionary.data.P = z, this._flush();
                  }
                }, {
                  key: "setAttached",
                  value: function() {
                    var z = this;
                    this._attached || (this._children.forEach(function(rt, q) {
                      rt instanceof wt && rt.setAttached(), typeof rt == "function" && (z._children[q] = z._contentForClosure(rt));
                    }), this._attached = !0, this._flush());
                  }
                }, {
                  key: "end",
                  value: function() {
                    this._ended || (this._children.filter(function(z) {
                      return z instanceof wt;
                    }).forEach(function(z) {
                      return z.end();
                    }), this._ended = !0, this._flush());
                  }
                }, {
                  key: "_isValidChild",
                  value: function(z) {
                    return z instanceof wt || z instanceof Pr || typeof z == "function";
                  }
                }, {
                  key: "_contentForClosure",
                  value: function(z) {
                    var rt = this.document.markStructureContent(this.dictionary.data.S);
                    return z(), this.document.endMarkedContent(), this._addContentToParentTree(rt), rt;
                  }
                }, {
                  key: "_isFlushable",
                  value: function() {
                    return !this.dictionary.data.P || !this._ended ? !1 : this._children.every(function(z) {
                      return typeof z == "function" ? !1 : z instanceof wt ? z._isFlushable() : !0;
                    });
                  }
                }, {
                  key: "_flush",
                  value: function() {
                    var z = this;
                    this._flushed || !this._isFlushable() || (this.dictionary.data.K = [], this._children.forEach(function(rt) {
                      return z._flushChild(rt);
                    }), this.dictionary.end(), this._children = [], this.dictionary.data.K = null, this._flushed = !0);
                  }
                }, {
                  key: "_flushChild",
                  value: function(z) {
                    var rt = this;
                    z instanceof wt && this.dictionary.data.K.push(z.dictionary), z instanceof Pr && z.refs.forEach(function(q) {
                      var pt = q.pageRef, St = q.mcid;
                      rt.dictionary.data.Pg || (rt.dictionary.data.Pg = pt), rt.dictionary.data.Pg === pt ? rt.dictionary.data.K.push(St) : rt.dictionary.data.K.push({
                        Type: "MCR",
                        Pg: pt,
                        MCID: St
                      });
                    });
                  }
                }]), wt;
              }(), En = /* @__PURE__ */ function(wt) {
                E(z, wt);
                var Z = N(z);
                function z() {
                  return p(this, z), Z.apply(this, arguments);
                }
                return m(z, [{
                  key: "_compareKeys",
                  value: function(q, pt) {
                    return parseInt(q) - parseInt(pt);
                  }
                }, {
                  key: "_keysName",
                  value: function() {
                    return "Nums";
                  }
                }, {
                  key: "_dataForKey",
                  value: function(q) {
                    return parseInt(q);
                  }
                }]), z;
              }($), an = {
                initMarkings: function(Z) {
                  this.structChildren = [], Z.tagged && (this.getMarkInfoDictionary().data.Marked = !0, this.getStructTreeRoot());
                },
                markContent: function(Z) {
                  var z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : null;
                  if (Z === "Artifact" || z && z.mcid) {
                    var rt = 0;
                    for (this.page.markings.forEach(function(pt) {
                      (rt || pt.structContent || pt.tag === "Artifact") && rt++;
                    }); rt--; )
                      this.endMarkedContent();
                  }
                  if (!z)
                    return this.page.markings.push({
                      tag: Z
                    }), this.addContent("/".concat(Z, " BMC")), this;
                  this.page.markings.push({
                    tag: Z,
                    options: z
                  });
                  var q = {};
                  return typeof z.mcid < "u" && (q.MCID = z.mcid), Z === "Artifact" && (typeof z.type == "string" && (q.Type = z.type), Array.isArray(z.bbox) && (q.BBox = [z.bbox[0], this.page.height - z.bbox[3], z.bbox[2], this.page.height - z.bbox[1]]), Array.isArray(z.attached) && z.attached.every(function(pt) {
                    return typeof pt == "string";
                  }) && (q.Attached = z.attached)), Z === "Span" && (z.lang && (q.Lang = new String(z.lang)), z.alt && (q.Alt = new String(z.alt)), z.expanded && (q.E = new String(z.expanded)), z.actual && (q.ActualText = new String(z.actual))), this.addContent("/".concat(Z, " ").concat(G.convert(q), " BDC")), this;
                },
                markStructureContent: function(Z) {
                  var z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, rt = this.getStructParentTree().get(this.page.structParentTreeKey), q = rt.length;
                  rt.push(null), this.markContent(Z, I(I({}, z), {}, {
                    mcid: q
                  }));
                  var pt = new Pr(this.page.dictionary, q);
                  return this.page.markings.slice(-1)[0].structContent = pt, pt;
                },
                endMarkedContent: function() {
                  return this.page.markings.pop(), this.addContent("EMC"), this;
                },
                struct: function(Z) {
                  var z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, rt = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : null;
                  return new _r(this, Z, z, rt);
                },
                addStructure: function(Z) {
                  var z = this.getStructTreeRoot();
                  return Z.setParent(z), Z.setAttached(), this.structChildren.push(Z), z.data.K || (z.data.K = []), z.data.K.push(Z.dictionary), this;
                },
                initPageMarkings: function(Z) {
                  var z = this;
                  Z.forEach(function(rt) {
                    if (rt.structContent) {
                      var q = rt.structContent, pt = z.markStructureContent(rt.tag, rt.options);
                      q.push(pt), z.page.markings.slice(-1)[0].structContent = q;
                    } else
                      z.markContent(rt.tag, rt.options);
                  });
                },
                endPageMarkings: function(Z) {
                  var z = Z.markings;
                  return z.forEach(function() {
                    return Z.write("EMC");
                  }), Z.markings = [], z;
                },
                getMarkInfoDictionary: function() {
                  return this._root.data.MarkInfo || (this._root.data.MarkInfo = this.ref({})), this._root.data.MarkInfo;
                },
                getStructTreeRoot: function() {
                  return this._root.data.StructTreeRoot || (this._root.data.StructTreeRoot = this.ref({
                    Type: "StructTreeRoot",
                    ParentTree: new En(),
                    ParentTreeNextKey: 0
                  })), this._root.data.StructTreeRoot;
                },
                getStructParentTree: function() {
                  return this.getStructTreeRoot().data.ParentTree;
                },
                createStructParentTreeNextKey: function() {
                  this.getMarkInfoDictionary();
                  var Z = this.getStructTreeRoot(), z = Z.data.ParentTreeNextKey++;
                  return Z.data.ParentTree.add(z, []), z;
                },
                endMarkings: function() {
                  var Z = this._root.data.StructTreeRoot;
                  Z && (Z.end(), this.structChildren.forEach(function(z) {
                    return z.end();
                  })), this._root.data.MarkInfo && this._root.data.MarkInfo.end();
                }
              }, bn = {
                readOnly: 1,
                required: 2,
                noExport: 4,
                multiline: 4096,
                password: 8192,
                toggleToOffButton: 16384,
                radioButton: 32768,
                pushButton: 65536,
                combo: 131072,
                edit: 262144,
                sort: 524288,
                multiSelect: 2097152,
                noSpell: 4194304
              }, Dn = {
                left: 0,
                center: 1,
                right: 2
              }, on = {
                value: "V",
                defaultValue: "DV"
              }, cn = {
                zip: "0",
                zipPlus4: "1",
                zip4: "1",
                phone: "2",
                ssn: "3"
              }, ln = {
                number: {
                  nDec: 0,
                  sepComma: !1,
                  negStyle: "MinusBlack",
                  currency: "",
                  currencyPrepend: !0
                },
                percent: {
                  nDec: 0,
                  sepComma: !1
                }
              }, Ya = {
                /**
                 * Must call if adding AcroForms to a document. Must also call font() before
                 * this method to set the default font.
                 */
                initForm: function() {
                  if (!this._font)
                    throw new Error("Must set a font before calling initForm method");
                  this._acroform = {
                    fonts: {},
                    defaultFont: this._font.name
                  }, this._acroform.fonts[this._font.id] = this._font.ref();
                  var Z = {
                    Fields: [],
                    NeedAppearances: !0,
                    DA: new String("/".concat(this._font.id, " 0 Tf 0 g")),
                    DR: {
                      Font: {}
                    }
                  };
                  Z.DR.Font[this._font.id] = this._font.ref();
                  var z = this.ref(Z);
                  return this._root.data.AcroForm = z, this;
                },
                /**
                 * Called automatically by document.js
                 */
                endAcroForm: function() {
                  var Z = this;
                  if (this._root.data.AcroForm) {
                    if (!Object.keys(this._acroform.fonts).length && !this._acroform.defaultFont)
                      throw new Error("No fonts specified for PDF form");
                    var z = this._root.data.AcroForm.data.DR.Font;
                    Object.keys(this._acroform.fonts).forEach(function(rt) {
                      z[rt] = Z._acroform.fonts[rt];
                    }), this._root.data.AcroForm.data.Fields.forEach(function(rt) {
                      Z._endChild(rt);
                    }), this._root.data.AcroForm.end();
                  }
                  return this;
                },
                _endChild: function(Z) {
                  var z = this;
                  return Array.isArray(Z.data.Kids) && (Z.data.Kids.forEach(function(rt) {
                    z._endChild(rt);
                  }), Z.end()), this;
                },
                /**
                 * Creates and adds a form field to the document. Form fields are intermediate
                 * nodes in a PDF form that are used to specify form name heirarchy and form
                 * value defaults.
                 * @param {string} name - field name (T attribute in field dictionary)
                 * @param {object} options  - other attributes to include in field dictionary
                 */
                formField: function(Z) {
                  var z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, rt = this._fieldDict(Z, null, z), q = this.ref(rt);
                  return this._addToParent(q), q;
                },
                /**
                 * Creates and adds a Form Annotation to the document. Form annotations are
                 * called Widget annotations internally within a PDF file.
                 * @param {string} name - form field name (T attribute of widget annotation
                 * dictionary)
                 * @param {number} x
                 * @param {number} y
                 * @param {number} w
                 * @param {number} h
                 * @param {object} options
                 */
                formAnnotation: function(Z, z, rt, q, pt, St) {
                  var qt = arguments.length > 6 && arguments[6] !== void 0 ? arguments[6] : {}, ne = this._fieldDict(Z, z, qt);
                  ne.Subtype = "Widget", ne.F === void 0 && (ne.F = 4), this.annotate(rt, q, pt, St, ne);
                  var he = this.page.annotations[this.page.annotations.length - 1];
                  return this._addToParent(he);
                },
                formText: function(Z, z, rt, q, pt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "text", z, rt, q, pt, St);
                },
                formPushButton: function(Z, z, rt, q, pt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "pushButton", z, rt, q, pt, St);
                },
                formCombo: function(Z, z, rt, q, pt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "combo", z, rt, q, pt, St);
                },
                formList: function(Z, z, rt, q, pt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "list", z, rt, q, pt, St);
                },
                formRadioButton: function(Z, z, rt, q, pt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "radioButton", z, rt, q, pt, St);
                },
                formCheckbox: function(Z, z, rt, q, pt) {
                  var St = arguments.length > 5 && arguments[5] !== void 0 ? arguments[5] : {};
                  return this.formAnnotation(Z, "checkbox", z, rt, q, pt, St);
                },
                _addToParent: function(Z) {
                  var z = Z.data.Parent;
                  return z ? (z.data.Kids || (z.data.Kids = []), z.data.Kids.push(Z)) : this._root.data.AcroForm.data.Fields.push(Z), this;
                },
                _fieldDict: function(Z, z) {
                  var rt = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : {};
                  if (!this._acroform)
                    throw new Error("Call document.initForms() method before adding form elements to document");
                  var q = Object.assign({}, rt);
                  return z !== null && (q = this._resolveType(z, rt)), q = this._resolveFlags(q), q = this._resolveJustify(q), q = this._resolveFont(q), q = this._resolveStrings(q), q = this._resolveColors(q), q = this._resolveFormat(q), q.T = new String(Z), q.parent && (q.Parent = q.parent, delete q.parent), q;
                },
                _resolveType: function(Z, z) {
                  if (Z === "text")
                    z.FT = "Tx";
                  else if (Z === "pushButton")
                    z.FT = "Btn", z.pushButton = !0;
                  else if (Z === "radioButton")
                    z.FT = "Btn", z.radioButton = !0;
                  else if (Z === "checkbox")
                    z.FT = "Btn";
                  else if (Z === "combo")
                    z.FT = "Ch", z.combo = !0;
                  else if (Z === "list")
                    z.FT = "Ch";
                  else
                    throw new Error("Invalid form annotation type '".concat(Z, "'"));
                  return z;
                },
                _resolveFormat: function(Z) {
                  var z = Z.format;
                  if (z && z.type) {
                    var rt, q, pt = "";
                    if (cn[z.type] !== void 0)
                      rt = "AFSpecial_Keystroke", q = "AFSpecial_Format", pt = cn[z.type];
                    else {
                      var St = z.type.charAt(0).toUpperCase() + z.type.slice(1);
                      if (rt = "AF".concat(St, "_Keystroke"), q = "AF".concat(St, "_Format"), z.type === "date")
                        rt += "Ex", pt = String(z.param);
                      else if (z.type === "time")
                        pt = String(z.param);
                      else if (z.type === "number") {
                        var qt = Object.assign({}, ln.number, z);
                        pt = String([String(qt.nDec), qt.sepComma ? "0" : "1", '"' + qt.negStyle + '"', "null", '"' + qt.currency + '"', String(qt.currencyPrepend)].join(","));
                      } else if (z.type === "percent") {
                        var ne = Object.assign({}, ln.percent, z);
                        pt = String([String(ne.nDec), ne.sepComma ? "0" : "1"].join(","));
                      }
                    }
                    Z.AA = Z.AA ? Z.AA : {}, Z.AA.K = {
                      S: "JavaScript",
                      JS: new String("".concat(rt, "(").concat(pt, ");"))
                    }, Z.AA.F = {
                      S: "JavaScript",
                      JS: new String("".concat(q, "(").concat(pt, ");"))
                    };
                  }
                  return delete Z.format, Z;
                },
                _resolveColors: function(Z) {
                  var z = this._normalizeColor(Z.backgroundColor);
                  return z && (Z.MK || (Z.MK = {}), Z.MK.BG = z), z = this._normalizeColor(Z.borderColor), z && (Z.MK || (Z.MK = {}), Z.MK.BC = z), delete Z.backgroundColor, delete Z.borderColor, Z;
                },
                _resolveFlags: function(Z) {
                  var z = 0;
                  return Object.keys(Z).forEach(function(rt) {
                    bn[rt] && (z |= bn[rt], delete Z[rt]);
                  }), z !== 0 && (Z.Ff = Z.Ff ? Z.Ff : 0, Z.Ff |= z), Z;
                },
                _resolveJustify: function(Z) {
                  var z = 0;
                  return Z.align !== void 0 && (typeof Dn[Z.align] == "number" && (z = Dn[Z.align]), delete Z.align), z !== 0 && (Z.Q = z), Z;
                },
                _resolveFont: function(Z) {
                  if (this._acroform.fonts[this._font.id] === null && (this._acroform.fonts[this._font.id] = this._font.ref()), this._acroform.defaultFont !== this._font.name) {
                    Z.DR = {
                      Font: {}
                    };
                    var z = Z.fontSize || 0;
                    Z.DR.Font[this._font.id] = this._font.ref(), Z.DA = new String("/".concat(this._font.id, " ").concat(z, " Tf 0 g"));
                  }
                  return Z;
                },
                _resolveStrings: function(Z) {
                  var z = [];
                  function rt(q) {
                    if (Array.isArray(q))
                      for (var pt = 0; pt < q.length; pt++)
                        typeof q[pt] == "string" ? z.push(new String(q[pt])) : z.push(q[pt]);
                  }
                  return rt(Z.Opt), Z.select && (rt(Z.select), delete Z.select), z.length && (Z.Opt = z), Object.keys(on).forEach(function(q) {
                    Z[q] !== void 0 && (Z[on[q]] = Z[q], delete Z[q]);
                  }), ["V", "DV"].forEach(function(q) {
                    typeof Z[q] == "string" && (Z[q] = new String(Z[q]));
                  }), Z.MK && Z.MK.CA && (Z.MK.CA = new String(Z.MK.CA)), Z.label && (Z.MK = Z.MK ? Z.MK : {}, Z.MK.CA = new String(Z.label), delete Z.label), Z;
                }
              }, oa = {
                /**
                 * Embed contents of `src` in PDF
                 * @param {Buffer | ArrayBuffer | string} src input Buffer, ArrayBuffer, base64 encoded string or path to file
                 * @param {object} options
                 *  * options.name: filename to be shown in PDF, will use `src` if none set
                 *  * options.type: filetype to be shown in PDF
                 *  * options.description: description to be shown in PDF
                 *  * options.hidden: if true, do not add attachment to EmbeddedFiles dictionary. Useful for file attachment annotations
                 *  * options.creationDate: override creation date
                 *  * options.modifiedDate: override modified date
                 * @returns filespec reference
                 */
                file: function(Z) {
                  var z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};
                  z.name = z.name || Z;
                  var rt = {
                    Type: "EmbeddedFile",
                    Params: {}
                  }, q;
                  if (!Z)
                    throw new Error("No src specified");
                  if (r.isBuffer(Z))
                    q = Z;
                  else if (Z instanceof ArrayBuffer)
                    q = r.from(new Uint8Array(Z));
                  else {
                    var pt;
                    if (pt = /^data:(.*);base64,(.*)$/.exec(Z))
                      pt[1] && (rt.Subtype = pt[1].replace("/", "#2F")), q = r.from(pt[2], "base64");
                    else {
                      if (q = y.readFileSync(Z), !q)
                        throw new Error("Could not read contents of file at filepath ".concat(Z));
                      var St = y.statSync(Z), qt = St.birthtime, ne = St.ctime;
                      rt.Params.CreationDate = qt, rt.Params.ModDate = ne;
                    }
                  }
                  z.creationDate instanceof Date && (rt.Params.CreationDate = z.creationDate), z.modifiedDate instanceof Date && (rt.Params.ModDate = z.modifiedDate), z.type && (rt.Subtype = z.type.replace("/", "#2F"));
                  var he = f.default.MD5(f.default.lib.WordArray.create(new Uint8Array(q)));
                  rt.Params.CheckSum = new String(he), rt.Params.Size = q.byteLength;
                  var ye;
                  this._fileRegistry || (this._fileRegistry = {});
                  var Se = this._fileRegistry[z.name];
                  Se && Ka(rt, Se) ? ye = Se.ref : (ye = this.ref(rt), ye.end(q), this._fileRegistry[z.name] = I(I({}, rt), {}, {
                    ref: ye
                  }));
                  var Ce = {
                    Type: "Filespec",
                    F: new String(z.name),
                    EF: {
                      F: ye
                    },
                    UF: new String(z.name)
                  };
                  z.description && (Ce.Desc = new String(z.description));
                  var Ie = this.ref(Ce);
                  return Ie.end(), z.hidden || this.addNamedEmbeddedFile(z.name, Ie), Ie;
                }
              };
              function Ka(wt, Z) {
                return wt.Subtype === Z.Subtype && wt.Params.CheckSum.toString() === Z.Params.CheckSum.toString() && wt.Params.Size === Z.Params.Size && wt.Params.CreationDate === Z.Params.CreationDate && wt.Params.ModDate === Z.Params.ModDate;
              }
              var Ja = {
                initPDFA: function(Z) {
                  Z.charAt(Z.length - 3) === "-" ? (this.subset_conformance = Z.charAt(Z.length - 1).toUpperCase(), this.subset = parseInt(Z.charAt(Z.length - 2))) : (this.subset_conformance = "B", this.subset = parseInt(Z.charAt(Z.length - 1)));
                },
                endSubset: function() {
                  this._addPdfaMetadata();
                  var Z = "".concat(o, "/data/sRGB_IEC61966_2_1.icc"), z = "".concat(o, "/../color_profiles/sRGB_IEC61966_2_1.icc");
                  this._addColorOutputIntent(y.existsSync(Z) ? Z : z);
                },
                _addColorOutputIntent: function(Z) {
                  var z = y.readFileSync(Z), rt = this.ref({
                    Length: z.length,
                    N: 3
                  });
                  rt.write(z), rt.end();
                  var q = this.ref({
                    Type: "OutputIntent",
                    S: "GTS_PDFA1",
                    Info: new String("sRGB IEC61966-2.1"),
                    OutputConditionIdentifier: new String("sRGB IEC61966-2.1"),
                    DestOutputProfile: rt
                  });
                  q.end(), this._root.data.OutputIntents = [q];
                },
                _getPdfaid: function() {
                  return `
        <rdf:Description xmlns:pdfaid="http://www.aiim.org/pdfa/ns/id/" rdf:about="">
            <pdfaid:part>`.concat(this.subset, `</pdfaid:part>
            <pdfaid:conformance>`).concat(this.subset_conformance, `</pdfaid:conformance>
        </rdf:Description>
        `);
                },
                _addPdfaMetadata: function() {
                  this.appendXML(this._getPdfaid());
                }
              }, Na = {
                _importSubset: function(Z) {
                  Object.assign(this, Z);
                },
                initSubset: function(Z) {
                  switch (Z.subset) {
                    case "PDF/A-1":
                    case "PDF/A-1a":
                    case "PDF/A-1b":
                    case "PDF/A-2":
                    case "PDF/A-2a":
                    case "PDF/A-2b":
                    case "PDF/A-3":
                    case "PDF/A-3a":
                    case "PDF/A-3b":
                      this._importSubset(Ja), this.initPDFA(Z.subset);
                      break;
                  }
                }
              }, sa = /* @__PURE__ */ function() {
                function wt() {
                  p(this, wt), this._metadata = `
        <?xpacket begin="\uFEFF" id="W5M0MpCehiHzreSzNTczkc9d"?>
            <x:xmpmeta xmlns:x="adobe:ns:meta/">
                <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
        `;
                }
                return m(wt, [{
                  key: "_closeTags",
                  value: function() {
                    this._metadata = this._metadata.concat(`
                </rdf:RDF>
            </x:xmpmeta>
        <?xpacket end="w"?>
        `);
                  }
                }, {
                  key: "append",
                  value: function(z) {
                    var rt = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
                    this._metadata = this._metadata.concat(z), rt && (this._metadata = this._metadata.concat(`
`));
                  }
                }, {
                  key: "getXML",
                  value: function() {
                    return this._metadata;
                  }
                }, {
                  key: "getLength",
                  value: function() {
                    return this._metadata.length;
                  }
                }, {
                  key: "end",
                  value: function() {
                    this._closeTags(), this._metadata = this._metadata.trim();
                  }
                }]), wt;
              }(), Ma = {
                initMetadata: function() {
                  this.metadata = new sa();
                },
                appendXML: function(Z) {
                  var z = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
                  this.metadata.append(Z, z);
                },
                _addInfo: function() {
                  this.appendXML(`
        <rdf:Description rdf:about="" xmlns:xmp="http://ns.adobe.com/xap/1.0/">
            <xmp:CreateDate>`.concat(this.info.CreationDate.toISOString().split(".")[0] + "Z", `</xmp:CreateDate>
            <xmp:CreatorTool>`).concat(this.info.Creator, `</xmp:CreatorTool>
        </rdf:Description>
        `)), (this.info.Title || this.info.Author || this.info.Subject) && (this.appendXML(`
            <rdf:Description rdf:about="" xmlns:dc="http://purl.org/dc/elements/1.1/">
            `), this.info.Title && this.appendXML(`
                <dc:title>
                    <rdf:Alt>
                        <rdf:li xml:lang="x-default">`.concat(this.info.Title, `</rdf:li>
                    </rdf:Alt>
                </dc:title>
                `)), this.info.Author && this.appendXML(`
                <dc:creator>
                    <rdf:Seq>
                        <rdf:li>`.concat(this.info.Author, `</rdf:li>
                    </rdf:Seq>
                </dc:creator>
                `)), this.info.Subject && this.appendXML(`
                <dc:description>
                    <rdf:Alt>
                        <rdf:li xml:lang="x-default">`.concat(this.info.Subject, `</rdf:li>
                    </rdf:Alt>
                </dc:description>
                `)), this.appendXML(`
            </rdf:Description>
            `)), this.appendXML(`
        <rdf:Description rdf:about="" xmlns:pdf="http://ns.adobe.com/pdf/1.3/">
            <pdf:Producer>`.concat(this.info.Creator, "</pdf:Producer>"), !1), this.info.Keywords && this.appendXML(`
            <pdf:Keywords>`.concat(this.info.Keywords, "</pdf:Keywords>"), !1), this.appendXML(`
        </rdf:Description>
        `);
                },
                endMetadata: function() {
                  this._addInfo(), this.metadata.end(), this.version != 1.3 && (this.metadataRef = this.ref({
                    length: this.metadata.getLength(),
                    Type: "Metadata",
                    Subtype: "XML"
                  }), this.metadataRef.compress = !1, this.metadataRef.write(r.from(this.metadata.getXML(), "utf-8")), this.metadataRef.end(), this._root.data.Metadata = this.metadataRef);
                }
              }, pa = /* @__PURE__ */ function(wt) {
                E(z, wt);
                var Z = N(z);
                function z() {
                  var rt, q = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
                  switch (p(this, z), rt = Z.call(this, q), rt.options = q, q.pdfVersion) {
                    case "1.4":
                      rt.version = 1.4;
                      break;
                    case "1.5":
                      rt.version = 1.5;
                      break;
                    case "1.6":
                      rt.version = 1.6;
                      break;
                    case "1.7":
                    case "1.7ext3":
                      rt.version = 1.7;
                      break;
                    default:
                      rt.version = 1.3;
                      break;
                  }
                  rt.compress = rt.options.compress != null ? rt.options.compress : !0, rt._pageBuffer = [], rt._pageBufferStart = 0, rt._offsets = [], rt._waiting = 0, rt._ended = !1, rt._offset = 0;
                  var pt = rt.ref({
                    Type: "Pages",
                    Count: 0,
                    Kids: []
                  }), St = rt.ref({
                    Dests: new V()
                  });
                  if (rt._root = rt.ref({
                    Type: "Catalog",
                    Pages: pt,
                    Names: St
                  }), rt.options.lang && (rt._root.data.Lang = new String(rt.options.lang)), rt.page = null, rt.initMetadata(), rt.initColor(), rt.initVector(), rt.initFonts(q.font), rt.initText(), rt.initImages(), rt.initOutline(), rt.initMarkings(q), rt.initSubset(q), rt.info = {
                    Producer: "PDFKit",
                    Creator: "PDFKit",
                    CreationDate: /* @__PURE__ */ new Date()
                  }, rt.options.info)
                    for (var qt in rt.options.info) {
                      var ne = rt.options.info[qt];
                      rt.info[qt] = ne;
                    }
                  return rt.options.displayTitle && (rt._root.data.ViewerPreferences = rt.ref({
                    DisplayDocTitle: !0
                  })), rt._id = ot.generateFileID(rt.info), rt._security = ot.create(b(rt), q), rt._write("%PDF-".concat(rt.version)), rt._write("%Ã¿Ã¿Ã¿Ã¿"), rt.options.autoFirstPage !== !1 && rt.addPage(), rt;
                }
                return m(z, [{
                  key: "addPage",
                  value: function(q) {
                    q == null && (q = this.options), this.options.bufferPages || this.flushPages(), this.page = new L(this, q), this._pageBuffer.push(this.page);
                    var pt = this._root.data.Pages.data;
                    return pt.Kids.push(this.page.dictionary), pt.Count++, this.x = this.page.margins.left, this.y = this.page.margins.top, this._ctm = [1, 0, 0, 1, 0, 0], this.transform(1, 0, 0, -1, 0, this.page.height), this.emit("pageAdded"), this;
                  }
                }, {
                  key: "continueOnNewPage",
                  value: function(q) {
                    var pt = this.endPageMarkings(this.page);
                    return this.addPage(q), this.initPageMarkings(pt), this;
                  }
                }, {
                  key: "bufferedPageRange",
                  value: function() {
                    return {
                      start: this._pageBufferStart,
                      count: this._pageBuffer.length
                    };
                  }
                }, {
                  key: "switchToPage",
                  value: function(q) {
                    var pt;
                    if (!(pt = this._pageBuffer[q - this._pageBufferStart]))
                      throw new Error("switchToPage(".concat(q, ") out of bounds, current buffer covers pages ").concat(this._pageBufferStart, " to ").concat(this._pageBufferStart + this._pageBuffer.length - 1));
                    return this.page = pt;
                  }
                }, {
                  key: "flushPages",
                  value: function() {
                    var q = this._pageBuffer;
                    this._pageBuffer = [], this._pageBufferStart += q.length;
                    var pt = Lt(q), St;
                    try {
                      for (pt.s(); !(St = pt.n()).done; ) {
                        var qt = St.value;
                        this.endPageMarkings(qt), qt.end();
                      }
                    } catch (ne) {
                      pt.e(ne);
                    } finally {
                      pt.f();
                    }
                  }
                }, {
                  key: "addNamedDestination",
                  value: function(q) {
                    for (var pt = arguments.length, St = new Array(pt > 1 ? pt - 1 : 0), qt = 1; qt < pt; qt++)
                      St[qt - 1] = arguments[qt];
                    St.length === 0 && (St = ["XYZ", null, null, null]), St[0] === "XYZ" && St[2] !== null && (St[2] = this.page.height - St[2]), St.unshift(this.page.dictionary), this._root.data.Names.data.Dests.add(q, St);
                  }
                }, {
                  key: "addNamedEmbeddedFile",
                  value: function(q, pt) {
                    this._root.data.Names.data.EmbeddedFiles || (this._root.data.Names.data.EmbeddedFiles = new V({
                      limits: !1
                    })), this._root.data.Names.data.EmbeddedFiles.add(q, pt);
                  }
                }, {
                  key: "addNamedJavaScript",
                  value: function(q, pt) {
                    this._root.data.Names.data.JavaScript || (this._root.data.Names.data.JavaScript = new V());
                    var St = {
                      JS: new String(pt),
                      S: "JavaScript"
                    };
                    this._root.data.Names.data.JavaScript.add(q, St);
                  }
                }, {
                  key: "ref",
                  value: function(q) {
                    var pt = new Et(this, this._offsets.length + 1, q);
                    return this._offsets.push(null), this._waiting++, pt;
                  }
                }, {
                  key: "_read",
                  value: function() {
                  }
                  // do nothing, but this method is required by node
                }, {
                  key: "_write",
                  value: function(q) {
                    return r.isBuffer(q) || (q = r.from(q + `
`, "binary")), this.push(q), this._offset += q.length;
                  }
                }, {
                  key: "addContent",
                  value: function(q) {
                    return this.page.write(q), this;
                  }
                }, {
                  key: "_refEnd",
                  value: function(q) {
                    if (this._offsets[q.id - 1] = q.offset, --this._waiting === 0 && this._ended)
                      return this._finalize(), this._ended = !1;
                  }
                }, {
                  key: "write",
                  value: function(q, pt) {
                    var St = new Error("PDFDocument#write is deprecated, and will be removed in a future version of PDFKit. Please pipe the document into a Node stream.");
                    return console.warn(St.stack), this.pipe(y.createWriteStream(q)), this.end(), this.once("end", pt);
                  }
                }, {
                  key: "end",
                  value: function() {
                    this.flushPages(), this._info = this.ref();
                    for (var q in this.info) {
                      var pt = this.info[q];
                      typeof pt == "string" && (pt = new String(pt));
                      var St = this.ref(pt);
                      St.end(), this._info.data[q] = St;
                    }
                    this._info.end();
                    for (var qt in this._fontFamilies) {
                      var ne = this._fontFamilies[qt];
                      ne.finalize();
                    }
                    return this.endOutline(), this.endMarkings(), this.subset && this.endSubset(), this.endMetadata(), this._root.end(), this._root.data.Pages.end(), this._root.data.Names.end(), this.endAcroForm(), this._root.data.ViewerPreferences && this._root.data.ViewerPreferences.end(), this._security && this._security.end(), this._waiting === 0 ? this._finalize() : this._ended = !0;
                  }
                }, {
                  key: "_finalize",
                  value: function() {
                    var q = this._offset;
                    this._write("xref"), this._write("0 ".concat(this._offsets.length + 1)), this._write("0000000000 65535 f ");
                    var pt = Lt(this._offsets), St;
                    try {
                      for (pt.s(); !(St = pt.n()).done; ) {
                        var qt = St.value;
                        qt = "0000000000".concat(qt).slice(-10), this._write(qt + " 00000 n ");
                      }
                    } catch (he) {
                      pt.e(he);
                    } finally {
                      pt.f();
                    }
                    var ne = {
                      Size: this._offsets.length + 1,
                      Root: this._root,
                      Info: this._info,
                      ID: [this._id, this._id]
                    };
                    return this._security && (ne.Encrypt = this._security.dictionary), this._write("trailer"), this._write(G.convert(ne)), this._write("startxref"), this._write("".concat(q)), this._write("%%EOF"), this.push(null);
                  }
                }, {
                  key: "toString",
                  value: function() {
                    return "[object PDFDocument]";
                  }
                }]), z;
              }(n.default.Readable), Pn = function(Z) {
                Object.assign(pa.prototype, Z);
              };
              Pn(Ma), Pn(Hn), Pn(jt), Pn(nr), Pn($e), Pn(Ar), Pn(kr), Pn(Tr), Pn(an), Pn(Ya), Pn(oa), Pn(Na), pa.LineWrapper = ve, d.default = pa;
            }
          ),
          /***/
          26949: (
            /***/
            function(c, d, t) {
              var o = t(82669), r = t(88706), n = r;
              typeof n.pdfMake > "u" && (n.pdfMake = o), c.exports = o;
            }
          ),
          /***/
          76118: (
            /***/
            function(c, d, t) {
              var o = t(82530);
              function r(S) {
                "@babel/helpers - typeof";
                return r = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(L) {
                  return typeof L;
                } : function(L) {
                  return L && typeof Symbol == "function" && L.constructor === Symbol && L !== Symbol.prototype ? "symbol" : typeof L;
                }, r(S);
              }
              function n(S, L) {
                for (var V = 0; V < L.length; V++) {
                  var it = L[V];
                  it.enumerable = it.enumerable || !1, it.configurable = !0, "value" in it && (it.writable = !0), Object.defineProperty(S, f(it.key), it);
                }
              }
              function i(S, L, V) {
                return L && n(S.prototype, L), V && n(S, V), Object.defineProperty(S, "prototype", { writable: !1 }), S;
              }
              function f(S) {
                var L = l(S, "string");
                return r(L) === "symbol" ? L : String(L);
              }
              function l(S, L) {
                if (r(S) !== "object" || S === null)
                  return S;
                var V = S[Symbol.toPrimitive];
                if (V !== void 0) {
                  var it = V.call(S, L || "default");
                  if (r(it) !== "object")
                    return it;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (L === "string" ? String : Number)(S);
              }
              function u(S, L) {
                if (!(S instanceof L))
                  throw new TypeError("Cannot call a class as a function");
              }
              var h = t(78619), a = h.codes, v = a.ERR_AMBIGUOUS_ARGUMENT, y = a.ERR_INVALID_ARG_TYPE, p = a.ERR_INVALID_ARG_VALUE, e = a.ERR_INVALID_RETURN_VALUE, m = a.ERR_MISSING_ARGS, w = t(66979), D = t(85663), I = D.inspect, E = t(85663).types, T = E.isPromise, A = E.isRegExp, F = t(10293)(), b = t(25280)(), R = t(97615)("RegExp.prototype.test"), N, U;
              function W() {
                var S = t(61667);
                N = S.isDeepEqual, U = S.isDeepStrictEqual;
              }
              var J = !1, ht = c.exports = Tt, K = {};
              function nt(S) {
                throw S.message instanceof Error ? S.message : new w(S);
              }
              function xt(S, L, V, it, tt) {
                var _ = arguments.length, At;
                if (_ === 0)
                  At = "Failed";
                else if (_ === 1)
                  V = S, S = void 0;
                else {
                  if (J === !1) {
                    J = !0;
                    var Rt = o.emitWarning ? o.emitWarning : console.warn.bind(console);
                    Rt("assert.fail() with more than one argument is deprecated. Please use assert.strictEqual() instead or only pass a message.", "DeprecationWarning", "DEP0094");
                  }
                  _ === 2 && (it = "!=");
                }
                if (V instanceof Error)
                  throw V;
                var Yt = {
                  actual: S,
                  expected: L,
                  operator: it === void 0 ? "fail" : it,
                  stackStartFn: tt || xt
                };
                V !== void 0 && (Yt.message = V);
                var Gt = new w(Yt);
                throw At && (Gt.message = At, Gt.generatedMessage = !0), Gt;
              }
              ht.fail = xt, ht.AssertionError = w;
              function bt(S, L, V, it) {
                if (!V) {
                  var tt = !1;
                  if (L === 0)
                    tt = !0, it = "No value argument passed to `assert.ok()`";
                  else if (it instanceof Error)
                    throw it;
                  var _ = new w({
                    actual: V,
                    expected: !0,
                    message: it,
                    operator: "==",
                    stackStartFn: S
                  });
                  throw _.generatedMessage = tt, _;
                }
              }
              function Tt() {
                for (var S = arguments.length, L = new Array(S), V = 0; V < S; V++)
                  L[V] = arguments[V];
                bt.apply(void 0, [Tt, L.length].concat(L));
              }
              ht.ok = Tt, ht.equal = function S(L, V, it) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                L != V && nt({
                  actual: L,
                  expected: V,
                  message: it,
                  operator: "==",
                  stackStartFn: S
                });
              }, ht.notEqual = function S(L, V, it) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                L == V && nt({
                  actual: L,
                  expected: V,
                  message: it,
                  operator: "!=",
                  stackStartFn: S
                });
              }, ht.deepEqual = function S(L, V, it) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                N === void 0 && W(), N(L, V) || nt({
                  actual: L,
                  expected: V,
                  message: it,
                  operator: "deepEqual",
                  stackStartFn: S
                });
              }, ht.notDeepEqual = function S(L, V, it) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                N === void 0 && W(), N(L, V) && nt({
                  actual: L,
                  expected: V,
                  message: it,
                  operator: "notDeepEqual",
                  stackStartFn: S
                });
              }, ht.deepStrictEqual = function S(L, V, it) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                N === void 0 && W(), U(L, V) || nt({
                  actual: L,
                  expected: V,
                  message: it,
                  operator: "deepStrictEqual",
                  stackStartFn: S
                });
              }, ht.notDeepStrictEqual = It;
              function It(S, L, V) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                N === void 0 && W(), U(S, L) && nt({
                  actual: S,
                  expected: L,
                  message: V,
                  operator: "notDeepStrictEqual",
                  stackStartFn: It
                });
              }
              ht.strictEqual = function S(L, V, it) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                b(L, V) || nt({
                  actual: L,
                  expected: V,
                  message: it,
                  operator: "strictEqual",
                  stackStartFn: S
                });
              }, ht.notStrictEqual = function S(L, V, it) {
                if (arguments.length < 2)
                  throw new m("actual", "expected");
                b(L, V) && nt({
                  actual: L,
                  expected: V,
                  message: it,
                  operator: "notStrictEqual",
                  stackStartFn: S
                });
              };
              var Lt = /* @__PURE__ */ i(function S(L, V, it) {
                var tt = this;
                u(this, S), V.forEach(function(_) {
                  _ in L && (it !== void 0 && typeof it[_] == "string" && A(L[_]) && R(L[_], it[_]) ? tt[_] = it[_] : tt[_] = L[_]);
                });
              });
              function Ut(S, L, V, it, tt, _) {
                if (!(V in S) || !U(S[V], L[V])) {
                  if (!it) {
                    var At = new Lt(S, tt), Rt = new Lt(L, tt, S), Yt = new w({
                      actual: At,
                      expected: Rt,
                      operator: "deepStrictEqual",
                      stackStartFn: _
                    });
                    throw Yt.actual = S, Yt.expected = L, Yt.operator = _.name, Yt;
                  }
                  nt({
                    actual: S,
                    expected: L,
                    message: it,
                    operator: _.name,
                    stackStartFn: _
                  });
                }
              }
              function $(S, L, V, it) {
                if (typeof L != "function") {
                  if (A(L))
                    return R(L, S);
                  if (arguments.length === 2)
                    throw new y("expected", ["Function", "RegExp"], L);
                  if (r(S) !== "object" || S === null) {
                    var tt = new w({
                      actual: S,
                      expected: L,
                      message: V,
                      operator: "deepStrictEqual",
                      stackStartFn: it
                    });
                    throw tt.operator = it.name, tt;
                  }
                  var _ = Object.keys(L);
                  if (L instanceof Error)
                    _.push("name", "message");
                  else if (_.length === 0)
                    throw new p("error", L, "may not be an empty object");
                  return N === void 0 && W(), _.forEach(function(At) {
                    typeof S[At] == "string" && A(L[At]) && R(L[At], S[At]) || Ut(S, L, At, V, _, it);
                  }), !0;
                }
                return L.prototype !== void 0 && S instanceof L ? !0 : Error.isPrototypeOf(L) ? !1 : L.call({}, S) === !0;
              }
              function gt(S) {
                if (typeof S != "function")
                  throw new y("fn", "Function", S);
                try {
                  S();
                } catch (L) {
                  return L;
                }
                return K;
              }
              function ut(S) {
                return T(S) || S !== null && r(S) === "object" && typeof S.then == "function" && typeof S.catch == "function";
              }
              function st(S) {
                return Promise.resolve().then(function() {
                  var L;
                  if (typeof S == "function") {
                    if (L = S(), !ut(L))
                      throw new e("instance of Promise", "promiseFn", L);
                  } else if (ut(S))
                    L = S;
                  else
                    throw new y("promiseFn", ["Function", "Promise"], S);
                  return Promise.resolve().then(function() {
                    return L;
                  }).then(function() {
                    return K;
                  }).catch(function(V) {
                    return V;
                  });
                });
              }
              function yt(S, L, V, it) {
                if (typeof V == "string") {
                  if (arguments.length === 4)
                    throw new y("error", ["Object", "Error", "Function", "RegExp"], V);
                  if (r(L) === "object" && L !== null) {
                    if (L.message === V)
                      throw new v("error/message", 'The error message "'.concat(L.message, '" is identical to the message.'));
                  } else if (L === V)
                    throw new v("error/message", 'The error "'.concat(L, '" is identical to the message.'));
                  it = V, V = void 0;
                } else if (V != null && r(V) !== "object" && typeof V != "function")
                  throw new y("error", ["Object", "Error", "Function", "RegExp"], V);
                if (L === K) {
                  var tt = "";
                  V && V.name && (tt += " (".concat(V.name, ")")), tt += it ? ": ".concat(it) : ".";
                  var _ = S.name === "rejects" ? "rejection" : "exception";
                  nt({
                    actual: void 0,
                    expected: V,
                    operator: S.name,
                    message: "Missing expected ".concat(_).concat(tt),
                    stackStartFn: S
                  });
                }
                if (V && !$(L, V, it, S))
                  throw L;
              }
              function G(S, L, V, it) {
                if (L !== K) {
                  if (typeof V == "string" && (it = V, V = void 0), !V || $(L, V)) {
                    var tt = it ? ": ".concat(it) : ".", _ = S.name === "doesNotReject" ? "rejection" : "exception";
                    nt({
                      actual: L,
                      expected: V,
                      operator: S.name,
                      message: "Got unwanted ".concat(_).concat(tt, `
`) + 'Actual message: "'.concat(L && L.message, '"'),
                      stackStartFn: S
                    });
                  }
                  throw L;
                }
              }
              ht.throws = function S(L) {
                for (var V = arguments.length, it = new Array(V > 1 ? V - 1 : 0), tt = 1; tt < V; tt++)
                  it[tt - 1] = arguments[tt];
                yt.apply(void 0, [S, gt(L)].concat(it));
              }, ht.rejects = function S(L) {
                for (var V = arguments.length, it = new Array(V > 1 ? V - 1 : 0), tt = 1; tt < V; tt++)
                  it[tt - 1] = arguments[tt];
                return st(L).then(function(_) {
                  return yt.apply(void 0, [S, _].concat(it));
                });
              }, ht.doesNotThrow = function S(L) {
                for (var V = arguments.length, it = new Array(V > 1 ? V - 1 : 0), tt = 1; tt < V; tt++)
                  it[tt - 1] = arguments[tt];
                G.apply(void 0, [S, gt(L)].concat(it));
              }, ht.doesNotReject = function S(L) {
                for (var V = arguments.length, it = new Array(V > 1 ? V - 1 : 0), tt = 1; tt < V; tt++)
                  it[tt - 1] = arguments[tt];
                return st(L).then(function(_) {
                  return G.apply(void 0, [S, _].concat(it));
                });
              }, ht.ifError = function S(L) {
                if (L != null) {
                  var V = "ifError got unwanted exception: ";
                  r(L) === "object" && typeof L.message == "string" ? L.message.length === 0 && L.constructor ? V += L.constructor.name : V += L.message : V += I(L);
                  var it = new w({
                    actual: L,
                    expected: null,
                    operator: "ifError",
                    message: V,
                    stackStartFn: S
                  }), tt = L.stack;
                  if (typeof tt == "string") {
                    var _ = tt.split(`
`);
                    _.shift();
                    for (var At = it.stack.split(`
`), Rt = 0; Rt < _.length; Rt++) {
                      var Yt = At.indexOf(_[Rt]);
                      if (Yt !== -1) {
                        At = At.slice(0, Yt);
                        break;
                      }
                    }
                    it.stack = "".concat(At.join(`
`), `
`).concat(_.join(`
`));
                  }
                  throw it;
                }
              };
              function Et(S, L, V, it, tt) {
                if (!A(L))
                  throw new y("regexp", "RegExp", L);
                var _ = tt === "match";
                if (typeof S != "string" || R(L, S) !== _) {
                  if (V instanceof Error)
                    throw V;
                  var At = !V;
                  V = V || (typeof S != "string" ? 'The "string" argument must be of type string. Received type ' + "".concat(r(S), " (").concat(I(S), ")") : (_ ? "The input did not match the regular expression " : "The input was expected to not match the regular expression ") + "".concat(I(L), `. Input:

`).concat(I(S), `
`));
                  var Rt = new w({
                    actual: S,
                    expected: L,
                    message: V,
                    operator: tt,
                    stackStartFn: it
                  });
                  throw Rt.generatedMessage = At, Rt;
                }
              }
              ht.match = function S(L, V, it) {
                Et(L, V, it, S, "match");
              }, ht.doesNotMatch = function S(L, V, it) {
                Et(L, V, it, S, "doesNotMatch");
              };
              function k() {
                for (var S = arguments.length, L = new Array(S), V = 0; V < S; V++)
                  L[V] = arguments[V];
                bt.apply(void 0, [k, L.length].concat(L));
              }
              ht.strict = F(k, ht, {
                equal: ht.strictEqual,
                deepEqual: ht.deepStrictEqual,
                notEqual: ht.notStrictEqual,
                notDeepEqual: ht.notDeepStrictEqual
              }), ht.strict.strict = ht.strict;
            }
          ),
          /***/
          66979: (
            /***/
            function(c, d, t) {
              var o = t(82530);
              function r($, gt) {
                var ut = Object.keys($);
                if (Object.getOwnPropertySymbols) {
                  var st = Object.getOwnPropertySymbols($);
                  gt && (st = st.filter(function(yt) {
                    return Object.getOwnPropertyDescriptor($, yt).enumerable;
                  })), ut.push.apply(ut, st);
                }
                return ut;
              }
              function n($) {
                for (var gt = 1; gt < arguments.length; gt++) {
                  var ut = arguments[gt] != null ? arguments[gt] : {};
                  gt % 2 ? r(Object(ut), !0).forEach(function(st) {
                    i($, st, ut[st]);
                  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties($, Object.getOwnPropertyDescriptors(ut)) : r(Object(ut)).forEach(function(st) {
                    Object.defineProperty($, st, Object.getOwnPropertyDescriptor(ut, st));
                  });
                }
                return $;
              }
              function i($, gt, ut) {
                return gt = h(gt), gt in $ ? Object.defineProperty($, gt, { value: ut, enumerable: !0, configurable: !0, writable: !0 }) : $[gt] = ut, $;
              }
              function f($, gt) {
                if (!($ instanceof gt))
                  throw new TypeError("Cannot call a class as a function");
              }
              function l($, gt) {
                for (var ut = 0; ut < gt.length; ut++) {
                  var st = gt[ut];
                  st.enumerable = st.enumerable || !1, st.configurable = !0, "value" in st && (st.writable = !0), Object.defineProperty($, h(st.key), st);
                }
              }
              function u($, gt, ut) {
                return gt && l($.prototype, gt), ut && l($, ut), Object.defineProperty($, "prototype", { writable: !1 }), $;
              }
              function h($) {
                var gt = a($, "string");
                return A(gt) === "symbol" ? gt : String(gt);
              }
              function a($, gt) {
                if (A($) !== "object" || $ === null)
                  return $;
                var ut = $[Symbol.toPrimitive];
                if (ut !== void 0) {
                  var st = ut.call($, gt || "default");
                  if (A(st) !== "object")
                    return st;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (gt === "string" ? String : Number)($);
              }
              function v($, gt) {
                if (typeof gt != "function" && gt !== null)
                  throw new TypeError("Super expression must either be null or a function");
                $.prototype = Object.create(gt && gt.prototype, { constructor: { value: $, writable: !0, configurable: !0 } }), Object.defineProperty($, "prototype", { writable: !1 }), gt && E($, gt);
              }
              function y($) {
                var gt = D();
                return function() {
                  var st = T($), yt;
                  if (gt) {
                    var G = T(this).constructor;
                    yt = Reflect.construct(st, arguments, G);
                  } else
                    yt = st.apply(this, arguments);
                  return p(this, yt);
                };
              }
              function p($, gt) {
                if (gt && (A(gt) === "object" || typeof gt == "function"))
                  return gt;
                if (gt !== void 0)
                  throw new TypeError("Derived constructors may only return object or undefined");
                return e($);
              }
              function e($) {
                if ($ === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return $;
              }
              function m($) {
                var gt = typeof Map == "function" ? /* @__PURE__ */ new Map() : void 0;
                return m = function(st) {
                  if (st === null || !I(st))
                    return st;
                  if (typeof st != "function")
                    throw new TypeError("Super expression must either be null or a function");
                  if (typeof gt < "u") {
                    if (gt.has(st))
                      return gt.get(st);
                    gt.set(st, yt);
                  }
                  function yt() {
                    return w(st, arguments, T(this).constructor);
                  }
                  return yt.prototype = Object.create(st.prototype, { constructor: { value: yt, enumerable: !1, writable: !0, configurable: !0 } }), E(yt, st);
                }, m($);
              }
              function w($, gt, ut) {
                return D() ? w = Reflect.construct.bind() : w = function(yt, G, Et) {
                  var k = [null];
                  k.push.apply(k, G);
                  var S = Function.bind.apply(yt, k), L = new S();
                  return Et && E(L, Et.prototype), L;
                }, w.apply(null, arguments);
              }
              function D() {
                if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
                  return !1;
                if (typeof Proxy == "function")
                  return !0;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), !0;
                } catch {
                  return !1;
                }
              }
              function I($) {
                return Function.toString.call($).indexOf("[native code]") !== -1;
              }
              function E($, gt) {
                return E = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(st, yt) {
                  return st.__proto__ = yt, st;
                }, E($, gt);
              }
              function T($) {
                return T = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(ut) {
                  return ut.__proto__ || Object.getPrototypeOf(ut);
                }, T($);
              }
              function A($) {
                "@babel/helpers - typeof";
                return A = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(gt) {
                  return typeof gt;
                } : function(gt) {
                  return gt && typeof Symbol == "function" && gt.constructor === Symbol && gt !== Symbol.prototype ? "symbol" : typeof gt;
                }, A($);
              }
              var F = t(85663), b = F.inspect, R = t(78619), N = R.codes.ERR_INVALID_ARG_TYPE;
              function U($, gt, ut) {
                return (ut === void 0 || ut > $.length) && (ut = $.length), $.substring(ut - gt.length, ut) === gt;
              }
              function W($, gt) {
                if (gt = Math.floor(gt), $.length == 0 || gt == 0)
                  return "";
                var ut = $.length * gt;
                for (gt = Math.floor(Math.log(gt) / Math.log(2)); gt; )
                  $ += $, gt--;
                return $ += $.substring(0, ut - $.length), $;
              }
              var J = "", ht = "", K = "", nt = "", xt = {
                deepStrictEqual: "Expected values to be strictly deep-equal:",
                strictEqual: "Expected values to be strictly equal:",
                strictEqualObject: 'Expected "actual" to be reference-equal to "expected":',
                deepEqual: "Expected values to be loosely deep-equal:",
                equal: "Expected values to be loosely equal:",
                notDeepStrictEqual: 'Expected "actual" not to be strictly deep-equal to:',
                notStrictEqual: 'Expected "actual" to be strictly unequal to:',
                notStrictEqualObject: 'Expected "actual" not to be reference-equal to "expected":',
                notDeepEqual: 'Expected "actual" not to be loosely deep-equal to:',
                notEqual: 'Expected "actual" to be loosely unequal to:',
                notIdentical: "Values identical but not reference-equal:"
              }, bt = 10;
              function Tt($) {
                var gt = Object.keys($), ut = Object.create(Object.getPrototypeOf($));
                return gt.forEach(function(st) {
                  ut[st] = $[st];
                }), Object.defineProperty(ut, "message", {
                  value: $.message
                }), ut;
              }
              function It($) {
                return b($, {
                  compact: !1,
                  customInspect: !1,
                  depth: 1e3,
                  maxArrayLength: 1 / 0,
                  // Assert compares only enumerable properties (with a few exceptions).
                  showHidden: !1,
                  // Having a long line as error is better than wrapping the line for
                  // comparison for now.
                  // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we
                  // have meta information about the inspected properties (i.e., know where
                  // in what line the property starts and ends).
                  breakLength: 1 / 0,
                  // Assert does not detect proxies currently.
                  showProxy: !1,
                  sorted: !0,
                  // Inspect getters as we also check them when comparing entries.
                  getters: !0
                });
              }
              function Lt($, gt, ut) {
                var st = "", yt = "", G = 0, Et = "", k = !1, S = It($), L = S.split(`
`), V = It(gt).split(`
`), it = 0, tt = "";
                if (ut === "strictEqual" && A($) === "object" && A(gt) === "object" && $ !== null && gt !== null && (ut = "strictEqualObject"), L.length === 1 && V.length === 1 && L[0] !== V[0]) {
                  var _ = L[0].length + V[0].length;
                  if (_ <= bt) {
                    if ((A($) !== "object" || $ === null) && (A(gt) !== "object" || gt === null) && ($ !== 0 || gt !== 0))
                      return "".concat(xt[ut], `

`) + "".concat(L[0], " !== ").concat(V[0], `
`);
                  } else if (ut !== "strictEqualObject") {
                    var At = o.stderr && o.stderr.isTTY ? o.stderr.columns : 80;
                    if (_ < At) {
                      for (; L[0][it] === V[0][it]; )
                        it++;
                      it > 2 && (tt = `
  `.concat(W(" ", it), "^"), it = 0);
                    }
                  }
                }
                for (var Rt = L[L.length - 1], Yt = V[V.length - 1]; Rt === Yt && (it++ < 2 ? Et = `
  `.concat(Rt).concat(Et) : st = Rt, L.pop(), V.pop(), !(L.length === 0 || V.length === 0)); )
                  Rt = L[L.length - 1], Yt = V[V.length - 1];
                var Gt = Math.max(L.length, V.length);
                if (Gt === 0) {
                  var Dt = S.split(`
`);
                  if (Dt.length > 30)
                    for (Dt[26] = "".concat(J, "...").concat(nt); Dt.length > 27; )
                      Dt.pop();
                  return "".concat(xt.notIdentical, `

`).concat(Dt.join(`
`), `
`);
                }
                it > 3 && (Et = `
`.concat(J, "...").concat(nt).concat(Et), k = !0), st !== "" && (Et = `
  `.concat(st).concat(Et), st = "");
                var ae = 0, Ae = xt[ut] + `
`.concat(ht, "+ actual").concat(nt, " ").concat(K, "- expected").concat(nt), xe = " ".concat(J, "...").concat(nt, " Lines skipped");
                for (it = 0; it < Gt; it++) {
                  var ce = it - G;
                  if (L.length < it + 1)
                    ce > 1 && it > 2 && (ce > 4 ? (yt += `
`.concat(J, "...").concat(nt), k = !0) : ce > 3 && (yt += `
  `.concat(V[it - 2]), ae++), yt += `
  `.concat(V[it - 1]), ae++), G = it, st += `
`.concat(K, "-").concat(nt, " ").concat(V[it]), ae++;
                  else if (V.length < it + 1)
                    ce > 1 && it > 2 && (ce > 4 ? (yt += `
`.concat(J, "...").concat(nt), k = !0) : ce > 3 && (yt += `
  `.concat(L[it - 2]), ae++), yt += `
  `.concat(L[it - 1]), ae++), G = it, yt += `
`.concat(ht, "+").concat(nt, " ").concat(L[it]), ae++;
                  else {
                    var we = V[it], zt = L[it], Qt = zt !== we && (!U(zt, ",") || zt.slice(0, -1) !== we);
                    Qt && U(we, ",") && we.slice(0, -1) === zt && (Qt = !1, zt += ","), Qt ? (ce > 1 && it > 2 && (ce > 4 ? (yt += `
`.concat(J, "...").concat(nt), k = !0) : ce > 3 && (yt += `
  `.concat(L[it - 2]), ae++), yt += `
  `.concat(L[it - 1]), ae++), G = it, yt += `
`.concat(ht, "+").concat(nt, " ").concat(zt), st += `
`.concat(K, "-").concat(nt, " ").concat(we), ae += 2) : (yt += st, st = "", (ce === 1 || it === 0) && (yt += `
  `.concat(zt), ae++));
                  }
                  if (ae > 20 && it < Gt - 2)
                    return "".concat(Ae).concat(xe, `
`).concat(yt, `
`).concat(J, "...").concat(nt).concat(st, `
`) + "".concat(J, "...").concat(nt);
                }
                return "".concat(Ae).concat(k ? xe : "", `
`).concat(yt).concat(st).concat(Et).concat(tt);
              }
              var Ut = /* @__PURE__ */ function($, gt) {
                v(st, $);
                var ut = y(st);
                function st(yt) {
                  var G;
                  if (f(this, st), A(yt) !== "object" || yt === null)
                    throw new N("options", "Object", yt);
                  var Et = yt.message, k = yt.operator, S = yt.stackStartFn, L = yt.actual, V = yt.expected, it = Error.stackTraceLimit;
                  if (Error.stackTraceLimit = 0, Et != null)
                    G = ut.call(this, String(Et));
                  else if (o.stderr && o.stderr.isTTY && (o.stderr && o.stderr.getColorDepth && o.stderr.getColorDepth() !== 1 ? (J = "\x1B[34m", ht = "\x1B[32m", nt = "\x1B[39m", K = "\x1B[31m") : (J = "", ht = "", nt = "", K = "")), A(L) === "object" && L !== null && A(V) === "object" && V !== null && "stack" in L && L instanceof Error && "stack" in V && V instanceof Error && (L = Tt(L), V = Tt(V)), k === "deepStrictEqual" || k === "strictEqual")
                    G = ut.call(this, Lt(L, V, k));
                  else if (k === "notDeepStrictEqual" || k === "notStrictEqual") {
                    var tt = xt[k], _ = It(L).split(`
`);
                    if (k === "notStrictEqual" && A(L) === "object" && L !== null && (tt = xt.notStrictEqualObject), _.length > 30)
                      for (_[26] = "".concat(J, "...").concat(nt); _.length > 27; )
                        _.pop();
                    _.length === 1 ? G = ut.call(this, "".concat(tt, " ").concat(_[0])) : G = ut.call(this, "".concat(tt, `

`).concat(_.join(`
`), `
`));
                  } else {
                    var At = It(L), Rt = "", Yt = xt[k];
                    k === "notDeepEqual" || k === "notEqual" ? (At = "".concat(xt[k], `

`).concat(At), At.length > 1024 && (At = "".concat(At.slice(0, 1021), "..."))) : (Rt = "".concat(It(V)), At.length > 512 && (At = "".concat(At.slice(0, 509), "...")), Rt.length > 512 && (Rt = "".concat(Rt.slice(0, 509), "...")), k === "deepEqual" || k === "equal" ? At = "".concat(Yt, `

`).concat(At, `

should equal

`) : Rt = " ".concat(k, " ").concat(Rt)), G = ut.call(this, "".concat(At).concat(Rt));
                  }
                  return Error.stackTraceLimit = it, G.generatedMessage = !Et, Object.defineProperty(e(G), "name", {
                    value: "AssertionError [ERR_ASSERTION]",
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                  }), G.code = "ERR_ASSERTION", G.actual = L, G.expected = V, G.operator = k, Error.captureStackTrace && Error.captureStackTrace(e(G), S), G.stack, G.name = "AssertionError", p(G);
                }
                return u(st, [{
                  key: "toString",
                  value: function() {
                    return "".concat(this.name, " [").concat(this.code, "]: ").concat(this.message);
                  }
                }, {
                  key: gt,
                  value: function(G, Et) {
                    return b(this, n(n({}, Et), {}, {
                      customInspect: !1,
                      depth: 0
                    }));
                  }
                }]), st;
              }(/* @__PURE__ */ m(Error), b.custom);
              c.exports = Ut;
            }
          ),
          /***/
          78619: (
            /***/
            function(c, d, t) {
              function o(b) {
                "@babel/helpers - typeof";
                return o = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(R) {
                  return typeof R;
                } : function(R) {
                  return R && typeof Symbol == "function" && R.constructor === Symbol && R !== Symbol.prototype ? "symbol" : typeof R;
                }, o(b);
              }
              function r(b, R) {
                for (var N = 0; N < R.length; N++) {
                  var U = R[N];
                  U.enumerable = U.enumerable || !1, U.configurable = !0, "value" in U && (U.writable = !0), Object.defineProperty(b, i(U.key), U);
                }
              }
              function n(b, R, N) {
                return R && r(b.prototype, R), N && r(b, N), Object.defineProperty(b, "prototype", { writable: !1 }), b;
              }
              function i(b) {
                var R = f(b, "string");
                return o(R) === "symbol" ? R : String(R);
              }
              function f(b, R) {
                if (o(b) !== "object" || b === null)
                  return b;
                var N = b[Symbol.toPrimitive];
                if (N !== void 0) {
                  var U = N.call(b, R || "default");
                  if (o(U) !== "object")
                    return U;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (R === "string" ? String : Number)(b);
              }
              function l(b, R) {
                if (!(b instanceof R))
                  throw new TypeError("Cannot call a class as a function");
              }
              function u(b, R) {
                if (typeof R != "function" && R !== null)
                  throw new TypeError("Super expression must either be null or a function");
                b.prototype = Object.create(R && R.prototype, { constructor: { value: b, writable: !0, configurable: !0 } }), Object.defineProperty(b, "prototype", { writable: !1 }), R && h(b, R);
              }
              function h(b, R) {
                return h = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(U, W) {
                  return U.__proto__ = W, U;
                }, h(b, R);
              }
              function a(b) {
                var R = p();
                return function() {
                  var U = e(b), W;
                  if (R) {
                    var J = e(this).constructor;
                    W = Reflect.construct(U, arguments, J);
                  } else
                    W = U.apply(this, arguments);
                  return v(this, W);
                };
              }
              function v(b, R) {
                if (R && (o(R) === "object" || typeof R == "function"))
                  return R;
                if (R !== void 0)
                  throw new TypeError("Derived constructors may only return object or undefined");
                return y(b);
              }
              function y(b) {
                if (b === void 0)
                  throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
                return b;
              }
              function p() {
                if (typeof Reflect > "u" || !Reflect.construct || Reflect.construct.sham)
                  return !1;
                if (typeof Proxy == "function")
                  return !0;
                try {
                  return Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function() {
                  })), !0;
                } catch {
                  return !1;
                }
              }
              function e(b) {
                return e = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function(N) {
                  return N.__proto__ || Object.getPrototypeOf(N);
                }, e(b);
              }
              var m = {}, w, D;
              function I(b, R, N) {
                N || (N = Error);
                function U(J, ht, K) {
                  return typeof R == "string" ? R : R(J, ht, K);
                }
                var W = /* @__PURE__ */ function(J) {
                  u(K, J);
                  var ht = a(K);
                  function K(nt, xt, bt) {
                    var Tt;
                    return l(this, K), Tt = ht.call(this, U(nt, xt, bt)), Tt.code = b, Tt;
                  }
                  return n(K);
                }(N);
                m[b] = W;
              }
              function E(b, R) {
                if (Array.isArray(b)) {
                  var N = b.length;
                  return b = b.map(function(U) {
                    return String(U);
                  }), N > 2 ? "one of ".concat(R, " ").concat(b.slice(0, N - 1).join(", "), ", or ") + b[N - 1] : N === 2 ? "one of ".concat(R, " ").concat(b[0], " or ").concat(b[1]) : "of ".concat(R, " ").concat(b[0]);
                } else
                  return "of ".concat(R, " ").concat(String(b));
              }
              function T(b, R, N) {
                return b.substr(!N || N < 0 ? 0 : +N, R.length) === R;
              }
              function A(b, R, N) {
                return (N === void 0 || N > b.length) && (N = b.length), b.substring(N - R.length, N) === R;
              }
              function F(b, R, N) {
                return typeof N != "number" && (N = 0), N + R.length > b.length ? !1 : b.indexOf(R, N) !== -1;
              }
              I("ERR_AMBIGUOUS_ARGUMENT", 'The "%s" argument is ambiguous. %s', TypeError), I("ERR_INVALID_ARG_TYPE", function(b, R, N) {
                w === void 0 && (w = t(76118)), w(typeof b == "string", "'name' must be a string");
                var U;
                typeof R == "string" && T(R, "not ") ? (U = "must not be", R = R.replace(/^not /, "")) : U = "must be";
                var W;
                if (A(b, " argument"))
                  W = "The ".concat(b, " ").concat(U, " ").concat(E(R, "type"));
                else {
                  var J = F(b, ".") ? "property" : "argument";
                  W = 'The "'.concat(b, '" ').concat(J, " ").concat(U, " ").concat(E(R, "type"));
                }
                return W += ". Received type ".concat(o(N)), W;
              }, TypeError), I("ERR_INVALID_ARG_VALUE", function(b, R) {
                var N = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "is invalid";
                D === void 0 && (D = t(85663));
                var U = D.inspect(R);
                return U.length > 128 && (U = "".concat(U.slice(0, 128), "...")), "The argument '".concat(b, "' ").concat(N, ". Received ").concat(U);
              }, TypeError), I("ERR_INVALID_RETURN_VALUE", function(b, R, N) {
                var U;
                return N && N.constructor && N.constructor.name ? U = "instance of ".concat(N.constructor.name) : U = "type ".concat(o(N)), "Expected ".concat(b, ' to be returned from the "').concat(R, '"') + " function but got ".concat(U, ".");
              }, TypeError), I("ERR_MISSING_ARGS", function() {
                for (var b = arguments.length, R = new Array(b), N = 0; N < b; N++)
                  R[N] = arguments[N];
                w === void 0 && (w = t(76118)), w(R.length > 0, "At least one arg needs to be specified");
                var U = "The ", W = R.length;
                switch (R = R.map(function(J) {
                  return '"'.concat(J, '"');
                }), W) {
                  case 1:
                    U += "".concat(R[0], " argument");
                    break;
                  case 2:
                    U += "".concat(R[0], " and ").concat(R[1], " arguments");
                    break;
                  default:
                    U += R.slice(0, W - 1).join(", "), U += ", and ".concat(R[W - 1], " arguments");
                    break;
                }
                return "".concat(U, " must be specified");
              }, TypeError), c.exports.codes = m;
            }
          ),
          /***/
          61667: (
            /***/
            function(c, d, t) {
              function o(zt, Qt) {
                return l(zt) || f(zt, Qt) || n(zt, Qt) || r();
              }
              function r() {
                throw new TypeError(`Invalid attempt to destructure non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function n(zt, Qt) {
                if (zt) {
                  if (typeof zt == "string")
                    return i(zt, Qt);
                  var le = Object.prototype.toString.call(zt).slice(8, -1);
                  if (le === "Object" && zt.constructor && (le = zt.constructor.name), le === "Map" || le === "Set")
                    return Array.from(zt);
                  if (le === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(le))
                    return i(zt, Qt);
                }
              }
              function i(zt, Qt) {
                (Qt == null || Qt > zt.length) && (Qt = zt.length);
                for (var le = 0, de = new Array(Qt); le < Qt; le++)
                  de[le] = zt[le];
                return de;
              }
              function f(zt, Qt) {
                var le = zt == null ? null : typeof Symbol < "u" && zt[Symbol.iterator] || zt["@@iterator"];
                if (le != null) {
                  var de, be, Oe, Fe, Ft = [], fe = !0, ot = !1;
                  try {
                    if (Oe = (le = le.call(zt)).next, Qt === 0) {
                      if (Object(le) !== le)
                        return;
                      fe = !1;
                    } else
                      for (; !(fe = (de = Oe.call(le)).done) && (Ft.push(de.value), Ft.length !== Qt); fe = !0)
                        ;
                  } catch (Y) {
                    ot = !0, be = Y;
                  } finally {
                    try {
                      if (!fe && le.return != null && (Fe = le.return(), Object(Fe) !== Fe))
                        return;
                    } finally {
                      if (ot)
                        throw be;
                    }
                  }
                  return Ft;
                }
              }
              function l(zt) {
                if (Array.isArray(zt))
                  return zt;
              }
              function u(zt) {
                "@babel/helpers - typeof";
                return u = typeof Symbol == "function" && typeof Symbol.iterator == "symbol" ? function(Qt) {
                  return typeof Qt;
                } : function(Qt) {
                  return Qt && typeof Symbol == "function" && Qt.constructor === Symbol && Qt !== Symbol.prototype ? "symbol" : typeof Qt;
                }, u(zt);
              }
              var h = /a/g.flags !== void 0, a = function(Qt) {
                var le = [];
                return Qt.forEach(function(de) {
                  return le.push(de);
                }), le;
              }, v = function(Qt) {
                var le = [];
                return Qt.forEach(function(de, be) {
                  return le.push([be, de]);
                }), le;
              }, y = Object.is ? Object.is : t(7402), p = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function() {
                return [];
              }, e = Number.isNaN ? Number.isNaN : t(98622);
              function m(zt) {
                return zt.call.bind(zt);
              }
              var w = m(Object.prototype.hasOwnProperty), D = m(Object.prototype.propertyIsEnumerable), I = m(Object.prototype.toString), E = t(85663).types, T = E.isAnyArrayBuffer, A = E.isArrayBufferView, F = E.isDate, b = E.isMap, R = E.isRegExp, N = E.isSet, U = E.isNativeError, W = E.isBoxedPrimitive, J = E.isNumberObject, ht = E.isStringObject, K = E.isBooleanObject, nt = E.isBigIntObject, xt = E.isSymbolObject, bt = E.isFloat32Array, Tt = E.isFloat64Array;
              function It(zt) {
                if (zt.length === 0 || zt.length > 10)
                  return !0;
                for (var Qt = 0; Qt < zt.length; Qt++) {
                  var le = zt.charCodeAt(Qt);
                  if (le < 48 || le > 57)
                    return !0;
                }
                return zt.length === 10 && zt >= Math.pow(2, 32);
              }
              function Lt(zt) {
                return Object.keys(zt).filter(It).concat(p(zt).filter(Object.prototype.propertyIsEnumerable.bind(zt)));
              }
              /*!
               * The buffer module from node.js, for the browser.
               *
               * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
               * @license  MIT
               */
              function Ut(zt, Qt) {
                if (zt === Qt)
                  return 0;
                for (var le = zt.length, de = Qt.length, be = 0, Oe = Math.min(le, de); be < Oe; ++be)
                  if (zt[be] !== Qt[be]) {
                    le = zt[be], de = Qt[be];
                    break;
                  }
                return le < de ? -1 : de < le ? 1 : 0;
              }
              var $ = !0, gt = !1, ut = 0, st = 1, yt = 2, G = 3;
              function Et(zt, Qt) {
                return h ? zt.source === Qt.source && zt.flags === Qt.flags : RegExp.prototype.toString.call(zt) === RegExp.prototype.toString.call(Qt);
              }
              function k(zt, Qt) {
                if (zt.byteLength !== Qt.byteLength)
                  return !1;
                for (var le = 0; le < zt.byteLength; le++)
                  if (zt[le] !== Qt[le])
                    return !1;
                return !0;
              }
              function S(zt, Qt) {
                return zt.byteLength !== Qt.byteLength ? !1 : Ut(new Uint8Array(zt.buffer, zt.byteOffset, zt.byteLength), new Uint8Array(Qt.buffer, Qt.byteOffset, Qt.byteLength)) === 0;
              }
              function L(zt, Qt) {
                return zt.byteLength === Qt.byteLength && Ut(new Uint8Array(zt), new Uint8Array(Qt)) === 0;
              }
              function V(zt, Qt) {
                return J(zt) ? J(Qt) && y(Number.prototype.valueOf.call(zt), Number.prototype.valueOf.call(Qt)) : ht(zt) ? ht(Qt) && String.prototype.valueOf.call(zt) === String.prototype.valueOf.call(Qt) : K(zt) ? K(Qt) && Boolean.prototype.valueOf.call(zt) === Boolean.prototype.valueOf.call(Qt) : nt(zt) ? nt(Qt) && BigInt.prototype.valueOf.call(zt) === BigInt.prototype.valueOf.call(Qt) : xt(Qt) && Symbol.prototype.valueOf.call(zt) === Symbol.prototype.valueOf.call(Qt);
              }
              function it(zt, Qt, le, de) {
                if (zt === Qt)
                  return zt !== 0 ? !0 : le ? y(zt, Qt) : !0;
                if (le) {
                  if (u(zt) !== "object")
                    return typeof zt == "number" && e(zt) && e(Qt);
                  if (u(Qt) !== "object" || zt === null || Qt === null || Object.getPrototypeOf(zt) !== Object.getPrototypeOf(Qt))
                    return !1;
                } else {
                  if (zt === null || u(zt) !== "object")
                    return Qt === null || u(Qt) !== "object" ? zt == Qt : !1;
                  if (Qt === null || u(Qt) !== "object")
                    return !1;
                }
                var be = I(zt), Oe = I(Qt);
                if (be !== Oe)
                  return !1;
                if (Array.isArray(zt)) {
                  if (zt.length !== Qt.length)
                    return !1;
                  var Fe = Lt(zt), Ft = Lt(Qt);
                  return Fe.length !== Ft.length ? !1 : _(zt, Qt, le, de, st, Fe);
                }
                if (be === "[object Object]" && (!b(zt) && b(Qt) || !N(zt) && N(Qt)))
                  return !1;
                if (F(zt)) {
                  if (!F(Qt) || Date.prototype.getTime.call(zt) !== Date.prototype.getTime.call(Qt))
                    return !1;
                } else if (R(zt)) {
                  if (!R(Qt) || !Et(zt, Qt))
                    return !1;
                } else if (U(zt) || zt instanceof Error) {
                  if (zt.message !== Qt.message || zt.name !== Qt.name)
                    return !1;
                } else if (A(zt)) {
                  if (!le && (bt(zt) || Tt(zt))) {
                    if (!k(zt, Qt))
                      return !1;
                  } else if (!S(zt, Qt))
                    return !1;
                  var fe = Lt(zt), ot = Lt(Qt);
                  return fe.length !== ot.length ? !1 : _(zt, Qt, le, de, ut, fe);
                } else {
                  if (N(zt))
                    return !N(Qt) || zt.size !== Qt.size ? !1 : _(zt, Qt, le, de, yt);
                  if (b(zt))
                    return !b(Qt) || zt.size !== Qt.size ? !1 : _(zt, Qt, le, de, G);
                  if (T(zt)) {
                    if (!L(zt, Qt))
                      return !1;
                  } else if (W(zt) && !V(zt, Qt))
                    return !1;
                }
                return _(zt, Qt, le, de, ut);
              }
              function tt(zt, Qt) {
                return Qt.filter(function(le) {
                  return D(zt, le);
                });
              }
              function _(zt, Qt, le, de, be, Oe) {
                if (arguments.length === 5) {
                  Oe = Object.keys(zt);
                  var Fe = Object.keys(Qt);
                  if (Oe.length !== Fe.length)
                    return !1;
                }
                for (var Ft = 0; Ft < Oe.length; Ft++)
                  if (!w(Qt, Oe[Ft]))
                    return !1;
                if (le && arguments.length === 5) {
                  var fe = p(zt);
                  if (fe.length !== 0) {
                    var ot = 0;
                    for (Ft = 0; Ft < fe.length; Ft++) {
                      var Y = fe[Ft];
                      if (D(zt, Y)) {
                        if (!D(Qt, Y))
                          return !1;
                        Oe.push(Y), ot++;
                      } else if (D(Qt, Y))
                        return !1;
                    }
                    var j = p(Qt);
                    if (fe.length !== j.length && tt(Qt, j).length !== ot)
                      return !1;
                  } else {
                    var mt = p(Qt);
                    if (mt.length !== 0 && tt(Qt, mt).length !== 0)
                      return !1;
                  }
                }
                if (Oe.length === 0 && (be === ut || be === st && zt.length === 0 || zt.size === 0))
                  return !0;
                if (de === void 0)
                  de = {
                    val1: /* @__PURE__ */ new Map(),
                    val2: /* @__PURE__ */ new Map(),
                    position: 0
                  };
                else {
                  var at = de.val1.get(zt);
                  if (at !== void 0) {
                    var Wt = de.val2.get(Qt);
                    if (Wt !== void 0)
                      return at === Wt;
                  }
                  de.position++;
                }
                de.val1.set(zt, de.position), de.val2.set(Qt, de.position);
                var _t = xe(zt, Qt, le, Oe, de, be);
                return de.val1.delete(zt), de.val2.delete(Qt), _t;
              }
              function At(zt, Qt, le, de) {
                for (var be = a(zt), Oe = 0; Oe < be.length; Oe++) {
                  var Fe = be[Oe];
                  if (it(Qt, Fe, le, de))
                    return zt.delete(Fe), !0;
                }
                return !1;
              }
              function Rt(zt) {
                switch (u(zt)) {
                  case "undefined":
                    return null;
                  case "object":
                    return;
                  case "symbol":
                    return !1;
                  case "string":
                    zt = +zt;
                  case "number":
                    if (e(zt))
                      return !1;
                }
                return !0;
              }
              function Yt(zt, Qt, le) {
                var de = Rt(le);
                return de ?? (Qt.has(de) && !zt.has(de));
              }
              function Gt(zt, Qt, le, de, be) {
                var Oe = Rt(le);
                if (Oe != null)
                  return Oe;
                var Fe = Qt.get(Oe);
                return Fe === void 0 && !Qt.has(Oe) || !it(de, Fe, !1, be) ? !1 : !zt.has(Oe) && it(de, Fe, !1, be);
              }
              function Dt(zt, Qt, le, de) {
                for (var be = null, Oe = a(zt), Fe = 0; Fe < Oe.length; Fe++) {
                  var Ft = Oe[Fe];
                  if (u(Ft) === "object" && Ft !== null)
                    be === null && (be = /* @__PURE__ */ new Set()), be.add(Ft);
                  else if (!Qt.has(Ft)) {
                    if (le || !Yt(zt, Qt, Ft))
                      return !1;
                    be === null && (be = /* @__PURE__ */ new Set()), be.add(Ft);
                  }
                }
                if (be !== null) {
                  for (var fe = a(Qt), ot = 0; ot < fe.length; ot++) {
                    var Y = fe[ot];
                    if (u(Y) === "object" && Y !== null) {
                      if (!At(be, Y, le, de))
                        return !1;
                    } else if (!le && !zt.has(Y) && !At(be, Y, le, de))
                      return !1;
                  }
                  return be.size === 0;
                }
                return !0;
              }
              function ae(zt, Qt, le, de, be, Oe) {
                for (var Fe = a(zt), Ft = 0; Ft < Fe.length; Ft++) {
                  var fe = Fe[Ft];
                  if (it(le, fe, be, Oe) && it(de, Qt.get(fe), be, Oe))
                    return zt.delete(fe), !0;
                }
                return !1;
              }
              function Ae(zt, Qt, le, de) {
                for (var be = null, Oe = v(zt), Fe = 0; Fe < Oe.length; Fe++) {
                  var Ft = o(Oe[Fe], 2), fe = Ft[0], ot = Ft[1];
                  if (u(fe) === "object" && fe !== null)
                    be === null && (be = /* @__PURE__ */ new Set()), be.add(fe);
                  else {
                    var Y = Qt.get(fe);
                    if (Y === void 0 && !Qt.has(fe) || !it(ot, Y, le, de)) {
                      if (le || !Gt(zt, Qt, fe, ot, de))
                        return !1;
                      be === null && (be = /* @__PURE__ */ new Set()), be.add(fe);
                    }
                  }
                }
                if (be !== null) {
                  for (var j = v(Qt), mt = 0; mt < j.length; mt++) {
                    var at = o(j[mt], 2), Wt = at[0], _t = at[1];
                    if (u(Wt) === "object" && Wt !== null) {
                      if (!ae(be, zt, Wt, _t, le, de))
                        return !1;
                    } else if (!le && (!zt.has(Wt) || !it(zt.get(Wt), _t, !1, de)) && !ae(be, zt, Wt, _t, !1, de))
                      return !1;
                  }
                  return be.size === 0;
                }
                return !0;
              }
              function xe(zt, Qt, le, de, be, Oe) {
                var Fe = 0;
                if (Oe === yt) {
                  if (!Dt(zt, Qt, le, be))
                    return !1;
                } else if (Oe === G) {
                  if (!Ae(zt, Qt, le, be))
                    return !1;
                } else if (Oe === st)
                  for (; Fe < zt.length; Fe++)
                    if (w(zt, Fe)) {
                      if (!w(Qt, Fe) || !it(zt[Fe], Qt[Fe], le, be))
                        return !1;
                    } else {
                      if (w(Qt, Fe))
                        return !1;
                      for (var Ft = Object.keys(zt); Fe < Ft.length; Fe++) {
                        var fe = Ft[Fe];
                        if (!w(Qt, fe) || !it(zt[fe], Qt[fe], le, be))
                          return !1;
                      }
                      return Ft.length === Object.keys(Qt).length;
                    }
                for (Fe = 0; Fe < de.length; Fe++) {
                  var ot = de[Fe];
                  if (!it(zt[ot], Qt[ot], le, be))
                    return !1;
                }
                return !0;
              }
              function ce(zt, Qt) {
                return it(zt, Qt, gt);
              }
              function we(zt, Qt) {
                return it(zt, Qt, $);
              }
              c.exports = {
                isDeepEqual: ce,
                isDeepStrictEqual: we
              };
            }
          ),
          /***/
          5155: (
            /***/
            function(c, d) {
              d.byteLength = u, d.toByteArray = a, d.fromByteArray = p;
              for (var t = [], o = [], r = typeof Uint8Array < "u" ? Uint8Array : Array, n = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", i = 0, f = n.length; i < f; ++i)
                t[i] = n[i], o[n.charCodeAt(i)] = i;
              o["-".charCodeAt(0)] = 62, o["_".charCodeAt(0)] = 63;
              function l(e) {
                var m = e.length;
                if (m % 4 > 0)
                  throw new Error("Invalid string. Length must be a multiple of 4");
                var w = e.indexOf("=");
                w === -1 && (w = m);
                var D = w === m ? 0 : 4 - w % 4;
                return [w, D];
              }
              function u(e) {
                var m = l(e), w = m[0], D = m[1];
                return (w + D) * 3 / 4 - D;
              }
              function h(e, m, w) {
                return (m + w) * 3 / 4 - w;
              }
              function a(e) {
                var m, w = l(e), D = w[0], I = w[1], E = new r(h(e, D, I)), T = 0, A = I > 0 ? D - 4 : D, F;
                for (F = 0; F < A; F += 4)
                  m = o[e.charCodeAt(F)] << 18 | o[e.charCodeAt(F + 1)] << 12 | o[e.charCodeAt(F + 2)] << 6 | o[e.charCodeAt(F + 3)], E[T++] = m >> 16 & 255, E[T++] = m >> 8 & 255, E[T++] = m & 255;
                return I === 2 && (m = o[e.charCodeAt(F)] << 2 | o[e.charCodeAt(F + 1)] >> 4, E[T++] = m & 255), I === 1 && (m = o[e.charCodeAt(F)] << 10 | o[e.charCodeAt(F + 1)] << 4 | o[e.charCodeAt(F + 2)] >> 2, E[T++] = m >> 8 & 255, E[T++] = m & 255), E;
              }
              function v(e) {
                return t[e >> 18 & 63] + t[e >> 12 & 63] + t[e >> 6 & 63] + t[e & 63];
              }
              function y(e, m, w) {
                for (var D, I = [], E = m; E < w; E += 3)
                  D = (e[E] << 16 & 16711680) + (e[E + 1] << 8 & 65280) + (e[E + 2] & 255), I.push(v(D));
                return I.join("");
              }
              function p(e) {
                for (var m, w = e.length, D = w % 3, I = [], E = 16383, T = 0, A = w - D; T < A; T += E)
                  I.push(y(
                    e,
                    T,
                    T + E > A ? A : T + E
                  ));
                return D === 1 ? (m = e[w - 1], I.push(
                  t[m >> 2] + t[m << 4 & 63] + "=="
                )) : D === 2 && (m = (e[w - 2] << 8) + e[w - 1], I.push(
                  t[m >> 10] + t[m >> 4 & 63] + t[m << 2 & 63] + "="
                )), I.join("");
              }
            }
          ),
          /***/
          56887: (
            /***/
            function(c) {
              var d = 4096, t = 2 * d + 32, o = 2 * d - 1, r = new Uint32Array([
                0,
                1,
                3,
                7,
                15,
                31,
                63,
                127,
                255,
                511,
                1023,
                2047,
                4095,
                8191,
                16383,
                32767,
                65535,
                131071,
                262143,
                524287,
                1048575,
                2097151,
                4194303,
                8388607,
                16777215
              ]);
              function n(i) {
                this.buf_ = new Uint8Array(t), this.input_ = i, this.reset();
              }
              n.READ_SIZE = d, n.IBUF_MASK = o, n.prototype.reset = function() {
                this.buf_ptr_ = 0, this.val_ = 0, this.pos_ = 0, this.bit_pos_ = 0, this.bit_end_pos_ = 0, this.eos_ = 0, this.readMoreInput();
                for (var i = 0; i < 4; i++)
                  this.val_ |= this.buf_[this.pos_] << 8 * i, ++this.pos_;
                return this.bit_end_pos_ > 0;
              }, n.prototype.readMoreInput = function() {
                if (!(this.bit_end_pos_ > 256))
                  if (this.eos_) {
                    if (this.bit_pos_ > this.bit_end_pos_)
                      throw new Error("Unexpected end of input " + this.bit_pos_ + " " + this.bit_end_pos_);
                  } else {
                    var i = this.buf_ptr_, f = this.input_.read(this.buf_, i, d);
                    if (f < 0)
                      throw new Error("Unexpected end of input");
                    if (f < d) {
                      this.eos_ = 1;
                      for (var l = 0; l < 32; l++)
                        this.buf_[i + f + l] = 0;
                    }
                    if (i === 0) {
                      for (var l = 0; l < 32; l++)
                        this.buf_[(d << 1) + l] = this.buf_[l];
                      this.buf_ptr_ = d;
                    } else
                      this.buf_ptr_ = 0;
                    this.bit_end_pos_ += f << 3;
                  }
              }, n.prototype.fillBitWindow = function() {
                for (; this.bit_pos_ >= 8; )
                  this.val_ >>>= 8, this.val_ |= this.buf_[this.pos_ & o] << 24, ++this.pos_, this.bit_pos_ = this.bit_pos_ - 8 >>> 0, this.bit_end_pos_ = this.bit_end_pos_ - 8 >>> 0;
              }, n.prototype.readBits = function(i) {
                32 - this.bit_pos_ < i && this.fillBitWindow();
                var f = this.val_ >>> this.bit_pos_ & r[i];
                return this.bit_pos_ += i, f;
              }, c.exports = n;
            }
          ),
          /***/
          52150: (
            /***/
            function(c, d) {
              d.lookup = new Uint8Array([
                /* CONTEXT_UTF8, last byte. */
                /* ASCII range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                4,
                4,
                0,
                0,
                4,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                8,
                12,
                16,
                12,
                12,
                20,
                12,
                16,
                24,
                28,
                12,
                12,
                32,
                12,
                36,
                12,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                44,
                32,
                32,
                24,
                40,
                28,
                12,
                12,
                48,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                52,
                52,
                48,
                52,
                52,
                52,
                52,
                52,
                24,
                12,
                28,
                12,
                12,
                12,
                56,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                60,
                60,
                56,
                60,
                60,
                60,
                60,
                60,
                24,
                12,
                28,
                12,
                0,
                /* UTF8 continuation byte range. */
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                0,
                1,
                /* UTF8 lead byte range. */
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                2,
                3,
                /* CONTEXT_UTF8 second last byte. */
                /* ASCII range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                1,
                1,
                1,
                1,
                1,
                1,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                1,
                1,
                1,
                1,
                0,
                /* UTF8 continuation byte range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                /* UTF8 lead byte range. */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                /* CONTEXT_SIGNED, second last byte. */
                0,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                2,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                3,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                4,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                5,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                6,
                7,
                /* CONTEXT_SIGNED, last byte, same as the above values shifted by 3 bits. */
                0,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                8,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                24,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                32,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                40,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                48,
                56,
                /* CONTEXT_LSB6, last byte. */
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                0,
                1,
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32,
                33,
                34,
                35,
                36,
                37,
                38,
                39,
                40,
                41,
                42,
                43,
                44,
                45,
                46,
                47,
                48,
                49,
                50,
                51,
                52,
                53,
                54,
                55,
                56,
                57,
                58,
                59,
                60,
                61,
                62,
                63,
                /* CONTEXT_MSB6, last byte. */
                0,
                0,
                0,
                0,
                1,
                1,
                1,
                1,
                2,
                2,
                2,
                2,
                3,
                3,
                3,
                3,
                4,
                4,
                4,
                4,
                5,
                5,
                5,
                5,
                6,
                6,
                6,
                6,
                7,
                7,
                7,
                7,
                8,
                8,
                8,
                8,
                9,
                9,
                9,
                9,
                10,
                10,
                10,
                10,
                11,
                11,
                11,
                11,
                12,
                12,
                12,
                12,
                13,
                13,
                13,
                13,
                14,
                14,
                14,
                14,
                15,
                15,
                15,
                15,
                16,
                16,
                16,
                16,
                17,
                17,
                17,
                17,
                18,
                18,
                18,
                18,
                19,
                19,
                19,
                19,
                20,
                20,
                20,
                20,
                21,
                21,
                21,
                21,
                22,
                22,
                22,
                22,
                23,
                23,
                23,
                23,
                24,
                24,
                24,
                24,
                25,
                25,
                25,
                25,
                26,
                26,
                26,
                26,
                27,
                27,
                27,
                27,
                28,
                28,
                28,
                28,
                29,
                29,
                29,
                29,
                30,
                30,
                30,
                30,
                31,
                31,
                31,
                31,
                32,
                32,
                32,
                32,
                33,
                33,
                33,
                33,
                34,
                34,
                34,
                34,
                35,
                35,
                35,
                35,
                36,
                36,
                36,
                36,
                37,
                37,
                37,
                37,
                38,
                38,
                38,
                38,
                39,
                39,
                39,
                39,
                40,
                40,
                40,
                40,
                41,
                41,
                41,
                41,
                42,
                42,
                42,
                42,
                43,
                43,
                43,
                43,
                44,
                44,
                44,
                44,
                45,
                45,
                45,
                45,
                46,
                46,
                46,
                46,
                47,
                47,
                47,
                47,
                48,
                48,
                48,
                48,
                49,
                49,
                49,
                49,
                50,
                50,
                50,
                50,
                51,
                51,
                51,
                51,
                52,
                52,
                52,
                52,
                53,
                53,
                53,
                53,
                54,
                54,
                54,
                54,
                55,
                55,
                55,
                55,
                56,
                56,
                56,
                56,
                57,
                57,
                57,
                57,
                58,
                58,
                58,
                58,
                59,
                59,
                59,
                59,
                60,
                60,
                60,
                60,
                61,
                61,
                61,
                61,
                62,
                62,
                62,
                62,
                63,
                63,
                63,
                63,
                /* CONTEXT_{M,L}SB6, second last byte, */
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0,
                0
              ]), d.lookupOffsets = new Uint16Array([
                /* CONTEXT_LSB6 */
                1024,
                1536,
                /* CONTEXT_MSB6 */
                1280,
                1536,
                /* CONTEXT_UTF8 */
                0,
                256,
                /* CONTEXT_SIGNED */
                768,
                512
              ]);
            }
          ),
          /***/
          17217: (
            /***/
            function(c, d, t) {
              var o = t(46170).g, r = t(46170).j, n = t(56887), i = t(50227), f = t(33535).h, l = t(33535).g, u = t(52150), h = t(4008), a = t(22906), v = 8, y = 16, p = 256, e = 704, m = 26, w = 6, D = 2, I = 8, E = 255, T = 1080, A = 18, F = new Uint8Array([
                1,
                2,
                3,
                4,
                0,
                5,
                17,
                6,
                16,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15
              ]), b = 16, R = new Uint8Array([
                3,
                2,
                1,
                0,
                3,
                3,
                3,
                3,
                3,
                3,
                2,
                2,
                2,
                2,
                2,
                2
              ]), N = new Int8Array([
                0,
                0,
                0,
                0,
                -1,
                1,
                -2,
                2,
                -3,
                3,
                -1,
                1,
                -2,
                2,
                -3,
                3
              ]), U = new Uint16Array([
                256,
                402,
                436,
                468,
                500,
                534,
                566,
                598,
                630,
                662,
                694,
                726,
                758,
                790,
                822,
                854,
                886,
                920,
                952,
                984,
                1016,
                1048,
                1080
              ]);
              function W(S) {
                var L;
                return S.readBits(1) === 0 ? 16 : (L = S.readBits(3), L > 0 ? 17 + L : (L = S.readBits(3), L > 0 ? 8 + L : 17));
              }
              function J(S) {
                if (S.readBits(1)) {
                  var L = S.readBits(3);
                  return L === 0 ? 1 : S.readBits(L) + (1 << L);
                }
                return 0;
              }
              function ht() {
                this.meta_block_length = 0, this.input_end = 0, this.is_uncompressed = 0, this.is_metadata = !1;
              }
              function K(S) {
                var L = new ht(), V, it, tt;
                if (L.input_end = S.readBits(1), L.input_end && S.readBits(1))
                  return L;
                if (V = S.readBits(2) + 4, V === 7) {
                  if (L.is_metadata = !0, S.readBits(1) !== 0)
                    throw new Error("Invalid reserved bit");
                  if (it = S.readBits(2), it === 0)
                    return L;
                  for (tt = 0; tt < it; tt++) {
                    var _ = S.readBits(8);
                    if (tt + 1 === it && it > 1 && _ === 0)
                      throw new Error("Invalid size byte");
                    L.meta_block_length |= _ << tt * 8;
                  }
                } else
                  for (tt = 0; tt < V; ++tt) {
                    var At = S.readBits(4);
                    if (tt + 1 === V && V > 4 && At === 0)
                      throw new Error("Invalid size nibble");
                    L.meta_block_length |= At << tt * 4;
                  }
                return ++L.meta_block_length, !L.input_end && !L.is_metadata && (L.is_uncompressed = S.readBits(1)), L;
              }
              function nt(S, L, V) {
                var it;
                return V.fillBitWindow(), L += V.val_ >>> V.bit_pos_ & E, it = S[L].bits - I, it > 0 && (V.bit_pos_ += I, L += S[L].value, L += V.val_ >>> V.bit_pos_ & (1 << it) - 1), V.bit_pos_ += S[L].bits, S[L].value;
              }
              function xt(S, L, V, it) {
                for (var tt = 0, _ = v, At = 0, Rt = 0, Yt = 32768, Gt = [], Dt = 0; Dt < 32; Dt++)
                  Gt.push(new f(0, 0));
                for (l(Gt, 0, 5, S, A); tt < L && Yt > 0; ) {
                  var ae = 0, Ae;
                  if (it.readMoreInput(), it.fillBitWindow(), ae += it.val_ >>> it.bit_pos_ & 31, it.bit_pos_ += Gt[ae].bits, Ae = Gt[ae].value & 255, Ae < y)
                    At = 0, V[tt++] = Ae, Ae !== 0 && (_ = Ae, Yt -= 32768 >> Ae);
                  else {
                    var xe = Ae - 14, ce, we, zt = 0;
                    if (Ae === y && (zt = _), Rt !== zt && (At = 0, Rt = zt), ce = At, At > 0 && (At -= 2, At <<= xe), At += it.readBits(xe) + 3, we = At - ce, tt + we > L)
                      throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");
                    for (var Qt = 0; Qt < we; Qt++)
                      V[tt + Qt] = Rt;
                    tt += we, Rt !== 0 && (Yt -= we << 15 - Rt);
                  }
                }
                if (Yt !== 0)
                  throw new Error("[ReadHuffmanCodeLengths] space = " + Yt);
                for (; tt < L; tt++)
                  V[tt] = 0;
              }
              function bt(S, L, V, it) {
                var tt = 0, _, At = new Uint8Array(S);
                if (it.readMoreInput(), _ = it.readBits(2), _ === 1) {
                  for (var Rt, Yt = S - 1, Gt = 0, Dt = new Int32Array(4), ae = it.readBits(2) + 1; Yt; )
                    Yt >>= 1, ++Gt;
                  for (Rt = 0; Rt < ae; ++Rt)
                    Dt[Rt] = it.readBits(Gt) % S, At[Dt[Rt]] = 2;
                  switch (At[Dt[0]] = 1, ae) {
                    case 1:
                      break;
                    case 3:
                      if (Dt[0] === Dt[1] || Dt[0] === Dt[2] || Dt[1] === Dt[2])
                        throw new Error("[ReadHuffmanCode] invalid symbols");
                      break;
                    case 2:
                      if (Dt[0] === Dt[1])
                        throw new Error("[ReadHuffmanCode] invalid symbols");
                      At[Dt[1]] = 1;
                      break;
                    case 4:
                      if (Dt[0] === Dt[1] || Dt[0] === Dt[2] || Dt[0] === Dt[3] || Dt[1] === Dt[2] || Dt[1] === Dt[3] || Dt[2] === Dt[3])
                        throw new Error("[ReadHuffmanCode] invalid symbols");
                      it.readBits(1) ? (At[Dt[2]] = 3, At[Dt[3]] = 3) : At[Dt[0]] = 2;
                      break;
                  }
                } else {
                  var Rt, Ae = new Uint8Array(A), xe = 32, ce = 0, we = [
                    new f(2, 0),
                    new f(2, 4),
                    new f(2, 3),
                    new f(3, 2),
                    new f(2, 0),
                    new f(2, 4),
                    new f(2, 3),
                    new f(4, 1),
                    new f(2, 0),
                    new f(2, 4),
                    new f(2, 3),
                    new f(3, 2),
                    new f(2, 0),
                    new f(2, 4),
                    new f(2, 3),
                    new f(4, 5)
                  ];
                  for (Rt = _; Rt < A && xe > 0; ++Rt) {
                    var zt = F[Rt], Qt = 0, le;
                    it.fillBitWindow(), Qt += it.val_ >>> it.bit_pos_ & 15, it.bit_pos_ += we[Qt].bits, le = we[Qt].value, Ae[zt] = le, le !== 0 && (xe -= 32 >> le, ++ce);
                  }
                  if (!(ce === 1 || xe === 0))
                    throw new Error("[ReadHuffmanCode] invalid num_codes or space");
                  xt(Ae, S, At, it);
                }
                if (tt = l(L, V, I, At, S), tt === 0)
                  throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");
                return tt;
              }
              function Tt(S, L, V) {
                var it, tt;
                return it = nt(S, L, V), tt = h.kBlockLengthPrefixCode[it].nbits, h.kBlockLengthPrefixCode[it].offset + V.readBits(tt);
              }
              function It(S, L, V) {
                var it;
                return S < b ? (V += R[S], V &= 3, it = L[V] + N[S]) : it = S - b + 1, it;
              }
              function Lt(S, L) {
                for (var V = S[L], it = L; it; --it)
                  S[it] = S[it - 1];
                S[0] = V;
              }
              function Ut(S, L) {
                var V = new Uint8Array(256), it;
                for (it = 0; it < 256; ++it)
                  V[it] = it;
                for (it = 0; it < L; ++it) {
                  var tt = S[it];
                  S[it] = V[tt], tt && Lt(V, tt);
                }
              }
              function $(S, L) {
                this.alphabet_size = S, this.num_htrees = L, this.codes = new Array(L + L * U[S + 31 >>> 5]), this.htrees = new Uint32Array(L);
              }
              $.prototype.decode = function(S) {
                var L, V, it = 0;
                for (L = 0; L < this.num_htrees; ++L)
                  this.htrees[L] = it, V = bt(this.alphabet_size, this.codes, it, S), it += V;
              };
              function gt(S, L) {
                var V = { num_htrees: null, context_map: null }, it, tt = 0, _, At;
                L.readMoreInput();
                var Rt = V.num_htrees = J(L) + 1, Yt = V.context_map = new Uint8Array(S);
                if (Rt <= 1)
                  return V;
                for (it = L.readBits(1), it && (tt = L.readBits(4) + 1), _ = [], At = 0; At < T; At++)
                  _[At] = new f(0, 0);
                for (bt(Rt + tt, _, 0, L), At = 0; At < S; ) {
                  var Gt;
                  if (L.readMoreInput(), Gt = nt(_, 0, L), Gt === 0)
                    Yt[At] = 0, ++At;
                  else if (Gt <= tt)
                    for (var Dt = 1 + (1 << Gt) + L.readBits(Gt); --Dt; ) {
                      if (At >= S)
                        throw new Error("[DecodeContextMap] i >= context_map_size");
                      Yt[At] = 0, ++At;
                    }
                  else
                    Yt[At] = Gt - tt, ++At;
                }
                return L.readBits(1) && Ut(Yt, S), V;
              }
              function ut(S, L, V, it, tt, _, At) {
                var Rt = V * 2, Yt = V, Gt = nt(L, V * T, At), Dt;
                Gt === 0 ? Dt = tt[Rt + (_[Yt] & 1)] : Gt === 1 ? Dt = tt[Rt + (_[Yt] - 1 & 1)] + 1 : Dt = Gt - 2, Dt >= S && (Dt -= S), it[V] = Dt, tt[Rt + (_[Yt] & 1)] = Dt, ++_[Yt];
              }
              function st(S, L, V, it, tt, _) {
                var At = tt + 1, Rt = V & tt, Yt = _.pos_ & n.IBUF_MASK, Gt;
                if (L < 8 || _.bit_pos_ + (L << 3) < _.bit_end_pos_) {
                  for (; L-- > 0; )
                    _.readMoreInput(), it[Rt++] = _.readBits(8), Rt === At && (S.write(it, At), Rt = 0);
                  return;
                }
                if (_.bit_end_pos_ < 32)
                  throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");
                for (; _.bit_pos_ < 32; )
                  it[Rt] = _.val_ >>> _.bit_pos_, _.bit_pos_ += 8, ++Rt, --L;
                if (Gt = _.bit_end_pos_ - _.bit_pos_ >> 3, Yt + Gt > n.IBUF_MASK) {
                  for (var Dt = n.IBUF_MASK + 1 - Yt, ae = 0; ae < Dt; ae++)
                    it[Rt + ae] = _.buf_[Yt + ae];
                  Gt -= Dt, Rt += Dt, L -= Dt, Yt = 0;
                }
                for (var ae = 0; ae < Gt; ae++)
                  it[Rt + ae] = _.buf_[Yt + ae];
                if (Rt += Gt, L -= Gt, Rt >= At) {
                  S.write(it, At), Rt -= At;
                  for (var ae = 0; ae < Rt; ae++)
                    it[ae] = it[At + ae];
                }
                for (; Rt + L >= At; ) {
                  if (Gt = At - Rt, _.input_.read(it, Rt, Gt) < Gt)
                    throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");
                  S.write(it, At), L -= Gt, Rt = 0;
                }
                if (_.input_.read(it, Rt, L) < L)
                  throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");
                _.reset();
              }
              function yt(S) {
                var L = S.bit_pos_ + 7 & -8, V = S.readBits(L - S.bit_pos_);
                return V == 0;
              }
              function G(S) {
                var L = new o(S), V = new n(L);
                W(V);
                var it = K(V);
                return it.meta_block_length;
              }
              function Et(S, L) {
                var V = new o(S);
                L == null && (L = G(S));
                var it = new Uint8Array(L), tt = new r(it);
                return k(V, tt), tt.pos < tt.buffer.length && (tt.buffer = tt.buffer.subarray(0, tt.pos)), tt.buffer;
              }
              d.BrotliDecompressBuffer = Et;
              function k(S, L) {
                var V, it = 0, tt = 0, _ = 0, At, Rt = 0, Yt, Gt, Dt, ae, Ae = [16, 15, 11, 4], xe = 0, ce = 0, we = 0, zt = [new $(0, 0), new $(0, 0), new $(0, 0)], Qt, le, de, be = 128 + n.READ_SIZE;
                de = new n(S), _ = W(de), At = (1 << _) - 16, Yt = 1 << _, Gt = Yt - 1, Dt = new Uint8Array(Yt + be + i.maxDictionaryWordLength), ae = Yt, Qt = [], le = [];
                for (var Oe = 0; Oe < 3 * T; Oe++)
                  Qt[Oe] = new f(0, 0), le[Oe] = new f(0, 0);
                for (; !tt; ) {
                  var Fe = 0, Ft, fe = [1 << 28, 1 << 28, 1 << 28], ot = [0], Y = [1, 1, 1], j = [0, 1, 0, 1, 0, 1], mt = [0], at, Wt, _t, Q, Jt = null, te = null, Ct, Ht = null, oe, Le = 0, De = null, ke = 0, Ne = 0, rn = null, tr = 0, Ze = 0, br = 0, Ir, Zr;
                  for (V = 0; V < 3; ++V)
                    zt[V].codes = null, zt[V].htrees = null;
                  de.readMoreInput();
                  var Cn = K(de);
                  if (Fe = Cn.meta_block_length, it + Fe > L.buffer.length) {
                    var Mn = new Uint8Array(it + Fe);
                    Mn.set(L.buffer), L.buffer = Mn;
                  }
                  if (tt = Cn.input_end, Ft = Cn.is_uncompressed, Cn.is_metadata) {
                    for (yt(de); Fe > 0; --Fe)
                      de.readMoreInput(), de.readBits(8);
                    continue;
                  }
                  if (Fe !== 0) {
                    if (Ft) {
                      de.bit_pos_ = de.bit_pos_ + 7 & -8, st(
                        L,
                        Fe,
                        it,
                        Dt,
                        Gt,
                        de
                      ), it += Fe;
                      continue;
                    }
                    for (V = 0; V < 3; ++V)
                      Y[V] = J(de) + 1, Y[V] >= 2 && (bt(Y[V] + 2, Qt, V * T, de), bt(m, le, V * T, de), fe[V] = Tt(le, V * T, de), mt[V] = 1);
                    for (de.readMoreInput(), at = de.readBits(2), Wt = b + (de.readBits(4) << at), _t = (1 << at) - 1, Q = Wt + (48 << at), te = new Uint8Array(Y[0]), V = 0; V < Y[0]; ++V)
                      de.readMoreInput(), te[V] = de.readBits(2) << 1;
                    var rr = gt(Y[0] << w, de);
                    Ct = rr.num_htrees, Jt = rr.context_map;
                    var nn = gt(Y[2] << D, de);
                    for (oe = nn.num_htrees, Ht = nn.context_map, zt[0] = new $(p, Ct), zt[1] = new $(e, Y[1]), zt[2] = new $(Q, oe), V = 0; V < 3; ++V)
                      zt[V].decode(de);
                    for (De = 0, rn = 0, Ir = te[ot[0]], Ze = u.lookupOffsets[Ir], br = u.lookupOffsets[Ir + 1], Zr = zt[1].htrees[0]; Fe > 0; ) {
                      var Mr, $r, Wr, Hn, jn, Ue, ze, Qe, ur, xn, wn;
                      for (de.readMoreInput(), fe[1] === 0 && (ut(
                        Y[1],
                        Qt,
                        1,
                        ot,
                        j,
                        mt,
                        de
                      ), fe[1] = Tt(le, T, de), Zr = zt[1].htrees[ot[1]]), --fe[1], Mr = nt(zt[1].codes, Zr, de), $r = Mr >> 6, $r >= 2 ? ($r -= 2, ze = -1) : ze = 0, Wr = h.kInsertRangeLut[$r] + (Mr >> 3 & 7), Hn = h.kCopyRangeLut[$r] + (Mr & 7), jn = h.kInsertLengthPrefixCode[Wr].offset + de.readBits(h.kInsertLengthPrefixCode[Wr].nbits), Ue = h.kCopyLengthPrefixCode[Hn].offset + de.readBits(h.kCopyLengthPrefixCode[Hn].nbits), ce = Dt[it - 1 & Gt], we = Dt[it - 2 & Gt], xn = 0; xn < jn; ++xn)
                        de.readMoreInput(), fe[0] === 0 && (ut(
                          Y[0],
                          Qt,
                          0,
                          ot,
                          j,
                          mt,
                          de
                        ), fe[0] = Tt(le, 0, de), Le = ot[0] << w, De = Le, Ir = te[ot[0]], Ze = u.lookupOffsets[Ir], br = u.lookupOffsets[Ir + 1]), ur = u.lookup[Ze + ce] | u.lookup[br + we], ke = Jt[De + ur], --fe[0], we = ce, ce = nt(zt[0].codes, zt[0].htrees[ke], de), Dt[it & Gt] = ce, (it & Gt) === Gt && L.write(Dt, Yt), ++it;
                      if (Fe -= jn, Fe <= 0)
                        break;
                      if (ze < 0) {
                        var ur;
                        if (de.readMoreInput(), fe[2] === 0 && (ut(
                          Y[2],
                          Qt,
                          2,
                          ot,
                          j,
                          mt,
                          de
                        ), fe[2] = Tt(le, 2 * T, de), Ne = ot[2] << D, rn = Ne), --fe[2], ur = (Ue > 4 ? 3 : Ue - 2) & 255, tr = Ht[rn + ur], ze = nt(zt[2].codes, zt[2].htrees[tr], de), ze >= Wt) {
                          var Yn, va, Kn;
                          ze -= Wt, va = ze & _t, ze >>= at, Yn = (ze >> 1) + 1, Kn = (2 + (ze & 1) << Yn) - 4, ze = Wt + (Kn + de.readBits(Yn) << at) + va;
                        }
                      }
                      if (Qe = It(ze, Ae, xe), Qe < 0)
                        throw new Error("[BrotliDecompress] invalid distance");
                      if (it < At && Rt !== At ? Rt = it : Rt = At, wn = it & Gt, Qe > Rt)
                        if (Ue >= i.minDictionaryWordLength && Ue <= i.maxDictionaryWordLength) {
                          var Kn = i.offsetsByLength[Ue], Jn = Qe - Rt - 1, Kt = i.sizeBitsByLength[Ue], Pt = (1 << Kt) - 1, re = Jn & Pt, Bt = Jn >> Kt;
                          if (Kn += re * Ue, Bt < a.kNumTransforms) {
                            var Nt = a.transformDictionaryWord(Dt, wn, Kn, Ue, Bt);
                            if (wn += Nt, it += Nt, Fe -= Nt, wn >= ae) {
                              L.write(Dt, Yt);
                              for (var Mt = 0; Mt < wn - ae; Mt++)
                                Dt[Mt] = Dt[ae + Mt];
                            }
                          } else
                            throw new Error("Invalid backward reference. pos: " + it + " distance: " + Qe + " len: " + Ue + " bytes left: " + Fe);
                        } else
                          throw new Error("Invalid backward reference. pos: " + it + " distance: " + Qe + " len: " + Ue + " bytes left: " + Fe);
                      else {
                        if (ze > 0 && (Ae[xe & 3] = Qe, ++xe), Ue > Fe)
                          throw new Error("Invalid backward reference. pos: " + it + " distance: " + Qe + " len: " + Ue + " bytes left: " + Fe);
                        for (xn = 0; xn < Ue; ++xn)
                          Dt[it & Gt] = Dt[it - Qe & Gt], (it & Gt) === Gt && L.write(Dt, Yt), ++it, --Fe;
                      }
                      ce = Dt[it - 1 & Gt], we = Dt[it - 2 & Gt];
                    }
                    it &= 1073741823;
                  }
                }
                L.write(Dt, it & Gt);
              }
              i.init();
            }
          ),
          /***/
          99373: (
            /***/
            function(c, d, t) {
              var o = t(5155);
              d.init = function() {
                var r = t(17217).BrotliDecompressBuffer, n = o.toByteArray(t(13019));
                return r(n);
              };
            }
          ),
          /***/
          13019: (
            /***/
            function(c) {
              c.exports = "";
            }
          ),
          /***/
          50227: (
            /***/
            function(c, d, t) {
              var o = t(99373);
              d.init = function() {
                d.dictionary = o.init();
              }, d.offsetsByLength = new Uint32Array([
                0,
                0,
                0,
                0,
                0,
                4096,
                9216,
                21504,
                35840,
                44032,
                53248,
                63488,
                74752,
                87040,
                93696,
                100864,
                104704,
                106752,
                108928,
                113536,
                115968,
                118528,
                119872,
                121280,
                122016
              ]), d.sizeBitsByLength = new Uint8Array([
                0,
                0,
                0,
                0,
                10,
                10,
                11,
                11,
                10,
                10,
                10,
                10,
                10,
                9,
                9,
                8,
                7,
                7,
                8,
                7,
                7,
                6,
                6,
                5,
                5
              ]), d.minDictionaryWordLength = 4, d.maxDictionaryWordLength = 24;
            }
          ),
          /***/
          33535: (
            /***/
            function(c, d) {
              function t(f, l) {
                this.bits = f, this.value = l;
              }
              d.h = t;
              var o = 15;
              function r(f, l) {
                for (var u = 1 << l - 1; f & u; )
                  u >>= 1;
                return (f & u - 1) + u;
              }
              function n(f, l, u, h, a) {
                do
                  h -= u, f[l + h] = new t(a.bits, a.value);
                while (h > 0);
              }
              function i(f, l, u) {
                for (var h = 1 << l - u; l < o && (h -= f[l], !(h <= 0)); )
                  ++l, h <<= 1;
                return l - u;
              }
              d.g = function(f, l, u, h, a) {
                var v = l, y, p, e, m, w, D, I, E, T, A, F, b = new Int32Array(o + 1), R = new Int32Array(o + 1);
                for (F = new Int32Array(a), e = 0; e < a; e++)
                  b[h[e]]++;
                for (R[1] = 0, p = 1; p < o; p++)
                  R[p + 1] = R[p] + b[p];
                for (e = 0; e < a; e++)
                  h[e] !== 0 && (F[R[h[e]]++] = e);
                if (E = u, T = 1 << E, A = T, R[o] === 1) {
                  for (m = 0; m < A; ++m)
                    f[l + m] = new t(0, F[0] & 65535);
                  return A;
                }
                for (m = 0, e = 0, p = 1, w = 2; p <= u; ++p, w <<= 1)
                  for (; b[p] > 0; --b[p])
                    y = new t(p & 255, F[e++] & 65535), n(f, l + m, w, T, y), m = r(m, p);
                for (I = A - 1, D = -1, p = u + 1, w = 2; p <= o; ++p, w <<= 1)
                  for (; b[p] > 0; --b[p])
                    (m & I) !== D && (l += T, E = i(b, p, u), T = 1 << E, A += T, D = m & I, f[v + D] = new t(E + u & 255, l - v - D & 65535)), y = new t(p - u & 255, F[e++] & 65535), n(f, l + (m >> u), w, T, y), m = r(m, p);
                return A;
              };
            }
          ),
          /***/
          4008: (
            /***/
            function(c, d) {
              function t(o, r) {
                this.offset = o, this.nbits = r;
              }
              d.kBlockLengthPrefixCode = [
                new t(1, 2),
                new t(5, 2),
                new t(9, 2),
                new t(13, 2),
                new t(17, 3),
                new t(25, 3),
                new t(33, 3),
                new t(41, 3),
                new t(49, 4),
                new t(65, 4),
                new t(81, 4),
                new t(97, 4),
                new t(113, 5),
                new t(145, 5),
                new t(177, 5),
                new t(209, 5),
                new t(241, 6),
                new t(305, 6),
                new t(369, 7),
                new t(497, 8),
                new t(753, 9),
                new t(1265, 10),
                new t(2289, 11),
                new t(4337, 12),
                new t(8433, 13),
                new t(16625, 24)
              ], d.kInsertLengthPrefixCode = [
                new t(0, 0),
                new t(1, 0),
                new t(2, 0),
                new t(3, 0),
                new t(4, 0),
                new t(5, 0),
                new t(6, 1),
                new t(8, 1),
                new t(10, 2),
                new t(14, 2),
                new t(18, 3),
                new t(26, 3),
                new t(34, 4),
                new t(50, 4),
                new t(66, 5),
                new t(98, 5),
                new t(130, 6),
                new t(194, 7),
                new t(322, 8),
                new t(578, 9),
                new t(1090, 10),
                new t(2114, 12),
                new t(6210, 14),
                new t(22594, 24)
              ], d.kCopyLengthPrefixCode = [
                new t(2, 0),
                new t(3, 0),
                new t(4, 0),
                new t(5, 0),
                new t(6, 0),
                new t(7, 0),
                new t(8, 0),
                new t(9, 0),
                new t(10, 1),
                new t(12, 1),
                new t(14, 2),
                new t(18, 2),
                new t(22, 3),
                new t(30, 3),
                new t(38, 4),
                new t(54, 4),
                new t(70, 5),
                new t(102, 5),
                new t(134, 6),
                new t(198, 7),
                new t(326, 8),
                new t(582, 9),
                new t(1094, 10),
                new t(2118, 24)
              ], d.kInsertRangeLut = [
                0,
                0,
                8,
                8,
                0,
                16,
                8,
                16,
                16
              ], d.kCopyRangeLut = [
                0,
                8,
                0,
                8,
                16,
                0,
                16,
                8,
                16
              ];
            }
          ),
          /***/
          46170: (
            /***/
            function(c, d) {
              function t(r) {
                this.buffer = r, this.pos = 0;
              }
              t.prototype.read = function(r, n, i) {
                this.pos + i > this.buffer.length && (i = this.buffer.length - this.pos);
                for (var f = 0; f < i; f++)
                  r[n + f] = this.buffer[this.pos + f];
                return this.pos += i, i;
              }, d.g = t;
              function o(r) {
                this.buffer = r, this.pos = 0;
              }
              o.prototype.write = function(r, n) {
                if (this.pos + n > this.buffer.length)
                  throw new Error("Output buffer is not large enough");
                return this.buffer.set(r.subarray(0, n), this.pos), this.pos += n, n;
              }, d.j = o;
            }
          ),
          /***/
          22906: (
            /***/
            function(c, d, t) {
              var o = t(50227), r = 0, n = 1, i = 2, f = 3, l = 4, u = 5, h = 6, a = 7, v = 8, y = 9, p = 10, e = 11, m = 12, w = 13, D = 14, I = 15, E = 16, T = 17, A = 18, F = 20;
              function b(U, W, J) {
                this.prefix = new Uint8Array(U.length), this.transform = W, this.suffix = new Uint8Array(J.length);
                for (var ht = 0; ht < U.length; ht++)
                  this.prefix[ht] = U.charCodeAt(ht);
                for (var ht = 0; ht < J.length; ht++)
                  this.suffix[ht] = J.charCodeAt(ht);
              }
              var R = [
                new b("", r, ""),
                new b("", r, " "),
                new b(" ", r, " "),
                new b("", m, ""),
                new b("", p, " "),
                new b("", r, " the "),
                new b(" ", r, ""),
                new b("s ", r, " "),
                new b("", r, " of "),
                new b("", p, ""),
                new b("", r, " and "),
                new b("", w, ""),
                new b("", n, ""),
                new b(", ", r, " "),
                new b("", r, ", "),
                new b(" ", p, " "),
                new b("", r, " in "),
                new b("", r, " to "),
                new b("e ", r, " "),
                new b("", r, '"'),
                new b("", r, "."),
                new b("", r, '">'),
                new b("", r, `
`),
                new b("", f, ""),
                new b("", r, "]"),
                new b("", r, " for "),
                new b("", D, ""),
                new b("", i, ""),
                new b("", r, " a "),
                new b("", r, " that "),
                new b(" ", p, ""),
                new b("", r, ". "),
                new b(".", r, ""),
                new b(" ", r, ", "),
                new b("", I, ""),
                new b("", r, " with "),
                new b("", r, "'"),
                new b("", r, " from "),
                new b("", r, " by "),
                new b("", E, ""),
                new b("", T, ""),
                new b(" the ", r, ""),
                new b("", l, ""),
                new b("", r, ". The "),
                new b("", e, ""),
                new b("", r, " on "),
                new b("", r, " as "),
                new b("", r, " is "),
                new b("", a, ""),
                new b("", n, "ing "),
                new b("", r, `
	`),
                new b("", r, ":"),
                new b(" ", r, ". "),
                new b("", r, "ed "),
                new b("", F, ""),
                new b("", A, ""),
                new b("", h, ""),
                new b("", r, "("),
                new b("", p, ", "),
                new b("", v, ""),
                new b("", r, " at "),
                new b("", r, "ly "),
                new b(" the ", r, " of "),
                new b("", u, ""),
                new b("", y, ""),
                new b(" ", p, ", "),
                new b("", p, '"'),
                new b(".", r, "("),
                new b("", e, " "),
                new b("", p, '">'),
                new b("", r, '="'),
                new b(" ", r, "."),
                new b(".com/", r, ""),
                new b(" the ", r, " of the "),
                new b("", p, "'"),
                new b("", r, ". This "),
                new b("", r, ","),
                new b(".", r, " "),
                new b("", p, "("),
                new b("", p, "."),
                new b("", r, " not "),
                new b(" ", r, '="'),
                new b("", r, "er "),
                new b(" ", e, " "),
                new b("", r, "al "),
                new b(" ", e, ""),
                new b("", r, "='"),
                new b("", e, '"'),
                new b("", p, ". "),
                new b(" ", r, "("),
                new b("", r, "ful "),
                new b(" ", p, ". "),
                new b("", r, "ive "),
                new b("", r, "less "),
                new b("", e, "'"),
                new b("", r, "est "),
                new b(" ", p, "."),
                new b("", e, '">'),
                new b(" ", r, "='"),
                new b("", p, ","),
                new b("", r, "ize "),
                new b("", e, "."),
                new b("ÃÂ ", r, ""),
                new b(" ", r, ","),
                new b("", p, '="'),
                new b("", e, '="'),
                new b("", r, "ous "),
                new b("", e, ", "),
                new b("", p, "='"),
                new b(" ", p, ","),
                new b(" ", e, '="'),
                new b(" ", e, ", "),
                new b("", e, ","),
                new b("", e, "("),
                new b("", e, ". "),
                new b(" ", e, "."),
                new b("", e, "='"),
                new b(" ", e, ". "),
                new b(" ", p, '="'),
                new b(" ", e, "='"),
                new b(" ", p, "='")
              ];
              d.kTransforms = R, d.kNumTransforms = R.length;
              function N(U, W) {
                return U[W] < 192 ? (U[W] >= 97 && U[W] <= 122 && (U[W] ^= 32), 1) : U[W] < 224 ? (U[W + 1] ^= 32, 2) : (U[W + 2] ^= 5, 3);
              }
              d.transformDictionaryWord = function(U, W, J, ht, K) {
                var nt = R[K].prefix, xt = R[K].suffix, bt = R[K].transform, Tt = bt < m ? 0 : bt - (m - 1), It = 0, Lt = W, Ut;
                Tt > ht && (Tt = ht);
                for (var $ = 0; $ < nt.length; )
                  U[W++] = nt[$++];
                for (J += Tt, ht -= Tt, bt <= y && (ht -= bt), It = 0; It < ht; It++)
                  U[W++] = o.dictionary[J + It];
                if (Ut = W - ht, bt === p)
                  N(U, Ut);
                else if (bt === e)
                  for (; ht > 0; ) {
                    var gt = N(U, Ut);
                    Ut += gt, ht -= gt;
                  }
                for (var ut = 0; ut < xt.length; )
                  U[W++] = xt[ut++];
                return W - Lt;
              };
            }
          ),
          /***/
          49435: (
            /***/
            function(c, d, t) {
              c.exports = t(17217).BrotliDecompressBuffer;
            }
          ),
          /***/
          30539: (
            /***/
            function(c, d, t) {
              var o = t(43060).Buffer, r = t(82530), n = t(76118), i = t(28755), f = t(24349), l = t(3386), u = t(40549);
              for (var h in u)
                d[h] = u[h];
              d.NONE = 0, d.DEFLATE = 1, d.INFLATE = 2, d.GZIP = 3, d.GUNZIP = 4, d.DEFLATERAW = 5, d.INFLATERAW = 6, d.UNZIP = 7;
              var a = 31, v = 139;
              function y(p) {
                if (typeof p != "number" || p < d.DEFLATE || p > d.UNZIP)
                  throw new TypeError("Bad argument");
                this.dictionary = null, this.err = 0, this.flush = 0, this.init_done = !1, this.level = 0, this.memLevel = 0, this.mode = p, this.strategy = 0, this.windowBits = 0, this.write_in_progress = !1, this.pending_close = !1, this.gzip_id_bytes_read = 0;
              }
              y.prototype.close = function() {
                if (this.write_in_progress) {
                  this.pending_close = !0;
                  return;
                }
                this.pending_close = !1, n(this.init_done, "close before init"), n(this.mode <= d.UNZIP), this.mode === d.DEFLATE || this.mode === d.GZIP || this.mode === d.DEFLATERAW ? f.deflateEnd(this.strm) : (this.mode === d.INFLATE || this.mode === d.GUNZIP || this.mode === d.INFLATERAW || this.mode === d.UNZIP) && l.inflateEnd(this.strm), this.mode = d.NONE, this.dictionary = null;
              }, y.prototype.write = function(p, e, m, w, D, I, E) {
                return this._write(!0, p, e, m, w, D, I, E);
              }, y.prototype.writeSync = function(p, e, m, w, D, I, E) {
                return this._write(!1, p, e, m, w, D, I, E);
              }, y.prototype._write = function(p, e, m, w, D, I, E, T) {
                if (n.equal(arguments.length, 8), n(this.init_done, "write before init"), n(this.mode !== d.NONE, "already finalized"), n.equal(!1, this.write_in_progress, "write already in progress"), n.equal(!1, this.pending_close, "close is pending"), this.write_in_progress = !0, n.equal(!1, e === void 0, "must provide flush value"), this.write_in_progress = !0, e !== d.Z_NO_FLUSH && e !== d.Z_PARTIAL_FLUSH && e !== d.Z_SYNC_FLUSH && e !== d.Z_FULL_FLUSH && e !== d.Z_FINISH && e !== d.Z_BLOCK)
                  throw new Error("Invalid flush value");
                if (m == null && (m = o.alloc(0), D = 0, w = 0), this.strm.avail_in = D, this.strm.input = m, this.strm.next_in = w, this.strm.avail_out = T, this.strm.output = I, this.strm.next_out = E, this.flush = e, !p)
                  return this._process(), this._checkError() ? this._afterSync() : void 0;
                var A = this;
                return r.nextTick(function() {
                  A._process(), A._after();
                }), this;
              }, y.prototype._afterSync = function() {
                var p = this.strm.avail_out, e = this.strm.avail_in;
                return this.write_in_progress = !1, [e, p];
              }, y.prototype._process = function() {
                var p = null;
                switch (this.mode) {
                  case d.DEFLATE:
                  case d.GZIP:
                  case d.DEFLATERAW:
                    this.err = f.deflate(this.strm, this.flush);
                    break;
                  case d.UNZIP:
                    switch (this.strm.avail_in > 0 && (p = this.strm.next_in), this.gzip_id_bytes_read) {
                      case 0:
                        if (p === null)
                          break;
                        if (this.strm.input[p] === a) {
                          if (this.gzip_id_bytes_read = 1, p++, this.strm.avail_in === 1)
                            break;
                        } else {
                          this.mode = d.INFLATE;
                          break;
                        }
                      case 1:
                        if (p === null)
                          break;
                        this.strm.input[p] === v ? (this.gzip_id_bytes_read = 2, this.mode = d.GUNZIP) : this.mode = d.INFLATE;
                        break;
                      default:
                        throw new Error("invalid number of gzip magic number bytes read");
                    }
                  case d.INFLATE:
                  case d.GUNZIP:
                  case d.INFLATERAW:
                    for (this.err = l.inflate(
                      this.strm,
                      this.flush
                      // If data was encoded with dictionary
                    ), this.err === d.Z_NEED_DICT && this.dictionary && (this.err = l.inflateSetDictionary(this.strm, this.dictionary), this.err === d.Z_OK ? this.err = l.inflate(this.strm, this.flush) : this.err === d.Z_DATA_ERROR && (this.err = d.Z_NEED_DICT)); this.strm.avail_in > 0 && this.mode === d.GUNZIP && this.err === d.Z_STREAM_END && this.strm.next_in[0] !== 0; )
                      this.reset(), this.err = l.inflate(this.strm, this.flush);
                    break;
                  default:
                    throw new Error("Unknown mode " + this.mode);
                }
              }, y.prototype._checkError = function() {
                switch (this.err) {
                  case d.Z_OK:
                  case d.Z_BUF_ERROR:
                    if (this.strm.avail_out !== 0 && this.flush === d.Z_FINISH)
                      return this._error("unexpected end of file"), !1;
                    break;
                  case d.Z_STREAM_END:
                    break;
                  case d.Z_NEED_DICT:
                    return this.dictionary == null ? this._error("Missing dictionary") : this._error("Bad dictionary"), !1;
                  default:
                    return this._error("Zlib error"), !1;
                }
                return !0;
              }, y.prototype._after = function() {
                if (this._checkError()) {
                  var p = this.strm.avail_out, e = this.strm.avail_in;
                  this.write_in_progress = !1, this.callback(e, p), this.pending_close && this.close();
                }
              }, y.prototype._error = function(p) {
                this.strm.msg && (p = this.strm.msg), this.onerror(
                  p,
                  this.err
                  // no hope of rescue.
                ), this.write_in_progress = !1, this.pending_close && this.close();
              }, y.prototype.init = function(p, e, m, w, D) {
                n(arguments.length === 4 || arguments.length === 5, "init(windowBits, level, memLevel, strategy, [dictionary])"), n(p >= 8 && p <= 15, "invalid windowBits"), n(e >= -1 && e <= 9, "invalid compression level"), n(m >= 1 && m <= 9, "invalid memlevel"), n(w === d.Z_FILTERED || w === d.Z_HUFFMAN_ONLY || w === d.Z_RLE || w === d.Z_FIXED || w === d.Z_DEFAULT_STRATEGY, "invalid strategy"), this._init(e, p, m, w, D), this._setDictionary();
              }, y.prototype.params = function() {
                throw new Error("deflateParams Not supported");
              }, y.prototype.reset = function() {
                this._reset(), this._setDictionary();
              }, y.prototype._init = function(p, e, m, w, D) {
                switch (this.level = p, this.windowBits = e, this.memLevel = m, this.strategy = w, this.flush = d.Z_NO_FLUSH, this.err = d.Z_OK, (this.mode === d.GZIP || this.mode === d.GUNZIP) && (this.windowBits += 16), this.mode === d.UNZIP && (this.windowBits += 32), (this.mode === d.DEFLATERAW || this.mode === d.INFLATERAW) && (this.windowBits = -1 * this.windowBits), this.strm = new i(), this.mode) {
                  case d.DEFLATE:
                  case d.GZIP:
                  case d.DEFLATERAW:
                    this.err = f.deflateInit2(this.strm, this.level, d.Z_DEFLATED, this.windowBits, this.memLevel, this.strategy);
                    break;
                  case d.INFLATE:
                  case d.GUNZIP:
                  case d.INFLATERAW:
                  case d.UNZIP:
                    this.err = l.inflateInit2(this.strm, this.windowBits);
                    break;
                  default:
                    throw new Error("Unknown mode " + this.mode);
                }
                this.err !== d.Z_OK && this._error("Init error"), this.dictionary = D, this.write_in_progress = !1, this.init_done = !0;
              }, y.prototype._setDictionary = function() {
                if (this.dictionary != null) {
                  switch (this.err = d.Z_OK, this.mode) {
                    case d.DEFLATE:
                    case d.DEFLATERAW:
                      this.err = f.deflateSetDictionary(this.strm, this.dictionary);
                      break;
                  }
                  this.err !== d.Z_OK && this._error("Failed to set dictionary");
                }
              }, y.prototype._reset = function() {
                switch (this.err = d.Z_OK, this.mode) {
                  case d.DEFLATE:
                  case d.DEFLATERAW:
                  case d.GZIP:
                    this.err = f.deflateReset(this.strm);
                    break;
                  case d.INFLATE:
                  case d.INFLATERAW:
                  case d.GUNZIP:
                    this.err = l.inflateReset(this.strm);
                    break;
                }
                this.err !== d.Z_OK && this._error("Failed to reset stream");
              }, d.Zlib = y;
            }
          ),
          /***/
          63339: (
            /***/
            function(c, d, t) {
              var o = t(82530), r = t(43060).Buffer, n = t(20202).Transform, i = t(30539), f = t(85663), l = t(76118).ok, u = t(43060).kMaxLength, h = "Cannot create final Buffer. It would be larger than 0x" + u.toString(16) + " bytes";
              i.Z_MIN_WINDOWBITS = 8, i.Z_MAX_WINDOWBITS = 15, i.Z_DEFAULT_WINDOWBITS = 15, i.Z_MIN_CHUNK = 64, i.Z_MAX_CHUNK = 1 / 0, i.Z_DEFAULT_CHUNK = 16384, i.Z_MIN_MEMLEVEL = 1, i.Z_MAX_MEMLEVEL = 9, i.Z_DEFAULT_MEMLEVEL = 8, i.Z_MIN_LEVEL = -1, i.Z_MAX_LEVEL = 9, i.Z_DEFAULT_LEVEL = i.Z_DEFAULT_COMPRESSION;
              for (var a = Object.keys(i), v = 0; v < a.length; v++) {
                var y = a[v];
                y.match(/^Z/) && Object.defineProperty(d, y, {
                  enumerable: !0,
                  value: i[y],
                  writable: !1
                });
              }
              for (var p = {
                Z_OK: i.Z_OK,
                Z_STREAM_END: i.Z_STREAM_END,
                Z_NEED_DICT: i.Z_NEED_DICT,
                Z_ERRNO: i.Z_ERRNO,
                Z_STREAM_ERROR: i.Z_STREAM_ERROR,
                Z_DATA_ERROR: i.Z_DATA_ERROR,
                Z_MEM_ERROR: i.Z_MEM_ERROR,
                Z_BUF_ERROR: i.Z_BUF_ERROR,
                Z_VERSION_ERROR: i.Z_VERSION_ERROR
              }, e = Object.keys(p), m = 0; m < e.length; m++) {
                var w = e[m];
                p[p[w]] = w;
              }
              Object.defineProperty(d, "codes", {
                enumerable: !0,
                value: Object.freeze(p),
                writable: !1
              }), d.Deflate = E, d.Inflate = T, d.Gzip = A, d.Gunzip = F, d.DeflateRaw = b, d.InflateRaw = R, d.Unzip = N, d.createDeflate = function(K) {
                return new E(K);
              }, d.createInflate = function(K) {
                return new T(K);
              }, d.createDeflateRaw = function(K) {
                return new b(K);
              }, d.createInflateRaw = function(K) {
                return new R(K);
              }, d.createGzip = function(K) {
                return new A(K);
              }, d.createGunzip = function(K) {
                return new F(K);
              }, d.createUnzip = function(K) {
                return new N(K);
              }, d.deflate = function(K, nt, xt) {
                return typeof nt == "function" && (xt = nt, nt = {}), D(new E(nt), K, xt);
              }, d.deflateSync = function(K, nt) {
                return I(new E(nt), K);
              }, d.gzip = function(K, nt, xt) {
                return typeof nt == "function" && (xt = nt, nt = {}), D(new A(nt), K, xt);
              }, d.gzipSync = function(K, nt) {
                return I(new A(nt), K);
              }, d.deflateRaw = function(K, nt, xt) {
                return typeof nt == "function" && (xt = nt, nt = {}), D(new b(nt), K, xt);
              }, d.deflateRawSync = function(K, nt) {
                return I(new b(nt), K);
              }, d.unzip = function(K, nt, xt) {
                return typeof nt == "function" && (xt = nt, nt = {}), D(new N(nt), K, xt);
              }, d.unzipSync = function(K, nt) {
                return I(new N(nt), K);
              }, d.inflate = function(K, nt, xt) {
                return typeof nt == "function" && (xt = nt, nt = {}), D(new T(nt), K, xt);
              }, d.inflateSync = function(K, nt) {
                return I(new T(nt), K);
              }, d.gunzip = function(K, nt, xt) {
                return typeof nt == "function" && (xt = nt, nt = {}), D(new F(nt), K, xt);
              }, d.gunzipSync = function(K, nt) {
                return I(new F(nt), K);
              }, d.inflateRaw = function(K, nt, xt) {
                return typeof nt == "function" && (xt = nt, nt = {}), D(new R(nt), K, xt);
              }, d.inflateRawSync = function(K, nt) {
                return I(new R(nt), K);
              };
              function D(K, nt, xt) {
                var bt = [], Tt = 0;
                K.on("error", Lt), K.on("end", Ut), K.end(nt), It();
                function It() {
                  for (var $; ($ = K.read()) !== null; )
                    bt.push($), Tt += $.length;
                  K.once("readable", It);
                }
                function Lt($) {
                  K.removeListener("end", Ut), K.removeListener("readable", It), xt($);
                }
                function Ut() {
                  var $, gt = null;
                  Tt >= u ? gt = new RangeError(h) : $ = r.concat(bt, Tt), bt = [], K.close(), xt(gt, $);
                }
              }
              function I(K, nt) {
                if (typeof nt == "string" && (nt = r.from(nt)), !r.isBuffer(nt))
                  throw new TypeError("Not a string or buffer");
                var xt = K._finishFlushFlag;
                return K._processChunk(nt, xt);
              }
              function E(K) {
                if (!(this instanceof E))
                  return new E(K);
                W.call(this, K, i.DEFLATE);
              }
              function T(K) {
                if (!(this instanceof T))
                  return new T(K);
                W.call(this, K, i.INFLATE);
              }
              function A(K) {
                if (!(this instanceof A))
                  return new A(K);
                W.call(this, K, i.GZIP);
              }
              function F(K) {
                if (!(this instanceof F))
                  return new F(K);
                W.call(this, K, i.GUNZIP);
              }
              function b(K) {
                if (!(this instanceof b))
                  return new b(K);
                W.call(this, K, i.DEFLATERAW);
              }
              function R(K) {
                if (!(this instanceof R))
                  return new R(K);
                W.call(this, K, i.INFLATERAW);
              }
              function N(K) {
                if (!(this instanceof N))
                  return new N(K);
                W.call(this, K, i.UNZIP);
              }
              function U(K) {
                return K === i.Z_NO_FLUSH || K === i.Z_PARTIAL_FLUSH || K === i.Z_SYNC_FLUSH || K === i.Z_FULL_FLUSH || K === i.Z_FINISH || K === i.Z_BLOCK;
              }
              function W(K, nt) {
                var xt = this;
                if (this._opts = K = K || {}, this._chunkSize = K.chunkSize || d.Z_DEFAULT_CHUNK, n.call(this, K), K.flush && !U(K.flush))
                  throw new Error("Invalid flush flag: " + K.flush);
                if (K.finishFlush && !U(K.finishFlush))
                  throw new Error("Invalid flush flag: " + K.finishFlush);
                if (this._flushFlag = K.flush || i.Z_NO_FLUSH, this._finishFlushFlag = typeof K.finishFlush < "u" ? K.finishFlush : i.Z_FINISH, K.chunkSize && (K.chunkSize < d.Z_MIN_CHUNK || K.chunkSize > d.Z_MAX_CHUNK))
                  throw new Error("Invalid chunk size: " + K.chunkSize);
                if (K.windowBits && (K.windowBits < d.Z_MIN_WINDOWBITS || K.windowBits > d.Z_MAX_WINDOWBITS))
                  throw new Error("Invalid windowBits: " + K.windowBits);
                if (K.level && (K.level < d.Z_MIN_LEVEL || K.level > d.Z_MAX_LEVEL))
                  throw new Error("Invalid compression level: " + K.level);
                if (K.memLevel && (K.memLevel < d.Z_MIN_MEMLEVEL || K.memLevel > d.Z_MAX_MEMLEVEL))
                  throw new Error("Invalid memLevel: " + K.memLevel);
                if (K.strategy && K.strategy != d.Z_FILTERED && K.strategy != d.Z_HUFFMAN_ONLY && K.strategy != d.Z_RLE && K.strategy != d.Z_FIXED && K.strategy != d.Z_DEFAULT_STRATEGY)
                  throw new Error("Invalid strategy: " + K.strategy);
                if (K.dictionary && !r.isBuffer(K.dictionary))
                  throw new Error("Invalid dictionary: it should be a Buffer instance");
                this._handle = new i.Zlib(nt);
                var bt = this;
                this._hadError = !1, this._handle.onerror = function(Lt, Ut) {
                  J(bt), bt._hadError = !0;
                  var $ = new Error(Lt);
                  $.errno = Ut, $.code = d.codes[Ut], bt.emit("error", $);
                };
                var Tt = d.Z_DEFAULT_COMPRESSION;
                typeof K.level == "number" && (Tt = K.level);
                var It = d.Z_DEFAULT_STRATEGY;
                typeof K.strategy == "number" && (It = K.strategy), this._handle.init(K.windowBits || d.Z_DEFAULT_WINDOWBITS, Tt, K.memLevel || d.Z_DEFAULT_MEMLEVEL, It, K.dictionary), this._buffer = r.allocUnsafe(this._chunkSize), this._offset = 0, this._level = Tt, this._strategy = It, this.once("end", this.close), Object.defineProperty(this, "_closed", {
                  get: function() {
                    return !xt._handle;
                  },
                  configurable: !0,
                  enumerable: !0
                });
              }
              f.inherits(W, n), W.prototype.params = function(K, nt, xt) {
                if (K < d.Z_MIN_LEVEL || K > d.Z_MAX_LEVEL)
                  throw new RangeError("Invalid compression level: " + K);
                if (nt != d.Z_FILTERED && nt != d.Z_HUFFMAN_ONLY && nt != d.Z_RLE && nt != d.Z_FIXED && nt != d.Z_DEFAULT_STRATEGY)
                  throw new TypeError("Invalid strategy: " + nt);
                if (this._level !== K || this._strategy !== nt) {
                  var bt = this;
                  this.flush(i.Z_SYNC_FLUSH, function() {
                    l(bt._handle, "zlib binding closed"), bt._handle.params(K, nt), bt._hadError || (bt._level = K, bt._strategy = nt, xt && xt());
                  });
                } else
                  o.nextTick(xt);
              }, W.prototype.reset = function() {
                return l(this._handle, "zlib binding closed"), this._handle.reset();
              }, W.prototype._flush = function(K) {
                this._transform(r.alloc(0), "", K);
              }, W.prototype.flush = function(K, nt) {
                var xt = this, bt = this._writableState;
                (typeof K == "function" || K === void 0 && !nt) && (nt = K, K = i.Z_FULL_FLUSH), bt.ended ? nt && o.nextTick(nt) : bt.ending ? nt && this.once("end", nt) : bt.needDrain ? nt && this.once("drain", function() {
                  return xt.flush(K, nt);
                }) : (this._flushFlag = K, this.write(r.alloc(0), "", nt));
              }, W.prototype.close = function(K) {
                J(this, K), o.nextTick(ht, this);
              };
              function J(K, nt) {
                nt && o.nextTick(nt), K._handle && (K._handle.close(), K._handle = null);
              }
              function ht(K) {
                K.emit("close");
              }
              W.prototype._transform = function(K, nt, xt) {
                var bt, Tt = this._writableState, It = Tt.ending || Tt.ended, Lt = It && (!K || Tt.length === K.length);
                if (K !== null && !r.isBuffer(K))
                  return xt(new Error("invalid input"));
                if (!this._handle)
                  return xt(new Error("zlib binding closed"));
                Lt ? bt = this._finishFlushFlag : (bt = this._flushFlag, K.length >= Tt.length && (this._flushFlag = this._opts.flush || i.Z_NO_FLUSH)), this._processChunk(K, bt, xt);
              }, W.prototype._processChunk = function(K, nt, xt) {
                var bt = K && K.length, Tt = this._chunkSize - this._offset, It = 0, Lt = this, Ut = typeof xt == "function";
                if (!Ut) {
                  var $ = [], gt = 0, ut;
                  this.on("error", function(k) {
                    ut = k;
                  }), l(this._handle, "zlib binding closed");
                  do
                    var st = this._handle.writeSync(
                      nt,
                      K,
                      // in
                      It,
                      // in_off
                      bt,
                      // in_len
                      this._buffer,
                      // out
                      this._offset,
                      //out_off
                      Tt
                    );
                  while (!this._hadError && Et(st[0], st[1]));
                  if (this._hadError)
                    throw ut;
                  if (gt >= u)
                    throw J(this), new RangeError(h);
                  var yt = r.concat($, gt);
                  return J(this), yt;
                }
                l(this._handle, "zlib binding closed");
                var G = this._handle.write(
                  nt,
                  K,
                  // in
                  It,
                  // in_off
                  bt,
                  // in_len
                  this._buffer,
                  // out
                  this._offset,
                  //out_off
                  Tt
                );
                G.buffer = K, G.callback = Et;
                function Et(k, S) {
                  if (this && (this.buffer = null, this.callback = null), !Lt._hadError) {
                    var L = Tt - S;
                    if (l(L >= 0, "have should not go down"), L > 0) {
                      var V = Lt._buffer.slice(Lt._offset, Lt._offset + L);
                      Lt._offset += L, Ut ? Lt.push(V) : ($.push(V), gt += V.length);
                    }
                    if ((S === 0 || Lt._offset >= Lt._chunkSize) && (Tt = Lt._chunkSize, Lt._offset = 0, Lt._buffer = r.allocUnsafe(Lt._chunkSize)), S === 0) {
                      if (It += bt - k, bt = k, !Ut)
                        return !0;
                      var it = Lt._handle.write(nt, K, It, bt, Lt._buffer, Lt._offset, Lt._chunkSize);
                      it.callback = Et, it.buffer = K;
                      return;
                    }
                    if (!Ut)
                      return !1;
                    xt();
                  }
                }
              }, f.inherits(E, W), f.inherits(T, W), f.inherits(A, W), f.inherits(F, W), f.inherits(b, W), f.inherits(R, W), f.inherits(N, W);
            }
          ),
          /***/
          97615: (
            /***/
            function(c, d, t) {
              var o = t(31801), r = t(12550), n = r(o("String.prototype.indexOf"));
              c.exports = function(f, l) {
                var u = o(f, !!l);
                return typeof u == "function" && n(f, ".prototype.") > -1 ? r(u) : u;
              };
            }
          ),
          /***/
          12550: (
            /***/
            function(c, d, t) {
              var o = t(21930), r = t(31801), n = t(34521), i = r("%TypeError%"), f = r("%Function.prototype.apply%"), l = r("%Function.prototype.call%"), u = r("%Reflect.apply%", !0) || o.call(l, f), h = r("%Object.defineProperty%", !0), a = r("%Math.max%");
              if (h)
                try {
                  h({}, "a", { value: 1 });
                } catch {
                  h = null;
                }
              c.exports = function(p) {
                if (typeof p != "function")
                  throw new i("a function is required");
                var e = u(o, l, arguments);
                return n(
                  e,
                  1 + a(0, p.length - (arguments.length - 1)),
                  !0
                );
              };
              var v = function() {
                return u(o, f, arguments);
              };
              h ? h(c.exports, "apply", { value: v }) : c.exports.apply = v;
            }
          ),
          /***/
          72986: (
            /***/
            function(c, d, t) {
              var o = t(43060).Buffer, r = function() {
                function n(a, v, y, p) {
                  typeof v == "object" && (y = v.depth, p = v.prototype, v.filter, v = v.circular);
                  var e = [], m = [], w = typeof o < "u";
                  typeof v > "u" && (v = !0), typeof y > "u" && (y = 1 / 0);
                  function D(I, E) {
                    if (I === null)
                      return null;
                    if (E == 0)
                      return I;
                    var T, A;
                    if (typeof I != "object")
                      return I;
                    if (n.__isArray(I))
                      T = [];
                    else if (n.__isRegExp(I))
                      T = new RegExp(I.source, h(I)), I.lastIndex && (T.lastIndex = I.lastIndex);
                    else if (n.__isDate(I))
                      T = new Date(I.getTime());
                    else {
                      if (w && o.isBuffer(I))
                        return o.allocUnsafe ? T = o.allocUnsafe(I.length) : T = new o(I.length), I.copy(T), T;
                      typeof p > "u" ? (A = Object.getPrototypeOf(I), T = Object.create(A)) : (T = Object.create(p), A = p);
                    }
                    if (v) {
                      var F = e.indexOf(I);
                      if (F != -1)
                        return m[F];
                      e.push(I), m.push(T);
                    }
                    for (var b in I) {
                      var R;
                      A && (R = Object.getOwnPropertyDescriptor(A, b)), !(R && R.set == null) && (T[b] = D(I[b], E - 1));
                    }
                    return T;
                  }
                  return D(a, y);
                }
                n.clonePrototype = function(v) {
                  if (v === null)
                    return null;
                  var y = function() {
                  };
                  return y.prototype = v, new y();
                };
                function i(a) {
                  return Object.prototype.toString.call(a);
                }
                n.__objToStr = i;
                function f(a) {
                  return typeof a == "object" && i(a) === "[object Date]";
                }
                n.__isDate = f;
                function l(a) {
                  return typeof a == "object" && i(a) === "[object Array]";
                }
                n.__isArray = l;
                function u(a) {
                  return typeof a == "object" && i(a) === "[object RegExp]";
                }
                n.__isRegExp = u;
                function h(a) {
                  var v = "";
                  return a.global && (v += "g"), a.ignoreCase && (v += "i"), a.multiline && (v += "m"), v;
                }
                return n.__getRegExpFlags = h, n;
              }();
              c.exports && (c.exports = r);
            }
          ),
          /***/
          67367: (
            /***/
            function(c, d, t) {
              t(19457);
              var o = t(67290);
              c.exports = o.Object.values;
            }
          ),
          /***/
          55047: (
            /***/
            function(c, d, t) {
              t(55739), t(54883), t(10853), t(35054), t(12382), t(487), t(27138), t(45007);
              var o = t(67290);
              c.exports = o.Promise;
            }
          ),
          /***/
          46121: (
            /***/
            function(c, d, t) {
              var o = t(80623);
              t(85506), t(38634), t(8108), t(67298), c.exports = o;
            }
          ),
          /***/
          97676: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(75277), n = t(28768), i = o.TypeError;
              c.exports = function(f) {
                if (r(f))
                  return f;
                throw i(n(f) + " is not a function");
              };
            }
          ),
          /***/
          43327: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(31536), n = t(28768), i = o.TypeError;
              c.exports = function(f) {
                if (r(f))
                  return f;
                throw i(n(f) + " is not a constructor");
              };
            }
          ),
          /***/
          75017: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(75277), n = o.String, i = o.TypeError;
              c.exports = function(f) {
                if (typeof f == "object" || r(f))
                  return f;
                throw i("Can't set " + n(f) + " as a prototype");
              };
            }
          ),
          /***/
          6677: (
            /***/
            function(c, d, t) {
              var o = t(52280), r = t(51569), n = t(86385), i = o("unscopables"), f = Array.prototype;
              f[i] == null && n.f(f, i, {
                configurable: !0,
                value: r(null)
              }), c.exports = function(l) {
                f[i][l] = !0;
              };
            }
          ),
          /***/
          13350: (
            /***/
            function(c, d, t) {
              var o = t(91140).charAt;
              c.exports = function(r, n, i) {
                return n + (i ? o(r, n).length : 1);
              };
            }
          ),
          /***/
          9519: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(32010), n = o.TypeError;
              c.exports = function(i, f) {
                if (r(f, i))
                  return i;
                throw n("Incorrect invocation");
              };
            }
          ),
          /***/
          83875: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(52786), n = o.String, i = o.TypeError;
              c.exports = function(f) {
                if (r(f))
                  return f;
                throw i(n(f) + " is not an object");
              };
            }
          ),
          /***/
          28794: (
            /***/
            function(c, d, t) {
              var o = t(30744), r = t(32565), n = t(47046), i = Math.min;
              c.exports = [].copyWithin || function(l, u) {
                var h = o(this), a = n(h), v = r(l, a), y = r(u, a), p = arguments.length > 2 ? arguments[2] : void 0, e = i((p === void 0 ? a : r(p, a)) - y, a - v), m = 1;
                for (y < v && v < y + e && (m = -1, y += e - 1, v += e - 1); e-- > 0; )
                  y in h ? h[v] = h[y] : delete h[v], v += m, y += m;
                return h;
              };
            }
          ),
          /***/
          55522: (
            /***/
            function(c, d, t) {
              var o = t(30744), r = t(32565), n = t(47046);
              c.exports = function(f) {
                for (var l = o(this), u = n(l), h = arguments.length, a = r(h > 1 ? arguments[1] : void 0, u), v = h > 2 ? arguments[2] : void 0, y = v === void 0 ? u : r(v, u); y > a; )
                  l[a++] = f;
                return l;
              };
            }
          ),
          /***/
          20379: (
            /***/
            function(c, d, t) {
              var o = t(68671).forEach, r = t(54324), n = r("forEach");
              c.exports = n ? [].forEach : function(f) {
                return o(this, f, arguments.length > 1 ? arguments[1] : void 0);
              };
            }
          ),
          /***/
          65626: (
            /***/
            function(c) {
              c.exports = function(d, t) {
                for (var o = 0, r = t.length, n = new d(r); r > o; )
                  n[o] = t[o++];
                return n;
              };
            }
          ),
          /***/
          84899: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(98166), n = t(79611), i = t(30744), f = t(9637), l = t(68089), u = t(31536), h = t(47046), a = t(35039), v = t(11805), y = t(77193), p = o.Array;
              c.exports = function(m) {
                var w = i(m), D = u(this), I = arguments.length, E = I > 1 ? arguments[1] : void 0, T = E !== void 0;
                T && (E = r(E, I > 2 ? arguments[2] : void 0));
                var A = y(w), F = 0, b, R, N, U, W, J;
                if (A && !(this == p && l(A)))
                  for (U = v(w, A), W = U.next, R = D ? new this() : []; !(N = n(W, U)).done; F++)
                    J = T ? f(U, E, [N.value, F], !0) : N.value, a(R, F, J);
                else
                  for (b = h(w), R = D ? new this(b) : p(b); b > F; F++)
                    J = T ? E(w[F], F) : w[F], a(R, F, J);
                return R.length = F, R;
              };
            }
          ),
          /***/
          37190: (
            /***/
            function(c, d, t) {
              var o = t(29580), r = t(32565), n = t(47046), i = function(f) {
                return function(l, u, h) {
                  var a = o(l), v = n(a), y = r(h, v), p;
                  if (f && u != u) {
                    for (; v > y; )
                      if (p = a[y++], p != p)
                        return !0;
                  } else
                    for (; v > y; y++)
                      if ((f || y in a) && a[y] === u)
                        return f || y || 0;
                  return !f && -1;
                };
              };
              c.exports = {
                // `Array.prototype.includes` method
                // https://tc39.es/ecma262/#sec-array.prototype.includes
                includes: i(!0),
                // `Array.prototype.indexOf` method
                // https://tc39.es/ecma262/#sec-array.prototype.indexof
                indexOf: i(!1)
              };
            }
          ),
          /***/
          68671: (
            /***/
            function(c, d, t) {
              var o = t(98166), r = t(88697), n = t(78609), i = t(30744), f = t(47046), l = t(80150), u = r([].push), h = function(a) {
                var v = a == 1, y = a == 2, p = a == 3, e = a == 4, m = a == 6, w = a == 7, D = a == 5 || m;
                return function(I, E, T, A) {
                  for (var F = i(I), b = n(F), R = o(E, T), N = f(b), U = 0, W = A || l, J = v ? W(I, N) : y || w ? W(I, 0) : void 0, ht, K; N > U; U++)
                    if ((D || U in b) && (ht = b[U], K = R(ht, U, F), a))
                      if (v)
                        J[U] = K;
                      else if (K)
                        switch (a) {
                          case 3:
                            return !0;
                          case 5:
                            return ht;
                          case 6:
                            return U;
                          case 2:
                            u(J, ht);
                        }
                      else
                        switch (a) {
                          case 4:
                            return !1;
                          case 7:
                            u(J, ht);
                        }
                  return m ? -1 : p || e ? e : J;
                };
              };
              c.exports = {
                // `Array.prototype.forEach` method
                // https://tc39.es/ecma262/#sec-array.prototype.foreach
                forEach: h(0),
                // `Array.prototype.map` method
                // https://tc39.es/ecma262/#sec-array.prototype.map
                map: h(1),
                // `Array.prototype.filter` method
                // https://tc39.es/ecma262/#sec-array.prototype.filter
                filter: h(2),
                // `Array.prototype.some` method
                // https://tc39.es/ecma262/#sec-array.prototype.some
                some: h(3),
                // `Array.prototype.every` method
                // https://tc39.es/ecma262/#sec-array.prototype.every
                every: h(4),
                // `Array.prototype.find` method
                // https://tc39.es/ecma262/#sec-array.prototype.find
                find: h(5),
                // `Array.prototype.findIndex` method
                // https://tc39.es/ecma262/#sec-array.prototype.findIndex
                findIndex: h(6),
                // `Array.prototype.filterReject` method
                // https://github.com/tc39/proposal-array-filtering
                filterReject: h(7)
              };
            }
          ),
          /***/
          27837: (
            /***/
            function(c, d, t) {
              var o = t(63530), r = t(29580), n = t(14229), i = t(47046), f = t(54324), l = Math.min, u = [].lastIndexOf, h = !!u && 1 / [1].lastIndexOf(1, -0) < 0, a = f("lastIndexOf"), v = h || !a;
              c.exports = v ? function(p) {
                if (h)
                  return o(u, this, arguments) || 0;
                var e = r(this), m = i(e), w = m - 1;
                for (arguments.length > 1 && (w = l(w, n(arguments[1]))), w < 0 && (w = m + w); w >= 0; w--)
                  if (w in e && e[w] === p)
                    return w || 0;
                return -1;
              } : u;
            }
          ),
          /***/
          82091: (
            /***/
            function(c, d, t) {
              var o = t(79044), r = t(52280), n = t(11197), i = r("species");
              c.exports = function(f) {
                return n >= 51 || !o(function() {
                  var l = [], u = l.constructor = {};
                  return u[i] = function() {
                    return { foo: 1 };
                  }, l[f](Boolean).foo !== 1;
                });
              };
            }
          ),
          /***/
          54324: (
            /***/
            function(c, d, t) {
              var o = t(79044);
              c.exports = function(r, n) {
                var i = [][r];
                return !!i && o(function() {
                  i.call(null, n || function() {
                    throw 1;
                  }, 1);
                });
              };
            }
          ),
          /***/
          86596: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(97676), n = t(30744), i = t(78609), f = t(47046), l = o.TypeError, u = function(h) {
                return function(a, v, y, p) {
                  r(v);
                  var e = n(a), m = i(e), w = f(e), D = h ? w - 1 : 0, I = h ? -1 : 1;
                  if (y < 2)
                    for (; ; ) {
                      if (D in m) {
                        p = m[D], D += I;
                        break;
                      }
                      if (D += I, h ? D < 0 : w <= D)
                        throw l("Reduce of empty array with no initial value");
                    }
                  for (; h ? D >= 0 : w > D; D += I)
                    D in m && (p = v(p, m[D], D, e));
                  return p;
                };
              };
              c.exports = {
                // `Array.prototype.reduce` method
                // https://tc39.es/ecma262/#sec-array.prototype.reduce
                left: u(!1),
                // `Array.prototype.reduceRight` method
                // https://tc39.es/ecma262/#sec-array.prototype.reduceright
                right: u(!0)
              };
            }
          ),
          /***/
          15629: (
            /***/
            function(c, d, t) {
              var o = t(88697);
              c.exports = o([].slice);
            }
          ),
          /***/
          2013: (
            /***/
            function(c, d, t) {
              var o = t(15629), r = Math.floor, n = function(l, u) {
                var h = l.length, a = r(h / 2);
                return h < 8 ? i(l, u) : f(
                  l,
                  n(o(l, 0, a), u),
                  n(o(l, a), u),
                  u
                );
              }, i = function(l, u) {
                for (var h = l.length, a = 1, v, y; a < h; ) {
                  for (y = a, v = l[a]; y && u(l[y - 1], v) > 0; )
                    l[y] = l[--y];
                  y !== a++ && (l[y] = v);
                }
                return l;
              }, f = function(l, u, h, a) {
                for (var v = u.length, y = h.length, p = 0, e = 0; p < v || e < y; )
                  l[p + e] = p < v && e < y ? a(u[p], h[e]) <= 0 ? u[p++] : h[e++] : p < v ? u[p++] : h[e++];
                return l;
              };
              c.exports = n;
            }
          ),
          /***/
          30765: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(71982), n = t(31536), i = t(52786), f = t(52280), l = f("species"), u = o.Array;
              c.exports = function(h) {
                var a;
                return r(h) && (a = h.constructor, n(a) && (a === u || r(a.prototype)) ? a = void 0 : i(a) && (a = a[l], a === null && (a = void 0))), a === void 0 ? u : a;
              };
            }
          ),
          /***/
          80150: (
            /***/
            function(c, d, t) {
              var o = t(30765);
              c.exports = function(r, n) {
                return new (o(r))(n === 0 ? 0 : n);
              };
            }
          ),
          /***/
          9637: (
            /***/
            function(c, d, t) {
              var o = t(83875), r = t(18744);
              c.exports = function(n, i, f, l) {
                try {
                  return l ? i(o(f)[0], f[1]) : i(f);
                } catch (u) {
                  r(n, "throw", u);
                }
              };
            }
          ),
          /***/
          8662: (
            /***/
            function(c, d, t) {
              var o = t(52280), r = o("iterator"), n = !1;
              try {
                var i = 0, f = {
                  next: function() {
                    return { done: !!i++ };
                  },
                  return: function() {
                    n = !0;
                  }
                };
                f[r] = function() {
                  return this;
                }, Array.from(f, function() {
                  throw 2;
                });
              } catch {
              }
              c.exports = function(l, u) {
                if (!u && !n)
                  return !1;
                var h = !1;
                try {
                  var a = {};
                  a[r] = function() {
                    return {
                      next: function() {
                        return { done: h = !0 };
                      }
                    };
                  }, l(a);
                } catch {
                }
                return h;
              };
            }
          ),
          /***/
          79159: (
            /***/
            function(c, d, t) {
              var o = t(88697), r = o({}.toString), n = o("".slice);
              c.exports = function(i) {
                return n(r(i), 8, -1);
              };
            }
          ),
          /***/
          36994: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(57301), n = t(75277), i = t(79159), f = t(52280), l = f("toStringTag"), u = o.Object, h = i(function() {
                return arguments;
              }()) == "Arguments", a = function(v, y) {
                try {
                  return v[y];
                } catch {
                }
              };
              c.exports = r ? i : function(v) {
                var y, p, e;
                return v === void 0 ? "Undefined" : v === null ? "Null" : typeof (p = a(y = u(v), l)) == "string" ? p : h ? i(y) : (e = i(y)) == "Object" && n(y.callee) ? "Arguments" : e;
              };
            }
          ),
          /***/
          8457: (
            /***/
            function(c, d, t) {
              var o = t(88697), r = t(15629), n = o("".replace), i = o("".split), f = o([].join), l = function(v) {
                return String(Error(v).stack);
              }("zxcasd"), u = /\n\s*at [^:]*:[^\n]*/, h = u.test(l), a = /@[^\n]*\n/.test(l) && !/zxcasd/.test(l);
              c.exports = function(v, y) {
                if (typeof v != "string")
                  return v;
                if (h)
                  for (; y--; )
                    v = n(v, u, "");
                else if (a)
                  return f(r(i(v, `
`), y), `
`);
                return v;
              };
            }
          ),
          /***/
          33513: (
            /***/
            function(c, d, t) {
              var o = t(86385).f, r = t(51569), n = t(7592), i = t(98166), f = t(9519), l = t(5166), u = t(61495), h = t(57323), a = t(7493), v = t(44296).fastKey, y = t(20821), p = y.set, e = y.getterFor;
              c.exports = {
                getConstructor: function(m, w, D, I) {
                  var E = m(function(R, N) {
                    f(R, T), p(R, {
                      type: w,
                      index: r(null),
                      first: void 0,
                      last: void 0,
                      size: 0
                    }), a || (R.size = 0), N != null && l(N, R[I], { that: R, AS_ENTRIES: D });
                  }), T = E.prototype, A = e(w), F = function(R, N, U) {
                    var W = A(R), J = b(R, N), ht, K;
                    return J ? J.value = U : (W.last = J = {
                      index: K = v(N, !0),
                      key: N,
                      value: U,
                      previous: ht = W.last,
                      next: void 0,
                      removed: !1
                    }, W.first || (W.first = J), ht && (ht.next = J), a ? W.size++ : R.size++, K !== "F" && (W.index[K] = J)), R;
                  }, b = function(R, N) {
                    var U = A(R), W = v(N), J;
                    if (W !== "F")
                      return U.index[W];
                    for (J = U.first; J; J = J.next)
                      if (J.key == N)
                        return J;
                  };
                  return n(T, {
                    // `{ Map, Set }.prototype.clear()` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.clear
                    // https://tc39.es/ecma262/#sec-set.prototype.clear
                    clear: function() {
                      for (var N = this, U = A(N), W = U.index, J = U.first; J; )
                        J.removed = !0, J.previous && (J.previous = J.previous.next = void 0), delete W[J.index], J = J.next;
                      U.first = U.last = void 0, a ? U.size = 0 : N.size = 0;
                    },
                    // `{ Map, Set }.prototype.delete(key)` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.delete
                    // https://tc39.es/ecma262/#sec-set.prototype.delete
                    delete: function(R) {
                      var N = this, U = A(N), W = b(N, R);
                      if (W) {
                        var J = W.next, ht = W.previous;
                        delete U.index[W.index], W.removed = !0, ht && (ht.next = J), J && (J.previous = ht), U.first == W && (U.first = J), U.last == W && (U.last = ht), a ? U.size-- : N.size--;
                      }
                      return !!W;
                    },
                    // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.foreach
                    // https://tc39.es/ecma262/#sec-set.prototype.foreach
                    forEach: function(N) {
                      for (var U = A(this), W = i(N, arguments.length > 1 ? arguments[1] : void 0), J; J = J ? J.next : U.first; )
                        for (W(J.value, J.key, this); J && J.removed; )
                          J = J.previous;
                    },
                    // `{ Map, Set}.prototype.has(key)` methods
                    // https://tc39.es/ecma262/#sec-map.prototype.has
                    // https://tc39.es/ecma262/#sec-set.prototype.has
                    has: function(N) {
                      return !!b(this, N);
                    }
                  }), n(T, D ? {
                    // `Map.prototype.get(key)` method
                    // https://tc39.es/ecma262/#sec-map.prototype.get
                    get: function(N) {
                      var U = b(this, N);
                      return U && U.value;
                    },
                    // `Map.prototype.set(key, value)` method
                    // https://tc39.es/ecma262/#sec-map.prototype.set
                    set: function(N, U) {
                      return F(this, N === 0 ? 0 : N, U);
                    }
                  } : {
                    // `Set.prototype.add(value)` method
                    // https://tc39.es/ecma262/#sec-set.prototype.add
                    add: function(N) {
                      return F(this, N = N === 0 ? 0 : N, N);
                    }
                  }), a && o(T, "size", {
                    get: function() {
                      return A(this).size;
                    }
                  }), E;
                },
                setStrong: function(m, w, D) {
                  var I = w + " Iterator", E = e(w), T = e(I);
                  u(m, w, function(A, F) {
                    p(this, {
                      type: I,
                      target: A,
                      state: E(A),
                      kind: F,
                      last: void 0
                    });
                  }, function() {
                    for (var A = T(this), F = A.kind, b = A.last; b && b.removed; )
                      b = b.previous;
                    return !A.target || !(A.last = b = b ? b.next : A.state.first) ? (A.target = void 0, { value: void 0, done: !0 }) : F == "keys" ? { value: b.key, done: !1 } : F == "values" ? { value: b.value, done: !1 } : { value: [b.key, b.value], done: !1 };
                  }, D ? "entries" : "values", !D, !0), h(w);
                }
              };
            }
          ),
          /***/
          9121: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(98363), n = t(88697), i = t(86291), f = t(35974), l = t(44296), u = t(5166), h = t(9519), a = t(75277), v = t(52786), y = t(79044), p = t(8662), e = t(60878), m = t(59250);
              c.exports = function(w, D, I) {
                var E = w.indexOf("Map") !== -1, T = w.indexOf("Weak") !== -1, A = E ? "set" : "add", F = r[w], b = F && F.prototype, R = F, N = {}, U = function(bt) {
                  var Tt = n(b[bt]);
                  f(
                    b,
                    bt,
                    bt == "add" ? function(Lt) {
                      return Tt(this, Lt === 0 ? 0 : Lt), this;
                    } : bt == "delete" ? function(It) {
                      return T && !v(It) ? !1 : Tt(this, It === 0 ? 0 : It);
                    } : bt == "get" ? function(Lt) {
                      return T && !v(Lt) ? void 0 : Tt(this, Lt === 0 ? 0 : Lt);
                    } : bt == "has" ? function(Lt) {
                      return T && !v(Lt) ? !1 : Tt(this, Lt === 0 ? 0 : Lt);
                    } : function(Lt, Ut) {
                      return Tt(this, Lt === 0 ? 0 : Lt, Ut), this;
                    }
                  );
                }, W = i(
                  w,
                  !a(F) || !(T || b.forEach && !y(function() {
                    new F().entries().next();
                  }))
                );
                if (W)
                  R = I.getConstructor(D, w, E, A), l.enable();
                else if (i(w, !0)) {
                  var J = new R(), ht = J[A](T ? {} : -0, 1) != J, K = y(function() {
                    J.has(1);
                  }), nt = p(function(bt) {
                    new F(bt);
                  }), xt = !T && y(function() {
                    for (var bt = new F(), Tt = 5; Tt--; )
                      bt[A](Tt, Tt);
                    return !bt.has(-0);
                  });
                  nt || (R = D(function(bt, Tt) {
                    h(bt, b);
                    var It = m(new F(), bt, R);
                    return Tt != null && u(Tt, It[A], { that: It, AS_ENTRIES: E }), It;
                  }), R.prototype = b, b.constructor = R), (K || xt) && (U("delete"), U("has"), E && U("get")), (xt || ht) && U(A), T && b.clear && delete b.clear;
                }
                return N[w] = R, o({ global: !0, forced: R != F }, N), e(R, w), T || I.setStrong(R, w, E), R;
              };
            }
          ),
          /***/
          73870: (
            /***/
            function(c, d, t) {
              var o = t(24792), r = t(31561), n = t(66012), i = t(86385);
              c.exports = function(f, l) {
                for (var u = r(l), h = i.f, a = n.f, v = 0; v < u.length; v++) {
                  var y = u[v];
                  o(f, y) || h(f, y, a(l, y));
                }
              };
            }
          ),
          /***/
          15454: (
            /***/
            function(c, d, t) {
              var o = t(52280), r = o("match");
              c.exports = function(n) {
                var i = /./;
                try {
                  "/./"[n](i);
                } catch {
                  try {
                    return i[r] = !1, "/./"[n](i);
                  } catch {
                  }
                }
                return !1;
              };
            }
          ),
          /***/
          25115: (
            /***/
            function(c, d, t) {
              var o = t(79044);
              c.exports = !o(function() {
                function r() {
                }
                return r.prototype.constructor = null, Object.getPrototypeOf(new r()) !== r.prototype;
              });
            }
          ),
          /***/
          75304: (
            /***/
            function(c, d, t) {
              var o = t(88697), r = t(96411), n = t(28967), i = /"/g, f = o("".replace);
              c.exports = function(l, u, h, a) {
                var v = n(r(l)), y = "<" + u;
                return h !== "" && (y += " " + h + '="' + f(n(a), i, "&quot;") + '"'), y + ">" + v + "</" + u + ">";
              };
            }
          ),
          /***/
          6181: (
            /***/
            function(c, d, t) {
              var o = t(97022).IteratorPrototype, r = t(51569), n = t(69199), i = t(60878), f = t(44818), l = function() {
                return this;
              };
              c.exports = function(u, h, a) {
                var v = h + " Iterator";
                return u.prototype = r(o, { next: n(1, a) }), i(u, v, !1, !0), f[v] = l, u;
              };
            }
          ),
          /***/
          45899: (
            /***/
            function(c, d, t) {
              var o = t(7493), r = t(86385), n = t(69199);
              c.exports = o ? function(i, f, l) {
                return r.f(i, f, n(1, l));
              } : function(i, f, l) {
                return i[f] = l, i;
              };
            }
          ),
          /***/
          69199: (
            /***/
            function(c) {
              c.exports = function(d, t) {
                return {
                  enumerable: !(d & 1),
                  configurable: !(d & 2),
                  writable: !(d & 4),
                  value: t
                };
              };
            }
          ),
          /***/
          35039: (
            /***/
            function(c, d, t) {
              var o = t(383), r = t(86385), n = t(69199);
              c.exports = function(i, f, l) {
                var u = o(f);
                u in i ? r.f(i, u, n(0, l)) : i[u] = l;
              };
            }
          ),
          /***/
          67707: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(83875), n = t(17141), i = o.TypeError;
              c.exports = function(f) {
                if (r(this), f === "string" || f === "default")
                  f = "string";
                else if (f !== "number")
                  throw i("Incorrect hint");
                return n(this, f);
              };
            }
          ),
          /***/
          61495: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(79611), n = t(21178), i = t(55316), f = t(75277), l = t(6181), u = t(12654), h = t(22412), a = t(60878), v = t(45899), y = t(35974), p = t(52280), e = t(44818), m = t(97022), w = i.PROPER, D = i.CONFIGURABLE, I = m.IteratorPrototype, E = m.BUGGY_SAFARI_ITERATORS, T = p("iterator"), A = "keys", F = "values", b = "entries", R = function() {
                return this;
              };
              c.exports = function(N, U, W, J, ht, K, nt) {
                l(W, U, J);
                var xt = function(yt) {
                  if (yt === ht && Ut)
                    return Ut;
                  if (!E && yt in It)
                    return It[yt];
                  switch (yt) {
                    case A:
                      return function() {
                        return new W(this, yt);
                      };
                    case F:
                      return function() {
                        return new W(this, yt);
                      };
                    case b:
                      return function() {
                        return new W(this, yt);
                      };
                  }
                  return function() {
                    return new W(this);
                  };
                }, bt = U + " Iterator", Tt = !1, It = N.prototype, Lt = It[T] || It["@@iterator"] || ht && It[ht], Ut = !E && Lt || xt(ht), $ = U == "Array" && It.entries || Lt, gt, ut, st;
                if ($ && (gt = u($.call(new N())), gt !== Object.prototype && gt.next && (!n && u(gt) !== I && (h ? h(gt, I) : f(gt[T]) || y(gt, T, R)), a(gt, bt, !0, !0), n && (e[bt] = R))), w && ht == F && Lt && Lt.name !== F && (!n && D ? v(It, "name", F) : (Tt = !0, Ut = function() {
                  return r(Lt, this);
                })), ht)
                  if (ut = {
                    values: xt(F),
                    keys: K ? Ut : xt(A),
                    entries: xt(b)
                  }, nt)
                    for (st in ut)
                      (E || Tt || !(st in It)) && y(It, st, ut[st]);
                  else
                    o({ target: U, proto: !0, forced: E || Tt }, ut);
                return (!n || nt) && It[T] !== Ut && y(It, T, Ut, { name: ht }), e[U] = Ut, ut;
              };
            }
          ),
          /***/
          68308: (
            /***/
            function(c, d, t) {
              var o = t(67290), r = t(24792), n = t(20127), i = t(86385).f;
              c.exports = function(f) {
                var l = o.Symbol || (o.Symbol = {});
                r(l, f) || i(l, f, {
                  value: n.f(f)
                });
              };
            }
          ),
          /***/
          7493: (
            /***/
            function(c, d, t) {
              var o = t(79044);
              c.exports = !o(function() {
                return Object.defineProperty({}, 1, { get: function() {
                  return 7;
                } })[1] != 7;
              });
            }
          ),
          /***/
          92750: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(52786), n = o.document, i = r(n) && r(n.createElement);
              c.exports = function(f) {
                return i ? n.createElement(f) : {};
              };
            }
          ),
          /***/
          12848: (
            /***/
            function(c) {
              c.exports = {
                CSSRuleList: 0,
                CSSStyleDeclaration: 0,
                CSSValueList: 0,
                ClientRectList: 0,
                DOMRectList: 0,
                DOMStringList: 0,
                DOMTokenList: 1,
                DataTransferItemList: 0,
                FileList: 0,
                HTMLAllCollection: 0,
                HTMLCollection: 0,
                HTMLFormElement: 0,
                HTMLSelectElement: 0,
                MediaList: 0,
                MimeTypeArray: 0,
                NamedNodeMap: 0,
                NodeList: 1,
                PaintRequestList: 0,
                Plugin: 0,
                PluginArray: 0,
                SVGLengthList: 0,
                SVGNumberList: 0,
                SVGPathSegList: 0,
                SVGPointList: 0,
                SVGStringList: 0,
                SVGTransformList: 0,
                SourceBufferList: 0,
                StyleSheetList: 0,
                TextTrackCueList: 0,
                TextTrackList: 0,
                TouchList: 0
              };
            }
          ),
          /***/
          79189: (
            /***/
            function(c, d, t) {
              var o = t(92750), r = o("span").classList, n = r && r.constructor && r.constructor.prototype;
              c.exports = n === Object.prototype ? void 0 : n;
            }
          ),
          /***/
          34631: (
            /***/
            function(c, d, t) {
              var o = t(82647), r = o.match(/firefox\/(\d+)/i);
              c.exports = !!r && +r[1];
            }
          ),
          /***/
          47923: (
            /***/
            function(c) {
              c.exports = typeof window == "object";
            }
          ),
          /***/
          80442: (
            /***/
            function(c, d, t) {
              var o = t(82647);
              c.exports = /MSIE|Trident/.test(o);
            }
          ),
          /***/
          55357: (
            /***/
            function(c, d, t) {
              var o = t(82647), r = t(98363);
              c.exports = /ipad|iphone|ipod/i.test(o) && r.Pebble !== void 0;
            }
          ),
          /***/
          53121: (
            /***/
            function(c, d, t) {
              var o = t(82647);
              c.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(o);
            }
          ),
          /***/
          93921: (
            /***/
            function(c, d, t) {
              var o = t(79159), r = t(98363);
              c.exports = o(r.process) == "process";
            }
          ),
          /***/
          14402: (
            /***/
            function(c, d, t) {
              var o = t(82647);
              c.exports = /web0s(?!.*chrome)/i.test(o);
            }
          ),
          /***/
          82647: (
            /***/
            function(c, d, t) {
              var o = t(22773);
              c.exports = o("navigator", "userAgent") || "";
            }
          ),
          /***/
          11197: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(82647), n = o.process, i = o.Deno, f = n && n.versions || i && i.version, l = f && f.v8, u, h;
              l && (u = l.split("."), h = u[0] > 0 && u[0] < 4 ? 1 : +(u[0] + u[1])), !h && r && (u = r.match(/Edge\/(\d+)/), (!u || u[1] >= 74) && (u = r.match(/Chrome\/(\d+)/), u && (h = +u[1]))), c.exports = h;
            }
          ),
          /***/
          76929: (
            /***/
            function(c, d, t) {
              var o = t(82647), r = o.match(/AppleWebKit\/(\d+)\./);
              c.exports = !!r && +r[1];
            }
          ),
          /***/
          48869: (
            /***/
            function(c) {
              c.exports = [
                "constructor",
                "hasOwnProperty",
                "isPrototypeOf",
                "propertyIsEnumerable",
                "toLocaleString",
                "toString",
                "valueOf"
              ];
            }
          ),
          /***/
          67679: (
            /***/
            function(c, d, t) {
              var o = t(79044), r = t(69199);
              c.exports = !o(function() {
                var n = Error("a");
                return "stack" in n ? (Object.defineProperty(n, "stack", r(1, 7)), n.stack !== 7) : !0;
              });
            }
          ),
          /***/
          19882: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(66012).f, n = t(45899), i = t(35974), f = t(51621), l = t(73870), u = t(86291);
              c.exports = function(h, a) {
                var v = h.target, y = h.global, p = h.stat, e, m, w, D, I, E;
                if (y ? m = o : p ? m = o[v] || f(v, {}) : m = (o[v] || {}).prototype, m)
                  for (w in a) {
                    if (I = a[w], h.noTargetGet ? (E = r(m, w), D = E && E.value) : D = m[w], e = u(y ? w : v + (p ? "." : "#") + w, h.forced), !e && D !== void 0) {
                      if (typeof I == typeof D)
                        continue;
                      l(I, D);
                    }
                    (h.sham || D && D.sham) && n(I, "sham", !0), i(m, w, I, h);
                  }
              };
            }
          ),
          /***/
          79044: (
            /***/
            function(c) {
              c.exports = function(d) {
                try {
                  return !!d();
                } catch {
                  return !0;
                }
              };
            }
          ),
          /***/
          81492: (
            /***/
            function(c, d, t) {
              t(39275);
              var o = t(88697), r = t(35974), n = t(99749), i = t(79044), f = t(52280), l = t(45899), u = f("species"), h = RegExp.prototype;
              c.exports = function(a, v, y, p) {
                var e = f(a), m = !i(function() {
                  var E = {};
                  return E[e] = function() {
                    return 7;
                  }, ""[a](E) != 7;
                }), w = m && !i(function() {
                  var E = !1, T = /a/;
                  return a === "split" && (T = {}, T.constructor = {}, T.constructor[u] = function() {
                    return T;
                  }, T.flags = "", T[e] = /./[e]), T.exec = function() {
                    return E = !0, null;
                  }, T[e](""), !E;
                });
                if (!m || !w || y) {
                  var D = o(/./[e]), I = v(e, ""[a], function(E, T, A, F, b) {
                    var R = o(E), N = T.exec;
                    return N === n || N === h.exec ? m && !b ? { done: !0, value: D(T, A, F) } : { done: !0, value: R(A, T, F) } : { done: !1 };
                  });
                  r(String.prototype, a, I[0]), r(h, e, I[1]);
                }
                p && l(h[e], "sham", !0);
              };
            }
          ),
          /***/
          51207: (
            /***/
            function(c, d, t) {
              var o = t(79044);
              c.exports = !o(function() {
                return Object.isExtensible(Object.preventExtensions({}));
              });
            }
          ),
          /***/
          63530: (
            /***/
            function(c) {
              var d = Function.prototype, t = d.apply, o = d.bind, r = d.call;
              c.exports = typeof Reflect == "object" && Reflect.apply || (o ? r.bind(t) : function() {
                return r.apply(t, arguments);
              });
            }
          ),
          /***/
          98166: (
            /***/
            function(c, d, t) {
              var o = t(88697), r = t(97676), n = o(o.bind);
              c.exports = function(i, f) {
                return r(i), f === void 0 ? i : n ? n(i, f) : function() {
                  return i.apply(f, arguments);
                };
              };
            }
          ),
          /***/
          52381: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(88697), n = t(97676), i = t(52786), f = t(24792), l = t(15629), u = o.Function, h = r([].concat), a = r([].join), v = {}, y = function(p, e, m) {
                if (!f(v, e)) {
                  for (var w = [], D = 0; D < e; D++)
                    w[D] = "a[" + D + "]";
                  v[e] = u("C,a", "return new C(" + a(w, ",") + ")");
                }
                return v[e](p, m);
              };
              c.exports = u.bind || function(e) {
                var m = n(this), w = m.prototype, D = l(arguments, 1), I = function() {
                  var T = h(D, l(arguments));
                  return this instanceof I ? y(m, T.length, T) : m.apply(e, T);
                };
                return i(w) && (I.prototype = w), I;
              };
            }
          ),
          /***/
          79611: (
            /***/
            function(c) {
              var d = Function.prototype.call;
              c.exports = d.bind ? d.bind(d) : function() {
                return d.apply(d, arguments);
              };
            }
          ),
          /***/
          55316: (
            /***/
            function(c, d, t) {
              var o = t(7493), r = t(24792), n = Function.prototype, i = o && Object.getOwnPropertyDescriptor, f = r(n, "name"), l = f && function() {
              }.name === "something", u = f && (!o || o && i(n, "name").configurable);
              c.exports = {
                EXISTS: f,
                PROPER: l,
                CONFIGURABLE: u
              };
            }
          ),
          /***/
          88697: (
            /***/
            function(c) {
              var d = Function.prototype, t = d.bind, o = d.call, r = t && t.bind(o);
              c.exports = t ? function(n) {
                return n && r(o, n);
              } : function(n) {
                return n && function() {
                  return o.apply(n, arguments);
                };
              };
            }
          ),
          /***/
          22773: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(75277), n = function(i) {
                return r(i) ? i : void 0;
              };
              c.exports = function(i, f) {
                return arguments.length < 2 ? n(o[i]) : o[i] && o[i][f];
              };
            }
          ),
          /***/
          77193: (
            /***/
            function(c, d, t) {
              var o = t(36994), r = t(97219), n = t(44818), i = t(52280), f = i("iterator");
              c.exports = function(l) {
                if (l != null)
                  return r(l, f) || r(l, "@@iterator") || n[o(l)];
              };
            }
          ),
          /***/
          11805: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(79611), n = t(97676), i = t(83875), f = t(28768), l = t(77193), u = o.TypeError;
              c.exports = function(h, a) {
                var v = arguments.length < 2 ? l(h) : a;
                if (n(v))
                  return i(r(v, h));
                throw u(f(h) + " is not iterable");
              };
            }
          ),
          /***/
          97219: (
            /***/
            function(c, d, t) {
              var o = t(97676);
              c.exports = function(r, n) {
                var i = r[n];
                return i == null ? void 0 : o(i);
              };
            }
          ),
          /***/
          81373: (
            /***/
            function(c, d, t) {
              var o = t(88697), r = t(30744), n = Math.floor, i = o("".charAt), f = o("".replace), l = o("".slice), u = /\$([$&'`]|\d{1,2}|<[^>]*>)/g, h = /\$([$&'`]|\d{1,2})/g;
              c.exports = function(a, v, y, p, e, m) {
                var w = y + a.length, D = p.length, I = h;
                return e !== void 0 && (e = r(e), I = u), f(m, I, function(E, T) {
                  var A;
                  switch (i(T, 0)) {
                    case "$":
                      return "$";
                    case "&":
                      return a;
                    case "`":
                      return l(v, 0, y);
                    case "'":
                      return l(v, w);
                    case "<":
                      A = e[l(T, 1, -1)];
                      break;
                    default:
                      var F = +T;
                      if (F === 0)
                        return E;
                      if (F > D) {
                        var b = n(F / 10);
                        return b === 0 ? E : b <= D ? p[b - 1] === void 0 ? i(T, 1) : p[b - 1] + i(T, 1) : E;
                      }
                      A = p[F - 1];
                  }
                  return A === void 0 ? "" : A;
                });
              };
            }
          ),
          /***/
          98363: (
            /***/
            function(c, d, t) {
              var o = function(r) {
                return r && r.Math == Math && r;
              };
              c.exports = // eslint-disable-next-line es/no-global-this -- safe
              o(typeof globalThis == "object" && globalThis) || o(typeof window == "object" && window) || // eslint-disable-next-line no-restricted-globals -- safe
              o(typeof self == "object" && self) || o(typeof t.g == "object" && t.g) || // eslint-disable-next-line no-new-func -- fallback
              function() {
                return this;
              }() || Function("return this")();
            }
          ),
          /***/
          24792: (
            /***/
            function(c, d, t) {
              var o = t(88697), r = t(30744), n = o({}.hasOwnProperty);
              c.exports = Object.hasOwn || function(f, l) {
                return n(r(f), l);
              };
            }
          ),
          /***/
          47505: (
            /***/
            function(c) {
              c.exports = {};
            }
          ),
          /***/
          46271: (
            /***/
            function(c, d, t) {
              var o = t(98363);
              c.exports = function(r, n) {
                var i = o.console;
                i && i.error && (arguments.length == 1 ? i.error(r) : i.error(r, n));
              };
            }
          ),
          /***/
          47055: (
            /***/
            function(c, d, t) {
              var o = t(22773);
              c.exports = o("document", "documentElement");
            }
          ),
          /***/
          67548: (
            /***/
            function(c, d, t) {
              var o = t(7493), r = t(79044), n = t(92750);
              c.exports = !o && !r(function() {
                return Object.defineProperty(n("div"), "a", {
                  get: function() {
                    return 7;
                  }
                }).a != 7;
              });
            }
          ),
          /***/
          45489: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = o.Array, n = Math.abs, i = Math.pow, f = Math.floor, l = Math.log, u = Math.LN2, h = function(v, y, p) {
                var e = r(p), m = p * 8 - y - 1, w = (1 << m) - 1, D = w >> 1, I = y === 23 ? i(2, -24) - i(2, -77) : 0, E = v < 0 || v === 0 && 1 / v < 0 ? 1 : 0, T = 0, A, F, b;
                for (v = n(v), v != v || v === 1 / 0 ? (F = v != v ? 1 : 0, A = w) : (A = f(l(v) / u), v * (b = i(2, -A)) < 1 && (A--, b *= 2), A + D >= 1 ? v += I / b : v += I * i(2, 1 - D), v * b >= 2 && (A++, b /= 2), A + D >= w ? (F = 0, A = w) : A + D >= 1 ? (F = (v * b - 1) * i(2, y), A = A + D) : (F = v * i(2, D - 1) * i(2, y), A = 0)); y >= 8; e[T++] = F & 255, F /= 256, y -= 8)
                  ;
                for (A = A << y | F, m += y; m > 0; e[T++] = A & 255, A /= 256, m -= 8)
                  ;
                return e[--T] |= E * 128, e;
              }, a = function(v, y) {
                var p = v.length, e = p * 8 - y - 1, m = (1 << e) - 1, w = m >> 1, D = e - 7, I = p - 1, E = v[I--], T = E & 127, A;
                for (E >>= 7; D > 0; T = T * 256 + v[I], I--, D -= 8)
                  ;
                for (A = T & (1 << -D) - 1, T >>= -D, D += y; D > 0; A = A * 256 + v[I], I--, D -= 8)
                  ;
                if (T === 0)
                  T = 1 - w;
                else {
                  if (T === m)
                    return A ? NaN : E ? -1 / 0 : 1 / 0;
                  A = A + i(2, y), T = T - w;
                }
                return (E ? -1 : 1) * A * i(2, T - y);
              };
              c.exports = {
                pack: h,
                unpack: a
              };
            }
          ),
          /***/
          78609: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(88697), n = t(79044), i = t(79159), f = o.Object, l = r("".split);
              c.exports = n(function() {
                return !f("z").propertyIsEnumerable(0);
              }) ? function(u) {
                return i(u) == "String" ? l(u, "") : f(u);
              } : f;
            }
          ),
          /***/
          59250: (
            /***/
            function(c, d, t) {
              var o = t(75277), r = t(52786), n = t(22412);
              c.exports = function(i, f, l) {
                var u, h;
                return (
                  // it can work only with native `setPrototypeOf`
                  n && // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
                  o(u = f.constructor) && u !== l && r(h = u.prototype) && h !== l.prototype && n(i, h), i
                );
              };
            }
          ),
          /***/
          56429: (
            /***/
            function(c, d, t) {
              var o = t(88697), r = t(75277), n = t(49415), i = o(Function.toString);
              r(n.inspectSource) || (n.inspectSource = function(f) {
                return i(f);
              }), c.exports = n.inspectSource;
            }
          ),
          /***/
          58323: (
            /***/
            function(c, d, t) {
              var o = t(52786), r = t(45899);
              c.exports = function(n, i) {
                o(i) && "cause" in i && r(n, "cause", i.cause);
              };
            }
          ),
          /***/
          44296: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(88697), n = t(47505), i = t(52786), f = t(24792), l = t(86385).f, u = t(87994), h = t(74938), a = t(34524), v = t(51207), y = !1, p = a("meta"), e = 0, m = Object.isExtensible || function() {
                return !0;
              }, w = function(F) {
                l(F, p, { value: {
                  objectID: "O" + e++,
                  // object ID
                  weakData: {}
                  // weak collections IDs
                } });
              }, D = function(F, b) {
                if (!i(F))
                  return typeof F == "symbol" ? F : (typeof F == "string" ? "S" : "P") + F;
                if (!f(F, p)) {
                  if (!m(F))
                    return "F";
                  if (!b)
                    return "E";
                  w(F);
                }
                return F[p].objectID;
              }, I = function(F, b) {
                if (!f(F, p)) {
                  if (!m(F))
                    return !0;
                  if (!b)
                    return !1;
                  w(F);
                }
                return F[p].weakData;
              }, E = function(F) {
                return v && y && m(F) && !f(F, p) && w(F), F;
              }, T = function() {
                A.enable = function() {
                }, y = !0;
                var F = u.f, b = r([].splice), R = {};
                R[p] = 1, F(R).length && (u.f = function(N) {
                  for (var U = F(N), W = 0, J = U.length; W < J; W++)
                    if (U[W] === p) {
                      b(U, W, 1);
                      break;
                    }
                  return U;
                }, o({ target: "Object", stat: !0, forced: !0 }, {
                  getOwnPropertyNames: h.f
                }));
              }, A = c.exports = {
                enable: T,
                fastKey: D,
                getWeakData: I,
                onFreeze: E
              };
              n[p] = !0;
            }
          ),
          /***/
          20821: (
            /***/
            function(c, d, t) {
              var o = t(36830), r = t(98363), n = t(88697), i = t(52786), f = t(45899), l = t(24792), u = t(49415), h = t(50466), a = t(47505), v = "Object already initialized", y = r.TypeError, p = r.WeakMap, e, m, w, D = function(R) {
                return w(R) ? m(R) : e(R, {});
              }, I = function(R) {
                return function(N) {
                  var U;
                  if (!i(N) || (U = m(N)).type !== R)
                    throw y("Incompatible receiver, " + R + " required");
                  return U;
                };
              };
              if (o || u.state) {
                var E = u.state || (u.state = new p()), T = n(E.get), A = n(E.has), F = n(E.set);
                e = function(R, N) {
                  if (A(E, R))
                    throw new y(v);
                  return N.facade = R, F(E, R, N), N;
                }, m = function(R) {
                  return T(E, R) || {};
                }, w = function(R) {
                  return A(E, R);
                };
              } else {
                var b = h("state");
                a[b] = !0, e = function(R, N) {
                  if (l(R, b))
                    throw new y(v);
                  return N.facade = R, f(R, b, N), N;
                }, m = function(R) {
                  return l(R, b) ? R[b] : {};
                }, w = function(R) {
                  return l(R, b);
                };
              }
              c.exports = {
                set: e,
                get: m,
                has: w,
                enforce: D,
                getterFor: I
              };
            }
          ),
          /***/
          68089: (
            /***/
            function(c, d, t) {
              var o = t(52280), r = t(44818), n = o("iterator"), i = Array.prototype;
              c.exports = function(f) {
                return f !== void 0 && (r.Array === f || i[n] === f);
              };
            }
          ),
          /***/
          71982: (
            /***/
            function(c, d, t) {
              var o = t(79159);
              c.exports = Array.isArray || function(n) {
                return o(n) == "Array";
              };
            }
          ),
          /***/
          75277: (
            /***/
            function(c) {
              c.exports = function(d) {
                return typeof d == "function";
              };
            }
          ),
          /***/
          31536: (
            /***/
            function(c, d, t) {
              var o = t(88697), r = t(79044), n = t(75277), i = t(36994), f = t(22773), l = t(56429), u = function() {
              }, h = [], a = f("Reflect", "construct"), v = /^\s*(?:class|function)\b/, y = o(v.exec), p = !v.exec(u), e = function(w) {
                if (!n(w))
                  return !1;
                try {
                  return a(u, h, w), !0;
                } catch {
                  return !1;
                }
              }, m = function(w) {
                if (!n(w))
                  return !1;
                switch (i(w)) {
                  case "AsyncFunction":
                  case "GeneratorFunction":
                  case "AsyncGeneratorFunction":
                    return !1;
                }
                return p || !!y(v, l(w));
              };
              c.exports = !a || r(function() {
                var w;
                return e(e.call) || !e(Object) || !e(function() {
                  w = !0;
                }) || w;
              }) ? m : e;
            }
          ),
          /***/
          86291: (
            /***/
            function(c, d, t) {
              var o = t(79044), r = t(75277), n = /#|\.prototype\./, i = function(a, v) {
                var y = l[f(a)];
                return y == h ? !0 : y == u ? !1 : r(v) ? o(v) : !!v;
              }, f = i.normalize = function(a) {
                return String(a).replace(n, ".").toLowerCase();
              }, l = i.data = {}, u = i.NATIVE = "N", h = i.POLYFILL = "P";
              c.exports = i;
            }
          ),
          /***/
          57507: (
            /***/
            function(c, d, t) {
              var o = t(52786), r = Math.floor;
              c.exports = Number.isInteger || function(i) {
                return !o(i) && isFinite(i) && r(i) === i;
              };
            }
          ),
          /***/
          52786: (
            /***/
            function(c, d, t) {
              var o = t(75277);
              c.exports = function(r) {
                return typeof r == "object" ? r !== null : o(r);
              };
            }
          ),
          /***/
          21178: (
            /***/
            function(c) {
              c.exports = !1;
            }
          ),
          /***/
          42622: (
            /***/
            function(c, d, t) {
              var o = t(52786), r = t(79159), n = t(52280), i = n("match");
              c.exports = function(f) {
                var l;
                return o(f) && ((l = f[i]) !== void 0 ? !!l : r(f) == "RegExp");
              };
            }
          ),
          /***/
          66681: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(22773), n = t(75277), i = t(32010), f = t(189), l = o.Object;
              c.exports = f ? function(u) {
                return typeof u == "symbol";
              } : function(u) {
                var h = r("Symbol");
                return n(h) && i(h.prototype, l(u));
              };
            }
          ),
          /***/
          5166: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(98166), n = t(79611), i = t(83875), f = t(28768), l = t(68089), u = t(47046), h = t(32010), a = t(11805), v = t(77193), y = t(18744), p = o.TypeError, e = function(w, D) {
                this.stopped = w, this.result = D;
              }, m = e.prototype;
              c.exports = function(w, D, I) {
                var E = I && I.that, T = !!(I && I.AS_ENTRIES), A = !!(I && I.IS_ITERATOR), F = !!(I && I.INTERRUPTED), b = r(D, E), R, N, U, W, J, ht, K, nt = function(bt) {
                  return R && y(R, "normal", bt), new e(!0, bt);
                }, xt = function(bt) {
                  return T ? (i(bt), F ? b(bt[0], bt[1], nt) : b(bt[0], bt[1])) : F ? b(bt, nt) : b(bt);
                };
                if (A)
                  R = w;
                else {
                  if (N = v(w), !N)
                    throw p(f(w) + " is not iterable");
                  if (l(N)) {
                    for (U = 0, W = u(w); W > U; U++)
                      if (J = xt(w[U]), J && h(m, J))
                        return J;
                    return new e(!1);
                  }
                  R = a(w, N);
                }
                for (ht = R.next; !(K = n(ht, R)).done; ) {
                  try {
                    J = xt(K.value);
                  } catch (bt) {
                    y(R, "throw", bt);
                  }
                  if (typeof J == "object" && J && h(m, J))
                    return J;
                }
                return new e(!1);
              };
            }
          ),
          /***/
          18744: (
            /***/
            function(c, d, t) {
              var o = t(79611), r = t(83875), n = t(97219);
              c.exports = function(i, f, l) {
                var u, h;
                r(i);
                try {
                  if (u = n(i, "return"), !u) {
                    if (f === "throw")
                      throw l;
                    return l;
                  }
                  u = o(u, i);
                } catch (a) {
                  h = !0, u = a;
                }
                if (f === "throw")
                  throw l;
                if (h)
                  throw u;
                return r(u), l;
              };
            }
          ),
          /***/
          97022: (
            /***/
            function(c, d, t) {
              var o = t(79044), r = t(75277), n = t(51569), i = t(12654), f = t(35974), l = t(52280), u = t(21178), h = l("iterator"), a = !1, v, y, p;
              [].keys && (p = [].keys(), "next" in p ? (y = i(i(p)), y !== Object.prototype && (v = y)) : a = !0);
              var e = v == null || o(function() {
                var m = {};
                return v[h].call(m) !== m;
              });
              e ? v = {} : u && (v = n(v)), r(v[h]) || f(v, h, function() {
                return this;
              }), c.exports = {
                IteratorPrototype: v,
                BUGGY_SAFARI_ITERATORS: a
              };
            }
          ),
          /***/
          44818: (
            /***/
            function(c) {
              c.exports = {};
            }
          ),
          /***/
          47046: (
            /***/
            function(c, d, t) {
              var o = t(35108);
              c.exports = function(r) {
                return o(r.length);
              };
            }
          ),
          /***/
          71800: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(98166), n = t(66012).f, i = t(84643).set, f = t(53121), l = t(55357), u = t(14402), h = t(93921), a = o.MutationObserver || o.WebKitMutationObserver, v = o.document, y = o.process, p = o.Promise, e = n(o, "queueMicrotask"), m = e && e.value, w, D, I, E, T, A, F, b;
              m || (w = function() {
                var R, N;
                for (h && (R = y.domain) && R.exit(); D; ) {
                  N = D.fn, D = D.next;
                  try {
                    N();
                  } catch (U) {
                    throw D ? E() : I = void 0, U;
                  }
                }
                I = void 0, R && R.enter();
              }, !f && !h && !u && a && v ? (T = !0, A = v.createTextNode(""), new a(w).observe(A, { characterData: !0 }), E = function() {
                A.data = T = !T;
              }) : !l && p && p.resolve ? (F = p.resolve(void 0), F.constructor = p, b = r(F.then, F), E = function() {
                b(w);
              }) : h ? E = function() {
                y.nextTick(w);
              } : (i = r(i, o), E = function() {
                i(w);
              })), c.exports = m || function(R) {
                var N = { fn: R, next: void 0 };
                I && (I.next = N), D || (D = N, E()), I = N;
              };
            }
          ),
          /***/
          58369: (
            /***/
            function(c, d, t) {
              var o = t(98363);
              c.exports = o.Promise;
            }
          ),
          /***/
          3850: (
            /***/
            function(c, d, t) {
              var o = t(11197), r = t(79044);
              c.exports = !!Object.getOwnPropertySymbols && !r(function() {
                var n = Symbol();
                return !String(n) || !(Object(n) instanceof Symbol) || // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
                !Symbol.sham && o && o < 41;
              });
            }
          ),
          /***/
          36830: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(75277), n = t(56429), i = o.WeakMap;
              c.exports = r(i) && /native code/.test(n(i));
            }
          ),
          /***/
          29269: (
            /***/
            function(c, d, t) {
              var o = t(97676), r = function(n) {
                var i, f;
                this.promise = new n(function(l, u) {
                  if (i !== void 0 || f !== void 0)
                    throw TypeError("Bad Promise constructor");
                  i = l, f = u;
                }), this.resolve = o(i), this.reject = o(f);
              };
              c.exports.f = function(n) {
                return new r(n);
              };
            }
          ),
          /***/
          654: (
            /***/
            function(c, d, t) {
              var o = t(28967);
              c.exports = function(r, n) {
                return r === void 0 ? arguments.length < 2 ? "" : n : o(r);
              };
            }
          ),
          /***/
          21049: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(42622), n = o.TypeError;
              c.exports = function(i) {
                if (r(i))
                  throw n("The method doesn't accept regular expressions");
                return i;
              };
            }
          ),
          /***/
          5310: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = o.isFinite;
              c.exports = Number.isFinite || function(i) {
                return typeof i == "number" && r(i);
              };
            }
          ),
          /***/
          45856: (
            /***/
            function(c, d, t) {
              var o = t(7493), r = t(88697), n = t(79611), i = t(79044), f = t(60667), l = t(89612), u = t(81513), h = t(30744), a = t(78609), v = Object.assign, y = Object.defineProperty, p = r([].concat);
              c.exports = !v || i(function() {
                if (o && v({ b: 1 }, v(y({}, "a", {
                  enumerable: !0,
                  get: function() {
                    y(this, "b", {
                      value: 3,
                      enumerable: !1
                    });
                  }
                }), { b: 2 })).b !== 1)
                  return !0;
                var e = {}, m = {}, w = Symbol(), D = "abcdefghijklmnopqrst";
                return e[w] = 7, D.split("").forEach(function(I) {
                  m[I] = I;
                }), v({}, e)[w] != 7 || f(v({}, m)).join("") != D;
              }) ? function(m, w) {
                for (var D = h(m), I = arguments.length, E = 1, T = l.f, A = u.f; I > E; )
                  for (var F = a(arguments[E++]), b = T ? p(f(F), T(F)) : f(F), R = b.length, N = 0, U; R > N; )
                    U = b[N++], (!o || n(A, F, U)) && (D[U] = F[U]);
                return D;
              } : v;
            }
          ),
          /***/
          51569: (
            /***/
            function(c, d, t) {
              var o = t(83875), r = t(17840), n = t(48869), i = t(47505), f = t(47055), l = t(92750), u = t(50466), h = ">", a = "<", v = "prototype", y = "script", p = u("IE_PROTO"), e = function() {
              }, m = function(T) {
                return a + y + h + T + a + "/" + y + h;
              }, w = function(T) {
                T.write(m("")), T.close();
                var A = T.parentWindow.Object;
                return T = null, A;
              }, D = function() {
                var T = l("iframe"), A = "java" + y + ":", F;
                return T.style.display = "none", f.appendChild(T), T.src = String(A), F = T.contentWindow.document, F.open(), F.write(m("document.F=Object")), F.close(), F.F;
              }, I, E = function() {
                try {
                  I = new ActiveXObject("htmlfile");
                } catch {
                }
                E = typeof document < "u" ? document.domain && I ? w(I) : D() : w(I);
                for (var T = n.length; T--; )
                  delete E[v][n[T]];
                return E();
              };
              i[p] = !0, c.exports = Object.create || function(A, F) {
                var b;
                return A !== null ? (e[v] = o(A), b = new e(), e[v] = null, b[p] = A) : b = E(), F === void 0 ? b : r(b, F);
              };
            }
          ),
          /***/
          17840: (
            /***/
            function(c, d, t) {
              var o = t(7493), r = t(86385), n = t(83875), i = t(29580), f = t(60667);
              c.exports = o ? Object.defineProperties : function(u, h) {
                n(u);
                for (var a = i(h), v = f(h), y = v.length, p = 0, e; y > p; )
                  r.f(u, e = v[p++], a[e]);
                return u;
              };
            }
          ),
          /***/
          86385: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(7493), n = t(67548), i = t(83875), f = t(383), l = o.TypeError, u = Object.defineProperty;
              d.f = r ? u : function(a, v, y) {
                if (i(a), v = f(v), i(y), n)
                  try {
                    return u(a, v, y);
                  } catch {
                  }
                if ("get" in y || "set" in y)
                  throw l("Accessors not supported");
                return "value" in y && (a[v] = y.value), a;
              };
            }
          ),
          /***/
          66012: (
            /***/
            function(c, d, t) {
              var o = t(7493), r = t(79611), n = t(81513), i = t(69199), f = t(29580), l = t(383), u = t(24792), h = t(67548), a = Object.getOwnPropertyDescriptor;
              d.f = o ? a : function(y, p) {
                if (y = f(y), p = l(p), h)
                  try {
                    return a(y, p);
                  } catch {
                  }
                if (u(y, p))
                  return i(!r(n.f, y, p), y[p]);
              };
            }
          ),
          /***/
          74938: (
            /***/
            function(c, d, t) {
              var o = t(79159), r = t(29580), n = t(87994).f, i = t(15629), f = typeof window == "object" && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [], l = function(u) {
                try {
                  return n(u);
                } catch {
                  return i(f);
                }
              };
              c.exports.f = function(h) {
                return f && o(h) == "Window" ? l(h) : n(r(h));
              };
            }
          ),
          /***/
          87994: (
            /***/
            function(c, d, t) {
              var o = t(18794), r = t(48869), n = r.concat("length", "prototype");
              d.f = Object.getOwnPropertyNames || function(f) {
                return o(f, n);
              };
            }
          ),
          /***/
          89612: (
            /***/
            function(c, d) {
              d.f = Object.getOwnPropertySymbols;
            }
          ),
          /***/
          12654: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(24792), n = t(75277), i = t(30744), f = t(50466), l = t(25115), u = f("IE_PROTO"), h = o.Object, a = h.prototype;
              c.exports = l ? h.getPrototypeOf : function(v) {
                var y = i(v);
                if (r(y, u))
                  return y[u];
                var p = y.constructor;
                return n(p) && y instanceof p ? p.prototype : y instanceof h ? a : null;
              };
            }
          ),
          /***/
          32010: (
            /***/
            function(c, d, t) {
              var o = t(88697);
              c.exports = o({}.isPrototypeOf);
            }
          ),
          /***/
          18794: (
            /***/
            function(c, d, t) {
              var o = t(88697), r = t(24792), n = t(29580), i = t(37190).indexOf, f = t(47505), l = o([].push);
              c.exports = function(u, h) {
                var a = n(u), v = 0, y = [], p;
                for (p in a)
                  !r(f, p) && r(a, p) && l(y, p);
                for (; h.length > v; )
                  r(a, p = h[v++]) && (~i(y, p) || l(y, p));
                return y;
              };
            }
          ),
          /***/
          60667: (
            /***/
            function(c, d, t) {
              var o = t(18794), r = t(48869);
              c.exports = Object.keys || function(i) {
                return o(i, r);
              };
            }
          ),
          /***/
          81513: (
            /***/
            function(c, d) {
              var t = {}.propertyIsEnumerable, o = Object.getOwnPropertyDescriptor, r = o && !t.call({ 1: 2 }, 1);
              d.f = r ? function(i) {
                var f = o(this, i);
                return !!f && f.enumerable;
              } : t;
            }
          ),
          /***/
          22412: (
            /***/
            function(c, d, t) {
              var o = t(88697), r = t(83875), n = t(75017);
              c.exports = Object.setPrototypeOf || ("__proto__" in {} ? function() {
                var i = !1, f = {}, l;
                try {
                  l = o(Object.getOwnPropertyDescriptor(Object.prototype, "__proto__").set), l(f, []), i = f instanceof Array;
                } catch {
                }
                return function(h, a) {
                  return r(h), n(a), i ? l(h, a) : h.__proto__ = a, h;
                };
              }() : void 0);
            }
          ),
          /***/
          8765: (
            /***/
            function(c, d, t) {
              var o = t(7493), r = t(88697), n = t(60667), i = t(29580), f = t(81513).f, l = r(f), u = r([].push), h = function(a) {
                return function(v) {
                  for (var y = i(v), p = n(y), e = p.length, m = 0, w = [], D; e > m; )
                    D = p[m++], (!o || l(y, D)) && u(w, a ? [D, y[D]] : y[D]);
                  return w;
                };
              };
              c.exports = {
                // `Object.entries` method
                // https://tc39.es/ecma262/#sec-object.entries
                entries: h(!0),
                // `Object.values` method
                // https://tc39.es/ecma262/#sec-object.values
                values: h(!1)
              };
            }
          ),
          /***/
          36699: (
            /***/
            function(c, d, t) {
              var o = t(57301), r = t(36994);
              c.exports = o ? {}.toString : function() {
                return "[object " + r(this) + "]";
              };
            }
          ),
          /***/
          17141: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(79611), n = t(75277), i = t(52786), f = o.TypeError;
              c.exports = function(l, u) {
                var h, a;
                if (u === "string" && n(h = l.toString) && !i(a = r(h, l)) || n(h = l.valueOf) && !i(a = r(h, l)) || u !== "string" && n(h = l.toString) && !i(a = r(h, l)))
                  return a;
                throw f("Can't convert object to primitive value");
              };
            }
          ),
          /***/
          31561: (
            /***/
            function(c, d, t) {
              var o = t(22773), r = t(88697), n = t(87994), i = t(89612), f = t(83875), l = r([].concat);
              c.exports = o("Reflect", "ownKeys") || function(h) {
                var a = n.f(f(h)), v = i.f;
                return v ? l(a, v(h)) : a;
              };
            }
          ),
          /***/
          67290: (
            /***/
            function(c, d, t) {
              var o = t(98363);
              c.exports = o;
            }
          ),
          /***/
          74443: (
            /***/
            function(c) {
              c.exports = function(d) {
                try {
                  return { error: !1, value: d() };
                } catch (t) {
                  return { error: !0, value: t };
                }
              };
            }
          ),
          /***/
          11621: (
            /***/
            function(c, d, t) {
              var o = t(83875), r = t(52786), n = t(29269);
              c.exports = function(i, f) {
                if (o(i), r(f) && f.constructor === i)
                  return f;
                var l = n.f(i), u = l.resolve;
                return u(f), l.promise;
              };
            }
          ),
          /***/
          7592: (
            /***/
            function(c, d, t) {
              var o = t(35974);
              c.exports = function(r, n, i) {
                for (var f in n)
                  o(r, f, n[f], i);
                return r;
              };
            }
          ),
          /***/
          35974: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(75277), n = t(24792), i = t(45899), f = t(51621), l = t(56429), u = t(20821), h = t(55316).CONFIGURABLE, a = u.get, v = u.enforce, y = String(String).split("String");
              (c.exports = function(p, e, m, w) {
                var D = w ? !!w.unsafe : !1, I = w ? !!w.enumerable : !1, E = w ? !!w.noTargetGet : !1, T = w && w.name !== void 0 ? w.name : e, A;
                if (r(m) && (String(T).slice(0, 7) === "Symbol(" && (T = "[" + String(T).replace(/^Symbol\(([^)]*)\)/, "$1") + "]"), (!n(m, "name") || h && m.name !== T) && i(m, "name", T), A = v(m), A.source || (A.source = y.join(typeof T == "string" ? T : ""))), p === o) {
                  I ? p[e] = m : f(e, m);
                  return;
                } else
                  D ? !E && p[e] && (I = !0) : delete p[e];
                I ? p[e] = m : i(p, e, m);
              })(Function.prototype, "toString", function() {
                return r(this) && a(this).source || l(this);
              });
            }
          ),
          /***/
          94088: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(79611), n = t(83875), i = t(75277), f = t(79159), l = t(99749), u = o.TypeError;
              c.exports = function(h, a) {
                var v = h.exec;
                if (i(v)) {
                  var y = r(v, h, a);
                  return y !== null && n(y), y;
                }
                if (f(h) === "RegExp")
                  return r(l, h, a);
                throw u("RegExp#exec called on incompatible receiver");
              };
            }
          ),
          /***/
          99749: (
            /***/
            function(c, d, t) {
              var o = t(79611), r = t(88697), n = t(28967), i = t(58083), f = t(97047), l = t(53580), u = t(51569), h = t(20821).get, a = t(41669), v = t(1638), y = l("native-string-replace", String.prototype.replace), p = RegExp.prototype.exec, e = p, m = r("".charAt), w = r("".indexOf), D = r("".replace), I = r("".slice), E = function() {
                var b = /a/, R = /b*/g;
                return o(p, b, "a"), o(p, R, "a"), b.lastIndex !== 0 || R.lastIndex !== 0;
              }(), T = f.UNSUPPORTED_Y || f.BROKEN_CARET, A = /()??/.exec("")[1] !== void 0, F = E || A || T || a || v;
              F && (e = function(R) {
                var N = this, U = h(N), W = n(R), J = U.raw, ht, K, nt, xt, bt, Tt, It;
                if (J)
                  return J.lastIndex = N.lastIndex, ht = o(e, J, W), N.lastIndex = J.lastIndex, ht;
                var Lt = U.groups, Ut = T && N.sticky, $ = o(i, N), gt = N.source, ut = 0, st = W;
                if (Ut && ($ = D($, "y", ""), w($, "g") === -1 && ($ += "g"), st = I(W, N.lastIndex), N.lastIndex > 0 && (!N.multiline || N.multiline && m(W, N.lastIndex - 1) !== `
`) && (gt = "(?: " + gt + ")", st = " " + st, ut++), K = new RegExp("^(?:" + gt + ")", $)), A && (K = new RegExp("^" + gt + "$(?!\\s)", $)), E && (nt = N.lastIndex), xt = o(p, Ut ? K : N, st), Ut ? xt ? (xt.input = I(xt.input, ut), xt[0] = I(xt[0], ut), xt.index = N.lastIndex, N.lastIndex += xt[0].length) : N.lastIndex = 0 : E && xt && (N.lastIndex = N.global ? xt.index + xt[0].length : nt), A && xt && xt.length > 1 && o(y, xt[0], K, function() {
                  for (bt = 1; bt < arguments.length - 2; bt++)
                    arguments[bt] === void 0 && (xt[bt] = void 0);
                }), xt && Lt)
                  for (xt.groups = Tt = u(null), bt = 0; bt < Lt.length; bt++)
                    It = Lt[bt], Tt[It[0]] = xt[It[1]];
                return xt;
              }), c.exports = e;
            }
          ),
          /***/
          58083: (
            /***/
            function(c, d, t) {
              var o = t(83875);
              c.exports = function() {
                var r = o(this), n = "";
                return r.global && (n += "g"), r.ignoreCase && (n += "i"), r.multiline && (n += "m"), r.dotAll && (n += "s"), r.unicode && (n += "u"), r.sticky && (n += "y"), n;
              };
            }
          ),
          /***/
          97047: (
            /***/
            function(c, d, t) {
              var o = t(79044), r = t(98363), n = r.RegExp;
              d.UNSUPPORTED_Y = o(function() {
                var i = n("a", "y");
                return i.lastIndex = 2, i.exec("abcd") != null;
              }), d.BROKEN_CARET = o(function() {
                var i = n("^r", "gy");
                return i.lastIndex = 2, i.exec("str") != null;
              });
            }
          ),
          /***/
          41669: (
            /***/
            function(c, d, t) {
              var o = t(79044), r = t(98363), n = r.RegExp;
              c.exports = o(function() {
                var i = n(".", "s");
                return !(i.dotAll && i.exec(`
`) && i.flags === "s");
              });
            }
          ),
          /***/
          1638: (
            /***/
            function(c, d, t) {
              var o = t(79044), r = t(98363), n = r.RegExp;
              c.exports = o(function() {
                var i = n("(?<a>b)", "g");
                return i.exec("b").groups.a !== "b" || "b".replace(i, "$<a>c") !== "bc";
              });
            }
          ),
          /***/
          96411: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = o.TypeError;
              c.exports = function(n) {
                if (n == null)
                  throw r("Can't call method on " + n);
                return n;
              };
            }
          ),
          /***/
          51621: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = Object.defineProperty;
              c.exports = function(n, i) {
                try {
                  r(o, n, { value: i, configurable: !0, writable: !0 });
                } catch {
                  o[n] = i;
                }
                return i;
              };
            }
          ),
          /***/
          57323: (
            /***/
            function(c, d, t) {
              var o = t(22773), r = t(86385), n = t(52280), i = t(7493), f = n("species");
              c.exports = function(l) {
                var u = o(l), h = r.f;
                i && u && !u[f] && h(u, f, {
                  configurable: !0,
                  get: function() {
                    return this;
                  }
                });
              };
            }
          ),
          /***/
          60878: (
            /***/
            function(c, d, t) {
              var o = t(86385).f, r = t(24792), n = t(52280), i = n("toStringTag");
              c.exports = function(f, l, u) {
                f && !r(f = u ? f : f.prototype, i) && o(f, i, { configurable: !0, value: l });
              };
            }
          ),
          /***/
          50466: (
            /***/
            function(c, d, t) {
              var o = t(53580), r = t(34524), n = o("keys");
              c.exports = function(i) {
                return n[i] || (n[i] = r(i));
              };
            }
          ),
          /***/
          49415: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(51621), n = "__core-js_shared__", i = o[n] || r(n, {});
              c.exports = i;
            }
          ),
          /***/
          53580: (
            /***/
            function(c, d, t) {
              var o = t(21178), r = t(49415);
              (c.exports = function(n, i) {
                return r[n] || (r[n] = i !== void 0 ? i : {});
              })("versions", []).push({
                version: "3.19.0",
                mode: o ? "pure" : "global",
                copyright: "Â© 2021 Denis Pushkarev (zloirock.ru)"
              });
            }
          ),
          /***/
          7270: (
            /***/
            function(c, d, t) {
              var o = t(83875), r = t(43327), n = t(52280), i = n("species");
              c.exports = function(f, l) {
                var u = o(f).constructor, h;
                return u === void 0 || (h = o(u)[i]) == null ? l : r(h);
              };
            }
          ),
          /***/
          13881: (
            /***/
            function(c, d, t) {
              var o = t(79044);
              c.exports = function(r) {
                return o(function() {
                  var n = ""[r]('"');
                  return n !== n.toLowerCase() || n.split('"').length > 3;
                });
              };
            }
          ),
          /***/
          91140: (
            /***/
            function(c, d, t) {
              var o = t(88697), r = t(14229), n = t(28967), i = t(96411), f = o("".charAt), l = o("".charCodeAt), u = o("".slice), h = function(a) {
                return function(v, y) {
                  var p = n(i(v)), e = r(y), m = p.length, w, D;
                  return e < 0 || e >= m ? a ? "" : void 0 : (w = l(p, e), w < 55296 || w > 56319 || e + 1 === m || (D = l(p, e + 1)) < 56320 || D > 57343 ? a ? f(p, e) : w : a ? u(p, e, e + 2) : (w - 55296 << 10) + (D - 56320) + 65536);
                };
              };
              c.exports = {
                // `String.prototype.codePointAt` method
                // https://tc39.es/ecma262/#sec-string.prototype.codepointat
                codeAt: h(!1),
                // `String.prototype.at` method
                // https://github.com/mathiasbynens/String.prototype.at
                charAt: h(!0)
              };
            }
          ),
          /***/
          26031: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(14229), n = t(28967), i = t(96411), f = o.RangeError;
              c.exports = function(u) {
                var h = n(i(this)), a = "", v = r(u);
                if (v < 0 || v == 1 / 0)
                  throw f("Wrong number of repetitions");
                for (; v > 0; (v >>>= 1) && (h += h))
                  v & 1 && (a += h);
                return a;
              };
            }
          ),
          /***/
          68487: (
            /***/
            function(c, d, t) {
              var o = t(55316).PROPER, r = t(79044), n = t(2569), i = "âÂá ";
              c.exports = function(f) {
                return r(function() {
                  return !!n[f]() || i[f]() !== i || o && n[f].name !== f;
                });
              };
            }
          ),
          /***/
          10287: (
            /***/
            function(c, d, t) {
              var o = t(88697), r = t(96411), n = t(28967), i = t(2569), f = o("".replace), l = "[" + i + "]", u = RegExp("^" + l + l + "*"), h = RegExp(l + l + "*$"), a = function(v) {
                return function(y) {
                  var p = n(r(y));
                  return v & 1 && (p = f(p, u, "")), v & 2 && (p = f(p, h, "")), p;
                };
              };
              c.exports = {
                // `String.prototype.{ trimLeft, trimStart }` methods
                // https://tc39.es/ecma262/#sec-string.prototype.trimstart
                start: a(1),
                // `String.prototype.{ trimRight, trimEnd }` methods
                // https://tc39.es/ecma262/#sec-string.prototype.trimend
                end: a(2),
                // `String.prototype.trim` method
                // https://tc39.es/ecma262/#sec-string.prototype.trim
                trim: a(3)
              };
            }
          ),
          /***/
          84643: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(63530), n = t(98166), i = t(75277), f = t(24792), l = t(79044), u = t(47055), h = t(15629), a = t(92750), v = t(53121), y = t(93921), p = o.setImmediate, e = o.clearImmediate, m = o.process, w = o.Dispatch, D = o.Function, I = o.MessageChannel, E = o.String, T = 0, A = {}, F = "onreadystatechange", b, R, N, U;
              try {
                b = o.location;
              } catch {
              }
              var W = function(nt) {
                if (f(A, nt)) {
                  var xt = A[nt];
                  delete A[nt], xt();
                }
              }, J = function(nt) {
                return function() {
                  W(nt);
                };
              }, ht = function(nt) {
                W(nt.data);
              }, K = function(nt) {
                o.postMessage(E(nt), b.protocol + "//" + b.host);
              };
              (!p || !e) && (p = function(xt) {
                var bt = h(arguments, 1);
                return A[++T] = function() {
                  r(i(xt) ? xt : D(xt), void 0, bt);
                }, R(T), T;
              }, e = function(xt) {
                delete A[xt];
              }, y ? R = function(nt) {
                m.nextTick(J(nt));
              } : w && w.now ? R = function(nt) {
                w.now(J(nt));
              } : I && !v ? (N = new I(), U = N.port2, N.port1.onmessage = ht, R = n(U.postMessage, U)) : o.addEventListener && i(o.postMessage) && !o.importScripts && b && b.protocol !== "file:" && !l(K) ? (R = K, o.addEventListener("message", ht, !1)) : F in a("script") ? R = function(nt) {
                u.appendChild(a("script"))[F] = function() {
                  u.removeChild(this), W(nt);
                };
              } : R = function(nt) {
                setTimeout(J(nt), 0);
              }), c.exports = {
                set: p,
                clear: e
              };
            }
          ),
          /***/
          41655: (
            /***/
            function(c, d, t) {
              var o = t(88697);
              c.exports = o(1 .valueOf);
            }
          ),
          /***/
          32565: (
            /***/
            function(c, d, t) {
              var o = t(14229), r = Math.max, n = Math.min;
              c.exports = function(i, f) {
                var l = o(i);
                return l < 0 ? r(l + f, 0) : n(l, f);
              };
            }
          ),
          /***/
          27302: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(14229), n = t(35108), i = o.RangeError;
              c.exports = function(f) {
                if (f === void 0)
                  return 0;
                var l = r(f), u = n(l);
                if (l !== u)
                  throw i("Wrong length or index");
                return u;
              };
            }
          ),
          /***/
          29580: (
            /***/
            function(c, d, t) {
              var o = t(78609), r = t(96411);
              c.exports = function(n) {
                return o(r(n));
              };
            }
          ),
          /***/
          14229: (
            /***/
            function(c) {
              var d = Math.ceil, t = Math.floor;
              c.exports = function(o) {
                var r = +o;
                return r !== r || r === 0 ? 0 : (r > 0 ? t : d)(r);
              };
            }
          ),
          /***/
          35108: (
            /***/
            function(c, d, t) {
              var o = t(14229), r = Math.min;
              c.exports = function(n) {
                return n > 0 ? r(o(n), 9007199254740991) : 0;
              };
            }
          ),
          /***/
          30744: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(96411), n = o.Object;
              c.exports = function(i) {
                return n(r(i));
              };
            }
          ),
          /***/
          65758: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(83786), n = o.RangeError;
              c.exports = function(i, f) {
                var l = r(i);
                if (l % f)
                  throw n("Wrong offset");
                return l;
              };
            }
          ),
          /***/
          83786: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(14229), n = o.RangeError;
              c.exports = function(i) {
                var f = r(i);
                if (f < 0)
                  throw n("The argument can't be less than 0");
                return f;
              };
            }
          ),
          /***/
          21893: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(79611), n = t(52786), i = t(66681), f = t(97219), l = t(17141), u = t(52280), h = o.TypeError, a = u("toPrimitive");
              c.exports = function(v, y) {
                if (!n(v) || i(v))
                  return v;
                var p = f(v, a), e;
                if (p) {
                  if (y === void 0 && (y = "default"), e = r(p, v, y), !n(e) || i(e))
                    return e;
                  throw h("Can't convert object to primitive value");
                }
                return y === void 0 && (y = "number"), l(v, y);
              };
            }
          ),
          /***/
          383: (
            /***/
            function(c, d, t) {
              var o = t(21893), r = t(66681);
              c.exports = function(n) {
                var i = o(n, "string");
                return r(i) ? i : i + "";
              };
            }
          ),
          /***/
          57301: (
            /***/
            function(c, d, t) {
              var o = t(52280), r = o("toStringTag"), n = {};
              n[r] = "z", c.exports = String(n) === "[object z]";
            }
          ),
          /***/
          28967: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(36994), n = o.String;
              c.exports = function(i) {
                if (r(i) === "Symbol")
                  throw TypeError("Cannot convert a Symbol value to a string");
                return n(i);
              };
            }
          ),
          /***/
          28768: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = o.String;
              c.exports = function(n) {
                try {
                  return r(n);
                } catch {
                  return "Object";
                }
              };
            }
          ),
          /***/
          26764: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(98363), n = t(79611), i = t(7493), f = t(63231), l = t(32590), u = t(74510), h = t(9519), a = t(69199), v = t(45899), y = t(57507), p = t(35108), e = t(27302), m = t(65758), w = t(383), D = t(24792), I = t(36994), E = t(52786), T = t(66681), A = t(51569), F = t(32010), b = t(22412), R = t(87994).f, N = t(66503), U = t(68671).forEach, W = t(57323), J = t(86385), ht = t(66012), K = t(20821), nt = t(59250), xt = K.get, bt = K.set, Tt = J.f, It = ht.f, Lt = Math.round, Ut = r.RangeError, $ = u.ArrayBuffer, gt = $.prototype, ut = u.DataView, st = l.NATIVE_ARRAY_BUFFER_VIEWS, yt = l.TYPED_ARRAY_CONSTRUCTOR, G = l.TYPED_ARRAY_TAG, Et = l.TypedArray, k = l.TypedArrayPrototype, S = l.aTypedArrayConstructor, L = l.isTypedArray, V = "BYTES_PER_ELEMENT", it = "Wrong length", tt = function(Dt, ae) {
                S(Dt);
                for (var Ae = 0, xe = ae.length, ce = new Dt(xe); xe > Ae; )
                  ce[Ae] = ae[Ae++];
                return ce;
              }, _ = function(Dt, ae) {
                Tt(Dt, ae, { get: function() {
                  return xt(this)[ae];
                } });
              }, At = function(Dt) {
                var ae;
                return F(gt, Dt) || (ae = I(Dt)) == "ArrayBuffer" || ae == "SharedArrayBuffer";
              }, Rt = function(Dt, ae) {
                return L(Dt) && !T(ae) && ae in Dt && y(+ae) && ae >= 0;
              }, Yt = function(ae, Ae) {
                return Ae = w(Ae), Rt(ae, Ae) ? a(2, ae[Ae]) : It(ae, Ae);
              }, Gt = function(ae, Ae, xe) {
                return Ae = w(Ae), Rt(ae, Ae) && E(xe) && D(xe, "value") && !D(xe, "get") && !D(xe, "set") && !xe.configurable && (!D(xe, "writable") || xe.writable) && (!D(xe, "enumerable") || xe.enumerable) ? (ae[Ae] = xe.value, ae) : Tt(ae, Ae, xe);
              };
              i ? (st || (ht.f = Yt, J.f = Gt, _(k, "buffer"), _(k, "byteOffset"), _(k, "byteLength"), _(k, "length")), o({ target: "Object", stat: !0, forced: !st }, {
                getOwnPropertyDescriptor: Yt,
                defineProperty: Gt
              }), c.exports = function(Dt, ae, Ae) {
                var xe = Dt.match(/\d+$/)[0] / 8, ce = Dt + (Ae ? "Clamped" : "") + "Array", we = "get" + Dt, zt = "set" + Dt, Qt = r[ce], le = Qt, de = le && le.prototype, be = {}, Oe = function(fe, ot) {
                  var Y = xt(fe);
                  return Y.view[we](ot * xe + Y.byteOffset, !0);
                }, Fe = function(fe, ot, Y) {
                  var j = xt(fe);
                  Ae && (Y = (Y = Lt(Y)) < 0 ? 0 : Y > 255 ? 255 : Y & 255), j.view[zt](ot * xe + j.byteOffset, Y, !0);
                }, Ft = function(fe, ot) {
                  Tt(fe, ot, {
                    get: function() {
                      return Oe(this, ot);
                    },
                    set: function(Y) {
                      return Fe(this, ot, Y);
                    },
                    enumerable: !0
                  });
                };
                st ? f && (le = ae(function(fe, ot, Y, j) {
                  return h(fe, de), nt(function() {
                    return E(ot) ? At(ot) ? j !== void 0 ? new Qt(ot, m(Y, xe), j) : Y !== void 0 ? new Qt(ot, m(Y, xe)) : new Qt(ot) : L(ot) ? tt(le, ot) : n(N, le, ot) : new Qt(e(ot));
                  }(), fe, le);
                }), b && b(le, Et), U(R(Qt), function(fe) {
                  fe in le || v(le, fe, Qt[fe]);
                }), le.prototype = de) : (le = ae(function(fe, ot, Y, j) {
                  h(fe, de);
                  var mt = 0, at = 0, Wt, _t, Q;
                  if (!E(ot))
                    Q = e(ot), _t = Q * xe, Wt = new $(_t);
                  else if (At(ot)) {
                    Wt = ot, at = m(Y, xe);
                    var Jt = ot.byteLength;
                    if (j === void 0) {
                      if (Jt % xe || (_t = Jt - at, _t < 0))
                        throw Ut(it);
                    } else if (_t = p(j) * xe, _t + at > Jt)
                      throw Ut(it);
                    Q = _t / xe;
                  } else
                    return L(ot) ? tt(le, ot) : n(N, le, ot);
                  for (bt(fe, {
                    buffer: Wt,
                    byteOffset: at,
                    byteLength: _t,
                    length: Q,
                    view: new ut(Wt)
                  }); mt < Q; )
                    Ft(fe, mt++);
                }), b && b(le, Et), de = le.prototype = A(k)), de.constructor !== le && v(de, "constructor", le), v(de, yt, le), G && v(de, G, ce), be[ce] = le, o({
                  global: !0,
                  forced: le != Qt,
                  sham: !st
                }, be), V in le || v(le, V, xe), V in de || v(de, V, xe), W(ce);
              }) : c.exports = function() {
              };
            }
          ),
          /***/
          63231: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(79044), n = t(8662), i = t(32590).NATIVE_ARRAY_BUFFER_VIEWS, f = o.ArrayBuffer, l = o.Int8Array;
              c.exports = !i || !r(function() {
                l(1);
              }) || !r(function() {
                new l(-1);
              }) || !n(function(u) {
                new l(), new l(null), new l(1.5), new l(u);
              }, !0) || r(function() {
                return new l(new f(2), 1, void 0).length !== 1;
              });
            }
          ),
          /***/
          53687: (
            /***/
            function(c, d, t) {
              var o = t(65626), r = t(36107);
              c.exports = function(n, i) {
                return o(r(n), i);
              };
            }
          ),
          /***/
          66503: (
            /***/
            function(c, d, t) {
              var o = t(98166), r = t(79611), n = t(43327), i = t(30744), f = t(47046), l = t(11805), u = t(77193), h = t(68089), a = t(32590).aTypedArrayConstructor;
              c.exports = function(y) {
                var p = n(this), e = i(y), m = arguments.length, w = m > 1 ? arguments[1] : void 0, D = w !== void 0, I = u(e), E, T, A, F, b, R;
                if (I && !h(I))
                  for (b = l(e, I), R = b.next, e = []; !(F = r(R, b)).done; )
                    e.push(F.value);
                for (D && m > 2 && (w = o(w, arguments[2])), T = f(e), A = new (a(p))(T), E = 0; T > E; E++)
                  A[E] = D ? w(e[E], E) : e[E];
                return A;
              };
            }
          ),
          /***/
          36107: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(7270), n = o.TYPED_ARRAY_CONSTRUCTOR, i = o.aTypedArrayConstructor;
              c.exports = function(f) {
                return i(r(f, f[n]));
              };
            }
          ),
          /***/
          34524: (
            /***/
            function(c, d, t) {
              var o = t(88697), r = 0, n = Math.random(), i = o(1 .toString);
              c.exports = function(f) {
                return "Symbol(" + (f === void 0 ? "" : f) + ")_" + i(++r + n, 36);
              };
            }
          ),
          /***/
          189: (
            /***/
            function(c, d, t) {
              var o = t(3850);
              c.exports = o && !Symbol.sham && typeof Symbol.iterator == "symbol";
            }
          ),
          /***/
          20127: (
            /***/
            function(c, d, t) {
              var o = t(52280);
              d.f = o;
            }
          ),
          /***/
          52280: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(53580), n = t(24792), i = t(34524), f = t(3850), l = t(189), u = r("wks"), h = o.Symbol, a = h && h.for, v = l ? h : h && h.withoutSetter || i;
              c.exports = function(y) {
                if (!n(u, y) || !(f || typeof u[y] == "string")) {
                  var p = "Symbol." + y;
                  f && n(h, y) ? u[y] = h[y] : l && a ? u[y] = a(p) : u[y] = v(p);
                }
                return u[y];
              };
            }
          ),
          /***/
          2569: (
            /***/
            function(c) {
              c.exports = `	
\v\f\r Â áââââââââââââ¯âã\u2028\u2029\uFEFF`;
            }
          ),
          /***/
          55739: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(98363), n = t(32010), i = t(12654), f = t(22412), l = t(73870), u = t(51569), h = t(45899), a = t(69199), v = t(8457), y = t(58323), p = t(5166), e = t(654), m = t(67679), w = r.Error, D = [].push, I = function(A, F) {
                var b = n(E, this) ? this : u(E), R = arguments.length > 2 ? arguments[2] : void 0;
                f && (b = f(new w(void 0), i(b))), h(b, "message", e(F, "")), m && h(b, "stack", v(b.stack, 1)), y(b, R);
                var N = [];
                return p(A, D, { that: N }), h(b, "errors", N), b;
              };
              f ? f(I, w) : l(I, w);
              var E = I.prototype = u(w.prototype, {
                constructor: a(1, I),
                message: a(1, ""),
                name: a(1, "AggregateError")
              });
              o({ global: !0 }, {
                AggregateError: I
              });
            }
          ),
          /***/
          55862: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(98363), n = t(79044), i = t(71982), f = t(52786), l = t(30744), u = t(47046), h = t(35039), a = t(80150), v = t(82091), y = t(52280), p = t(11197), e = y("isConcatSpreadable"), m = 9007199254740991, w = "Maximum allowed index exceeded", D = r.TypeError, I = p >= 51 || !n(function() {
                var F = [];
                return F[e] = !1, F.concat()[0] !== F;
              }), E = v("concat"), T = function(F) {
                if (!f(F))
                  return !1;
                var b = F[e];
                return b !== void 0 ? !!b : i(F);
              }, A = !I || !E;
              o({ target: "Array", proto: !0, forced: A }, {
                // eslint-disable-next-line no-unused-vars -- required for `.length`
                concat: function(b) {
                  var R = l(this), N = a(R, 0), U = 0, W, J, ht, K, nt;
                  for (W = -1, ht = arguments.length; W < ht; W++)
                    if (nt = W === -1 ? R : arguments[W], T(nt)) {
                      if (K = u(nt), U + K > m)
                        throw D(w);
                      for (J = 0; J < K; J++, U++)
                        J in nt && h(N, U, nt[J]);
                    } else {
                      if (U >= m)
                        throw D(w);
                      h(N, U++, nt);
                    }
                  return N.length = U, N;
                }
              });
            }
          ),
          /***/
          42833: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(28794), n = t(6677);
              o({ target: "Array", proto: !0 }, {
                copyWithin: r
              }), n("copyWithin");
            }
          ),
          /***/
          83382: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(55522), n = t(6677);
              o({ target: "Array", proto: !0 }, {
                fill: r
              }), n("fill");
            }
          ),
          /***/
          19701: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(68671).filter, n = t(82091), i = n("filter");
              o({ target: "Array", proto: !0, forced: !i }, {
                filter: function(l) {
                  return r(this, l, arguments.length > 1 ? arguments[1] : void 0);
                }
              });
            }
          ),
          /***/
          4845: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(84899), n = t(8662), i = !n(function(f) {
                Array.from(f);
              });
              o({ target: "Array", stat: !0, forced: i }, {
                from: r
              });
            }
          ),
          /***/
          18183: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(37190).includes, n = t(6677);
              o({ target: "Array", proto: !0 }, {
                includes: function(f) {
                  return r(this, f, arguments.length > 1 ? arguments[1] : void 0);
                }
              }), n("includes");
            }
          ),
          /***/
          54883: (
            /***/
            function(c, d, t) {
              var o = t(29580), r = t(6677), n = t(44818), i = t(20821), f = t(61495), l = "Array Iterator", u = i.set, h = i.getterFor(l);
              c.exports = f(Array, "Array", function(a, v) {
                u(this, {
                  type: l,
                  target: o(a),
                  // target
                  index: 0,
                  // next index
                  kind: v
                  // kind
                });
              }, function() {
                var a = h(this), v = a.target, y = a.kind, p = a.index++;
                return !v || p >= v.length ? (a.target = void 0, { value: void 0, done: !0 }) : y == "keys" ? { value: p, done: !1 } : y == "values" ? { value: v[p], done: !1 } : { value: [p, v[p]], done: !1 };
              }, "values"), n.Arguments = n.Array, r("keys"), r("values"), r("entries");
            }
          ),
          /***/
          85005: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(88697), n = t(78609), i = t(29580), f = t(54324), l = r([].join), u = n != Object, h = f("join", ",");
              o({ target: "Array", proto: !0, forced: u || !h }, {
                join: function(v) {
                  return l(i(this), v === void 0 ? "," : v);
                }
              });
            }
          ),
          /***/
          73214: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(68671).map, n = t(82091), i = n("map");
              o({ target: "Array", proto: !0, forced: !i }, {
                map: function(l) {
                  return r(this, l, arguments.length > 1 ? arguments[1] : void 0);
                }
              });
            }
          ),
          /***/
          18821: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(98363), n = t(71982), i = t(31536), f = t(52786), l = t(32565), u = t(47046), h = t(29580), a = t(35039), v = t(52280), y = t(82091), p = t(15629), e = y("slice"), m = v("species"), w = r.Array, D = Math.max;
              o({ target: "Array", proto: !0, forced: !e }, {
                slice: function(E, T) {
                  var A = h(this), F = u(A), b = l(E, F), R = l(T === void 0 ? F : T, F), N, U, W;
                  if (n(A) && (N = A.constructor, i(N) && (N === w || n(N.prototype)) ? N = void 0 : f(N) && (N = N[m], N === null && (N = void 0)), N === w || N === void 0))
                    return p(A, b, R);
                  for (U = new (N === void 0 ? w : N)(D(R - b, 0)), W = 0; b < R; b++, W++)
                    b in A && a(U, W, A[b]);
                  return U.length = W, U;
                }
              });
            }
          ),
          /***/
          55281: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(88697), n = t(97676), i = t(30744), f = t(47046), l = t(28967), u = t(79044), h = t(2013), a = t(54324), v = t(34631), y = t(80442), p = t(11197), e = t(76929), m = [], w = r(m.sort), D = r(m.push), I = u(function() {
                m.sort(void 0);
              }), E = u(function() {
                m.sort(null);
              }), T = a("sort"), A = !u(function() {
                if (p)
                  return p < 70;
                if (!(v && v > 3)) {
                  if (y)
                    return !0;
                  if (e)
                    return e < 603;
                  var R = "", N, U, W, J;
                  for (N = 65; N < 76; N++) {
                    switch (U = String.fromCharCode(N), N) {
                      case 66:
                      case 69:
                      case 70:
                      case 72:
                        W = 3;
                        break;
                      case 68:
                      case 71:
                        W = 4;
                        break;
                      default:
                        W = 2;
                    }
                    for (J = 0; J < 47; J++)
                      m.push({ k: U + J, v: W });
                  }
                  for (m.sort(function(ht, K) {
                    return K.v - ht.v;
                  }), J = 0; J < m.length; J++)
                    U = m[J].k.charAt(0), R.charAt(R.length - 1) !== U && (R += U);
                  return R !== "DGBEFHACIJK";
                }
              }), F = I || !E || !T || !A, b = function(R) {
                return function(N, U) {
                  return U === void 0 ? -1 : N === void 0 ? 1 : R !== void 0 ? +R(N, U) || 0 : l(N) > l(U) ? 1 : -1;
                };
              };
              o({ target: "Array", proto: !0, forced: F }, {
                sort: function(N) {
                  N !== void 0 && n(N);
                  var U = i(this);
                  if (A)
                    return N === void 0 ? w(U) : w(U, N);
                  var W = [], J = f(U), ht, K;
                  for (K = 0; K < J; K++)
                    K in U && D(W, U[K]);
                  for (h(W, b(N)), ht = W.length, K = 0; K < ht; )
                    U[K] = W[K++];
                  for (; K < J; )
                    delete U[K++];
                  return U;
                }
              });
            }
          ),
          /***/
          45550: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(98363), n = t(32565), i = t(14229), f = t(47046), l = t(30744), u = t(80150), h = t(35039), a = t(82091), v = a("splice"), y = r.TypeError, p = Math.max, e = Math.min, m = 9007199254740991, w = "Maximum allowed length exceeded";
              o({ target: "Array", proto: !0, forced: !v }, {
                splice: function(I, E) {
                  var T = l(this), A = f(T), F = n(I, A), b = arguments.length, R, N, U, W, J, ht;
                  if (b === 0 ? R = N = 0 : b === 1 ? (R = 0, N = A - F) : (R = b - 2, N = e(p(i(E), 0), A - F)), A + R - N > m)
                    throw y(w);
                  for (U = u(T, N), W = 0; W < N; W++)
                    J = F + W, J in T && h(U, W, T[J]);
                  if (U.length = N, R < N) {
                    for (W = F; W < A - N; W++)
                      J = W + N, ht = W + R, J in T ? T[ht] = T[J] : delete T[ht];
                    for (W = A; W > A - N + R; W--)
                      delete T[W - 1];
                  } else if (R > N)
                    for (W = A - N; W > F; W--)
                      J = W + N - 1, ht = W + R - 1, J in T ? T[ht] = T[J] : delete T[ht];
                  for (W = 0; W < R; W++)
                    T[W + F] = arguments[W + 2];
                  return T.length = A - N + R, U;
                }
              });
            }
          ),
          /***/
          33142: (
            /***/
            function(c, d, t) {
              var o = t(24792), r = t(35974), n = t(67707), i = t(52280), f = i("toPrimitive"), l = Date.prototype;
              o(l, f) || r(l, f, n);
            }
          ),
          /***/
          54994: (
            /***/
            function(c, d, t) {
              var o = t(7493), r = t(55316).EXISTS, n = t(88697), i = t(86385).f, f = Function.prototype, l = n(f.toString), u = /^\s*function ([^ (]*)/, h = n(u.exec), a = "name";
              o && !r && i(f, a, {
                configurable: !0,
                get: function() {
                  try {
                    return h(u, l(this))[1];
                  } catch {
                    return "";
                  }
                }
              });
            }
          ),
          /***/
          62688: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(98363);
              o({ global: !0 }, {
                globalThis: r
              });
            }
          ),
          /***/
          44063: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(60878);
              r(o.JSON, "JSON", !0);
            }
          ),
          /***/
          30644: (
            /***/
            function(c, d, t) {
              var o = t(9121), r = t(33513);
              o("Map", function(n) {
                return function() {
                  return n(this, arguments.length ? arguments[0] : void 0);
                };
              }, r);
            }
          ),
          /***/
          62031: (
            /***/
            function(c, d, t) {
              var o = t(60878);
              o(Math, "Math", !0);
            }
          ),
          /***/
          80174: (
            /***/
            function(c, d, t) {
              var o = t(7493), r = t(98363), n = t(88697), i = t(86291), f = t(35974), l = t(24792), u = t(59250), h = t(32010), a = t(66681), v = t(21893), y = t(79044), p = t(87994).f, e = t(66012).f, m = t(86385).f, w = t(41655), D = t(10287).trim, I = "Number", E = r[I], T = E.prototype, A = r.TypeError, F = n("".slice), b = n("".charCodeAt), R = function(K) {
                var nt = v(K, "number");
                return typeof nt == "bigint" ? nt : N(nt);
              }, N = function(K) {
                var nt = v(K, "number"), xt, bt, Tt, It, Lt, Ut, $, gt;
                if (a(nt))
                  throw A("Cannot convert a Symbol value to a number");
                if (typeof nt == "string" && nt.length > 2) {
                  if (nt = D(nt), xt = b(nt, 0), xt === 43 || xt === 45) {
                    if (bt = b(nt, 2), bt === 88 || bt === 120)
                      return NaN;
                  } else if (xt === 48) {
                    switch (b(nt, 1)) {
                      case 66:
                      case 98:
                        Tt = 2, It = 49;
                        break;
                      case 79:
                      case 111:
                        Tt = 8, It = 55;
                        break;
                      default:
                        return +nt;
                    }
                    for (Lt = F(nt, 2), Ut = Lt.length, $ = 0; $ < Ut; $++)
                      if (gt = b(Lt, $), gt < 48 || gt > It)
                        return NaN;
                    return parseInt(Lt, Tt);
                  }
                }
                return +nt;
              };
              if (i(I, !E(" 0o1") || !E("0b1") || E("+0x1"))) {
                for (var U = function(nt) {
                  var xt = arguments.length < 1 ? 0 : E(R(nt)), bt = this;
                  return h(T, bt) && y(function() {
                    w(bt);
                  }) ? u(Object(xt), bt, U) : xt;
                }, W = o ? p(E) : (
                  // ES3:
                  "MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,fromString,range".split(",")
                ), J = 0, ht; W.length > J; J++)
                  l(E, ht = W[J]) && !l(U, ht) && m(U, ht, e(E, ht));
                U.prototype = T, T.constructor = U, f(r, I, U);
              }
            }
          ),
          /***/
          27013: (
            /***/
            function(c, d, t) {
              var o = t(19882);
              o({ target: "Number", stat: !0 }, {
                EPSILON: Math.pow(2, -52)
              });
            }
          ),
          /***/
          14686: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(5310);
              o({ target: "Number", stat: !0 }, { isFinite: r });
            }
          ),
          /***/
          35727: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(57507);
              o({ target: "Number", stat: !0 }, {
                isInteger: r
              });
            }
          ),
          /***/
          12798: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(98363), n = t(88697), i = t(14229), f = t(41655), l = t(26031), u = t(79044), h = r.RangeError, a = r.String, v = Math.floor, y = n(l), p = n("".slice), e = n(1 .toFixed), m = function(A, F, b) {
                return F === 0 ? b : F % 2 === 1 ? m(A, F - 1, b * A) : m(A * A, F / 2, b);
              }, w = function(A) {
                for (var F = 0, b = A; b >= 4096; )
                  F += 12, b /= 4096;
                for (; b >= 2; )
                  F += 1, b /= 2;
                return F;
              }, D = function(A, F, b) {
                for (var R = -1, N = b; ++R < 6; )
                  N += F * A[R], A[R] = N % 1e7, N = v(N / 1e7);
              }, I = function(A, F) {
                for (var b = 6, R = 0; --b >= 0; )
                  R += A[b], A[b] = v(R / F), R = R % F * 1e7;
              }, E = function(A) {
                for (var F = 6, b = ""; --F >= 0; )
                  if (b !== "" || F === 0 || A[F] !== 0) {
                    var R = a(A[F]);
                    b = b === "" ? R : b + y("0", 7 - R.length) + R;
                  }
                return b;
              }, T = u(function() {
                return e(8e-5, 3) !== "0.000" || e(0.9, 0) !== "1" || e(1.255, 2) !== "1.25" || e(1000000000000000100, 0) !== "1000000000000000128";
              }) || !u(function() {
                e({});
              });
              o({ target: "Number", proto: !0, forced: T }, {
                toFixed: function(F) {
                  var b = f(this), R = i(F), N = [0, 0, 0, 0, 0, 0], U = "", W = "0", J, ht, K, nt;
                  if (R < 0 || R > 20)
                    throw h("Incorrect fraction digits");
                  if (b != b)
                    return "NaN";
                  if (b <= -1e21 || b >= 1e21)
                    return a(b);
                  if (b < 0 && (U = "-", b = -b), b > 1e-21)
                    if (J = w(b * m(2, 69, 1)) - 69, ht = J < 0 ? b * m(2, -J, 1) : b / m(2, J, 1), ht *= 4503599627370496, J = 52 - J, J > 0) {
                      for (D(N, 0, ht), K = R; K >= 7; )
                        D(N, 1e7, 0), K -= 7;
                      for (D(N, m(10, K, 1), 0), K = J - 1; K >= 23; )
                        I(N, 8388608), K -= 23;
                      I(N, 1 << K), D(N, 1, 1), I(N, 2), W = E(N);
                    } else
                      D(N, 0, ht), D(N, 1 << -J, 0), W = E(N) + y("0", R);
                  return R > 0 ? (nt = W.length, W = U + (nt <= R ? "0." + y("0", R - nt) + W : p(W, 0, nt - R) + "." + p(W, nt - R))) : W = U + W, W;
                }
              });
            }
          ),
          /***/
          33130: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(45856);
              o({ target: "Object", stat: !0, forced: Object.assign !== r }, {
                assign: r
              });
            }
          ),
          /***/
          63815: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(51207), n = t(79044), i = t(52786), f = t(44296).onFreeze, l = Object.freeze, u = n(function() {
                l(1);
              });
              o({ target: "Object", stat: !0, forced: u, sham: !r }, {
                freeze: function(a) {
                  return l && i(a) ? l(f(a)) : a;
                }
              });
            }
          ),
          /***/
          80238: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(79044), n = t(29580), i = t(66012).f, f = t(7493), l = r(function() {
                i(1);
              }), u = !f || l;
              o({ target: "Object", stat: !0, forced: u, sham: !f }, {
                getOwnPropertyDescriptor: function(a, v) {
                  return i(n(a), v);
                }
              });
            }
          ),
          /***/
          12938: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(7493), n = t(31561), i = t(29580), f = t(66012), l = t(35039);
              o({ target: "Object", stat: !0, sham: !r }, {
                getOwnPropertyDescriptors: function(h) {
                  for (var a = i(h), v = f.f, y = n(a), p = {}, e = 0, m, w; y.length > e; )
                    w = v(a, m = y[e++]), w !== void 0 && l(p, m, w);
                  return p;
                }
              });
            }
          ),
          /***/
          56908: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(79044), n = t(30744), i = t(12654), f = t(25115), l = r(function() {
                i(1);
              });
              o({ target: "Object", stat: !0, forced: l, sham: !f }, {
                getPrototypeOf: function(h) {
                  return i(n(h));
                }
              });
            }
          ),
          /***/
          80044: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(30744), n = t(60667), i = t(79044), f = i(function() {
                n(1);
              });
              o({ target: "Object", stat: !0, forced: f }, {
                keys: function(u) {
                  return n(r(u));
                }
              });
            }
          ),
          /***/
          10853: (
            /***/
            function(c, d, t) {
              var o = t(57301), r = t(35974), n = t(36699);
              o || r(Object.prototype, "toString", n, { unsafe: !0 });
            }
          ),
          /***/
          19457: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(8765).values;
              o({ target: "Object", stat: !0 }, {
                values: function(i) {
                  return r(i);
                }
              });
            }
          ),
          /***/
          12382: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(79611), n = t(97676), i = t(29269), f = t(74443), l = t(5166);
              o({ target: "Promise", stat: !0 }, {
                allSettled: function(h) {
                  var a = this, v = i.f(a), y = v.resolve, p = v.reject, e = f(function() {
                    var m = n(a.resolve), w = [], D = 0, I = 1;
                    l(h, function(E) {
                      var T = D++, A = !1;
                      I++, r(m, a, E).then(function(F) {
                        A || (A = !0, w[T] = { status: "fulfilled", value: F }, --I || y(w));
                      }, function(F) {
                        A || (A = !0, w[T] = { status: "rejected", reason: F }, --I || y(w));
                      });
                    }), --I || y(w);
                  });
                  return e.error && p(e.value), v.promise;
                }
              });
            }
          ),
          /***/
          487: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(97676), n = t(22773), i = t(79611), f = t(29269), l = t(74443), u = t(5166), h = "No one promise resolved";
              o({ target: "Promise", stat: !0 }, {
                any: function(v) {
                  var y = this, p = n("AggregateError"), e = f.f(y), m = e.resolve, w = e.reject, D = l(function() {
                    var I = r(y.resolve), E = [], T = 0, A = 1, F = !1;
                    u(v, function(b) {
                      var R = T++, N = !1;
                      A++, i(I, y, b).then(function(U) {
                        N || F || (F = !0, m(U));
                      }, function(U) {
                        N || F || (N = !0, E[R] = U, --A || w(new p(E, h)));
                      });
                    }), --A || w(new p(E, h));
                  });
                  return D.error && w(D.value), e.promise;
                }
              });
            }
          ),
          /***/
          27138: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(21178), n = t(58369), i = t(79044), f = t(22773), l = t(75277), u = t(7270), h = t(11621), a = t(35974), v = !!n && i(function() {
                n.prototype.finally.call({ then: function() {
                } }, function() {
                });
              });
              if (o({ target: "Promise", proto: !0, real: !0, forced: v }, {
                finally: function(p) {
                  var e = u(this, f("Promise")), m = l(p);
                  return this.then(
                    m ? function(w) {
                      return h(e, p()).then(function() {
                        return w;
                      });
                    } : p,
                    m ? function(w) {
                      return h(e, p()).then(function() {
                        throw w;
                      });
                    } : p
                  );
                }
              }), !r && l(n)) {
                var y = f("Promise").prototype.finally;
                n.prototype.finally !== y && a(n.prototype, "finally", y, { unsafe: !0 });
              }
            }
          ),
          /***/
          35054: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(21178), n = t(98363), i = t(22773), f = t(79611), l = t(58369), u = t(35974), h = t(7592), a = t(22412), v = t(60878), y = t(57323), p = t(97676), e = t(75277), m = t(52786), w = t(9519), D = t(56429), I = t(5166), E = t(8662), T = t(7270), A = t(84643).set, F = t(71800), b = t(11621), R = t(46271), N = t(29269), U = t(74443), W = t(20821), J = t(86291), ht = t(52280), K = t(47923), nt = t(93921), xt = t(11197), bt = ht("species"), Tt = "Promise", It = W.get, Lt = W.set, Ut = W.getterFor(Tt), $ = l && l.prototype, gt = l, ut = $, st = n.TypeError, yt = n.document, G = n.process, Et = N.f, k = Et, S = !!(yt && yt.createEvent && n.dispatchEvent), L = e(n.PromiseRejectionEvent), V = "unhandledrejection", it = "rejectionhandled", tt = 0, _ = 1, At = 2, Rt = 1, Yt = 2, Gt = !1, Dt, ae, Ae, xe, ce = J(Tt, function() {
                var ot = D(gt), Y = ot !== String(gt);
                if (!Y && xt === 66 || r && !ut.finally)
                  return !0;
                if (xt >= 51 && /native code/.test(ot))
                  return !1;
                var j = new gt(function(Wt) {
                  Wt(1);
                }), mt = function(Wt) {
                  Wt(function() {
                  }, function() {
                  });
                }, at = j.constructor = {};
                return at[bt] = mt, Gt = j.then(function() {
                }) instanceof mt, Gt ? !Y && K && !L : !0;
              }), we = ce || !E(function(ot) {
                gt.all(ot).catch(function() {
                });
              }), zt = function(ot) {
                var Y;
                return m(ot) && e(Y = ot.then) ? Y : !1;
              }, Qt = function(ot, Y) {
                if (!ot.notified) {
                  ot.notified = !0;
                  var j = ot.reactions;
                  F(function() {
                    for (var mt = ot.value, at = ot.state == _, Wt = 0; j.length > Wt; ) {
                      var _t = j[Wt++], Q = at ? _t.ok : _t.fail, Jt = _t.resolve, te = _t.reject, Ct = _t.domain, Ht, oe, Le;
                      try {
                        Q ? (at || (ot.rejection === Yt && Oe(ot), ot.rejection = Rt), Q === !0 ? Ht = mt : (Ct && Ct.enter(), Ht = Q(mt), Ct && (Ct.exit(), Le = !0)), Ht === _t.promise ? te(st("Promise-chain cycle")) : (oe = zt(Ht)) ? f(oe, Ht, Jt, te) : Jt(Ht)) : te(mt);
                      } catch (De) {
                        Ct && !Le && Ct.exit(), te(De);
                      }
                    }
                    ot.reactions = [], ot.notified = !1, Y && !ot.rejection && de(ot);
                  });
                }
              }, le = function(ot, Y, j) {
                var mt, at;
                S ? (mt = yt.createEvent("Event"), mt.promise = Y, mt.reason = j, mt.initEvent(ot, !1, !0), n.dispatchEvent(mt)) : mt = { promise: Y, reason: j }, !L && (at = n["on" + ot]) ? at(mt) : ot === V && R("Unhandled promise rejection", j);
              }, de = function(ot) {
                f(A, n, function() {
                  var Y = ot.facade, j = ot.value, mt = be(ot), at;
                  if (mt && (at = U(function() {
                    nt ? G.emit("unhandledRejection", j, Y) : le(V, Y, j);
                  }), ot.rejection = nt || be(ot) ? Yt : Rt, at.error))
                    throw at.value;
                });
              }, be = function(ot) {
                return ot.rejection !== Rt && !ot.parent;
              }, Oe = function(ot) {
                f(A, n, function() {
                  var Y = ot.facade;
                  nt ? G.emit("rejectionHandled", Y) : le(it, Y, ot.value);
                });
              }, Fe = function(ot, Y, j) {
                return function(mt) {
                  ot(Y, mt, j);
                };
              }, Ft = function(ot, Y, j) {
                ot.done || (ot.done = !0, j && (ot = j), ot.value = Y, ot.state = At, Qt(ot, !0));
              }, fe = function(ot, Y, j) {
                if (!ot.done) {
                  ot.done = !0, j && (ot = j);
                  try {
                    if (ot.facade === Y)
                      throw st("Promise can't be resolved itself");
                    var mt = zt(Y);
                    mt ? F(function() {
                      var at = { done: !1 };
                      try {
                        f(
                          mt,
                          Y,
                          Fe(fe, at, ot),
                          Fe(Ft, at, ot)
                        );
                      } catch (Wt) {
                        Ft(at, Wt, ot);
                      }
                    }) : (ot.value = Y, ot.state = _, Qt(ot, !1));
                  } catch (at) {
                    Ft({ done: !1 }, at, ot);
                  }
                }
              };
              if (ce && (gt = function(Y) {
                w(this, ut), p(Y), f(Dt, this);
                var j = It(this);
                try {
                  Y(Fe(fe, j), Fe(Ft, j));
                } catch (mt) {
                  Ft(j, mt);
                }
              }, ut = gt.prototype, Dt = function(Y) {
                Lt(this, {
                  type: Tt,
                  done: !1,
                  notified: !1,
                  parent: !1,
                  reactions: [],
                  rejection: !1,
                  state: tt,
                  value: void 0
                });
              }, Dt.prototype = h(ut, {
                // `Promise.prototype.then` method
                // https://tc39.es/ecma262/#sec-promise.prototype.then
                then: function(Y, j) {
                  var mt = Ut(this), at = mt.reactions, Wt = Et(T(this, gt));
                  return Wt.ok = e(Y) ? Y : !0, Wt.fail = e(j) && j, Wt.domain = nt ? G.domain : void 0, mt.parent = !0, at[at.length] = Wt, mt.state != tt && Qt(mt, !1), Wt.promise;
                },
                // `Promise.prototype.catch` method
                // https://tc39.es/ecma262/#sec-promise.prototype.catch
                catch: function(ot) {
                  return this.then(void 0, ot);
                }
              }), ae = function() {
                var ot = new Dt(), Y = It(ot);
                this.promise = ot, this.resolve = Fe(fe, Y), this.reject = Fe(Ft, Y);
              }, N.f = Et = function(ot) {
                return ot === gt || ot === Ae ? new ae(ot) : k(ot);
              }, !r && e(l) && $ !== Object.prototype)) {
                xe = $.then, Gt || (u($, "then", function(Y, j) {
                  var mt = this;
                  return new gt(function(at, Wt) {
                    f(xe, mt, at, Wt);
                  }).then(Y, j);
                }, { unsafe: !0 }), u($, "catch", ut.catch, { unsafe: !0 }));
                try {
                  delete $.constructor;
                } catch {
                }
                a && a($, ut);
              }
              o({ global: !0, wrap: !0, forced: ce }, {
                Promise: gt
              }), v(gt, Tt, !1, !0), y(Tt), Ae = i(Tt), o({ target: Tt, stat: !0, forced: ce }, {
                // `Promise.reject` method
                // https://tc39.es/ecma262/#sec-promise.reject
                reject: function(Y) {
                  var j = Et(this);
                  return f(j.reject, void 0, Y), j.promise;
                }
              }), o({ target: Tt, stat: !0, forced: r || ce }, {
                // `Promise.resolve` method
                // https://tc39.es/ecma262/#sec-promise.resolve
                resolve: function(Y) {
                  return b(r && this === Ae ? gt : this, Y);
                }
              }), o({ target: Tt, stat: !0, forced: we }, {
                // `Promise.all` method
                // https://tc39.es/ecma262/#sec-promise.all
                all: function(Y) {
                  var j = this, mt = Et(j), at = mt.resolve, Wt = mt.reject, _t = U(function() {
                    var Q = p(j.resolve), Jt = [], te = 0, Ct = 1;
                    I(Y, function(Ht) {
                      var oe = te++, Le = !1;
                      Ct++, f(Q, j, Ht).then(function(De) {
                        Le || (Le = !0, Jt[oe] = De, --Ct || at(Jt));
                      }, Wt);
                    }), --Ct || at(Jt);
                  });
                  return _t.error && Wt(_t.value), mt.promise;
                },
                // `Promise.race` method
                // https://tc39.es/ecma262/#sec-promise.race
                race: function(Y) {
                  var j = this, mt = Et(j), at = mt.reject, Wt = U(function() {
                    var _t = p(j.resolve);
                    I(Y, function(Q) {
                      f(_t, j, Q).then(mt.resolve, at);
                    });
                  });
                  return Wt.error && at(Wt.value), mt.promise;
                }
              });
            }
          ),
          /***/
          54130: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(22773), n = t(63530), i = t(52381), f = t(43327), l = t(83875), u = t(52786), h = t(51569), a = t(79044), v = r("Reflect", "construct"), y = Object.prototype, p = [].push, e = a(function() {
                function D() {
                }
                return !(v(function() {
                }, [], D) instanceof D);
              }), m = !a(function() {
                v(function() {
                });
              }), w = e || m;
              o({ target: "Reflect", stat: !0, forced: w, sham: w }, {
                construct: function(I, E) {
                  f(I), l(E);
                  var T = arguments.length < 3 ? I : f(arguments[2]);
                  if (m && !e)
                    return v(I, E, T);
                  if (I == T) {
                    switch (E.length) {
                      case 0:
                        return new I();
                      case 1:
                        return new I(E[0]);
                      case 2:
                        return new I(E[0], E[1]);
                      case 3:
                        return new I(E[0], E[1], E[2]);
                      case 4:
                        return new I(E[0], E[1], E[2], E[3]);
                    }
                    var A = [null];
                    return n(p, A, E), new (n(i, I, A))();
                  }
                  var F = T.prototype, b = h(u(F) ? F : y), R = n(I, b, E);
                  return u(R) ? R : b;
                }
              });
            }
          ),
          /***/
          39275: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(99749);
              o({ target: "RegExp", proto: !0, forced: /./.exec !== r }, {
                exec: r
              });
            }
          ),
          /***/
          15158: (
            /***/
            function(c, d, t) {
              var o = t(7493), r = t(86385), n = t(58083), i = t(79044), f = RegExp.prototype, l = o && i(function() {
                return Object.getOwnPropertyDescriptor(f, "flags").get.call({ dotAll: !0, sticky: !0 }) !== "sy";
              });
              l && r.f(f, "flags", {
                configurable: !0,
                get: n
              });
            }
          ),
          /***/
          33290: (
            /***/
            function(c, d, t) {
              var o = t(88697), r = t(55316).PROPER, n = t(35974), i = t(83875), f = t(32010), l = t(28967), u = t(79044), h = t(58083), a = "toString", v = RegExp.prototype, y = v[a], p = o(h), e = u(function() {
                return y.call({ source: "a", flags: "b" }) != "/a/b";
              }), m = r && y.name != a;
              (e || m) && n(RegExp.prototype, a, function() {
                var D = i(this), I = l(D.source), E = D.flags, T = l(E === void 0 && f(v, D) && !("flags" in v) ? p(D) : E);
                return "/" + I + "/" + T;
              }, { unsafe: !0 });
            }
          ),
          /***/
          99041: (
            /***/
            function(c, d, t) {
              var o = t(9121), r = t(33513);
              o("Set", function(n) {
                return function() {
                  return n(this, arguments.length ? arguments[0] : void 0);
                };
              }, r);
            }
          ),
          /***/
          18481: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(91140).codeAt;
              o({ target: "String", proto: !0 }, {
                codePointAt: function(i) {
                  return r(this, i);
                }
              });
            }
          ),
          /***/
          66923: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(98363), n = t(88697), i = t(32565), f = r.RangeError, l = String.fromCharCode, u = String.fromCodePoint, h = n([].join), a = !!u && u.length != 1;
              o({ target: "String", stat: !0, forced: a }, {
                // eslint-disable-next-line no-unused-vars -- required for `.length`
                fromCodePoint: function(y) {
                  for (var p = [], e = arguments.length, m = 0, w; e > m; ) {
                    if (w = +arguments[m++], i(w, 1114111) !== w)
                      throw f(w + " is not a valid code point");
                    p[m] = w < 65536 ? l(w) : l(((w -= 65536) >> 10) + 55296, w % 1024 + 56320);
                  }
                  return h(p, "");
                }
              });
            }
          ),
          /***/
          19985: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(88697), n = t(21049), i = t(96411), f = t(28967), l = t(15454), u = r("".indexOf);
              o({ target: "String", proto: !0, forced: !l("includes") }, {
                includes: function(a) {
                  return !!~u(
                    f(i(this)),
                    f(n(a)),
                    arguments.length > 1 ? arguments[1] : void 0
                  );
                }
              });
            }
          ),
          /***/
          67666: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(75304), n = t(13881);
              o({ target: "String", proto: !0, forced: n("italics") }, {
                italics: function() {
                  return r(this, "i", "", "");
                }
              });
            }
          ),
          /***/
          45007: (
            /***/
            function(c, d, t) {
              var o = t(91140).charAt, r = t(28967), n = t(20821), i = t(61495), f = "String Iterator", l = n.set, u = n.getterFor(f);
              i(String, "String", function(h) {
                l(this, {
                  type: f,
                  string: r(h),
                  index: 0
                });
              }, function() {
                var a = u(this), v = a.string, y = a.index, p;
                return y >= v.length ? { value: void 0, done: !0 } : (p = o(v, y), a.index += p.length, { value: p, done: !1 });
              });
            }
          ),
          /***/
          86125: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(75304), n = t(13881);
              o({ target: "String", proto: !0, forced: n("link") }, {
                link: function(f) {
                  return r(this, "a", "href", f);
                }
              });
            }
          ),
          /***/
          55797: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(98363), n = t(79611), i = t(88697), f = t(6181), l = t(96411), u = t(35108), h = t(28967), a = t(83875), v = t(79159), y = t(32010), p = t(42622), e = t(58083), m = t(97219), w = t(35974), D = t(79044), I = t(52280), E = t(7270), T = t(13350), A = t(94088), F = t(20821), b = t(21178), R = I("matchAll"), N = "RegExp String", U = N + " Iterator", W = F.set, J = F.getterFor(U), ht = RegExp.prototype, K = r.TypeError, nt = i(e), xt = i("".indexOf), bt = i("".matchAll), Tt = !!bt && !D(function() {
                bt("a", /./);
              }), It = f(function($, gt, ut, st) {
                W(this, {
                  type: U,
                  regexp: $,
                  string: gt,
                  global: ut,
                  unicode: st,
                  done: !1
                });
              }, N, function() {
                var $ = J(this);
                if ($.done)
                  return { value: void 0, done: !0 };
                var gt = $.regexp, ut = $.string, st = A(gt, ut);
                return st === null ? { value: void 0, done: $.done = !0 } : $.global ? (h(st[0]) === "" && (gt.lastIndex = T(ut, u(gt.lastIndex), $.unicode)), { value: st, done: !1 }) : ($.done = !0, { value: st, done: !1 });
              }), Lt = function(Ut) {
                var $ = a(this), gt = h(Ut), ut, st, yt, G, Et, k;
                return ut = E($, RegExp), st = $.flags, st === void 0 && y(ht, $) && !("flags" in ht) && (st = nt($)), yt = st === void 0 ? "" : h(st), G = new ut(ut === RegExp ? $.source : $, yt), Et = !!~xt(yt, "g"), k = !!~xt(yt, "u"), G.lastIndex = u($.lastIndex), new It(G, gt, Et, k);
              };
              o({ target: "String", proto: !0, forced: Tt }, {
                matchAll: function($) {
                  var gt = l(this), ut, st, yt, G;
                  if ($ != null) {
                    if (p($) && (ut = h(l(
                      "flags" in ht ? $.flags : nt($)
                    )), !~xt(ut, "g")))
                      throw K("`.matchAll` does not allow non-global regexes");
                    if (Tt)
                      return bt(gt, $);
                    if (yt = m($, R), yt === void 0 && b && v($) == "RegExp" && (yt = Lt), yt)
                      return n(yt, $, gt);
                  } else if (Tt)
                    return bt(gt, $);
                  return st = h(gt), G = new RegExp($, "g"), b ? n(Lt, G, st) : G[R](st);
                }
              }), b || R in ht || w(ht, R, Lt);
            }
          ),
          /***/
          75668: (
            /***/
            function(c, d, t) {
              var o = t(79611), r = t(81492), n = t(83875), i = t(35108), f = t(28967), l = t(96411), u = t(97219), h = t(13350), a = t(94088);
              r("match", function(v, y, p) {
                return [
                  // `String.prototype.match` method
                  // https://tc39.es/ecma262/#sec-string.prototype.match
                  function(m) {
                    var w = l(this), D = m == null ? void 0 : u(m, v);
                    return D ? o(D, m, w) : new RegExp(m)[v](f(w));
                  },
                  // `RegExp.prototype[@@match]` method
                  // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
                  function(e) {
                    var m = n(this), w = f(e), D = p(y, m, w);
                    if (D.done)
                      return D.value;
                    if (!m.global)
                      return a(m, w);
                    var I = m.unicode;
                    m.lastIndex = 0;
                    for (var E = [], T = 0, A; (A = a(m, w)) !== null; ) {
                      var F = f(A[0]);
                      E[T] = F, F === "" && (m.lastIndex = h(w, i(m.lastIndex), I)), T++;
                    }
                    return T === 0 ? null : E;
                  }
                ];
              });
            }
          ),
          /***/
          84750: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(26031);
              o({ target: "String", proto: !0 }, {
                repeat: r
              });
            }
          ),
          /***/
          22321: (
            /***/
            function(c, d, t) {
              var o = t(63530), r = t(79611), n = t(88697), i = t(81492), f = t(79044), l = t(83875), u = t(75277), h = t(14229), a = t(35108), v = t(28967), y = t(96411), p = t(13350), e = t(97219), m = t(81373), w = t(94088), D = t(52280), I = D("replace"), E = Math.max, T = Math.min, A = n([].concat), F = n([].push), b = n("".indexOf), R = n("".slice), N = function(ht) {
                return ht === void 0 ? ht : String(ht);
              }, U = function() {
                return "a".replace(/./, "$0") === "$0";
              }(), W = function() {
                return /./[I] ? /./[I]("a", "$0") === "" : !1;
              }(), J = !f(function() {
                var ht = /./;
                return ht.exec = function() {
                  var K = [];
                  return K.groups = { a: "7" }, K;
                }, "".replace(ht, "$<a>") !== "7";
              });
              i("replace", function(ht, K, nt) {
                var xt = W ? "$" : "$0";
                return [
                  // `String.prototype.replace` method
                  // https://tc39.es/ecma262/#sec-string.prototype.replace
                  function(Tt, It) {
                    var Lt = y(this), Ut = Tt == null ? void 0 : e(Tt, I);
                    return Ut ? r(Ut, Tt, Lt, It) : r(K, v(Lt), Tt, It);
                  },
                  // `RegExp.prototype[@@replace]` method
                  // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
                  function(bt, Tt) {
                    var It = l(this), Lt = v(bt);
                    if (typeof Tt == "string" && b(Tt, xt) === -1 && b(Tt, "$<") === -1) {
                      var Ut = nt(K, It, Lt, Tt);
                      if (Ut.done)
                        return Ut.value;
                    }
                    var $ = u(Tt);
                    $ || (Tt = v(Tt));
                    var gt = It.global;
                    if (gt) {
                      var ut = It.unicode;
                      It.lastIndex = 0;
                    }
                    for (var st = []; ; ) {
                      var yt = w(It, Lt);
                      if (yt === null || (F(st, yt), !gt))
                        break;
                      var G = v(yt[0]);
                      G === "" && (It.lastIndex = p(Lt, a(It.lastIndex), ut));
                    }
                    for (var Et = "", k = 0, S = 0; S < st.length; S++) {
                      yt = st[S];
                      for (var L = v(yt[0]), V = E(T(h(yt.index), Lt.length), 0), it = [], tt = 1; tt < yt.length; tt++)
                        F(it, N(yt[tt]));
                      var _ = yt.groups;
                      if ($) {
                        var At = A([L], it, V, Lt);
                        _ !== void 0 && F(At, _);
                        var Rt = v(o(Tt, void 0, At));
                      } else
                        Rt = m(L, Lt, V, it, _, Tt);
                      V >= k && (Et += R(Lt, k, V) + Rt, k = V + L.length);
                    }
                    return Et + R(Lt, k);
                  }
                ];
              }, !J || !U || W);
            }
          ),
          /***/
          67838: (
            /***/
            function(c, d, t) {
              var o = t(63530), r = t(79611), n = t(88697), i = t(81492), f = t(42622), l = t(83875), u = t(96411), h = t(7270), a = t(13350), v = t(35108), y = t(28967), p = t(97219), e = t(15629), m = t(94088), w = t(99749), D = t(97047), I = t(79044), E = D.UNSUPPORTED_Y, T = 4294967295, A = Math.min, F = [].push, b = n(/./.exec), R = n(F), N = n("".slice), U = !I(function() {
                var W = /(?:)/, J = W.exec;
                W.exec = function() {
                  return J.apply(this, arguments);
                };
                var ht = "ab".split(W);
                return ht.length !== 2 || ht[0] !== "a" || ht[1] !== "b";
              });
              i("split", function(W, J, ht) {
                var K;
                return "abbc".split(/(b)*/)[1] == "c" || // eslint-disable-next-line regexp/no-empty-group -- required for testing
                "test".split(/(?:)/, -1).length != 4 || "ab".split(/(?:ab)*/).length != 2 || ".".split(/(.?)(.?)/).length != 4 || // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing
                ".".split(/()()/).length > 1 || "".split(/.?/).length ? K = function(nt, xt) {
                  var bt = y(u(this)), Tt = xt === void 0 ? T : xt >>> 0;
                  if (Tt === 0)
                    return [];
                  if (nt === void 0)
                    return [bt];
                  if (!f(nt))
                    return r(J, bt, nt, Tt);
                  for (var It = [], Lt = (nt.ignoreCase ? "i" : "") + (nt.multiline ? "m" : "") + (nt.unicode ? "u" : "") + (nt.sticky ? "y" : ""), Ut = 0, $ = new RegExp(nt.source, Lt + "g"), gt, ut, st; (gt = r(w, $, bt)) && (ut = $.lastIndex, !(ut > Ut && (R(It, N(bt, Ut, gt.index)), gt.length > 1 && gt.index < bt.length && o(F, It, e(gt, 1)), st = gt[0].length, Ut = ut, It.length >= Tt))); )
                    $.lastIndex === gt.index && $.lastIndex++;
                  return Ut === bt.length ? (st || !b($, "")) && R(It, "") : R(It, N(bt, Ut)), It.length > Tt ? e(It, 0, Tt) : It;
                } : "0".split(void 0, 0).length ? K = function(nt, xt) {
                  return nt === void 0 && xt === 0 ? [] : r(J, this, nt, xt);
                } : K = J, [
                  // `String.prototype.split` method
                  // https://tc39.es/ecma262/#sec-string.prototype.split
                  function(xt, bt) {
                    var Tt = u(this), It = xt == null ? void 0 : p(xt, W);
                    return It ? r(It, xt, Tt, bt) : r(K, y(Tt), xt, bt);
                  },
                  // `RegExp.prototype[@@split]` method
                  // https://tc39.es/ecma262/#sec-regexp.prototype-@@split
                  //
                  // NOTE: This cannot be properly polyfilled in engines that don't support
                  // the 'y' flag.
                  function(nt, xt) {
                    var bt = l(this), Tt = y(nt), It = ht(K, bt, Tt, xt, K !== J);
                    if (It.done)
                      return It.value;
                    var Lt = h(bt, RegExp), Ut = bt.unicode, $ = (bt.ignoreCase ? "i" : "") + (bt.multiline ? "m" : "") + (bt.unicode ? "u" : "") + (E ? "g" : "y"), gt = new Lt(E ? "^(?:" + bt.source + ")" : bt, $), ut = xt === void 0 ? T : xt >>> 0;
                    if (ut === 0)
                      return [];
                    if (Tt.length === 0)
                      return m(gt, Tt) === null ? [Tt] : [];
                    for (var st = 0, yt = 0, G = []; yt < Tt.length; ) {
                      gt.lastIndex = E ? 0 : yt;
                      var Et = m(gt, E ? N(Tt, yt) : Tt), k;
                      if (Et === null || (k = A(v(gt.lastIndex + (E ? yt : 0)), Tt.length)) === st)
                        yt = a(Tt, yt, Ut);
                      else {
                        if (R(G, N(Tt, st, yt)), G.length === ut)
                          return G;
                        for (var S = 1; S <= Et.length - 1; S++)
                          if (R(G, Et[S]), G.length === ut)
                            return G;
                        yt = st = k;
                      }
                    }
                    return R(G, N(Tt, st)), G;
                  }
                ];
              }, !U, E);
            }
          ),
          /***/
          54902: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(75304), n = t(13881);
              o({ target: "String", proto: !0, forced: n("strike") }, {
                strike: function() {
                  return r(this, "strike", "", "");
                }
              });
            }
          ),
          /***/
          29897: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(10287).trim, n = t(68487);
              o({ target: "String", proto: !0, forced: n("trim") }, {
                trim: function() {
                  return r(this);
                }
              });
            }
          ),
          /***/
          52729: (
            /***/
            function(c, d, t) {
              var o = t(68308);
              o("asyncIterator");
            }
          ),
          /***/
          86632: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(7493), n = t(98363), i = t(88697), f = t(24792), l = t(75277), u = t(32010), h = t(28967), a = t(86385).f, v = t(73870), y = n.Symbol, p = y && y.prototype;
              if (r && l(y) && (!("description" in p) || // Safari 12 bug
              y().description !== void 0)) {
                var e = {}, m = function() {
                  var b = arguments.length < 1 || arguments[0] === void 0 ? void 0 : h(arguments[0]), R = u(p, this) ? new y(b) : b === void 0 ? y() : y(b);
                  return b === "" && (e[R] = !0), R;
                };
                v(m, y), m.prototype = p, p.constructor = m;
                var w = String(y("test")) == "Symbol(test)", D = i(p.toString), I = i(p.valueOf), E = /^Symbol\((.*)\)[^)]+$/, T = i("".replace), A = i("".slice);
                a(p, "description", {
                  configurable: !0,
                  get: function() {
                    var b = I(this), R = D(b);
                    if (f(e, b))
                      return "";
                    var N = w ? A(R, 7, -1) : T(R, E, "$1");
                    return N === "" ? void 0 : N;
                  }
                }), o({ global: !0, forced: !0 }, {
                  Symbol: m
                });
              }
            }
          ),
          /***/
          61928: (
            /***/
            function(c, d, t) {
              var o = t(68308);
              o("iterator");
            }
          ),
          /***/
          26364: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(98363), n = t(22773), i = t(63530), f = t(79611), l = t(88697), u = t(21178), h = t(7493), a = t(3850), v = t(79044), y = t(24792), p = t(71982), e = t(75277), m = t(52786), w = t(32010), D = t(66681), I = t(83875), E = t(30744), T = t(29580), A = t(383), F = t(28967), b = t(69199), R = t(51569), N = t(60667), U = t(87994), W = t(74938), J = t(89612), ht = t(66012), K = t(86385), nt = t(81513), xt = t(15629), bt = t(35974), Tt = t(53580), It = t(50466), Lt = t(47505), Ut = t(34524), $ = t(52280), gt = t(20127), ut = t(68308), st = t(60878), yt = t(20821), G = t(68671).forEach, Et = It("hidden"), k = "Symbol", S = "prototype", L = $("toPrimitive"), V = yt.set, it = yt.getterFor(k), tt = Object[S], _ = r.Symbol, At = _ && _[S], Rt = r.TypeError, Yt = r.QObject, Gt = n("JSON", "stringify"), Dt = ht.f, ae = K.f, Ae = W.f, xe = nt.f, ce = l([].push), we = Tt("symbols"), zt = Tt("op-symbols"), Qt = Tt("string-to-symbol-registry"), le = Tt("symbol-to-string-registry"), de = Tt("wks"), be = !Yt || !Yt[S] || !Yt[S].findChild, Oe = h && v(function() {
                return R(ae({}, "a", {
                  get: function() {
                    return ae(this, "a", { value: 7 }).a;
                  }
                })).a != 7;
              }) ? function(Q, Jt, te) {
                var Ct = Dt(tt, Jt);
                Ct && delete tt[Jt], ae(Q, Jt, te), Ct && Q !== tt && ae(tt, Jt, Ct);
              } : ae, Fe = function(Q, Jt) {
                var te = we[Q] = R(At);
                return V(te, {
                  type: k,
                  tag: Q,
                  description: Jt
                }), h || (te.description = Jt), te;
              }, Ft = function(Jt, te, Ct) {
                Jt === tt && Ft(zt, te, Ct), I(Jt);
                var Ht = A(te);
                return I(Ct), y(we, Ht) ? (Ct.enumerable ? (y(Jt, Et) && Jt[Et][Ht] && (Jt[Et][Ht] = !1), Ct = R(Ct, { enumerable: b(0, !1) })) : (y(Jt, Et) || ae(Jt, Et, b(1, {})), Jt[Et][Ht] = !0), Oe(Jt, Ht, Ct)) : ae(Jt, Ht, Ct);
              }, fe = function(Jt, te) {
                I(Jt);
                var Ct = T(te), Ht = N(Ct).concat(at(Ct));
                return G(Ht, function(oe) {
                  (!h || f(Y, Ct, oe)) && Ft(Jt, oe, Ct[oe]);
                }), Jt;
              }, ot = function(Jt, te) {
                return te === void 0 ? R(Jt) : fe(R(Jt), te);
              }, Y = function(Jt) {
                var te = A(Jt), Ct = f(xe, this, te);
                return this === tt && y(we, te) && !y(zt, te) ? !1 : Ct || !y(this, te) || !y(we, te) || y(this, Et) && this[Et][te] ? Ct : !0;
              }, j = function(Jt, te) {
                var Ct = T(Jt), Ht = A(te);
                if (!(Ct === tt && y(we, Ht) && !y(zt, Ht))) {
                  var oe = Dt(Ct, Ht);
                  return oe && y(we, Ht) && !(y(Ct, Et) && Ct[Et][Ht]) && (oe.enumerable = !0), oe;
                }
              }, mt = function(Jt) {
                var te = Ae(T(Jt)), Ct = [];
                return G(te, function(Ht) {
                  !y(we, Ht) && !y(Lt, Ht) && ce(Ct, Ht);
                }), Ct;
              }, at = function(Jt) {
                var te = Jt === tt, Ct = Ae(te ? zt : T(Jt)), Ht = [];
                return G(Ct, function(oe) {
                  y(we, oe) && (!te || y(tt, oe)) && ce(Ht, we[oe]);
                }), Ht;
              };
              if (a || (_ = function() {
                if (w(At, this))
                  throw Rt("Symbol is not a constructor");
                var Jt = !arguments.length || arguments[0] === void 0 ? void 0 : F(arguments[0]), te = Ut(Jt), Ct = function(Ht) {
                  this === tt && f(Ct, zt, Ht), y(this, Et) && y(this[Et], te) && (this[Et][te] = !1), Oe(this, te, b(1, Ht));
                };
                return h && be && Oe(tt, te, { configurable: !0, set: Ct }), Fe(te, Jt);
              }, At = _[S], bt(At, "toString", function() {
                return it(this).tag;
              }), bt(_, "withoutSetter", function(Q) {
                return Fe(Ut(Q), Q);
              }), nt.f = Y, K.f = Ft, ht.f = j, U.f = W.f = mt, J.f = at, gt.f = function(Q) {
                return Fe($(Q), Q);
              }, h && (ae(At, "description", {
                configurable: !0,
                get: function() {
                  return it(this).description;
                }
              }), u || bt(tt, "propertyIsEnumerable", Y, { unsafe: !0 }))), o({ global: !0, wrap: !0, forced: !a, sham: !a }, {
                Symbol: _
              }), G(N(de), function(Q) {
                ut(Q);
              }), o({ target: k, stat: !0, forced: !a }, {
                // `Symbol.for` method
                // https://tc39.es/ecma262/#sec-symbol.for
                for: function(Q) {
                  var Jt = F(Q);
                  if (y(Qt, Jt))
                    return Qt[Jt];
                  var te = _(Jt);
                  return Qt[Jt] = te, le[te] = Jt, te;
                },
                // `Symbol.keyFor` method
                // https://tc39.es/ecma262/#sec-symbol.keyfor
                keyFor: function(Jt) {
                  if (!D(Jt))
                    throw Rt(Jt + " is not a symbol");
                  if (y(le, Jt))
                    return le[Jt];
                },
                useSetter: function() {
                  be = !0;
                },
                useSimple: function() {
                  be = !1;
                }
              }), o({ target: "Object", stat: !0, forced: !a, sham: !h }, {
                // `Object.create` method
                // https://tc39.es/ecma262/#sec-object.create
                create: ot,
                // `Object.defineProperty` method
                // https://tc39.es/ecma262/#sec-object.defineproperty
                defineProperty: Ft,
                // `Object.defineProperties` method
                // https://tc39.es/ecma262/#sec-object.defineproperties
                defineProperties: fe,
                // `Object.getOwnPropertyDescriptor` method
                // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
                getOwnPropertyDescriptor: j
              }), o({ target: "Object", stat: !0, forced: !a }, {
                // `Object.getOwnPropertyNames` method
                // https://tc39.es/ecma262/#sec-object.getownpropertynames
                getOwnPropertyNames: mt,
                // `Object.getOwnPropertySymbols` method
                // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
                getOwnPropertySymbols: at
              }), o({ target: "Object", stat: !0, forced: v(function() {
                J.f(1);
              }) }, {
                getOwnPropertySymbols: function(Jt) {
                  return J.f(E(Jt));
                }
              }), Gt) {
                var Wt = !a || v(function() {
                  var Q = _();
                  return Gt([Q]) != "[null]" || Gt({ a: Q }) != "{}" || Gt(Object(Q)) != "{}";
                });
                o({ target: "JSON", stat: !0, forced: Wt }, {
                  // eslint-disable-next-line no-unused-vars -- required for `.length`
                  stringify: function(Jt, te, Ct) {
                    var Ht = xt(arguments), oe = te;
                    if (!(!m(te) && Jt === void 0 || D(Jt)))
                      return p(te) || (te = function(Le, De) {
                        if (e(oe) && (De = f(oe, this, Le, De)), !D(De))
                          return De;
                      }), Ht[1] = te, i(Gt, null, Ht);
                  }
                });
              }
              if (!At[L]) {
                var _t = At.valueOf;
                bt(At, L, function(Q) {
                  return f(_t, this);
                });
              }
              st(_, k), Lt[Et] = !0;
            }
          ),
          /***/
          16543: (
            /***/
            function(c, d, t) {
              var o = t(68308);
              o("toPrimitive");
            }
          ),
          /***/
          33694: (
            /***/
            function(c, d, t) {
              var o = t(68308);
              o("toStringTag");
            }
          ),
          /***/
          21358: (
            /***/
            function(c, d, t) {
              var o = t(88697), r = t(32590), n = t(28794), i = o(n), f = r.aTypedArray, l = r.exportTypedArrayMethod;
              l("copyWithin", function(h, a) {
                return i(f(this), h, a, arguments.length > 2 ? arguments[2] : void 0);
              });
            }
          ),
          /***/
          66887: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(68671).every, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("every", function(l) {
                return r(n(this), l, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          77353: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(79611), n = t(55522), i = o.aTypedArray, f = o.exportTypedArrayMethod;
              f("fill", function(u) {
                var h = arguments.length;
                return r(
                  n,
                  i(this),
                  u,
                  h > 1 ? arguments[1] : void 0,
                  h > 2 ? arguments[2] : void 0
                );
              });
            }
          ),
          /***/
          6366: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(68671).filter, n = t(53687), i = o.aTypedArray, f = o.exportTypedArrayMethod;
              f("filter", function(u) {
                var h = r(i(this), u, arguments.length > 1 ? arguments[1] : void 0);
                return n(this, h);
              });
            }
          ),
          /***/
          65056: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(68671).findIndex, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("findIndex", function(l) {
                return r(n(this), l, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          52372: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(68671).find, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("find", function(l) {
                return r(n(this), l, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          31120: (
            /***/
            function(c, d, t) {
              var o = t(26764);
              o("Float32", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          85569: (
            /***/
            function(c, d, t) {
              var o = t(26764);
              o("Float64", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          53677: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(68671).forEach, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("forEach", function(l) {
                r(n(this), l, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          26875: (
            /***/
            function(c, d, t) {
              var o = t(63231), r = t(32590).exportTypedArrayStaticMethod, n = t(66503);
              r("from", n, o);
            }
          ),
          /***/
          77355: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(37190).includes, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("includes", function(l) {
                return r(n(this), l, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          28784: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(37190).indexOf, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("indexOf", function(l) {
                return r(n(this), l, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          100: (
            /***/
            function(c, d, t) {
              var o = t(26764);
              o("Int16", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          26770: (
            /***/
            function(c, d, t) {
              var o = t(26764);
              o("Int32", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          33324: (
            /***/
            function(c, d, t) {
              var o = t(26764);
              o("Int8", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          98554: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(88697), n = t(55316).PROPER, i = t(32590), f = t(54883), l = t(52280), u = l("iterator"), h = o.Uint8Array, a = r(f.values), v = r(f.keys), y = r(f.entries), p = i.aTypedArray, e = i.exportTypedArrayMethod, m = h && h.prototype[u], w = !!m && m.name === "values", D = function() {
                return a(p(this));
              };
              e("entries", function() {
                return y(p(this));
              }), e("keys", function() {
                return v(p(this));
              }), e("values", D, n && !w), e(u, D, n && !w);
            }
          ),
          /***/
          72403: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(88697), n = o.aTypedArray, i = o.exportTypedArrayMethod, f = r([].join);
              i("join", function(u) {
                return f(n(this), u);
              });
            }
          ),
          /***/
          14312: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(63530), n = t(27837), i = o.aTypedArray, f = o.exportTypedArrayMethod;
              f("lastIndexOf", function(u) {
                var h = arguments.length;
                return r(n, i(this), h > 1 ? [u, arguments[1]] : [u]);
              });
            }
          ),
          /***/
          63444: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(68671).map, n = t(36107), i = o.aTypedArray, f = o.exportTypedArrayMethod;
              f("map", function(u) {
                return r(i(this), u, arguments.length > 1 ? arguments[1] : void 0, function(h, a) {
                  return new (n(h))(a);
                });
              });
            }
          ),
          /***/
          36798: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(86596).right, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("reduceRight", function(l) {
                var u = arguments.length;
                return r(n(this), l, u, u > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          40070: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(86596).left, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("reduce", function(l) {
                var u = arguments.length;
                return r(n(this), l, u, u > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          58036: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = o.aTypedArray, n = o.exportTypedArrayMethod, i = Math.floor;
              n("reverse", function() {
                for (var l = this, u = r(l).length, h = i(u / 2), a = 0, v; a < h; )
                  v = l[a], l[a++] = l[--u], l[u] = v;
                return l;
              });
            }
          ),
          /***/
          27578: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(32590), n = t(47046), i = t(65758), f = t(30744), l = t(79044), u = o.RangeError, h = r.aTypedArray, a = r.exportTypedArrayMethod, v = l(function() {
                new Int8Array(1).set({});
              });
              a("set", function(p) {
                h(this);
                var e = i(arguments.length > 1 ? arguments[1] : void 0, 1), m = this.length, w = f(p), D = n(w), I = 0;
                if (D + e > m)
                  throw u("Wrong length");
                for (; I < D; )
                  this[e + I] = w[I++];
              }, v);
            }
          ),
          /***/
          99641: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(36107), n = t(79044), i = t(15629), f = o.aTypedArray, l = o.exportTypedArrayMethod, u = n(function() {
                new Int8Array(1).slice();
              });
              l("slice", function(a, v) {
                for (var y = i(f(this), a, v), p = r(this), e = 0, m = y.length, w = new p(m); m > e; )
                  w[e] = y[e++];
                return w;
              }, u);
            }
          ),
          /***/
          12298: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(68671).some, n = o.aTypedArray, i = o.exportTypedArrayMethod;
              i("some", function(l) {
                return r(n(this), l, arguments.length > 1 ? arguments[1] : void 0);
              });
            }
          ),
          /***/
          97306: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(88697), n = t(79044), i = t(97676), f = t(2013), l = t(32590), u = t(34631), h = t(80442), a = t(11197), v = t(76929), y = o.Array, p = l.aTypedArray, e = l.exportTypedArrayMethod, m = o.Uint16Array, w = m && r(m.prototype.sort), D = !!w && !(n(function() {
                w(new m(2), null);
              }) && n(function() {
                w(new m(2), {});
              })), I = !!w && !n(function() {
                if (a)
                  return a < 74;
                if (u)
                  return u < 67;
                if (h)
                  return !0;
                if (v)
                  return v < 602;
                var T = new m(516), A = y(516), F, b;
                for (F = 0; F < 516; F++)
                  b = F % 4, T[F] = 515 - F, A[F] = F - 2 * b + 3;
                for (w(T, function(R, N) {
                  return (R / 4 | 0) - (N / 4 | 0);
                }), F = 0; F < 516; F++)
                  if (T[F] !== A[F])
                    return !0;
              }), E = function(T) {
                return function(A, F) {
                  return T !== void 0 ? +T(A, F) || 0 : F !== F ? -1 : A !== A ? 1 : A === 0 && F === 0 ? 1 / A > 0 && 1 / F < 0 ? 1 : -1 : A > F;
                };
              };
              e("sort", function(A) {
                return A !== void 0 && i(A), I ? w(this, A) : f(p(this), E(A));
              }, !I || D);
            }
          ),
          /***/
          25480: (
            /***/
            function(c, d, t) {
              var o = t(32590), r = t(35108), n = t(32565), i = t(36107), f = o.aTypedArray, l = o.exportTypedArrayMethod;
              l("subarray", function(h, a) {
                var v = f(this), y = v.length, p = n(h, y), e = i(v);
                return new e(
                  v.buffer,
                  v.byteOffset + p * v.BYTES_PER_ELEMENT,
                  r((a === void 0 ? y : n(a, y)) - p)
                );
              });
            }
          ),
          /***/
          14314: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(63530), n = t(32590), i = t(79044), f = t(15629), l = o.Int8Array, u = n.aTypedArray, h = n.exportTypedArrayMethod, a = [].toLocaleString, v = !!l && i(function() {
                a.call(new l(1));
              }), y = i(function() {
                return [1, 2].toLocaleString() != new l([1, 2]).toLocaleString();
              }) || !i(function() {
                l.prototype.toLocaleString.call([1, 2]);
              });
              h("toLocaleString", function() {
                return r(
                  a,
                  v ? f(u(this)) : u(this),
                  f(arguments)
                );
              }, y);
            }
          ),
          /***/
          10572: (
            /***/
            function(c, d, t) {
              var o = t(32590).exportTypedArrayMethod, r = t(79044), n = t(98363), i = t(88697), f = n.Uint8Array, l = f && f.prototype || {}, u = [].toString, h = i([].join);
              r(function() {
                u.call({});
              }) && (u = function() {
                return h(this);
              });
              var a = l.toString != u;
              o("toString", u, a);
            }
          ),
          /***/
          51360: (
            /***/
            function(c, d, t) {
              var o = t(26764);
              o("Uint16", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          35779: (
            /***/
            function(c, d, t) {
              var o = t(26764);
              o("Uint32", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          79627: (
            /***/
            function(c, d, t) {
              var o = t(26764);
              o("Uint8", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              });
            }
          ),
          /***/
          71228: (
            /***/
            function(c, d, t) {
              var o = t(26764);
              o("Uint8", function(r) {
                return function(i, f, l) {
                  return r(this, i, f, l);
                };
              }, !0);
            }
          ),
          /***/
          85506: (
            /***/
            function(c, d, t) {
              t(55739);
            }
          ),
          /***/
          4116: (
            /***/
            function(c, d, t) {
              t(62688);
            }
          ),
          /***/
          38634: (
            /***/
            function(c, d, t) {
              t(12382);
            }
          ),
          /***/
          67298: (
            /***/
            function(c, d, t) {
              t(487);
            }
          ),
          /***/
          8108: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(29269), n = t(74443);
              o({ target: "Promise", stat: !0 }, {
                try: function(i) {
                  var f = r.f(this), l = n(i);
                  return (l.error ? f.reject : f.resolve)(l.value), f.promise;
                }
              });
            }
          ),
          /***/
          47639: (
            /***/
            function(c, d, t) {
              t(55797);
            }
          ),
          /***/
          6208: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(12848), n = t(79189), i = t(20379), f = t(45899), l = function(h) {
                if (h && h.forEach !== i)
                  try {
                    f(h, "forEach", i);
                  } catch {
                    h.forEach = i;
                  }
              };
              for (var u in r)
                r[u] && l(o[u] && o[u].prototype);
              l(n);
            }
          ),
          /***/
          68995: (
            /***/
            function(c, d, t) {
              var o = t(98363), r = t(12848), n = t(79189), i = t(54883), f = t(45899), l = t(52280), u = l("iterator"), h = l("toStringTag"), a = i.values, v = function(p, e) {
                if (p) {
                  if (p[u] !== a)
                    try {
                      f(p, u, a);
                    } catch {
                      p[u] = a;
                    }
                  if (p[h] || f(p, h, e), r[e]) {
                    for (var m in i)
                      if (p[m] !== i[m])
                        try {
                          f(p, m, i[m]);
                        } catch {
                          p[m] = i[m];
                        }
                  }
                }
              };
              for (var y in r)
                v(o[y] && o[y].prototype, y);
              v(n, "DOMTokenList");
            }
          ),
          /***/
          87191: (
            /***/
            function(c, d, t) {
              var o = t(19882), r = t(79611);
              o({ target: "URL", proto: !0, enumerable: !0 }, {
                toJSON: function() {
                  return r(URL.prototype.toString, this);
                }
              });
            }
          ),
          /***/
          80623: (
            /***/
            function(c, d, t) {
              var o = t(55047);
              t(68995), c.exports = o;
            }
          ),
          /***/
          27074: (
            /***/
            function(c, d, t) {
              var o = t(806), r = t(77092), n = t(7402), i = t(55278), f = t(80251), l = t(28659), u = Date.prototype.getTime;
              function h(p, e, m) {
                var w = m || {};
                return (w.strict ? n(p, e) : p === e) ? !0 : !p || !e || typeof p != "object" && typeof e != "object" ? w.strict ? n(p, e) : p == e : y(p, e, w);
              }
              function a(p) {
                return p == null;
              }
              function v(p) {
                return !(!p || typeof p != "object" || typeof p.length != "number" || typeof p.copy != "function" || typeof p.slice != "function" || p.length > 0 && typeof p[0] != "number");
              }
              function y(p, e, m) {
                var w, D;
                if (typeof p != typeof e || a(p) || a(e) || p.prototype !== e.prototype || r(p) !== r(e))
                  return !1;
                var I = i(p), E = i(e);
                if (I !== E)
                  return !1;
                if (I || E)
                  return p.source === e.source && f(p) === f(e);
                if (l(p) && l(e))
                  return u.call(p) === u.call(e);
                var T = v(p), A = v(e);
                if (T !== A)
                  return !1;
                if (T || A) {
                  if (p.length !== e.length)
                    return !1;
                  for (w = 0; w < p.length; w++)
                    if (p[w] !== e[w])
                      return !1;
                  return !0;
                }
                if (typeof p != typeof e)
                  return !1;
                try {
                  var F = o(p), b = o(e);
                } catch {
                  return !1;
                }
                if (F.length !== b.length)
                  return !1;
                for (F.sort(), b.sort(), w = F.length - 1; w >= 0; w--)
                  if (F[w] != b[w])
                    return !1;
                for (w = F.length - 1; w >= 0; w--)
                  if (D = F[w], !h(p[D], e[D], m))
                    return !1;
                return !0;
              }
              c.exports = h;
            }
          ),
          /***/
          72656: (
            /***/
            function(c, d, t) {
              var o = t(28198)(), r = t(31801), n = o && r("%Object.defineProperty%", !0);
              if (n)
                try {
                  n({}, "a", { value: 1 });
                } catch {
                  n = !1;
                }
              var i = r("%SyntaxError%"), f = r("%TypeError%"), l = t(93828);
              c.exports = function(h, a, v) {
                if (!h || typeof h != "object" && typeof h != "function")
                  throw new f("`obj` must be an object or a function`");
                if (typeof a != "string" && typeof a != "symbol")
                  throw new f("`property` must be a string or a symbol`");
                if (arguments.length > 3 && typeof arguments[3] != "boolean" && arguments[3] !== null)
                  throw new f("`nonEnumerable`, if provided, must be a boolean or null");
                if (arguments.length > 4 && typeof arguments[4] != "boolean" && arguments[4] !== null)
                  throw new f("`nonWritable`, if provided, must be a boolean or null");
                if (arguments.length > 5 && typeof arguments[5] != "boolean" && arguments[5] !== null)
                  throw new f("`nonConfigurable`, if provided, must be a boolean or null");
                if (arguments.length > 6 && typeof arguments[6] != "boolean")
                  throw new f("`loose`, if provided, must be a boolean");
                var y = arguments.length > 3 ? arguments[3] : null, p = arguments.length > 4 ? arguments[4] : null, e = arguments.length > 5 ? arguments[5] : null, m = arguments.length > 6 ? arguments[6] : !1, w = !!l && l(h, a);
                if (n)
                  n(h, a, {
                    configurable: e === null && w ? w.configurable : !e,
                    enumerable: y === null && w ? w.enumerable : !y,
                    value: v,
                    writable: p === null && w ? w.writable : !p
                  });
                else if (m || !y && !p && !e)
                  h[a] = v;
                else
                  throw new i("This environment does not support defining a property as non-configurable, non-writable, or non-enumerable.");
              };
            }
          ),
          /***/
          19170: (
            /***/
            function(c, d, t) {
              var o = t(806), r = typeof Symbol == "function" && typeof Symbol("foo") == "symbol", n = Object.prototype.toString, i = Array.prototype.concat, f = t(72656), l = function(v) {
                return typeof v == "function" && n.call(v) === "[object Function]";
              }, u = t(28198)(), h = function(v, y, p, e) {
                if (y in v) {
                  if (e === !0) {
                    if (v[y] === p)
                      return;
                  } else if (!l(e) || !e())
                    return;
                }
                u ? f(v, y, p, !0) : f(v, y, p);
              }, a = function(v, y) {
                var p = arguments.length > 2 ? arguments[2] : {}, e = o(y);
                r && (e = i.call(e, Object.getOwnPropertySymbols(y)));
                for (var m = 0; m < e.length; m += 1)
                  h(v, e[m], y[e[m]], p[e[m]]);
              };
              a.supportsDescriptors = !!u, c.exports = a;
            }
          ),
          /***/
          5939: (
            /***/
            function(c) {
              var d = typeof Reflect == "object" ? Reflect : null, t = d && typeof d.apply == "function" ? d.apply : function(A, F, b) {
                return Function.prototype.apply.call(A, F, b);
              }, o;
              d && typeof d.ownKeys == "function" ? o = d.ownKeys : Object.getOwnPropertySymbols ? o = function(A) {
                return Object.getOwnPropertyNames(A).concat(Object.getOwnPropertySymbols(A));
              } : o = function(A) {
                return Object.getOwnPropertyNames(A);
              };
              function r(T) {
                console && console.warn && console.warn(T);
              }
              var n = Number.isNaN || function(A) {
                return A !== A;
              };
              function i() {
                i.init.call(this);
              }
              c.exports = i, c.exports.once = D, i.EventEmitter = i, i.prototype._events = void 0, i.prototype._eventsCount = 0, i.prototype._maxListeners = void 0;
              var f = 10;
              function l(T) {
                if (typeof T != "function")
                  throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof T);
              }
              Object.defineProperty(i, "defaultMaxListeners", {
                enumerable: !0,
                get: function() {
                  return f;
                },
                set: function(T) {
                  if (typeof T != "number" || T < 0 || n(T))
                    throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + T + ".");
                  f = T;
                }
              }), i.init = function() {
                (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) && (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0), this._maxListeners = this._maxListeners || void 0;
              }, i.prototype.setMaxListeners = function(A) {
                if (typeof A != "number" || A < 0 || n(A))
                  throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + A + ".");
                return this._maxListeners = A, this;
              };
              function u(T) {
                return T._maxListeners === void 0 ? i.defaultMaxListeners : T._maxListeners;
              }
              i.prototype.getMaxListeners = function() {
                return u(this);
              }, i.prototype.emit = function(A) {
                for (var F = [], b = 1; b < arguments.length; b++)
                  F.push(arguments[b]);
                var R = A === "error", N = this._events;
                if (N !== void 0)
                  R = R && N.error === void 0;
                else if (!R)
                  return !1;
                if (R) {
                  var U;
                  if (F.length > 0 && (U = F[0]), U instanceof Error)
                    throw U;
                  var W = new Error("Unhandled error." + (U ? " (" + U.message + ")" : ""));
                  throw W.context = U, W;
                }
                var J = N[A];
                if (J === void 0)
                  return !1;
                if (typeof J == "function")
                  t(J, this, F);
                else
                  for (var ht = J.length, K = e(J, ht), b = 0; b < ht; ++b)
                    t(K[b], this, F);
                return !0;
              };
              function h(T, A, F, b) {
                var R, N, U;
                if (l(F), N = T._events, N === void 0 ? (N = T._events = /* @__PURE__ */ Object.create(null), T._eventsCount = 0) : (N.newListener !== void 0 && (T.emit(
                  "newListener",
                  A,
                  F.listener ? F.listener : F
                ), N = T._events), U = N[A]), U === void 0)
                  U = N[A] = F, ++T._eventsCount;
                else if (typeof U == "function" ? U = N[A] = b ? [F, U] : [U, F] : b ? U.unshift(F) : U.push(F), R = u(T), R > 0 && U.length > R && !U.warned) {
                  U.warned = !0;
                  var W = new Error("Possible EventEmitter memory leak detected. " + U.length + " " + String(A) + " listeners added. Use emitter.setMaxListeners() to increase limit");
                  W.name = "MaxListenersExceededWarning", W.emitter = T, W.type = A, W.count = U.length, r(W);
                }
                return T;
              }
              i.prototype.addListener = function(A, F) {
                return h(this, A, F, !1);
              }, i.prototype.on = i.prototype.addListener, i.prototype.prependListener = function(A, F) {
                return h(this, A, F, !0);
              };
              function a() {
                if (!this.fired)
                  return this.target.removeListener(this.type, this.wrapFn), this.fired = !0, arguments.length === 0 ? this.listener.call(this.target) : this.listener.apply(this.target, arguments);
              }
              function v(T, A, F) {
                var b = { fired: !1, wrapFn: void 0, target: T, type: A, listener: F }, R = a.bind(b);
                return R.listener = F, b.wrapFn = R, R;
              }
              i.prototype.once = function(A, F) {
                return l(F), this.on(A, v(this, A, F)), this;
              }, i.prototype.prependOnceListener = function(A, F) {
                return l(F), this.prependListener(A, v(this, A, F)), this;
              }, i.prototype.removeListener = function(A, F) {
                var b, R, N, U, W;
                if (l(F), R = this._events, R === void 0)
                  return this;
                if (b = R[A], b === void 0)
                  return this;
                if (b === F || b.listener === F)
                  --this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : (delete R[A], R.removeListener && this.emit("removeListener", A, b.listener || F));
                else if (typeof b != "function") {
                  for (N = -1, U = b.length - 1; U >= 0; U--)
                    if (b[U] === F || b[U].listener === F) {
                      W = b[U].listener, N = U;
                      break;
                    }
                  if (N < 0)
                    return this;
                  N === 0 ? b.shift() : m(b, N), b.length === 1 && (R[A] = b[0]), R.removeListener !== void 0 && this.emit("removeListener", A, W || F);
                }
                return this;
              }, i.prototype.off = i.prototype.removeListener, i.prototype.removeAllListeners = function(A) {
                var F, b, R;
                if (b = this._events, b === void 0)
                  return this;
                if (b.removeListener === void 0)
                  return arguments.length === 0 ? (this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0) : b[A] !== void 0 && (--this._eventsCount === 0 ? this._events = /* @__PURE__ */ Object.create(null) : delete b[A]), this;
                if (arguments.length === 0) {
                  var N = Object.keys(b), U;
                  for (R = 0; R < N.length; ++R)
                    U = N[R], U !== "removeListener" && this.removeAllListeners(U);
                  return this.removeAllListeners("removeListener"), this._events = /* @__PURE__ */ Object.create(null), this._eventsCount = 0, this;
                }
                if (F = b[A], typeof F == "function")
                  this.removeListener(A, F);
                else if (F !== void 0)
                  for (R = F.length - 1; R >= 0; R--)
                    this.removeListener(A, F[R]);
                return this;
              };
              function y(T, A, F) {
                var b = T._events;
                if (b === void 0)
                  return [];
                var R = b[A];
                return R === void 0 ? [] : typeof R == "function" ? F ? [R.listener || R] : [R] : F ? w(R) : e(R, R.length);
              }
              i.prototype.listeners = function(A) {
                return y(this, A, !0);
              }, i.prototype.rawListeners = function(A) {
                return y(this, A, !1);
              }, i.listenerCount = function(T, A) {
                return typeof T.listenerCount == "function" ? T.listenerCount(A) : p.call(T, A);
              }, i.prototype.listenerCount = p;
              function p(T) {
                var A = this._events;
                if (A !== void 0) {
                  var F = A[T];
                  if (typeof F == "function")
                    return 1;
                  if (F !== void 0)
                    return F.length;
                }
                return 0;
              }
              i.prototype.eventNames = function() {
                return this._eventsCount > 0 ? o(this._events) : [];
              };
              function e(T, A) {
                for (var F = new Array(A), b = 0; b < A; ++b)
                  F[b] = T[b];
                return F;
              }
              function m(T, A) {
                for (; A + 1 < T.length; A++)
                  T[A] = T[A + 1];
                T.pop();
              }
              function w(T) {
                for (var A = new Array(T.length), F = 0; F < A.length; ++F)
                  A[F] = T[F].listener || T[F];
                return A;
              }
              function D(T, A) {
                return new Promise(function(F, b) {
                  function R(U) {
                    T.removeListener(A, N), b(U);
                  }
                  function N() {
                    typeof T.removeListener == "function" && T.removeListener("error", R), F([].slice.call(arguments));
                  }
                  E(T, A, N, { once: !0 }), A !== "error" && I(T, R, { once: !0 });
                });
              }
              function I(T, A, F) {
                typeof T.on == "function" && E(T, "error", A, F);
              }
              function E(T, A, F, b) {
                if (typeof T.on == "function")
                  b.once ? T.once(A, F) : T.on(A, F);
                else if (typeof T.addEventListener == "function")
                  T.addEventListener(A, function R(N) {
                    b.once && T.removeEventListener(A, R), F(N);
                  });
                else
                  throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof T);
              }
            }
          ),
          /***/
          88706: (
            /***/
            function(c, d, t) {
              c.exports = function() {
                if (typeof globalThis == "object")
                  return globalThis;
                var o;
                try {
                  o = this || new Function("return this")();
                } catch {
                  if (typeof window == "object")
                    return window;
                  if (typeof self == "object")
                    return self;
                  if (typeof t.g < "u")
                    return t.g;
                }
                return o;
              }();
            }
          ),
          /***/
          94843: (
            /***/
            function(c, d, t) {
              var o = t(5443), r = Object.prototype.toString, n = Object.prototype.hasOwnProperty, i = function(a, v, y) {
                for (var p = 0, e = a.length; p < e; p++)
                  n.call(a, p) && (y == null ? v(a[p], p, a) : v.call(y, a[p], p, a));
              }, f = function(a, v, y) {
                for (var p = 0, e = a.length; p < e; p++)
                  y == null ? v(a.charAt(p), p, a) : v.call(y, a.charAt(p), p, a);
              }, l = function(a, v, y) {
                for (var p in a)
                  n.call(a, p) && (y == null ? v(a[p], p, a) : v.call(y, a[p], p, a));
              }, u = function(a, v, y) {
                if (!o(v))
                  throw new TypeError("iterator must be a function");
                var p;
                arguments.length >= 3 && (p = y), r.call(a) === "[object Array]" ? i(a, v, p) : typeof a == "string" ? f(a, v, p) : l(a, v, p);
              };
              c.exports = u;
            }
          ),
          /***/
          19930: (
            /***/
            function(c) {
              var d = "Function.prototype.bind called on incompatible ", t = Object.prototype.toString, o = Math.max, r = "[object Function]", n = function(u, h) {
                for (var a = [], v = 0; v < u.length; v += 1)
                  a[v] = u[v];
                for (var y = 0; y < h.length; y += 1)
                  a[y + u.length] = h[y];
                return a;
              }, i = function(u, h) {
                for (var a = [], v = h || 0, y = 0; v < u.length; v += 1, y += 1)
                  a[y] = u[v];
                return a;
              }, f = function(l, u) {
                for (var h = "", a = 0; a < l.length; a += 1)
                  h += l[a], a + 1 < l.length && (h += u);
                return h;
              };
              c.exports = function(u) {
                var h = this;
                if (typeof h != "function" || t.apply(h) !== r)
                  throw new TypeError(d + h);
                for (var a = i(arguments, 1), v, y = function() {
                  if (this instanceof v) {
                    var D = h.apply(
                      this,
                      n(a, arguments)
                    );
                    return Object(D) === D ? D : this;
                  }
                  return h.apply(
                    u,
                    n(a, arguments)
                  );
                }, p = o(0, h.length - a.length), e = [], m = 0; m < p; m++)
                  e[m] = "$" + m;
                if (v = Function("binder", "return function (" + f(e, ",") + "){ return binder.apply(this,arguments); }")(y), h.prototype) {
                  var w = function() {
                  };
                  w.prototype = h.prototype, v.prototype = new w(), w.prototype = null;
                }
                return v;
              };
            }
          ),
          /***/
          21930: (
            /***/
            function(c, d, t) {
              var o = t(19930);
              c.exports = Function.prototype.bind || o;
            }
          ),
          /***/
          87105: (
            /***/
            function(c) {
              var d = function() {
                return typeof function() {
                }.name == "string";
              }, t = Object.getOwnPropertyDescriptor;
              if (t)
                try {
                  t([], "length");
                } catch {
                  t = null;
                }
              d.functionsHaveConfigurableNames = function() {
                if (!d() || !t)
                  return !1;
                var n = t(function() {
                }, "name");
                return !!n && !!n.configurable;
              };
              var o = Function.prototype.bind;
              d.boundFunctionsHaveNames = function() {
                return d() && typeof o == "function" && function() {
                }.bind().name !== "";
              }, c.exports = d;
            }
          ),
          /***/
          31801: (
            /***/
            function(c, d, t) {
              var o, r = SyntaxError, n = Function, i = TypeError, f = function(K) {
                try {
                  return n('"use strict"; return (' + K + ").constructor;")();
                } catch {
                }
              }, l = Object.getOwnPropertyDescriptor;
              if (l)
                try {
                  l({}, "");
                } catch {
                  l = null;
                }
              var u = function() {
                throw new i();
              }, h = l ? function() {
                try {
                  return arguments.callee, u;
                } catch {
                  try {
                    return l(arguments, "callee").get;
                  } catch {
                    return u;
                  }
                }
              }() : u, a = t(99905)(), v = t(11856)(), y = Object.getPrototypeOf || (v ? function(K) {
                return K.__proto__;
              } : null), p = {}, e = typeof Uint8Array > "u" || !y ? o : y(Uint8Array), m = {
                "%AggregateError%": typeof AggregateError > "u" ? o : AggregateError,
                "%Array%": Array,
                "%ArrayBuffer%": typeof ArrayBuffer > "u" ? o : ArrayBuffer,
                "%ArrayIteratorPrototype%": a && y ? y([][Symbol.iterator]()) : o,
                "%AsyncFromSyncIteratorPrototype%": o,
                "%AsyncFunction%": p,
                "%AsyncGenerator%": p,
                "%AsyncGeneratorFunction%": p,
                "%AsyncIteratorPrototype%": p,
                "%Atomics%": typeof Atomics > "u" ? o : Atomics,
                "%BigInt%": typeof BigInt > "u" ? o : BigInt,
                "%BigInt64Array%": typeof BigInt64Array > "u" ? o : BigInt64Array,
                "%BigUint64Array%": typeof BigUint64Array > "u" ? o : BigUint64Array,
                "%Boolean%": Boolean,
                "%DataView%": typeof DataView > "u" ? o : DataView,
                "%Date%": Date,
                "%decodeURI%": decodeURI,
                "%decodeURIComponent%": decodeURIComponent,
                "%encodeURI%": encodeURI,
                "%encodeURIComponent%": encodeURIComponent,
                "%Error%": Error,
                "%eval%": eval,
                // eslint-disable-line no-eval
                "%EvalError%": EvalError,
                "%Float32Array%": typeof Float32Array > "u" ? o : Float32Array,
                "%Float64Array%": typeof Float64Array > "u" ? o : Float64Array,
                "%FinalizationRegistry%": typeof FinalizationRegistry > "u" ? o : FinalizationRegistry,
                "%Function%": n,
                "%GeneratorFunction%": p,
                "%Int8Array%": typeof Int8Array > "u" ? o : Int8Array,
                "%Int16Array%": typeof Int16Array > "u" ? o : Int16Array,
                "%Int32Array%": typeof Int32Array > "u" ? o : Int32Array,
                "%isFinite%": isFinite,
                "%isNaN%": isNaN,
                "%IteratorPrototype%": a && y ? y(y([][Symbol.iterator]())) : o,
                "%JSON%": typeof JSON == "object" ? JSON : o,
                "%Map%": typeof Map > "u" ? o : Map,
                "%MapIteratorPrototype%": typeof Map > "u" || !a || !y ? o : y((/* @__PURE__ */ new Map())[Symbol.iterator]()),
                "%Math%": Math,
                "%Number%": Number,
                "%Object%": Object,
                "%parseFloat%": parseFloat,
                "%parseInt%": parseInt,
                "%Promise%": typeof Promise > "u" ? o : Promise,
                "%Proxy%": typeof Proxy > "u" ? o : Proxy,
                "%RangeError%": RangeError,
                "%ReferenceError%": ReferenceError,
                "%Reflect%": typeof Reflect > "u" ? o : Reflect,
                "%RegExp%": RegExp,
                "%Set%": typeof Set > "u" ? o : Set,
                "%SetIteratorPrototype%": typeof Set > "u" || !a || !y ? o : y((/* @__PURE__ */ new Set())[Symbol.iterator]()),
                "%SharedArrayBuffer%": typeof SharedArrayBuffer > "u" ? o : SharedArrayBuffer,
                "%String%": String,
                "%StringIteratorPrototype%": a && y ? y(""[Symbol.iterator]()) : o,
                "%Symbol%": a ? Symbol : o,
                "%SyntaxError%": r,
                "%ThrowTypeError%": h,
                "%TypedArray%": e,
                "%TypeError%": i,
                "%Uint8Array%": typeof Uint8Array > "u" ? o : Uint8Array,
                "%Uint8ClampedArray%": typeof Uint8ClampedArray > "u" ? o : Uint8ClampedArray,
                "%Uint16Array%": typeof Uint16Array > "u" ? o : Uint16Array,
                "%Uint32Array%": typeof Uint32Array > "u" ? o : Uint32Array,
                "%URIError%": URIError,
                "%WeakMap%": typeof WeakMap > "u" ? o : WeakMap,
                "%WeakRef%": typeof WeakRef > "u" ? o : WeakRef,
                "%WeakSet%": typeof WeakSet > "u" ? o : WeakSet
              };
              if (y)
                try {
                  null.error;
                } catch (K) {
                  var w = y(y(K));
                  m["%Error.prototype%"] = w;
                }
              var D = function K(nt) {
                var xt;
                if (nt === "%AsyncFunction%")
                  xt = f("async function () {}");
                else if (nt === "%GeneratorFunction%")
                  xt = f("function* () {}");
                else if (nt === "%AsyncGeneratorFunction%")
                  xt = f("async function* () {}");
                else if (nt === "%AsyncGenerator%") {
                  var bt = K("%AsyncGeneratorFunction%");
                  bt && (xt = bt.prototype);
                } else if (nt === "%AsyncIteratorPrototype%") {
                  var Tt = K("%AsyncGenerator%");
                  Tt && y && (xt = y(Tt.prototype));
                }
                return m[nt] = xt, xt;
              }, I = {
                "%ArrayBufferPrototype%": ["ArrayBuffer", "prototype"],
                "%ArrayPrototype%": ["Array", "prototype"],
                "%ArrayProto_entries%": ["Array", "prototype", "entries"],
                "%ArrayProto_forEach%": ["Array", "prototype", "forEach"],
                "%ArrayProto_keys%": ["Array", "prototype", "keys"],
                "%ArrayProto_values%": ["Array", "prototype", "values"],
                "%AsyncFunctionPrototype%": ["AsyncFunction", "prototype"],
                "%AsyncGenerator%": ["AsyncGeneratorFunction", "prototype"],
                "%AsyncGeneratorPrototype%": ["AsyncGeneratorFunction", "prototype", "prototype"],
                "%BooleanPrototype%": ["Boolean", "prototype"],
                "%DataViewPrototype%": ["DataView", "prototype"],
                "%DatePrototype%": ["Date", "prototype"],
                "%ErrorPrototype%": ["Error", "prototype"],
                "%EvalErrorPrototype%": ["EvalError", "prototype"],
                "%Float32ArrayPrototype%": ["Float32Array", "prototype"],
                "%Float64ArrayPrototype%": ["Float64Array", "prototype"],
                "%FunctionPrototype%": ["Function", "prototype"],
                "%Generator%": ["GeneratorFunction", "prototype"],
                "%GeneratorPrototype%": ["GeneratorFunction", "prototype", "prototype"],
                "%Int8ArrayPrototype%": ["Int8Array", "prototype"],
                "%Int16ArrayPrototype%": ["Int16Array", "prototype"],
                "%Int32ArrayPrototype%": ["Int32Array", "prototype"],
                "%JSONParse%": ["JSON", "parse"],
                "%JSONStringify%": ["JSON", "stringify"],
                "%MapPrototype%": ["Map", "prototype"],
                "%NumberPrototype%": ["Number", "prototype"],
                "%ObjectPrototype%": ["Object", "prototype"],
                "%ObjProto_toString%": ["Object", "prototype", "toString"],
                "%ObjProto_valueOf%": ["Object", "prototype", "valueOf"],
                "%PromisePrototype%": ["Promise", "prototype"],
                "%PromiseProto_then%": ["Promise", "prototype", "then"],
                "%Promise_all%": ["Promise", "all"],
                "%Promise_reject%": ["Promise", "reject"],
                "%Promise_resolve%": ["Promise", "resolve"],
                "%RangeErrorPrototype%": ["RangeError", "prototype"],
                "%ReferenceErrorPrototype%": ["ReferenceError", "prototype"],
                "%RegExpPrototype%": ["RegExp", "prototype"],
                "%SetPrototype%": ["Set", "prototype"],
                "%SharedArrayBufferPrototype%": ["SharedArrayBuffer", "prototype"],
                "%StringPrototype%": ["String", "prototype"],
                "%SymbolPrototype%": ["Symbol", "prototype"],
                "%SyntaxErrorPrototype%": ["SyntaxError", "prototype"],
                "%TypedArrayPrototype%": ["TypedArray", "prototype"],
                "%TypeErrorPrototype%": ["TypeError", "prototype"],
                "%Uint8ArrayPrototype%": ["Uint8Array", "prototype"],
                "%Uint8ClampedArrayPrototype%": ["Uint8ClampedArray", "prototype"],
                "%Uint16ArrayPrototype%": ["Uint16Array", "prototype"],
                "%Uint32ArrayPrototype%": ["Uint32Array", "prototype"],
                "%URIErrorPrototype%": ["URIError", "prototype"],
                "%WeakMapPrototype%": ["WeakMap", "prototype"],
                "%WeakSetPrototype%": ["WeakSet", "prototype"]
              }, E = t(21930), T = t(89429), A = E.call(Function.call, Array.prototype.concat), F = E.call(Function.apply, Array.prototype.splice), b = E.call(Function.call, String.prototype.replace), R = E.call(Function.call, String.prototype.slice), N = E.call(Function.call, RegExp.prototype.exec), U = /[^%.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|%$))/g, W = /\\(\\)?/g, J = function(nt) {
                var xt = R(nt, 0, 1), bt = R(nt, -1);
                if (xt === "%" && bt !== "%")
                  throw new r("invalid intrinsic syntax, expected closing `%`");
                if (bt === "%" && xt !== "%")
                  throw new r("invalid intrinsic syntax, expected opening `%`");
                var Tt = [];
                return b(nt, U, function(It, Lt, Ut, $) {
                  Tt[Tt.length] = Ut ? b($, W, "$1") : Lt || It;
                }), Tt;
              }, ht = function(nt, xt) {
                var bt = nt, Tt;
                if (T(I, bt) && (Tt = I[bt], bt = "%" + Tt[0] + "%"), T(m, bt)) {
                  var It = m[bt];
                  if (It === p && (It = D(bt)), typeof It > "u" && !xt)
                    throw new i("intrinsic " + nt + " exists, but is not available. Please file an issue!");
                  return {
                    alias: Tt,
                    name: bt,
                    value: It
                  };
                }
                throw new r("intrinsic " + nt + " does not exist!");
              };
              c.exports = function(nt, xt) {
                if (typeof nt != "string" || nt.length === 0)
                  throw new i("intrinsic name must be a non-empty string");
                if (arguments.length > 1 && typeof xt != "boolean")
                  throw new i('"allowMissing" argument must be a boolean');
                if (N(/^%?[^%]*%?$/, nt) === null)
                  throw new r("`%` may not be present anywhere but at the beginning and end of the intrinsic name");
                var bt = J(nt), Tt = bt.length > 0 ? bt[0] : "", It = ht("%" + Tt + "%", xt), Lt = It.name, Ut = It.value, $ = !1, gt = It.alias;
                gt && (Tt = gt[0], F(bt, A([0, 1], gt)));
                for (var ut = 1, st = !0; ut < bt.length; ut += 1) {
                  var yt = bt[ut], G = R(yt, 0, 1), Et = R(yt, -1);
                  if ((G === '"' || G === "'" || G === "`" || Et === '"' || Et === "'" || Et === "`") && G !== Et)
                    throw new r("property names with quotes must have matching quotes");
                  if ((yt === "constructor" || !st) && ($ = !0), Tt += "." + yt, Lt = "%" + Tt + "%", T(m, Lt))
                    Ut = m[Lt];
                  else if (Ut != null) {
                    if (!(yt in Ut)) {
                      if (!xt)
                        throw new i("base intrinsic for " + nt + " exists, but the property is not available.");
                      return;
                    }
                    if (l && ut + 1 >= bt.length) {
                      var k = l(Ut, yt);
                      st = !!k, st && "get" in k && !("originalValue" in k.get) ? Ut = k.get : Ut = Ut[yt];
                    } else
                      st = T(Ut, yt), Ut = Ut[yt];
                    st && !$ && (m[Lt] = Ut);
                  }
                }
                return Ut;
              };
            }
          ),
          /***/
          93828: (
            /***/
            function(c, d, t) {
              var o = t(31801), r = o("%Object.getOwnPropertyDescriptor%", !0);
              if (r)
                try {
                  r([], "length");
                } catch {
                  r = null;
                }
              c.exports = r;
            }
          ),
          /***/
          28198: (
            /***/
            function(c, d, t) {
              var o = t(31801), r = o("%Object.defineProperty%", !0), n = function() {
                if (r)
                  try {
                    return r({}, "a", { value: 1 }), !0;
                  } catch {
                    return !1;
                  }
                return !1;
              };
              n.hasArrayLengthDefineBug = function() {
                if (!n())
                  return null;
                try {
                  return r([], "length", { value: 1 }).length !== 1;
                } catch {
                  return !0;
                }
              }, c.exports = n;
            }
          ),
          /***/
          11856: (
            /***/
            function(c) {
              var d = {
                foo: {}
              }, t = Object;
              c.exports = function() {
                return { __proto__: d }.foo === d.foo && !({ __proto__: null } instanceof t);
              };
            }
          ),
          /***/
          99905: (
            /***/
            function(c, d, t) {
              var o = typeof Symbol < "u" && Symbol, r = t(65682);
              c.exports = function() {
                return typeof o != "function" || typeof Symbol != "function" || typeof o("foo") != "symbol" || typeof Symbol("bar") != "symbol" ? !1 : r();
              };
            }
          ),
          /***/
          65682: (
            /***/
            function(c) {
              c.exports = function() {
                if (typeof Symbol != "function" || typeof Object.getOwnPropertySymbols != "function")
                  return !1;
                if (typeof Symbol.iterator == "symbol")
                  return !0;
                var t = {}, o = Symbol("test"), r = Object(o);
                if (typeof o == "string" || Object.prototype.toString.call(o) !== "[object Symbol]" || Object.prototype.toString.call(r) !== "[object Symbol]")
                  return !1;
                var n = 42;
                t[o] = n;
                for (o in t)
                  return !1;
                if (typeof Object.keys == "function" && Object.keys(t).length !== 0 || typeof Object.getOwnPropertyNames == "function" && Object.getOwnPropertyNames(t).length !== 0)
                  return !1;
                var i = Object.getOwnPropertySymbols(t);
                if (i.length !== 1 || i[0] !== o || !Object.prototype.propertyIsEnumerable.call(t, o))
                  return !1;
                if (typeof Object.getOwnPropertyDescriptor == "function") {
                  var f = Object.getOwnPropertyDescriptor(t, o);
                  if (f.value !== n || f.enumerable !== !0)
                    return !1;
                }
                return !0;
              };
            }
          ),
          /***/
          44111: (
            /***/
            function(c, d, t) {
              var o = t(65682);
              c.exports = function() {
                return o() && !!Symbol.toStringTag;
              };
            }
          ),
          /***/
          89429: (
            /***/
            function(c, d, t) {
              var o = Function.prototype.call, r = Object.prototype.hasOwnProperty, n = t(21930);
              c.exports = n.call(o, r);
            }
          ),
          /***/
          72959: (
            /***/
            function(c, d, t) {
              var o = t(85543).Buffer;
              d._dbcs = a;
              for (var r = -1, n = -2, i = -10, f = -1e3, l = new Array(256), u = -1, h = 0; h < 256; h++)
                l[h] = r;
              function a(e, m) {
                if (this.encodingName = e.encodingName, !e)
                  throw new Error("DBCS codec is called without the data.");
                if (!e.table)
                  throw new Error("Encoding '" + this.encodingName + "' has no data.");
                var w = e.table();
                this.decodeTables = [], this.decodeTables[0] = l.slice(0), this.decodeTableSeq = [];
                for (var D = 0; D < w.length; D++)
                  this._addDecodeChunk(w[D]);
                if (typeof e.gb18030 == "function") {
                  this.gb18030 = e.gb18030();
                  var I = this.decodeTables.length;
                  this.decodeTables.push(l.slice(0));
                  var E = this.decodeTables.length;
                  this.decodeTables.push(l.slice(0));
                  for (var T = this.decodeTables[0], D = 129; D <= 254; D++)
                    for (var A = this.decodeTables[f - T[D]], F = 48; F <= 57; F++) {
                      if (A[F] === r)
                        A[F] = f - I;
                      else if (A[F] > f)
                        throw new Error("gb18030 decode tables conflict at byte 2");
                      for (var b = this.decodeTables[f - A[F]], R = 129; R <= 254; R++) {
                        if (b[R] === r)
                          b[R] = f - E;
                        else {
                          if (b[R] === f - E)
                            continue;
                          if (b[R] > f)
                            throw new Error("gb18030 decode tables conflict at byte 3");
                        }
                        for (var N = this.decodeTables[f - b[R]], U = 48; U <= 57; U++)
                          N[U] === r && (N[U] = n);
                      }
                    }
                }
                this.defaultCharUnicode = m.defaultCharUnicode, this.encodeTable = [], this.encodeTableSeq = [];
                var W = {};
                if (e.encodeSkipVals)
                  for (var D = 0; D < e.encodeSkipVals.length; D++) {
                    var J = e.encodeSkipVals[D];
                    if (typeof J == "number")
                      W[J] = !0;
                    else
                      for (var F = J.from; F <= J.to; F++)
                        W[F] = !0;
                  }
                if (this._fillEncodeTable(0, 0, W), e.encodeAdd)
                  for (var ht in e.encodeAdd)
                    Object.prototype.hasOwnProperty.call(e.encodeAdd, ht) && this._setEncodeChar(ht.charCodeAt(0), e.encodeAdd[ht]);
                this.defCharSB = this.encodeTable[0][m.defaultCharSingleByte.charCodeAt(0)], this.defCharSB === r && (this.defCharSB = this.encodeTable[0]["?"]), this.defCharSB === r && (this.defCharSB = "?".charCodeAt(0));
              }
              a.prototype.encoder = v, a.prototype.decoder = y, a.prototype._getDecodeTrieNode = function(e) {
                for (var m = []; e > 0; e >>>= 8)
                  m.push(e & 255);
                m.length == 0 && m.push(0);
                for (var w = this.decodeTables[0], D = m.length - 1; D > 0; D--) {
                  var I = w[m[D]];
                  if (I == r)
                    w[m[D]] = f - this.decodeTables.length, this.decodeTables.push(w = l.slice(0));
                  else if (I <= f)
                    w = this.decodeTables[f - I];
                  else
                    throw new Error("Overwrite byte in " + this.encodingName + ", addr: " + e.toString(16));
                }
                return w;
              }, a.prototype._addDecodeChunk = function(e) {
                var m = parseInt(e[0], 16), w = this._getDecodeTrieNode(m);
                m = m & 255;
                for (var D = 1; D < e.length; D++) {
                  var I = e[D];
                  if (typeof I == "string")
                    for (var E = 0; E < I.length; ) {
                      var T = I.charCodeAt(E++);
                      if (55296 <= T && T < 56320) {
                        var A = I.charCodeAt(E++);
                        if (56320 <= A && A < 57344)
                          w[m++] = 65536 + (T - 55296) * 1024 + (A - 56320);
                        else
                          throw new Error("Incorrect surrogate pair in " + this.encodingName + " at chunk " + e[0]);
                      } else if (4080 < T && T <= 4095) {
                        for (var F = 4095 - T + 2, b = [], R = 0; R < F; R++)
                          b.push(I.charCodeAt(E++));
                        w[m++] = i - this.decodeTableSeq.length, this.decodeTableSeq.push(b);
                      } else
                        w[m++] = T;
                    }
                  else if (typeof I == "number")
                    for (var N = w[m - 1] + 1, E = 0; E < I; E++)
                      w[m++] = N++;
                  else
                    throw new Error("Incorrect type '" + typeof I + "' given in " + this.encodingName + " at chunk " + e[0]);
                }
                if (m > 255)
                  throw new Error("Incorrect chunk in " + this.encodingName + " at addr " + e[0] + ": too long" + m);
              }, a.prototype._getEncodeBucket = function(e) {
                var m = e >> 8;
                return this.encodeTable[m] === void 0 && (this.encodeTable[m] = l.slice(0)), this.encodeTable[m];
              }, a.prototype._setEncodeChar = function(e, m) {
                var w = this._getEncodeBucket(e), D = e & 255;
                w[D] <= i ? this.encodeTableSeq[i - w[D]][u] = m : w[D] == r && (w[D] = m);
              }, a.prototype._setEncodeSequence = function(e, m) {
                var w = e[0], D = this._getEncodeBucket(w), I = w & 255, E;
                D[I] <= i ? E = this.encodeTableSeq[i - D[I]] : (E = {}, D[I] !== r && (E[u] = D[I]), D[I] = i - this.encodeTableSeq.length, this.encodeTableSeq.push(E));
                for (var T = 1; T < e.length - 1; T++) {
                  var A = E[w];
                  typeof A == "object" ? E = A : (E = E[w] = {}, A !== void 0 && (E[u] = A));
                }
                w = e[e.length - 1], E[w] = m;
              }, a.prototype._fillEncodeTable = function(e, m, w) {
                for (var D = this.decodeTables[e], I = !1, E = {}, T = 0; T < 256; T++) {
                  var A = D[T], F = m + T;
                  if (!w[F])
                    if (A >= 0)
                      this._setEncodeChar(A, F), I = !0;
                    else if (A <= f) {
                      var b = f - A;
                      if (!E[b]) {
                        var R = F << 8 >>> 0;
                        this._fillEncodeTable(b, R, w) ? I = !0 : E[b] = !0;
                      }
                    } else
                      A <= i && (this._setEncodeSequence(this.decodeTableSeq[i - A], F), I = !0);
                }
                return I;
              };
              function v(e, m) {
                this.leadSurrogate = -1, this.seqObj = void 0, this.encodeTable = m.encodeTable, this.encodeTableSeq = m.encodeTableSeq, this.defaultCharSingleByte = m.defCharSB, this.gb18030 = m.gb18030;
              }
              v.prototype.write = function(e) {
                for (var m = o.alloc(e.length * (this.gb18030 ? 4 : 3)), w = this.leadSurrogate, D = this.seqObj, I = -1, E = 0, T = 0; ; ) {
                  if (I === -1) {
                    if (E == e.length)
                      break;
                    var A = e.charCodeAt(E++);
                  } else {
                    var A = I;
                    I = -1;
                  }
                  if (55296 <= A && A < 57344)
                    if (A < 56320)
                      if (w === -1) {
                        w = A;
                        continue;
                      } else
                        w = A, A = r;
                    else
                      w !== -1 ? (A = 65536 + (w - 55296) * 1024 + (A - 56320), w = -1) : A = r;
                  else
                    w !== -1 && (I = A, A = r, w = -1);
                  var F = r;
                  if (D !== void 0 && A != r) {
                    var b = D[A];
                    if (typeof b == "object") {
                      D = b;
                      continue;
                    } else
                      typeof b == "number" ? F = b : b == null && (b = D[u], b !== void 0 && (F = b, I = A));
                    D = void 0;
                  } else if (A >= 0) {
                    var R = this.encodeTable[A >> 8];
                    if (R !== void 0 && (F = R[A & 255]), F <= i) {
                      D = this.encodeTableSeq[i - F];
                      continue;
                    }
                    if (F == r && this.gb18030) {
                      var N = p(this.gb18030.uChars, A);
                      if (N != -1) {
                        var F = this.gb18030.gbChars[N] + (A - this.gb18030.uChars[N]);
                        m[T++] = 129 + Math.floor(F / 12600), F = F % 12600, m[T++] = 48 + Math.floor(F / 1260), F = F % 1260, m[T++] = 129 + Math.floor(F / 10), F = F % 10, m[T++] = 48 + F;
                        continue;
                      }
                    }
                  }
                  F === r && (F = this.defaultCharSingleByte), F < 256 ? m[T++] = F : F < 65536 ? (m[T++] = F >> 8, m[T++] = F & 255) : F < 16777216 ? (m[T++] = F >> 16, m[T++] = F >> 8 & 255, m[T++] = F & 255) : (m[T++] = F >>> 24, m[T++] = F >>> 16 & 255, m[T++] = F >>> 8 & 255, m[T++] = F & 255);
                }
                return this.seqObj = D, this.leadSurrogate = w, m.slice(0, T);
              }, v.prototype.end = function() {
                if (!(this.leadSurrogate === -1 && this.seqObj === void 0)) {
                  var e = o.alloc(10), m = 0;
                  if (this.seqObj) {
                    var w = this.seqObj[u];
                    w !== void 0 && (w < 256 ? e[m++] = w : (e[m++] = w >> 8, e[m++] = w & 255)), this.seqObj = void 0;
                  }
                  return this.leadSurrogate !== -1 && (e[m++] = this.defaultCharSingleByte, this.leadSurrogate = -1), e.slice(0, m);
                }
              }, v.prototype.findIdx = p;
              function y(e, m) {
                this.nodeIdx = 0, this.prevBytes = [], this.decodeTables = m.decodeTables, this.decodeTableSeq = m.decodeTableSeq, this.defaultCharUnicode = m.defaultCharUnicode, this.gb18030 = m.gb18030;
              }
              y.prototype.write = function(e) {
                for (var m = o.alloc(e.length * 2), w = this.nodeIdx, D = this.prevBytes, I = this.prevBytes.length, E = -this.prevBytes.length, T, A = 0, F = 0; A < e.length; A++) {
                  var b = A >= 0 ? e[A] : D[A + I], T = this.decodeTables[w][b];
                  if (!(T >= 0))
                    if (T === r)
                      T = this.defaultCharUnicode.charCodeAt(0), A = E;
                    else if (T === n) {
                      if (A >= 3)
                        var R = (e[A - 3] - 129) * 12600 + (e[A - 2] - 48) * 1260 + (e[A - 1] - 129) * 10 + (b - 48);
                      else
                        var R = (D[A - 3 + I] - 129) * 12600 + ((A - 2 >= 0 ? e[A - 2] : D[A - 2 + I]) - 48) * 1260 + ((A - 1 >= 0 ? e[A - 1] : D[A - 1 + I]) - 129) * 10 + (b - 48);
                      var N = p(this.gb18030.gbChars, R);
                      T = this.gb18030.uChars[N] + R - this.gb18030.gbChars[N];
                    } else if (T <= f) {
                      w = f - T;
                      continue;
                    } else if (T <= i) {
                      for (var U = this.decodeTableSeq[i - T], W = 0; W < U.length - 1; W++)
                        T = U[W], m[F++] = T & 255, m[F++] = T >> 8;
                      T = U[U.length - 1];
                    } else
                      throw new Error("iconv-lite internal error: invalid decoding table value " + T + " at " + w + "/" + b);
                  if (T >= 65536) {
                    T -= 65536;
                    var J = 55296 | T >> 10;
                    m[F++] = J & 255, m[F++] = J >> 8, T = 56320 | T & 1023;
                  }
                  m[F++] = T & 255, m[F++] = T >> 8, w = 0, E = A + 1;
                }
                return this.nodeIdx = w, this.prevBytes = E >= 0 ? Array.prototype.slice.call(e, E) : D.slice(E + I).concat(Array.prototype.slice.call(e)), m.slice(0, F).toString("ucs2");
              }, y.prototype.end = function() {
                for (var e = ""; this.prevBytes.length > 0; ) {
                  e += this.defaultCharUnicode;
                  var m = this.prevBytes.slice(1);
                  this.prevBytes = [], this.nodeIdx = 0, m.length > 0 && (e += this.write(m));
                }
                return this.prevBytes = [], this.nodeIdx = 0, e;
              };
              function p(e, m) {
                if (e[0] > m)
                  return -1;
                for (var w = 0, D = e.length; w < D - 1; ) {
                  var I = w + (D - w + 1 >> 1);
                  e[I] <= m ? w = I : D = I;
                }
                return w;
              }
            }
          ),
          /***/
          27479: (
            /***/
            function(c, d, t) {
              c.exports = {
                // == Japanese/ShiftJIS ====================================================
                // All japanese encodings are based on JIS X set of standards:
                // JIS X 0201 - Single-byte encoding of ASCII + Â¥ + Kana chars at 0xA1-0xDF.
                // JIS X 0208 - Main set of 6879 characters, placed in 94x94 plane, to be encoded by 2 bytes. 
                //              Has several variations in 1978, 1983, 1990 and 1997.
                // JIS X 0212 - Supplementary plane of 6067 chars in 94x94 plane. 1990. Effectively dead.
                // JIS X 0213 - Extension and modern replacement of 0208 and 0212. Total chars: 11233.
                //              2 planes, first is superset of 0208, second - revised 0212.
                //              Introduced in 2000, revised 2004. Some characters are in Unicode Plane 2 (0x2xxxx)
                // Byte encodings are:
                //  * Shift_JIS: Compatible with 0201, uses not defined chars in top half as lead bytes for double-byte
                //               encoding of 0208. Lead byte ranges: 0x81-0x9F, 0xE0-0xEF; Trail byte ranges: 0x40-0x7E, 0x80-0x9E, 0x9F-0xFC.
                //               Windows CP932 is a superset of Shift_JIS. Some companies added more chars, notably KDDI.
                //  * EUC-JP:    Up to 3 bytes per character. Used mostly on *nixes.
                //               0x00-0x7F       - lower part of 0201
                //               0x8E, 0xA1-0xDF - upper part of 0201
                //               (0xA1-0xFE)x2   - 0208 plane (94x94).
                //               0x8F, (0xA1-0xFE)x2 - 0212 plane (94x94).
                //  * JIS X 208: 7-bit, direct encoding of 0208. Byte ranges: 0x21-0x7E (94 values). Uncommon.
                //               Used as-is in ISO2022 family.
                //  * ISO2022-JP: Stateful encoding, with escape sequences to switch between ASCII, 
                //                0201-1976 Roman, 0208-1978, 0208-1983.
                //  * ISO2022-JP-1: Adds esc seq for 0212-1990.
                //  * ISO2022-JP-2: Adds esc seq for GB2313-1980, KSX1001-1992, ISO8859-1, ISO8859-7.
                //  * ISO2022-JP-3: Adds esc seq for 0201-1976 Kana set, 0213-2000 Planes 1, 2.
                //  * ISO2022-JP-2004: Adds 0213-2004 Plane 1.
                //
                // After JIS X 0213 appeared, Shift_JIS-2004, EUC-JISX0213 and ISO2022-JP-2004 followed, with just changing the planes.
                //
                // Overall, it seems that it's a mess :( http://www8.plala.or.jp/tkubota1/unicode-symbols-map2.html
                shiftjis: {
                  type: "_dbcs",
                  table: function() {
                    return t(27014);
                  },
                  encodeAdd: { "Â¥": 92, "â¾": 126 },
                  encodeSkipVals: [{ from: 60736, to: 63808 }]
                },
                csshiftjis: "shiftjis",
                mskanji: "shiftjis",
                sjis: "shiftjis",
                windows31j: "shiftjis",
                ms31j: "shiftjis",
                xsjis: "shiftjis",
                windows932: "shiftjis",
                ms932: "shiftjis",
                932: "shiftjis",
                cp932: "shiftjis",
                eucjp: {
                  type: "_dbcs",
                  table: function() {
                    return t(31532);
                  },
                  encodeAdd: { "Â¥": 92, "â¾": 126 }
                },
                // TODO: KDDI extension to Shift_JIS
                // TODO: IBM CCSID 942 = CP932, but F0-F9 custom chars and other char changes.
                // TODO: IBM CCSID 943 = Shift_JIS = CP932 with original Shift_JIS lower 128 chars.
                // == Chinese/GBK ==========================================================
                // http://en.wikipedia.org/wiki/GBK
                // We mostly implement W3C recommendation: https://www.w3.org/TR/encoding/#gbk-encoder
                // Oldest GB2312 (1981, ~7600 chars) is a subset of CP936
                gb2312: "cp936",
                gb231280: "cp936",
                gb23121980: "cp936",
                csgb2312: "cp936",
                csiso58gb231280: "cp936",
                euccn: "cp936",
                // Microsoft's CP936 is a subset and approximation of GBK.
                windows936: "cp936",
                ms936: "cp936",
                936: "cp936",
                cp936: {
                  type: "_dbcs",
                  table: function() {
                    return t(13336);
                  }
                },
                // GBK (~22000 chars) is an extension of CP936 that added user-mapped chars and some other.
                gbk: {
                  type: "_dbcs",
                  table: function() {
                    return t(13336).concat(t(44346));
                  }
                },
                xgbk: "gbk",
                isoir58: "gbk",
                // GB18030 is an algorithmic extension of GBK.
                // Main source: https://www.w3.org/TR/encoding/#gbk-encoder
                // http://icu-project.org/docs/papers/gb18030.html
                // http://source.icu-project.org/repos/icu/data/trunk/charset/data/xml/gb-18030-2000.xml
                // http://www.khngai.com/chinese/charmap/tblgbk.php?page=0
                gb18030: {
                  type: "_dbcs",
                  table: function() {
                    return t(13336).concat(t(44346));
                  },
                  gb18030: function() {
                    return t(36258);
                  },
                  encodeSkipVals: [128],
                  encodeAdd: { "â¬": 41699 }
                },
                chinese: "gb18030",
                // == Korean ===============================================================
                // EUC-KR, KS_C_5601 and KS X 1001 are exactly the same.
                windows949: "cp949",
                ms949: "cp949",
                949: "cp949",
                cp949: {
                  type: "_dbcs",
                  table: function() {
                    return t(77348);
                  }
                },
                cseuckr: "cp949",
                csksc56011987: "cp949",
                euckr: "cp949",
                isoir149: "cp949",
                korean: "cp949",
                ksc56011987: "cp949",
                ksc56011989: "cp949",
                ksc5601: "cp949",
                // == Big5/Taiwan/Hong Kong ================================================
                // There are lots of tables for Big5 and cp950. Please see the following links for history:
                // http://moztw.org/docs/big5/  http://www.haible.de/bruno/charsets/conversion-tables/Big5.html
                // Variations, in roughly number of defined chars:
                //  * Windows CP 950: Microsoft variant of Big5. Canonical: http://www.unicode.org/Public/MAPPINGS/VENDORS/MICSFT/WINDOWS/CP950.TXT
                //  * Windows CP 951: Microsoft variant of Big5-HKSCS-2001. Seems to be never public. http://me.abelcheung.org/articles/research/what-is-cp951/
                //  * Big5-2003 (Taiwan standard) almost superset of cp950.
                //  * Unicode-at-on (UAO) / Mozilla 1.8. Falling out of use on the Web. Not supported by other browsers.
                //  * Big5-HKSCS (-2001, -2004, -2008). Hong Kong standard. 
                //    many unicode code points moved from PUA to Supplementary plane (U+2XXXX) over the years.
                //    Plus, it has 4 combining sequences.
                //    Seems that Mozilla refused to support it for 10 yrs. https://bugzilla.mozilla.org/show_bug.cgi?id=162431 https://bugzilla.mozilla.org/show_bug.cgi?id=310299
                //    because big5-hkscs is the only encoding to include astral characters in non-algorithmic way.
                //    Implementations are not consistent within browsers; sometimes labeled as just big5.
                //    MS Internet Explorer switches from big5 to big5-hkscs when a patch applied.
                //    Great discussion & recap of what's going on https://bugzilla.mozilla.org/show_bug.cgi?id=912470#c31
                //    In the encoder, it might make sense to support encoding old PUA mappings to Big5 bytes seq-s.
                //    Official spec: http://www.ogcio.gov.hk/en/business/tech_promotion/ccli/terms/doc/2003cmp_2008.txt
                //                   http://www.ogcio.gov.hk/tc/business/tech_promotion/ccli/terms/doc/hkscs-2008-big5-iso.txt
                // 
                // Current understanding of how to deal with Big5(-HKSCS) is in the Encoding Standard, http://encoding.spec.whatwg.org/#big5-encoder
                // Unicode mapping (http://www.unicode.org/Public/MAPPINGS/OBSOLETE/EASTASIA/OTHER/BIG5.TXT) is said to be wrong.
                windows950: "cp950",
                ms950: "cp950",
                950: "cp950",
                cp950: {
                  type: "_dbcs",
                  table: function() {
                    return t(74284);
                  }
                },
                // Big5 has many variations and is an extension of cp950. We use Encoding Standard's as a consensus.
                big5: "big5hkscs",
                big5hkscs: {
                  type: "_dbcs",
                  table: function() {
                    return t(74284).concat(t(63480));
                  },
                  encodeSkipVals: [
                    // Although Encoding Standard says we should avoid encoding to HKSCS area (See Step 1 of
                    // https://encoding.spec.whatwg.org/#index-big5-pointer), we still do it to increase compatibility with ICU.
                    // But if a single unicode point can be encoded both as HKSCS and regular Big5, we prefer the latter.
                    36457,
                    36463,
                    36478,
                    36523,
                    36532,
                    36557,
                    36560,
                    36695,
                    36713,
                    36718,
                    36811,
                    36862,
                    36973,
                    36986,
                    37060,
                    37084,
                    37105,
                    37311,
                    37551,
                    37552,
                    37553,
                    37554,
                    37585,
                    37959,
                    38090,
                    38361,
                    38652,
                    39285,
                    39798,
                    39800,
                    39803,
                    39878,
                    39902,
                    39916,
                    39926,
                    40002,
                    40019,
                    40034,
                    40040,
                    40043,
                    40055,
                    40124,
                    40125,
                    40144,
                    40279,
                    40282,
                    40388,
                    40431,
                    40443,
                    40617,
                    40687,
                    40701,
                    40800,
                    40907,
                    41079,
                    41180,
                    41183,
                    36812,
                    37576,
                    38468,
                    38637,
                    // Step 2 of https://encoding.spec.whatwg.org/#index-big5-pointer: Use last pointer for U+2550, U+255E, U+2561, U+256A, U+5341, or U+5345
                    41636,
                    41637,
                    41639,
                    41638,
                    41676,
                    41678
                  ]
                },
                cnbig5: "big5hkscs",
                csbig5: "big5hkscs",
                xxbig5: "big5hkscs"
              };
            }
          ),
          /***/
          88069: (
            /***/
            function(c, d, t) {
              for (var o = [
                t(95907),
                t(89252),
                t(1710),
                t(92307),
                t(72542),
                t(26518),
                t(34732),
                t(72959),
                t(27479)
              ], r = 0; r < o.length; r++) {
                var n = o[r];
                for (var i in n)
                  Object.prototype.hasOwnProperty.call(n, i) && (d[i] = n[i]);
              }
            }
          ),
          /***/
          95907: (
            /***/
            function(c, d, t) {
              var o = t(85543).Buffer;
              c.exports = {
                // Encodings
                utf8: { type: "_internal", bomAware: !0 },
                cesu8: { type: "_internal", bomAware: !0 },
                unicode11utf8: "utf8",
                ucs2: { type: "_internal", bomAware: !0 },
                utf16le: "ucs2",
                binary: { type: "_internal" },
                base64: { type: "_internal" },
                hex: { type: "_internal" },
                // Codec.
                _internal: r
              };
              function r(a, v) {
                this.enc = a.encodingName, this.bomAware = a.bomAware, this.enc === "base64" ? this.encoder = l : this.enc === "cesu8" && (this.enc = "utf8", this.encoder = u, o.from("eda0bdedb2a9", "hex").toString() !== "ð©" && (this.decoder = h, this.defaultCharUnicode = v.defaultCharUnicode));
              }
              r.prototype.encoder = f, r.prototype.decoder = i;
              var n = t(10301).s;
              n.prototype.end || (n.prototype.end = function() {
              });
              function i(a, v) {
                this.decoder = new n(v.enc);
              }
              i.prototype.write = function(a) {
                return o.isBuffer(a) || (a = o.from(a)), this.decoder.write(a);
              }, i.prototype.end = function() {
                return this.decoder.end();
              };
              function f(a, v) {
                this.enc = v.enc;
              }
              f.prototype.write = function(a) {
                return o.from(a, this.enc);
              }, f.prototype.end = function() {
              };
              function l(a, v) {
                this.prevStr = "";
              }
              l.prototype.write = function(a) {
                a = this.prevStr + a;
                var v = a.length - a.length % 4;
                return this.prevStr = a.slice(v), a = a.slice(0, v), o.from(a, "base64");
              }, l.prototype.end = function() {
                return o.from(this.prevStr, "base64");
              };
              function u(a, v) {
              }
              u.prototype.write = function(a) {
                for (var v = o.alloc(a.length * 3), y = 0, p = 0; p < a.length; p++) {
                  var e = a.charCodeAt(p);
                  e < 128 ? v[y++] = e : e < 2048 ? (v[y++] = 192 + (e >>> 6), v[y++] = 128 + (e & 63)) : (v[y++] = 224 + (e >>> 12), v[y++] = 128 + (e >>> 6 & 63), v[y++] = 128 + (e & 63));
                }
                return v.slice(0, y);
              }, u.prototype.end = function() {
              };
              function h(a, v) {
                this.acc = 0, this.contBytes = 0, this.accBytes = 0, this.defaultCharUnicode = v.defaultCharUnicode;
              }
              h.prototype.write = function(a) {
                for (var v = this.acc, y = this.contBytes, p = this.accBytes, e = "", m = 0; m < a.length; m++) {
                  var w = a[m];
                  (w & 192) !== 128 ? (y > 0 && (e += this.defaultCharUnicode, y = 0), w < 128 ? e += String.fromCharCode(w) : w < 224 ? (v = w & 31, y = 1, p = 1) : w < 240 ? (v = w & 15, y = 2, p = 1) : e += this.defaultCharUnicode) : y > 0 ? (v = v << 6 | w & 63, y--, p++, y === 0 && (p === 2 && v < 128 && v > 0 ? e += this.defaultCharUnicode : p === 3 && v < 2048 ? e += this.defaultCharUnicode : e += String.fromCharCode(v))) : e += this.defaultCharUnicode;
                }
                return this.acc = v, this.contBytes = y, this.accBytes = p, e;
              }, h.prototype.end = function() {
                var a = 0;
                return this.contBytes > 0 && (a += this.defaultCharUnicode), a;
              };
            }
          ),
          /***/
          72542: (
            /***/
            function(c, d, t) {
              var o = t(85543).Buffer;
              d._sbcs = r;
              function r(f, l) {
                if (!f)
                  throw new Error("SBCS codec is called without the data.");
                if (!f.chars || f.chars.length !== 128 && f.chars.length !== 256)
                  throw new Error("Encoding '" + f.type + "' has incorrect 'chars' (must be of len 128 or 256)");
                if (f.chars.length === 128) {
                  for (var u = "", h = 0; h < 128; h++)
                    u += String.fromCharCode(h);
                  f.chars = u + f.chars;
                }
                this.decodeBuf = o.from(f.chars, "ucs2");
                for (var a = o.alloc(65536, l.defaultCharSingleByte.charCodeAt(0)), h = 0; h < f.chars.length; h++)
                  a[f.chars.charCodeAt(h)] = h;
                this.encodeBuf = a;
              }
              r.prototype.encoder = n, r.prototype.decoder = i;
              function n(f, l) {
                this.encodeBuf = l.encodeBuf;
              }
              n.prototype.write = function(f) {
                for (var l = o.alloc(f.length), u = 0; u < f.length; u++)
                  l[u] = this.encodeBuf[f.charCodeAt(u)];
                return l;
              }, n.prototype.end = function() {
              };
              function i(f, l) {
                this.decodeBuf = l.decodeBuf;
              }
              i.prototype.write = function(f) {
                for (var l = this.decodeBuf, u = o.alloc(f.length * 2), h = 0, a = 0, v = 0; v < f.length; v++)
                  h = f[v] * 2, a = v * 2, u[a] = l[h], u[a + 1] = l[h + 1];
                return u.toString("ucs2");
              }, i.prototype.end = function() {
              };
            }
          ),
          /***/
          34732: (
            /***/
            function(c) {
              c.exports = {
                437: "cp437",
                737: "cp737",
                775: "cp775",
                850: "cp850",
                852: "cp852",
                855: "cp855",
                856: "cp856",
                857: "cp857",
                858: "cp858",
                860: "cp860",
                861: "cp861",
                862: "cp862",
                863: "cp863",
                864: "cp864",
                865: "cp865",
                866: "cp866",
                869: "cp869",
                874: "windows874",
                922: "cp922",
                1046: "cp1046",
                1124: "cp1124",
                1125: "cp1125",
                1129: "cp1129",
                1133: "cp1133",
                1161: "cp1161",
                1162: "cp1162",
                1163: "cp1163",
                1250: "windows1250",
                1251: "windows1251",
                1252: "windows1252",
                1253: "windows1253",
                1254: "windows1254",
                1255: "windows1255",
                1256: "windows1256",
                1257: "windows1257",
                1258: "windows1258",
                28591: "iso88591",
                28592: "iso88592",
                28593: "iso88593",
                28594: "iso88594",
                28595: "iso88595",
                28596: "iso88596",
                28597: "iso88597",
                28598: "iso88598",
                28599: "iso88599",
                28600: "iso885910",
                28601: "iso885911",
                28603: "iso885913",
                28604: "iso885914",
                28605: "iso885915",
                28606: "iso885916",
                windows874: {
                  type: "_sbcs",
                  chars: "â¬ï¿½ï¿½ï¿½ï¿½â¦ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½âââââ¢ââï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                },
                win874: "windows874",
                cp874: "windows874",
                windows1250: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âï¿½ââ¦â â¡ï¿½â°Å â¹ÅÅ¤Å½Å¹ï¿½âââââ¢ââï¿½â¢Å¡âºÅÅ¥Å¾ÅºÂ ËËÅÂ¤ÄÂ¦Â§Â¨Â©ÅÂ«Â¬Â­Â®Å»Â°Â±ËÅÂ´ÂµÂ¶Â·Â¸ÄÅÂ»Ä½ËÄ¾Å¼ÅÃÃÄÃÄ¹ÄÃÄÃÄÃÄÃÃÄÄÅÅÃÃÅÃÃÅÅ®ÃÅ°ÃÃÅ¢ÃÅÃ¡Ã¢ÄÃ¤ÄºÄÃ§ÄÃ©ÄÃ«ÄÃ­Ã®ÄÄÅÅÃ³Ã´ÅÃ¶Ã·ÅÅ¯ÃºÅ±Ã¼Ã½Å£Ë"
                },
                win1250: "windows1250",
                cp1250: "windows1250",
                windows1251: {
                  type: "_sbcs",
                  chars: "ÐÐâÑââ¦â â¡â¬â°Ðâ¹ÐÐÐÐÑâââââ¢ââï¿½â¢ÑâºÑÑÑÑÂ ÐÑÐÂ¤ÒÂ¦Â§ÐÂ©ÐÂ«Â¬Â­Â®ÐÂ°Â±ÐÑÒÂµÂ¶Â·ÑâÑÂ»ÑÐÑÑÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ"
                },
                win1251: "windows1251",
                cp1251: "windows1251",
                windows1252: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°Å â¹Åï¿½Å½ï¿½ï¿½âââââ¢ââËâ¢Å¡âºÅï¿½Å¾Å¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                win1252: "windows1252",
                cp1252: "windows1252",
                windows1253: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡ï¿½â°ï¿½â¹ï¿½ï¿½ï¿½ï¿½ï¿½âââââ¢ââï¿½â¢ï¿½âºï¿½ï¿½ï¿½ï¿½Â ÎÎÂ£Â¤Â¥Â¦Â§Â¨Â©ï¿½Â«Â¬Â­Â®âÂ°Â±Â²Â³ÎÂµÂ¶Â·ÎÎÎÂ»ÎÂ½ÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎ Î¡ï¿½Î£Î¤Î¥Î¦Î§Î¨Î©ÎªÎ«Î¬Î­Î®Î¯Î°Î±Î²Î³Î´ÎµÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÏÏÏÏÏÏÏÏÏÏï¿½"
                },
                win1253: "windows1253",
                cp1253: "windows1253",
                windows1254: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°Å â¹Åï¿½ï¿½ï¿½ï¿½âââââ¢ââËâ¢Å¡âºÅï¿½ï¿½Å¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÄÃÃÃÃÃÃÃÃÃÃÃÃÄ°ÅÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÄÃ±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ä±ÅÃ¿"
                },
                win1254: "windows1254",
                cp1254: "windows1254",
                windows1255: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°ï¿½â¹ï¿½ï¿½ï¿½ï¿½ï¿½âââââ¢ââËâ¢ï¿½âºï¿½ï¿½ï¿½ï¿½Â Â¡Â¢Â£âªÂ¥Â¦Â§Â¨Â©ÃÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹Ã·Â»Â¼Â½Â¾Â¿Ö°Ö±Ö²Ö³Ö´ÖµÖ¶Ö·Ö¸Ö¹ÖºÖ»Ö¼Ö½Ö¾Ö¿×××××°×±×²×³×´ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªï¿½ï¿½ââï¿½"
                },
                win1255: "windows1255",
                cp1255: "windows1255",
                windows1256: {
                  type: "_sbcs",
                  chars: "â¬Ù¾âÆââ¦â â¡Ëâ°Ù¹â¹ÅÚÚÚÚ¯âââââ¢ââÚ©â¢ÚâºÅââÚºÂ ØÂ¢Â£Â¤Â¥Â¦Â§Â¨Â©Ú¾Â«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ØÂ»Â¼Â½Â¾ØÛØ¡Ø¢Ø£Ø¤Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµØ¶ÃØ·Ø¸Ø¹ØºÙÙÙÙÃ ÙÃ¢ÙÙÙÙÃ§Ã¨Ã©ÃªÃ«ÙÙÃ®Ã¯ÙÙÙÙÃ´ÙÙÃ·ÙÃ¹ÙÃ»Ã¼ââÛ"
                },
                win1256: "windows1256",
                cp1256: "windows1256",
                windows1257: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âï¿½ââ¦â â¡ï¿½â°ï¿½â¹ï¿½Â¨ËÂ¸ï¿½âââââ¢ââï¿½â¢ï¿½âºï¿½Â¯Ëï¿½Â ï¿½Â¢Â£Â¤ï¿½Â¦Â§ÃÂ©ÅÂ«Â¬Â­Â®ÃÂ°Â±Â²Â³Â´ÂµÂ¶Â·Ã¸Â¹ÅÂ»Â¼Â½Â¾Ã¦ÄÄ®ÄÄÃÃÄÄÄÃÅ¹ÄÄ¢Ä¶ÄªÄ»Å ÅÅÃÅÃÃÃÅ²ÅÅÅªÃÅ»Å½ÃÄÄ¯ÄÄÃ¤Ã¥ÄÄÄÃ©ÅºÄÄ£Ä·Ä«Ä¼Å¡ÅÅÃ³ÅÃµÃ¶Ã·Å³ÅÅÅ«Ã¼Å¼Å¾Ë"
                },
                win1257: "windows1257",
                cp1257: "windows1257",
                windows1258: {
                  type: "_sbcs",
                  chars: "â¬ï¿½âÆââ¦â â¡Ëâ°ï¿½â¹Åï¿½ï¿½ï¿½ï¿½âââââ¢ââËâ¢ï¿½âºÅï¿½ï¿½Å¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÄÃÃÃÃÃÃÃÃÌÃÃÃÄÃÌÃÃÆ ÃÃÃÃÃÃÃÆ¯ÌÃÃ Ã¡Ã¢ÄÃ¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«ÌÃ­Ã®Ã¯ÄÃ±Ì£Ã³Ã´Æ¡Ã¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Æ°â«Ã¿"
                },
                win1258: "windows1258",
                cp1258: "windows1258",
                iso88591: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                cp28591: "iso88591",
                iso88592: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄËÅÂ¤Ä½ÅÂ§Â¨Å ÅÅ¤Å¹Â­Å½Å»Â°ÄËÅÂ´Ä¾ÅËÂ¸Å¡ÅÅ¥ÅºËÅ¾Å¼ÅÃÃÄÃÄ¹ÄÃÄÃÄÃÄÃÃÄÄÅÅÃÃÅÃÃÅÅ®ÃÅ°ÃÃÅ¢ÃÅÃ¡Ã¢ÄÃ¤ÄºÄÃ§ÄÃ©ÄÃ«ÄÃ­Ã®ÄÄÅÅÃ³Ã´ÅÃ¶Ã·ÅÅ¯ÃºÅ±Ã¼Ã½Å£Ë"
                },
                cp28592: "iso88592",
                iso88593: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Ä¦ËÂ£Â¤ï¿½Ä¤Â§Â¨Ä°ÅÄÄ´Â­ï¿½Å»Â°Ä§Â²Â³Â´ÂµÄ¥Â·Â¸Ä±ÅÄÄµÂ½ï¿½Å¼ÃÃÃï¿½ÃÄÄÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ ÃÃÄÃÃÃÃÅ¬ÅÃÃ Ã¡Ã¢ï¿½Ã¤ÄÄÃ§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ï¿½Ã±Ã²Ã³Ã´Ä¡Ã¶Ã·ÄÃ¹ÃºÃ»Ã¼Å­ÅË"
                },
                cp28593: "iso88593",
                iso88594: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄÄ¸ÅÂ¤Ä¨Ä»Â§Â¨Å ÄÄ¢Å¦Â­Å½Â¯Â°ÄËÅÂ´Ä©Ä¼ËÂ¸Å¡ÄÄ£Å§ÅÅ¾ÅÄÃÃÃÃÃÃÄ®ÄÃÄÃÄÃÃÄªÄÅÅÄ¶ÃÃÃÃÃÅ²ÃÃÃÅ¨ÅªÃÄÃ¡Ã¢Ã£Ã¤Ã¥Ã¦Ä¯ÄÃ©ÄÃ«ÄÃ­Ã®Ä«ÄÅÅÄ·Ã´ÃµÃ¶Ã·Ã¸Å³ÃºÃ»Ã¼Å©Å«Ë"
                },
                cp28594: "iso88594",
                iso88595: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÐÐÐÐÐÐÐÐÐÐÐÐÂ­ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑâÑÑÑÑÑÑÑÑÑÑÑÑÂ§ÑÑ"
                },
                cp28595: "iso88595",
                iso88596: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ï¿½ï¿½ï¿½Â¤ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ØÂ­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Øï¿½ï¿½ï¿½Øï¿½Ø¡Ø¢Ø£Ø¤Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµØ¶Ø·Ø¸Ø¹Øºï¿½ï¿½ï¿½ï¿½ï¿½ÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½"
                },
                cp28596: "iso88596",
                iso88597: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ââÂ£â¬â¯Â¦Â§Â¨Â©ÍºÂ«Â¬Â­ï¿½âÂ°Â±Â²Â³ÎÎÎÂ·ÎÎÎÂ»ÎÂ½ÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎ Î¡ï¿½Î£Î¤Î¥Î¦Î§Î¨Î©ÎªÎ«Î¬Î­Î®Î¯Î°Î±Î²Î³Î´ÎµÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÏÏÏÏÏÏÏÏÏÏï¿½"
                },
                cp28597: "iso88597",
                iso88598: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ï¿½Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÃÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹Ã·Â»Â¼Â½Â¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½â××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªï¿½ï¿½ââï¿½"
                },
                cp28598: "iso88598",
                iso88599: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÄÃÃÃÃÃÃÃÃÃÃÃÃÄ°ÅÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÄÃ±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ä±ÅÃ¿"
                },
                cp28599: "iso88599",
                iso885910: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄÄÄ¢ÄªÄ¨Ä¶Â§Ä»ÄÅ Å¦Å½Â­ÅªÅÂ°ÄÄÄ£Ä«Ä©Ä·Â·Ä¼ÄÅ¡Å§Å¾âÅ«ÅÄÃÃÃÃÃÃÄ®ÄÃÄÃÄÃÃÃÃÅÅÃÃÃÃÅ¨ÃÅ²ÃÃÃÃÃÃÄÃ¡Ã¢Ã£Ã¤Ã¥Ã¦Ä¯ÄÃ©ÄÃ«ÄÃ­Ã®Ã¯Ã°ÅÅÃ³Ã´ÃµÃ¶Å©Ã¸Å³ÃºÃ»Ã¼Ã½Ã¾Ä¸"
                },
                cp28600: "iso885910",
                iso885911: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                },
                cp28601: "iso885911",
                iso885913: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ âÂ¢Â£Â¤âÂ¦Â§ÃÂ©ÅÂ«Â¬Â­Â®ÃÂ°Â±Â²Â³âÂµÂ¶Â·Ã¸Â¹ÅÂ»Â¼Â½Â¾Ã¦ÄÄ®ÄÄÃÃÄÄÄÃÅ¹ÄÄ¢Ä¶ÄªÄ»Å ÅÅÃÅÃÃÃÅ²ÅÅÅªÃÅ»Å½ÃÄÄ¯ÄÄÃ¤Ã¥ÄÄÄÃ©ÅºÄÄ£Ä·Ä«Ä¼Å¡ÅÅÃ³ÅÃµÃ¶Ã·Å³ÅÅÅ«Ã¼Å¼Å¾â"
                },
                cp28603: "iso885913",
                iso885914: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ á¸á¸Â£ÄÄá¸Â§áºÂ©áºá¸á»²Â­Â®Å¸á¸á¸Ä Ä¡á¹á¹Â¶á¹áºá¹áºá¹ á»³áºáºá¹¡ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÅ´ÃÃÃÃÃÃá¹ªÃÃÃÃÃÃÅ¶ÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÅµÃ±Ã²Ã³Ã´ÃµÃ¶á¹«Ã¸Ã¹ÃºÃ»Ã¼Ã½Å·Ã¿"
                },
                cp28604: "iso885914",
                iso885915: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£â¬Â¥Å Â§Å¡Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Å½ÂµÂ¶Â·Å¾Â¹ÂºÂ»ÅÅÅ¸Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                cp28605: "iso885915",
                iso885916: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÄÄÅâ¬âÅ Â§Å¡Â©ÈÂ«Å¹Â­ÅºÅ»Â°Â±ÄÅÅ½âÂ¶Â·Å¾ÄÈÂ»ÅÅÅ¸Å¼ÃÃÃÄÃÄÃÃÃÃÃÃÃÃÃÃÄÅÃÃÃÅÃÅÅ°ÃÃÃÃÄÈÃÃ Ã¡Ã¢ÄÃ¤ÄÃ¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯ÄÅÃ²Ã³Ã´ÅÃ¶ÅÅ±Ã¹ÃºÃ»Ã¼ÄÈÃ¿"
                },
                cp28606: "iso885916",
                cp437: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÂ¢Â£Â¥â§ÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿âÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm437: "cp437",
                csibm437: "cp437",
                cp737: {
                  type: "_sbcs",
                  chars: "ÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎÎ Î¡Î£Î¤Î¥Î¦Î§Î¨Î©Î±Î²Î³Î´ÎµÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÏÏÏÏâââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÏÎ¬Î­Î®ÏÎ¯ÏÏÏÏÎÎÎÎÎÎÎÂ±â¥â¤ÎªÎ«Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm737: "cp737",
                csibm737: "cp737",
                cp775: {
                  type: "_sbcs",
                  chars: "ÄÃ¼Ã©ÄÃ¤Ä£Ã¥ÄÅÄÅÅÄ«Å¹ÃÃÃÃ¦ÃÅÃ¶Ä¢Â¢ÅÅÃÃÃ¸Â£ÃÃÂ¤ÄÄªÃ³Å»Å¼ÅºâÂ¦Â©Â®Â¬Â½Â¼ÅÂ«Â»âââââ¤ÄÄÄÄâ£âââÄ®Å âââ´â¬âââ¼Å²Åªâââ©â¦â ââ¬Å½ÄÄÄÄÄ¯Å¡Å³Å«Å¾âââââââÃÃÅÅÃµÃÂµÅÄ¶Ä·Ä»Ä¼ÅÄÅâÂ­Â±âÂ¾Â¶Â§Ã·âÂ°âÂ·Â¹Â³Â²â Â "
                },
                ibm775: "cp775",
                csibm775: "cp775",
                cp850: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÃ¸Â£ÃÃÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿Â®Â¬Â½Â¼Â¡Â«Â»âââââ¤ÃÃÃÂ©â£âââÂ¢Â¥âââ´â¬âââ¼Ã£Ãâââ©â¦â ââ¬Â¤Ã°ÃÃÃÃÄ±ÃÃÃââââÂ¦ÃâÃÃÃÃÃµÃÂµÃ¾ÃÃÃÃÃ½ÃÂ¯Â´Â­Â±âÂ¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm850: "cp850",
                csibm850: "cp850",
                cp852: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Å¯ÄÃ§ÅÃ«ÅÅÃ®Å¹ÃÄÃÄ¹ÄºÃ´Ã¶Ä½Ä¾ÅÅÃÃÅ¤Å¥ÅÃÄÃ¡Ã­Ã³ÃºÄÄÅ½Å¾ÄÄÂ¬ÅºÄÅÂ«Â»âââââ¤ÃÃÄÅâ£âââÅ»Å¼âââ´â¬âââ¼ÄÄâââ©â¦â ââ¬Â¤ÄÄÄÃÄÅÃÃÄââââÅ¢Å®âÃÃÃÅÅÅÅ Å¡ÅÃÅÅ°Ã½ÃÅ£Â´Â­ËËËËÂ§Ã·Â¸Â°Â¨ËÅ±ÅÅâ Â "
                },
                ibm852: "cp852",
                csibm852: "cp852",
                cp855: {
                  type: "_sbcs",
                  chars: "ÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐÑÐ®ÑÐªÐ°ÐÐ±ÐÑÐ¦Ð´ÐÐµÐÑÐ¤Ð³ÐÂ«Â»âââââ¤ÑÐ¥Ð¸Ðâ£âââÐ¹Ðâââ´â¬âââ¼ÐºÐâââ©â¦â ââ¬Â¤Ð»ÐÐ¼ÐÐ½ÐÐ¾ÐÐ¿ââââÐÑâÐ¯ÑÐ ÑÐ¡ÑÐ¢ÑÐ£Ð¶ÐÐ²ÐÑÐ¬âÂ­ÑÐ«Ð·ÐÑÐ¨ÑÐ­ÑÐ©ÑÐ§Â§â Â "
                },
                ibm855: "cp855",
                csibm855: "cp855",
                cp856: {
                  type: "_sbcs",
                  chars: "××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªï¿½Â£ï¿½Ãï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â®Â¬Â½Â¼ï¿½Â«Â»âââââ¤ï¿½ï¿½ï¿½Â©â£âââÂ¢Â¥âââ´â¬âââ¼ï¿½ï¿½âââ©â¦â ââ¬Â¤ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ââââÂ¦ï¿½âï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Âµï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Â¯Â´Â­Â±âÂ¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm856: "cp856",
                csibm856: "cp856",
                cp857: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ä±ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ä°ÃÃÃ¸Â£ÃÅÅÃ¡Ã­Ã³ÃºÃ±ÃÄÄÂ¿Â®Â¬Â½Â¼Â¡Â«Â»âââââ¤ÃÃÃÂ©â£âââÂ¢Â¥âââ´â¬âââ¼Ã£Ãâââ©â¦â ââ¬Â¤ÂºÂªÃÃÃï¿½ÃÃÃââââÂ¦ÃâÃÃÃÃÃµÃÂµï¿½ÃÃÃÃÃ¬Ã¿Â¯Â´Â­Â±ï¿½Â¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm857: "cp857",
                csibm857: "cp857",
                cp858: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÃ¸Â£ÃÃÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿Â®Â¬Â½Â¼Â¡Â«Â»âââââ¤ÃÃÃÂ©â£âââÂ¢Â¥âââ´â¬âââ¼Ã£Ãâââ©â¦â ââ¬Â¤Ã°ÃÃÃÃâ¬ÃÃÃââââÂ¦ÃâÃÃÃÃÃµÃÂµÃ¾ÃÃÃÃÃ½ÃÂ¯Â´Â­Â±âÂ¾Â¶Â§Ã·Â¸Â°Â¨Â·Â¹Â³Â²â Â "
                },
                ibm858: "cp858",
                csibm858: "cp858",
                cp860: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã£Ã ÃÃ§ÃªÃÃ¨ÃÃÃ¬ÃÃÃÃÃÃ´ÃµÃ²ÃÃ¹ÃÃÃÂ¢Â£Ãâ§ÃÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿ÃÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm860: "cp860",
                csibm860: "cp860",
                cp861: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨ÃÃ°ÃÃÃÃÃ¦ÃÃ´Ã¶Ã¾Ã»ÃÃ½ÃÃÃ¸Â£Ãâ§ÆÃ¡Ã­Ã³ÃºÃÃÃÃÂ¿âÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm861: "cp861",
                csibm861: "cp861",
                cp862: {
                  type: "_sbcs",
                  chars: "××××××××××××××××× ×¡×¢×£×¤×¥×¦×§×¨×©×ªÂ¢Â£Â¥â§ÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿âÂ¬Â½Â¼Â¡Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm862: "cp862",
                csibm862: "cp862",
                cp863: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢ÃÃ Â¶Ã§ÃªÃ«Ã¨Ã¯Ã®âÃÂ§ÃÃÃÃ´ÃÃÃ»Ã¹Â¤ÃÃÂ¢Â£ÃÃÆÂ¦Â´Ã³ÃºÂ¨Â¸Â³Â¯ÃâÂ¬Â½Â¼Â¾Â«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm863: "cp863",
                csibm863: "cp863",
                cp864: {
                  type: "_sbcs",
                  chars: `\0\x07\b	
\v\f\r\x1B !"#$Ùª&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~Â°Â·ââââââ¼â¤â¬ââ´ââââÎ²âÏÂ±Â½Â¼âÂ«Â»ï»·ï»¸ï¿½ï¿½ï»»ï»¼ï¿½Â Â­ïºÂ£Â¤ïºï¿½ï¿½ïºïºïºïºØïºïº¡ïº¥Ù Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©ï»Øïº±ïºµïº¹ØÂ¢ïºïºïºïºï»ïºïºïºïºïºïºïºïº£ïº§ïº©ïº«ïº­ïº¯ïº³ïº·ïº»ïº¿ï»ï»ï»ï»Â¦Â¬Ã·Ãï»Ùï»ï»ï»ï»ï»£ï»§ï»«ï»­ï»¯ï»³ïº½ï»ï»ï»ï»¡ï¹½Ùï»¥ï»©ï»¬ï»°ï»²ï»ï»ï»µï»¶ï»ï»ï»±â ï¿½`
                },
                ibm864: "cp864",
                csibm864: "cp864",
                cp865: {
                  type: "_sbcs",
                  chars: "ÃÃ¼Ã©Ã¢Ã¤Ã Ã¥Ã§ÃªÃ«Ã¨Ã¯Ã®Ã¬ÃÃÃÃ¦ÃÃ´Ã¶Ã²Ã»Ã¹Ã¿ÃÃÃ¸Â£Ãâ§ÆÃ¡Ã­Ã³ÃºÃ±ÃÂªÂºÂ¿âÂ¬Â½Â¼Â¡Â«Â¤âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                ibm865: "cp865",
                csibm865: "cp865",
                cp866: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÐÑÐÑÐÑÐÑÂ°âÂ·ââÂ¤â Â "
                },
                ibm866: "cp866",
                csibm866: "cp866",
                cp869: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½Îï¿½Â·Â¬Â¦ââÎâÎÎÎªÎï¿½ï¿½ÎÎ«Â©ÎÂ²Â³Î¬Â£Î­Î®Î¯ÏÎÏÏÎÎÎÎÎÎÎÂ½ÎÎÂ«Â»âââââ¤ÎÎÎÎâ£âââÎÎâââ´â¬âââ¼Î Î¡âââ©â¦â ââ¬Î£Î¤Î¥Î¦Î§Î¨Î©Î±Î²Î³ââââÎ´ÎµâÎ¶Î·Î¸Î¹ÎºÎ»Î¼Î½Î¾Î¿ÏÏÏÏÏÎÂ­Â±ÏÏÏÂ§ÏÎÂ°Â¨ÏÏÎ°Ïâ Â "
                },
                ibm869: "cp869",
                csibm869: "cp869",
                cp922: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®â¾Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÃÅ ÃÃÃÃÃÃÃÃÃÃÃÃÃÅ½ÃÃ Ã¡Ã¢Ã£Ã¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Å¡Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Å¾Ã¿"
                },
                ibm922: "cp922",
                csibm922: "cp922",
                cp1046: {
                  type: "_sbcs",
                  chars: "ïºÃÃ·ï£¶ï£µï£´ï£·ï¹±Ââ ââââââï¹¹ï¹»ï¹½ï¹¿ï¹·ïºï»°ï»³ï»²ï»ï»ï»ï»¶ï»¸ï»ºï»¼Â ï£ºï£¹ï£¸Â¤ï£»ïºïºïºïºïºïº£ØÂ­ïº§ïº³Ù Ù¡Ù¢Ù£Ù¤Ù¥Ù¦Ù§Ù¨Ù©ïº·Øïº»ïº¿ï»Øï»Ø¡Ø¢Ø£Ø¤Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµØ¶Ø·ï»Ø¹Øºï»ïºïºïºï»ÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙÙï»ï»ï»ï£¼ï»µï»·ï»¹ï»»ï»£ï»§ï»¬ï»©ï¿½"
                },
                ibm1046: "cp1046",
                csibm1046: "cp1046",
                cp1124: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÐÐÒÐÐÐÐÐÐÐÐÐÂ­ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑâÑÑÒÑÑÑÑÑÑÑÑÑÂ§ÑÑ"
                },
                ibm1124: "cp1124",
                csibm1124: "cp1124",
                cp1125: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÐÑÒÒÐÑÐÑÐÑÂ·ââÂ¤â Â "
                },
                ibm1125: "cp1125",
                csibm1125: "cp1125",
                cp1129: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£Â¤Â¥Â¦Â§ÅÂ©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Å¸ÂµÂ¶Â·ÅÂ¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÄÃÃÃÃÃÃÃÃÌÃÃÃÄÃÌÃÃÆ ÃÃÃÃÃÃÃÆ¯ÌÃÃ Ã¡Ã¢ÄÃ¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«ÌÃ­Ã®Ã¯ÄÃ±Ì£Ã³Ã´Æ¡Ã¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Æ°â«Ã¿"
                },
                ibm1129: "cp1129",
                csibm1129: "cp1129",
                cp1133: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ àºàºàºàºàºàºªàºàºàºàºàºàºàºàºàºàºàºàºàºàº¡àº¢àº£àº¥àº§àº«àº­àº®ï¿½ï¿½ï¿½àº¯àº°àº²àº³àº´àºµàº¶àº·àº¸àº¹àº¼àº±àº»àº½ï¿½ï¿½ï¿½à»à»à»à»à»à»à»à»à»à»à»à»ï¿½à»à»â­ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½à»à»à»à»à»à»à»à»à»à»ï¿½ï¿½Â¢Â¬Â¦ï¿½"
                },
                ibm1133: "cp1133",
                csibm1133: "cp1133",
                cp1161: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½à¹à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºà¹à¹à¹â¬à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹Â¢Â¬Â¦Â "
                },
                ibm1161: "cp1161",
                csibm1161: "cp1161",
                cp1162: {
                  type: "_sbcs",
                  chars: "â¬ÂÂÂÂâ¦ÂÂÂÂÂÂÂÂÂÂÂâââââ¢ââÂÂÂÂÂÂÂÂÂ à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                },
                ibm1162: "cp1162",
                csibm1162: "cp1162",
                cp1163: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ Â¡Â¢Â£â¬Â¥Â¦Â§ÅÂ©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Å¸ÂµÂ¶Â·ÅÂ¹ÂºÂ»Â¼Â½Â¾Â¿ÃÃÃÄÃÃÃÃÃÃÃÃÌÃÃÃÄÃÌÃÃÆ ÃÃÃÃÃÃÃÆ¯ÌÃÃ Ã¡Ã¢ÄÃ¤Ã¥Ã¦Ã§Ã¨Ã©ÃªÃ«ÌÃ­Ã®Ã¯ÄÃ±Ì£Ã³Ã´Æ¡Ã¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Æ°â«Ã¿"
                },
                ibm1163: "cp1163",
                csibm1163: "cp1163",
                maccroatian: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Å â¢Â´Â¨â Å½ÃâÂ±â¤â¥âÂµâââÅ¡â«ÂªÂºâ¦Å¾Ã¸Â¿Â¡Â¬âÆâÄÂ«Äâ¦Â ÃÃÃÅÅÄâââââÃ·âï¿½Â©âÂ¤â¹âºÃÂ»âÂ·âââ°ÃÄÃÄÃÃÃÃÃÃÃÄÃÃÃÃÄ±ËËÂ¯ÏÃËÂ¸ÃÃ¦Ë"
                },
                maccyrillic: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯â Â°Â¢Â£Â§â¢Â¶ÐÂ®Â©â¢ÐÑâ ÐÑâÂ±â¤â¥ÑÂµâÐÐÑÐÑÐÑÐÑÑÐÂ¬âÆââÂ«Â»â¦Â ÐÑÐÑÑââââââÃ·âÐÑÐÑâÐÑÑÐ°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÂ¤"
                },
                macgreek: {
                  type: "_sbcs",
                  chars: "ÃÂ¹Â²ÃÂ³ÃÃÎÃ Ã¢Ã¤ÎÂ¨Ã§Ã©Ã¨ÃªÃ«Â£â¢Ã®Ã¯â¢Â½â°Ã´Ã¶Â¦Â­Ã¹Ã»Ã¼â ÎÎÎÎÎÎ ÃÂ®Â©Î£ÎªÂ§â Â°ÎÎÂ±â¤â¥Â¥ÎÎÎÎÎÎÎÎ¦Î«Î¨Î©Î¬ÎÂ¬ÎÎ¡âÎ¤Â«Â»â¦Â Î¥Î§ÎÎÅââââââÃ·ÎÎÎÎÎ­Î®Î¯ÏÎÏÎ±Î²ÏÎ´ÎµÏÎ³Î·Î¹Î¾ÎºÎ»Î¼Î½Î¿ÏÏÏÏÏÎ¸ÏÏÏÏÎ¶ÏÏÎÎ°ï¿½"
                },
                maciceland: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼ÃÂ°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤ÃÃ°ÃÃ¾Ã½Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                macroman: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤â¹âºï¬ï¬â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                macromania: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÄÅâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦ÄÅÂ¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤â¹âºÅ¢Å£â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                macthai: {
                  type: "_sbcs",
                  chars: "Â«Â»â¦ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ââï¢ï¿½â¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ï¢ââï¿½Â à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸º\uFEFFâââà¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹â¢à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹Â®Â©ï¿½ï¿½ï¿½ï¿½"
                },
                macturkish: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸ÄÄÄ°Ä±ÅÅâ¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃï¿½ËËÂ¯ËËËÂ¸ËËË"
                },
                macukraine: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯â Â°ÒÂ£Â§â¢Â¶ÐÂ®Â©â¢ÐÑâ ÐÑâÂ±â¤â¥ÑÂµÒÐÐÑÐÑÐÑÐÑÑÐÂ¬âÆââÂ«Â»â¦Â ÐÑÐÑÑââââââÃ·âÐÑÐÑâÐÑÑÐ°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÂ¤"
                },
                koi8r: {
                  type: "_sbcs",
                  chars: "ââââââââ¤â¬â´â¼âââââââââ â ââââ¤â¥Â â¡Â°Â²Â·Ã·âââÑââââââââââââââ â¡Ðâ¢â£â¤â¥â¦â§â¨â©âªâ«â¬Â©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                koi8u: {
                  type: "_sbcs",
                  chars: "ââââââââ¤â¬â´â¼âââââââââ â ââââ¤â¥Â â¡Â°Â²Â·Ã·âââÑÑâÑÑâââââÒââââ â¡ÐÐâ£ÐÐâ¦â§â¨â©âªÒâ¬Â©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                koi8ru: {
                  type: "_sbcs",
                  chars: "ââââââââ¤â¬â´â¼âââââââââ â ââââ¤â¥Â â¡Â°Â²Â·Ã·âââÑÑâÑÑâââââÒÑâââ â¡ÐÐâ£ÐÐâ¦â§â¨â©âªÒÐÂ©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                koi8t: {
                  type: "_sbcs",
                  chars: "ÒÒâÒââ¦â â¡ï¿½â°Ò³â¹Ò²Ò·Ò¶ï¿½Òâââââ¢ââï¿½â¢ï¿½âºï¿½ï¿½ï¿½ï¿½ï¿½Ó¯Ó®ÑÂ¤Ó£Â¦Â§ï¿½ï¿½ï¿½Â«Â¬Â­Â®ï¿½Â°Â±Â²Ðï¿½Ó¢Â¶Â·ï¿½âï¿½Â»ï¿½ï¿½ï¿½Â©ÑÐ°Ð±ÑÐ´ÐµÑÐ³ÑÐ¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÐ¶Ð²ÑÑÐ·ÑÑÑÑÑÐ®ÐÐÐ¦ÐÐÐ¤ÐÐ¥ÐÐÐÐÐÐÐÐÐ¯Ð Ð¡Ð¢Ð£ÐÐÐ¬Ð«ÐÐ¨Ð­Ð©Ð§Ðª"
                },
                armscii8: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ï¿½ÖÖ)(Â»Â«â.Õ,-Öâ¦ÕÕÕÔ±Õ¡Ô²Õ¢Ô³Õ£Ô´Õ¤ÔµÕ¥Ô¶Õ¦Ô·Õ§Ô¸Õ¨Ô¹Õ©ÔºÕªÔ»Õ«Ô¼Õ¬Ô½Õ­Ô¾Õ®Ô¿Õ¯ÕÕ°ÕÕ±ÕÕ²ÕÕ³ÕÕ´ÕÕµÕÕ¶ÕÕ·ÕÕ¸ÕÕ¹ÕÕºÕÕ»ÕÕ¼ÕÕ½ÕÕ¾ÕÕ¿ÕÖÕÖÕÖÕÖÕÖÕÖÕÖÕï¿½"
                },
                rk1048: {
                  type: "_sbcs",
                  chars: "ÐÐâÑââ¦â â¡â¬â°Ðâ¹ÐÒÒºÐÑâââââ¢ââï¿½â¢ÑâºÑÒÒ»ÑÂ Ò°Ò±ÓÂ¤Ó¨Â¦Â§ÐÂ©ÒÂ«Â¬Â­Â®Ò®Â°Â±ÐÑÓ©ÂµÂ¶Â·ÑâÒÂ»ÓÒ¢Ò£Ò¯ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ"
                },
                tcvn: {
                  type: "_sbcs",
                  chars: `\0Ãá»¤á»ªá»¬á»®\x07\b	
\v\f\rá»¨á»°á»²á»¶á»¸Ãá»´\x1B !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~Ãáº¢ÃÃáº áº¶áº¬Ãáººáº¼Ãáº¸á»Ãá»Ä¨Ãá»Ãá»ÃÃá»á»á»á»á» á»á»¢Ãá»¦Å¨Â ÄÃÃÃÆ Æ¯ÄÄÃ¢ÃªÃ´Æ¡Æ°Äáº°ÌÌÌÌÌ£Ã áº£Ã£Ã¡áº¡áº²áº±áº³áºµáº¯áº´áº®áº¦áº¨áºªáº¤á»áº·áº§áº©áº«áº¥áº­Ã¨á»áº»áº½Ã©áº¹á»á»á»áº¿á»Ã¬á»á»áº¾á»Ä©Ã­á»Ã²á»á»ÃµÃ³á»á»á»á»á»á»á»á»á»¡á»á»£Ã¹á»á»§Å©Ãºá»¥á»«á»­á»¯á»©á»±á»³á»·á»¹Ã½á»µá»`
                },
                georgianacademy: {
                  type: "_sbcs",
                  chars: "ÂÂâÆââ¦â â¡Ëâ°Å â¹ÅÂÂÂÂâââââ¢ââËâ¢Å¡âºÅÂÂÅ¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿ááááááááááááááááá á¡á¢á£á¤á¥á¦á§á¨á©áªá«á¬á­á®á¯á°á±á²á³á´áµá¶Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                georgianps: {
                  type: "_sbcs",
                  chars: "ÂÂâÆââ¦â â¡Ëâ°Å â¹ÅÂÂÂÂâââââ¢ââËâ¢Å¡âºÅÂÂÅ¸Â Â¡Â¢Â£Â¤Â¥Â¦Â§Â¨Â©ÂªÂ«Â¬Â­Â®Â¯Â°Â±Â²Â³Â´ÂµÂ¶Â·Â¸Â¹ÂºÂ»Â¼Â½Â¾Â¿áááááááá±ááááááá²áááá á¡á¢á³á£á¤á¥á¦á§á¨á©áªá«á¬á­á®á´á¯á°áµÃ¦Ã§Ã¨Ã©ÃªÃ«Ã¬Ã­Ã®Ã¯Ã°Ã±Ã²Ã³Ã´ÃµÃ¶Ã·Ã¸Ã¹ÃºÃ»Ã¼Ã½Ã¾Ã¿"
                },
                pt154: {
                  type: "_sbcs",
                  chars: "ÒÒÓ®Òââ¦Ò¶Ò®Ò²Ò¯Ò Ó¢Ò¢ÒÒºÒ¸Òâââââ¢ââÒ³Ò·Ò¡Ó£Ò£ÒÒ»Ò¹Â ÐÑÐÓ¨ÒÒ°Â§ÐÂ©ÓÂ«Â¬Ó¯Â®ÒÂ°Ò±ÐÑÒÓ©Â¶Â·ÑâÓÂ»ÑÒªÒ«ÒÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑ"
                },
                viscii: {
                  type: "_sbcs",
                  chars: `\0áº²áº´áºª\x07\b	
\v\f\rá»¶á»¸\x1Bá»´ !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}~áº áº®áº°áº¶áº¤áº¦áº¨áº¬áº¼áº¸áº¾á»á»á»á»á»á»á»á»á»á»¢á»á»á»á»á»á»á»á»¦Å¨á»¤á»²Ãáº¯áº±áº·áº¥áº§áº©áº­áº½áº¹áº¿á»á»á»á»á»á»á»á»á» Æ á»á»á»á»á»°á»¨á»ªá»¬Æ¡á»Æ¯ÃÃÃÃáº¢Äáº³áºµÃÃÃáººÃÃÄ¨á»³Äá»©ÃÃÃáº¡á»·á»«á»­ÃÃá»¹á»µÃá»¡Æ°Ã Ã¡Ã¢Ã£áº£Äá»¯áº«Ã¨Ã©Ãªáº»Ã¬Ã­Ä©á»Äá»±Ã²Ã³Ã´Ãµá»á»á»¥Ã¹ÃºÅ©á»§Ã½á»£á»®`
                },
                iso646cn: {
                  type: "_sbcs",
                  chars: `\0\x07\b	
\v\f\r\x1B !"#Â¥%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_\`abcdefghijklmnopqrstuvwxyz{|}â¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½`
                },
                iso646jp: {
                  type: "_sbcs",
                  chars: `\0\x07\b	
\v\f\r\x1B !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[Â¥]^_\`abcdefghijklmnopqrstuvwxyz{|}â¾ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½`
                },
                hproman8: {
                  type: "_sbcs",
                  chars: "ÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂÂ ÃÃÃÃÃÃÃÂ´ËËÂ¨ËÃÃâ¤Â¯ÃÃ½Â°ÃÃ§ÃÃ±Â¡Â¿Â¤Â£Â¥Â§ÆÂ¢Ã¢ÃªÃ´Ã»Ã¡Ã©Ã³ÃºÃ Ã¨Ã²Ã¹Ã¤Ã«Ã¶Ã¼ÃÃ®ÃÃÃ¥Ã­Ã¸Ã¦ÃÃ¬ÃÃÃÃ¯ÃÃÃÃÃ£ÃÃ°ÃÃÃÃÃÃµÅ Å¡ÃÅ¸Ã¿ÃÃ¾Â·ÂµÂ¶Â¾âÂ¼Â½ÂªÂºÂ«â Â»Â±ï¿½"
                },
                macintosh: {
                  type: "_sbcs",
                  chars: "ÃÃÃÃÃÃÃÃ¡Ã Ã¢Ã¤Ã£Ã¥Ã§Ã©Ã¨ÃªÃ«Ã­Ã¬Ã®Ã¯Ã±Ã³Ã²Ã´Ã¶ÃµÃºÃ¹Ã»Ã¼â Â°Â¢Â£Â§â¢Â¶ÃÂ®Â©â¢Â´Â¨â ÃÃâÂ±â¤â¥Â¥ÂµâââÏâ«ÂªÂºâ¦Ã¦Ã¸Â¿Â¡Â¬âÆââÂ«Â»â¦Â ÃÃÃÅÅââââââÃ·âÃ¿Å¸âÂ¤â¹âºï¬ï¬â¡Â·âââ°ÃÃÃÃÃÃÃÃÃÃÃï¿½ÃÃÃÃÄ±ËËÂ¯ËËËÂ¸ËËË"
                },
                ascii: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½"
                },
                tis620: {
                  type: "_sbcs",
                  chars: "ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½ï¿½à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸à¸ à¸¡à¸¢à¸£à¸¤à¸¥à¸¦à¸§à¸¨à¸©à¸ªà¸«à¸¬à¸­à¸®à¸¯à¸°à¸±à¸²à¸³à¸´à¸µà¸¶à¸·à¸¸à¸¹à¸ºï¿½ï¿½ï¿½ï¿½à¸¿à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹à¹ï¿½ï¿½ï¿½ï¿½"
                }
              };
            }
          ),
          /***/
          26518: (
            /***/
            function(c) {
              c.exports = {
                // Not supported by iconv, not sure why.
                10029: "maccenteuro",
                maccenteuro: {
                  type: "_sbcs",
                  chars: "ÃÄÄÃÄÃÃÃ¡ÄÄÃ¤ÄÄÄÃ©Å¹ÅºÄÃ­ÄÄÄÄÃ³ÄÃ´Ã¶ÃµÃºÄÄÃ¼â Â°ÄÂ£Â§â¢Â¶ÃÂ®Â©â¢ÄÂ¨â Ä£Ä®Ä¯Äªâ¤â¥Ä«Ä¶ââÅÄ»Ä¼Ä½Ä¾Ä¹ÄºÅÅÅÂ¬âÅÅâÂ«Â»â¦Â ÅÅÃÅÅââââââÃ·âÅÅÅÅâ¹âºÅÅÅÅ ââÅ¡ÅÅÃÅ¤Å¥ÃÅ½Å¾ÅªÃÃÅ«Å®ÃÅ¯Å°Å±Å²Å³ÃÃ½Ä·Å»ÅÅ¼Ä¢Ë"
                },
                808: "cp808",
                ibm808: "cp808",
                cp808: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÐÑÐÑÐÑÐÑÂ°âÂ·âââ¬â Â "
                },
                mik: {
                  type: "_sbcs",
                  chars: "ÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐÐ Ð¡Ð¢Ð£Ð¤Ð¥Ð¦Ð§Ð¨Ð©ÐªÐ«Ð¬Ð­Ð®Ð¯Ð°Ð±Ð²Ð³Ð´ÐµÐ¶Ð·Ð¸Ð¹ÐºÐ»Ð¼Ð½Ð¾Ð¿ÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑÑââ´â¬âââ¼â£ââââ©â¦â ââ¬ââââââ¤âÂ§âââââââââÎ±ÃÎÏÎ£ÏÂµÏÎ¦ÎÎ©Î´âÏÎµâ©â¡Â±â¥â¤â â¡Ã·âÂ°âÂ·ââ¿Â²â Â "
                },
                cp720: {
                  type: "_sbcs",
                  chars: "ÂÂÃ©Ã¢ÂÃ ÂÃ§ÃªÃ«Ã¨Ã¯Ã®ÂÂÂÂÙÙÃ´Â¤ÙÃ»Ã¹Ø¡Ø¢Ø£Ø¤Â£Ø¥Ø¦Ø§Ø¨Ø©ØªØ«Ø¬Ø­Ø®Ø¯Ø°Ø±Ø²Ø³Ø´ØµÂ«Â»âââââ¤â¡â¢âââ£ââââââââ´â¬âââ¼âââââ©â¦â ââ¬â§â¨â¤â¥âââââ«âªâââââââØ¶Ø·Ø¸Ø¹ØºÙÂµÙÙÙÙÙÙÙÙÙâ¡ÙÙÙÙÙÙâÂ°âÂ·ââ¿Â²â Â "
                },
                // Aliases of generated encodings.
                ascii8bit: "ascii",
                usascii: "ascii",
                ansix34: "ascii",
                ansix341968: "ascii",
                ansix341986: "ascii",
                csascii: "ascii",
                cp367: "ascii",
                ibm367: "ascii",
                isoir6: "ascii",
                iso646us: "ascii",
                iso646irv: "ascii",
                us: "ascii",
                latin1: "iso88591",
                latin2: "iso88592",
                latin3: "iso88593",
                latin4: "iso88594",
                latin5: "iso88599",
                latin6: "iso885910",
                latin7: "iso885913",
                latin8: "iso885914",
                latin9: "iso885915",
                latin10: "iso885916",
                csisolatin1: "iso88591",
                csisolatin2: "iso88592",
                csisolatin3: "iso88593",
                csisolatin4: "iso88594",
                csisolatincyrillic: "iso88595",
                csisolatinarabic: "iso88596",
                csisolatingreek: "iso88597",
                csisolatinhebrew: "iso88598",
                csisolatin5: "iso88599",
                csisolatin6: "iso885910",
                l1: "iso88591",
                l2: "iso88592",
                l3: "iso88593",
                l4: "iso88594",
                l5: "iso88599",
                l6: "iso885910",
                l7: "iso885913",
                l8: "iso885914",
                l9: "iso885915",
                l10: "iso885916",
                isoir14: "iso646jp",
                isoir57: "iso646cn",
                isoir100: "iso88591",
                isoir101: "iso88592",
                isoir109: "iso88593",
                isoir110: "iso88594",
                isoir144: "iso88595",
                isoir127: "iso88596",
                isoir126: "iso88597",
                isoir138: "iso88598",
                isoir148: "iso88599",
                isoir157: "iso885910",
                isoir166: "tis620",
                isoir179: "iso885913",
                isoir199: "iso885914",
                isoir203: "iso885915",
                isoir226: "iso885916",
                cp819: "iso88591",
                ibm819: "iso88591",
                cyrillic: "iso88595",
                arabic: "iso88596",
                arabic8: "iso88596",
                ecma114: "iso88596",
                asmo708: "iso88596",
                greek: "iso88597",
                greek8: "iso88597",
                ecma118: "iso88597",
                elot928: "iso88597",
                hebrew: "iso88598",
                hebrew8: "iso88598",
                turkish: "iso88599",
                turkish8: "iso88599",
                thai: "iso885911",
                thai8: "iso885911",
                celtic: "iso885914",
                celtic8: "iso885914",
                isoceltic: "iso885914",
                tis6200: "tis620",
                tis62025291: "tis620",
                tis62025330: "tis620",
                1e4: "macroman",
                10006: "macgreek",
                10007: "maccyrillic",
                10079: "maciceland",
                10081: "macturkish",
                cspc8codepage437: "cp437",
                cspc775baltic: "cp775",
                cspc850multilingual: "cp850",
                cspcp852: "cp852",
                cspc862latinhebrew: "cp862",
                cpgr: "cp869",
                msee: "cp1250",
                mscyrl: "cp1251",
                msansi: "cp1252",
                msgreek: "cp1253",
                msturk: "cp1254",
                mshebr: "cp1255",
                msarab: "cp1256",
                winbaltrim: "cp1257",
                cp20866: "koi8r",
                20866: "koi8r",
                ibm878: "koi8r",
                cskoi8r: "koi8r",
                cp21866: "koi8u",
                21866: "koi8u",
                ibm1168: "koi8u",
                strk10482002: "rk1048",
                tcvn5712: "tcvn",
                tcvn57121: "tcvn",
                gb198880: "iso646cn",
                cn: "iso646cn",
                csiso14jisc6220ro: "iso646jp",
                jisc62201969ro: "iso646jp",
                jp: "iso646jp",
                cshproman8: "hproman8",
                r8: "hproman8",
                roman8: "hproman8",
                xroman8: "hproman8",
                ibm1051: "hproman8",
                mac: "macintosh",
                csmacintosh: "macintosh"
              };
            }
          ),
          /***/
          1710: (
            /***/
            function(c, d, t) {
              var o = t(85543).Buffer;
              d.utf16be = r;
              function r() {
              }
              r.prototype.encoder = n, r.prototype.decoder = i, r.prototype.bomAware = !0;
              function n() {
              }
              n.prototype.write = function(a) {
                for (var v = o.from(a, "ucs2"), y = 0; y < v.length; y += 2) {
                  var p = v[y];
                  v[y] = v[y + 1], v[y + 1] = p;
                }
                return v;
              }, n.prototype.end = function() {
              };
              function i() {
                this.overflowByte = -1;
              }
              i.prototype.write = function(a) {
                if (a.length == 0)
                  return "";
                var v = o.alloc(a.length + 1), y = 0, p = 0;
                for (this.overflowByte !== -1 && (v[0] = a[0], v[1] = this.overflowByte, y = 1, p = 2); y < a.length - 1; y += 2, p += 2)
                  v[p] = a[y + 1], v[p + 1] = a[y];
                return this.overflowByte = y == a.length - 1 ? a[a.length - 1] : -1, v.slice(0, p).toString("ucs2");
              }, i.prototype.end = function() {
                this.overflowByte = -1;
              }, d.utf16 = f;
              function f(a, v) {
                this.iconv = v;
              }
              f.prototype.encoder = l, f.prototype.decoder = u;
              function l(a, v) {
                a = a || {}, a.addBOM === void 0 && (a.addBOM = !0), this.encoder = v.iconv.getEncoder("utf-16le", a);
              }
              l.prototype.write = function(a) {
                return this.encoder.write(a);
              }, l.prototype.end = function() {
                return this.encoder.end();
              };
              function u(a, v) {
                this.decoder = null, this.initialBufs = [], this.initialBufsLen = 0, this.options = a || {}, this.iconv = v.iconv;
              }
              u.prototype.write = function(a) {
                if (!this.decoder) {
                  if (this.initialBufs.push(a), this.initialBufsLen += a.length, this.initialBufsLen < 16)
                    return "";
                  var v = h(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(v, this.options);
                  for (var y = "", p = 0; p < this.initialBufs.length; p++)
                    y += this.decoder.write(this.initialBufs[p]);
                  return this.initialBufs.length = this.initialBufsLen = 0, y;
                }
                return this.decoder.write(a);
              }, u.prototype.end = function() {
                if (!this.decoder) {
                  var a = h(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(a, this.options);
                  for (var v = "", y = 0; y < this.initialBufs.length; y++)
                    v += this.decoder.write(this.initialBufs[y]);
                  var p = this.decoder.end();
                  return p && (v += p), this.initialBufs.length = this.initialBufsLen = 0, v;
                }
                return this.decoder.end();
              };
              function h(a, v) {
                var y = [], p = 0, e = 0, m = 0;
                t:
                  for (var w = 0; w < a.length; w++)
                    for (var D = a[w], I = 0; I < D.length; I++)
                      if (y.push(D[I]), y.length === 2) {
                        if (p === 0) {
                          if (y[0] === 255 && y[1] === 254)
                            return "utf-16le";
                          if (y[0] === 254 && y[1] === 255)
                            return "utf-16be";
                        }
                        if (y[0] === 0 && y[1] !== 0 && m++, y[0] !== 0 && y[1] === 0 && e++, y.length = 0, p++, p >= 100)
                          break t;
                      }
                return m > e ? "utf-16be" : m < e ? "utf-16le" : v || "utf-16le";
              }
            }
          ),
          /***/
          89252: (
            /***/
            function(c, d, t) {
              var o = t(85543).Buffer;
              d._utf32 = r;
              function r(v, y) {
                this.iconv = y, this.bomAware = !0, this.isLE = v.isLE;
              }
              d.utf32le = { type: "_utf32", isLE: !0 }, d.utf32be = { type: "_utf32", isLE: !1 }, d.ucs4le = "utf32le", d.ucs4be = "utf32be", r.prototype.encoder = n, r.prototype.decoder = i;
              function n(v, y) {
                this.isLE = y.isLE, this.highSurrogate = 0;
              }
              n.prototype.write = function(v) {
                for (var y = o.from(v, "ucs2"), p = o.alloc(y.length * 2), e = this.isLE ? p.writeUInt32LE : p.writeUInt32BE, m = 0, w = 0; w < y.length; w += 2) {
                  var D = y.readUInt16LE(w), I = 55296 <= D && D < 56320, E = 56320 <= D && D < 57344;
                  if (this.highSurrogate)
                    if (I || !E)
                      e.call(p, this.highSurrogate, m), m += 4;
                    else {
                      var T = (this.highSurrogate - 55296 << 10 | D - 56320) + 65536;
                      e.call(p, T, m), m += 4, this.highSurrogate = 0;
                      continue;
                    }
                  I ? this.highSurrogate = D : (e.call(p, D, m), m += 4, this.highSurrogate = 0);
                }
                return m < p.length && (p = p.slice(0, m)), p;
              }, n.prototype.end = function() {
                if (this.highSurrogate) {
                  var v = o.alloc(4);
                  return this.isLE ? v.writeUInt32LE(this.highSurrogate, 0) : v.writeUInt32BE(this.highSurrogate, 0), this.highSurrogate = 0, v;
                }
              };
              function i(v, y) {
                this.isLE = y.isLE, this.badChar = y.iconv.defaultCharUnicode.charCodeAt(0), this.overflow = [];
              }
              i.prototype.write = function(v) {
                if (v.length === 0)
                  return "";
                var y = 0, p = 0, e = o.alloc(v.length + 4), m = 0, w = this.isLE, D = this.overflow, I = this.badChar;
                if (D.length > 0) {
                  for (; y < v.length && D.length < 4; y++)
                    D.push(v[y]);
                  D.length === 4 && (w ? p = D[y] | D[y + 1] << 8 | D[y + 2] << 16 | D[y + 3] << 24 : p = D[y + 3] | D[y + 2] << 8 | D[y + 1] << 16 | D[y] << 24, D.length = 0, m = f(e, m, p, I));
                }
                for (; y < v.length - 3; y += 4)
                  w ? p = v[y] | v[y + 1] << 8 | v[y + 2] << 16 | v[y + 3] << 24 : p = v[y + 3] | v[y + 2] << 8 | v[y + 1] << 16 | v[y] << 24, m = f(e, m, p, I);
                for (; y < v.length; y++)
                  D.push(v[y]);
                return e.slice(0, m).toString("ucs2");
              };
              function f(v, y, p, e) {
                if ((p < 0 || p > 1114111) && (p = e), p >= 65536) {
                  p -= 65536;
                  var m = 55296 | p >> 10;
                  v[y++] = m & 255, v[y++] = m >> 8;
                  var p = 56320 | p & 1023;
                }
                return v[y++] = p & 255, v[y++] = p >> 8, y;
              }
              i.prototype.end = function() {
                this.overflow.length = 0;
              }, d.utf32 = l, d.ucs4 = "utf32";
              function l(v, y) {
                this.iconv = y;
              }
              l.prototype.encoder = u, l.prototype.decoder = h;
              function u(v, y) {
                v = v || {}, v.addBOM === void 0 && (v.addBOM = !0), this.encoder = y.iconv.getEncoder(v.defaultEncoding || "utf-32le", v);
              }
              u.prototype.write = function(v) {
                return this.encoder.write(v);
              }, u.prototype.end = function() {
                return this.encoder.end();
              };
              function h(v, y) {
                this.decoder = null, this.initialBufs = [], this.initialBufsLen = 0, this.options = v || {}, this.iconv = y.iconv;
              }
              h.prototype.write = function(v) {
                if (!this.decoder) {
                  if (this.initialBufs.push(v), this.initialBufsLen += v.length, this.initialBufsLen < 32)
                    return "";
                  var y = a(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(y, this.options);
                  for (var p = "", e = 0; e < this.initialBufs.length; e++)
                    p += this.decoder.write(this.initialBufs[e]);
                  return this.initialBufs.length = this.initialBufsLen = 0, p;
                }
                return this.decoder.write(v);
              }, h.prototype.end = function() {
                if (!this.decoder) {
                  var v = a(this.initialBufs, this.options.defaultEncoding);
                  this.decoder = this.iconv.getDecoder(v, this.options);
                  for (var y = "", p = 0; p < this.initialBufs.length; p++)
                    y += this.decoder.write(this.initialBufs[p]);
                  var e = this.decoder.end();
                  return e && (y += e), this.initialBufs.length = this.initialBufsLen = 0, y;
                }
                return this.decoder.end();
              };
              function a(v, y) {
                var p = [], e = 0, m = 0, w = 0, D = 0, I = 0;
                t:
                  for (var E = 0; E < v.length; E++)
                    for (var T = v[E], A = 0; A < T.length; A++)
                      if (p.push(T[A]), p.length === 4) {
                        if (e === 0) {
                          if (p[0] === 255 && p[1] === 254 && p[2] === 0 && p[3] === 0)
                            return "utf-32le";
                          if (p[0] === 0 && p[1] === 0 && p[2] === 254 && p[3] === 255)
                            return "utf-32be";
                        }
                        if ((p[0] !== 0 || p[1] > 16) && w++, (p[3] !== 0 || p[2] > 16) && m++, p[0] === 0 && p[1] === 0 && (p[2] !== 0 || p[3] !== 0) && I++, (p[0] !== 0 || p[1] !== 0) && p[2] === 0 && p[3] === 0 && D++, p.length = 0, e++, e >= 100)
                          break t;
                      }
                return I - w > D - m ? "utf-32be" : I - w < D - m ? "utf-32le" : y || "utf-32le";
              }
            }
          ),
          /***/
          92307: (
            /***/
            function(c, d, t) {
              var o = t(85543).Buffer;
              d.utf7 = r, d.unicode11utf7 = "utf7";
              function r(D, I) {
                this.iconv = I;
              }
              r.prototype.encoder = i, r.prototype.decoder = f, r.prototype.bomAware = !0;
              var n = /[^A-Za-z0-9'\(\),-\.\/:\? \n\r\t]+/g;
              function i(D, I) {
                this.iconv = I.iconv;
              }
              i.prototype.write = function(D) {
                return o.from(D.replace(n, function(I) {
                  return "+" + (I === "+" ? "" : this.iconv.encode(I, "utf16-be").toString("base64").replace(/=+$/, "")) + "-";
                }.bind(this)));
              }, i.prototype.end = function() {
              };
              function f(D, I) {
                this.iconv = I.iconv, this.inBase64 = !1, this.base64Accum = "";
              }
              for (var l = /[A-Za-z0-9\/+]/, u = [], h = 0; h < 256; h++)
                u[h] = l.test(String.fromCharCode(h));
              var a = "+".charCodeAt(0), v = "-".charCodeAt(0), y = "&".charCodeAt(0);
              f.prototype.write = function(D) {
                for (var I = "", E = 0, T = this.inBase64, A = this.base64Accum, F = 0; F < D.length; F++)
                  if (!T)
                    D[F] == a && (I += this.iconv.decode(D.slice(E, F), "ascii"), E = F + 1, T = !0);
                  else if (!u[D[F]]) {
                    if (F == E && D[F] == v)
                      I += "+";
                    else {
                      var b = A + this.iconv.decode(D.slice(E, F), "ascii");
                      I += this.iconv.decode(o.from(b, "base64"), "utf16-be");
                    }
                    D[F] != v && F--, E = F + 1, T = !1, A = "";
                  }
                if (!T)
                  I += this.iconv.decode(D.slice(E), "ascii");
                else {
                  var b = A + this.iconv.decode(D.slice(E), "ascii"), R = b.length - b.length % 8;
                  A = b.slice(R), b = b.slice(0, R), I += this.iconv.decode(o.from(b, "base64"), "utf16-be");
                }
                return this.inBase64 = T, this.base64Accum = A, I;
              }, f.prototype.end = function() {
                var D = "";
                return this.inBase64 && this.base64Accum.length > 0 && (D = this.iconv.decode(o.from(this.base64Accum, "base64"), "utf16-be")), this.inBase64 = !1, this.base64Accum = "", D;
              }, d.utf7imap = p;
              function p(D, I) {
                this.iconv = I;
              }
              p.prototype.encoder = e, p.prototype.decoder = m, p.prototype.bomAware = !0;
              function e(D, I) {
                this.iconv = I.iconv, this.inBase64 = !1, this.base64Accum = o.alloc(6), this.base64AccumIdx = 0;
              }
              e.prototype.write = function(D) {
                for (var I = this.inBase64, E = this.base64Accum, T = this.base64AccumIdx, A = o.alloc(D.length * 5 + 10), F = 0, b = 0; b < D.length; b++) {
                  var R = D.charCodeAt(b);
                  32 <= R && R <= 126 ? (I && (T > 0 && (F += A.write(E.slice(0, T).toString("base64").replace(/\//g, ",").replace(/=+$/, ""), F), T = 0), A[F++] = v, I = !1), I || (A[F++] = R, R === y && (A[F++] = v))) : (I || (A[F++] = y, I = !0), I && (E[T++] = R >> 8, E[T++] = R & 255, T == E.length && (F += A.write(E.toString("base64").replace(/\//g, ","), F), T = 0)));
                }
                return this.inBase64 = I, this.base64AccumIdx = T, A.slice(0, F);
              }, e.prototype.end = function() {
                var D = o.alloc(10), I = 0;
                return this.inBase64 && (this.base64AccumIdx > 0 && (I += D.write(this.base64Accum.slice(0, this.base64AccumIdx).toString("base64").replace(/\//g, ",").replace(/=+$/, ""), I), this.base64AccumIdx = 0), D[I++] = v, this.inBase64 = !1), D.slice(0, I);
              };
              function m(D, I) {
                this.iconv = I.iconv, this.inBase64 = !1, this.base64Accum = "";
              }
              var w = u.slice();
              w[",".charCodeAt(0)] = !0, m.prototype.write = function(D) {
                for (var I = "", E = 0, T = this.inBase64, A = this.base64Accum, F = 0; F < D.length; F++)
                  if (!T)
                    D[F] == y && (I += this.iconv.decode(D.slice(E, F), "ascii"), E = F + 1, T = !0);
                  else if (!w[D[F]]) {
                    if (F == E && D[F] == v)
                      I += "&";
                    else {
                      var b = A + this.iconv.decode(D.slice(E, F), "ascii").replace(/,/g, "/");
                      I += this.iconv.decode(o.from(b, "base64"), "utf16-be");
                    }
                    D[F] != v && F--, E = F + 1, T = !1, A = "";
                  }
                if (!T)
                  I += this.iconv.decode(D.slice(E), "ascii");
                else {
                  var b = A + this.iconv.decode(D.slice(E), "ascii").replace(/,/g, "/"), R = b.length - b.length % 8;
                  A = b.slice(R), b = b.slice(0, R), I += this.iconv.decode(o.from(b, "base64"), "utf16-be");
                }
                return this.inBase64 = T, this.base64Accum = A, I;
              }, m.prototype.end = function() {
                var D = "";
                return this.inBase64 && this.base64Accum.length > 0 && (D = this.iconv.decode(o.from(this.base64Accum, "base64"), "utf16-be")), this.inBase64 = !1, this.base64Accum = "", D;
              };
            }
          ),
          /***/
          59203: (
            /***/
            function(c, d) {
              var t = "\uFEFF";
              d.PrependBOM = o;
              function o(n, i) {
                this.encoder = n, this.addBOM = !0;
              }
              o.prototype.write = function(n) {
                return this.addBOM && (n = t + n, this.addBOM = !1), this.encoder.write(n);
              }, o.prototype.end = function() {
                return this.encoder.end();
              }, d.StripBOM = r;
              function r(n, i) {
                this.decoder = n, this.pass = !1, this.options = i || {};
              }
              r.prototype.write = function(n) {
                var i = this.decoder.write(n);
                return this.pass || !i || (i[0] === t && (i = i.slice(1), typeof this.options.stripBOM == "function" && this.options.stripBOM()), this.pass = !0), i;
              }, r.prototype.end = function() {
                return this.decoder.end();
              };
            }
          ),
          /***/
          32766: (
            /***/
            function(c, d, t) {
              var o = t(85543).Buffer, r = t(59203), n = c.exports;
              n.encodings = null, n.defaultCharUnicode = "ï¿½", n.defaultCharSingleByte = "?", n.encode = function(l, u, h) {
                l = "" + (l || "");
                var a = n.getEncoder(u, h), v = a.write(l), y = a.end();
                return y && y.length > 0 ? o.concat([v, y]) : v;
              }, n.decode = function(l, u, h) {
                typeof l == "string" && (n.skipDecodeWarning || (console.error("Iconv-lite warning: decode()-ing strings is deprecated. Refer to https://github.com/ashtuchkin/iconv-lite/wiki/Use-Buffers-when-decoding"), n.skipDecodeWarning = !0), l = o.from("" + (l || ""), "binary"));
                var a = n.getDecoder(u, h), v = a.write(l), y = a.end();
                return y ? v + y : v;
              }, n.encodingExists = function(l) {
                try {
                  return n.getCodec(l), !0;
                } catch {
                  return !1;
                }
              }, n.toEncoding = n.encode, n.fromEncoding = n.decode, n._codecDataCache = {}, n.getCodec = function(l) {
                n.encodings || (n.encodings = t(88069));
                for (var u = n._canonicalizeEncoding(l), h = {}; ; ) {
                  var a = n._codecDataCache[u];
                  if (a)
                    return a;
                  var v = n.encodings[u];
                  switch (typeof v) {
                    case "string":
                      u = v;
                      break;
                    case "object":
                      for (var y in v)
                        h[y] = v[y];
                      h.encodingName || (h.encodingName = u), u = v.type;
                      break;
                    case "function":
                      return h.encodingName || (h.encodingName = u), a = new v(h, n), n._codecDataCache[h.encodingName] = a, a;
                    default:
                      throw new Error("Encoding not recognized: '" + l + "' (searched as: '" + u + "')");
                  }
                }
              }, n._canonicalizeEncoding = function(f) {
                return ("" + f).toLowerCase().replace(/:\d{4}$|[^0-9a-z]/g, "");
              }, n.getEncoder = function(l, u) {
                var h = n.getCodec(l), a = new h.encoder(u, h);
                return h.bomAware && u && u.addBOM && (a = new r.PrependBOM(a, u)), a;
              }, n.getDecoder = function(l, u) {
                var h = n.getCodec(l), a = new h.decoder(u, h);
                return h.bomAware && !(u && u.stripBOM === !1) && (a = new r.StripBOM(a, u)), a;
              }, n.enableStreamingAPI = function(l) {
                if (!n.supportsStreams) {
                  var u = t(44690)(l);
                  n.IconvLiteEncoderStream = u.IconvLiteEncoderStream, n.IconvLiteDecoderStream = u.IconvLiteDecoderStream, n.encodeStream = function(a, v) {
                    return new n.IconvLiteEncoderStream(n.getEncoder(a, v), v);
                  }, n.decodeStream = function(a, v) {
                    return new n.IconvLiteDecoderStream(n.getDecoder(a, v), v);
                  }, n.supportsStreams = !0;
                }
              };
              var i;
              try {
                i = t(25832);
              } catch {
              }
              i && i.Transform ? n.enableStreamingAPI(i) : n.encodeStream = n.decodeStream = function() {
                throw new Error("iconv-lite Streaming API is not enabled. Use iconv.enableStreamingAPI(require('stream')); to enable it.");
              };
            }
          ),
          /***/
          44690: (
            /***/
            function(c, d, t) {
              var o = t(85543).Buffer;
              c.exports = function(r) {
                var n = r.Transform;
                function i(l, u) {
                  this.conv = l, u = u || {}, u.decodeStrings = !1, n.call(this, u);
                }
                i.prototype = Object.create(n.prototype, {
                  constructor: { value: i }
                }), i.prototype._transform = function(l, u, h) {
                  if (typeof l != "string")
                    return h(new Error("Iconv encoding stream needs strings as its input."));
                  try {
                    var a = this.conv.write(l);
                    a && a.length && this.push(a), h();
                  } catch (v) {
                    h(v);
                  }
                }, i.prototype._flush = function(l) {
                  try {
                    var u = this.conv.end();
                    u && u.length && this.push(u), l();
                  } catch (h) {
                    l(h);
                  }
                }, i.prototype.collect = function(l) {
                  var u = [];
                  return this.on("error", l), this.on("data", function(h) {
                    u.push(h);
                  }), this.on("end", function() {
                    l(null, o.concat(u));
                  }), this;
                };
                function f(l, u) {
                  this.conv = l, u = u || {}, u.encoding = this.encoding = "utf8", n.call(this, u);
                }
                return f.prototype = Object.create(n.prototype, {
                  constructor: { value: f }
                }), f.prototype._transform = function(l, u, h) {
                  if (!o.isBuffer(l) && !(l instanceof Uint8Array))
                    return h(new Error("Iconv decoding stream needs buffers as its input."));
                  try {
                    var a = this.conv.write(l);
                    a && a.length && this.push(a, this.encoding), h();
                  } catch (v) {
                    h(v);
                  }
                }, f.prototype._flush = function(l) {
                  try {
                    var u = this.conv.end();
                    u && u.length && this.push(u, this.encoding), l();
                  } catch (h) {
                    l(h);
                  }
                }, f.prototype.collect = function(l) {
                  var u = "";
                  return this.on("error", l), this.on("data", function(h) {
                    u += h;
                  }), this.on("end", function() {
                    l(null, u);
                  }), this;
                }, {
                  IconvLiteEncoderStream: i,
                  IconvLiteDecoderStream: f
                };
              };
            }
          ),
          /***/
          74525: (
            /***/
            function(c, d) {
              /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */
              d.read = function(t, o, r, n, i) {
                var f, l, u = i * 8 - n - 1, h = (1 << u) - 1, a = h >> 1, v = -7, y = r ? i - 1 : 0, p = r ? -1 : 1, e = t[o + y];
                for (y += p, f = e & (1 << -v) - 1, e >>= -v, v += u; v > 0; f = f * 256 + t[o + y], y += p, v -= 8)
                  ;
                for (l = f & (1 << -v) - 1, f >>= -v, v += n; v > 0; l = l * 256 + t[o + y], y += p, v -= 8)
                  ;
                if (f === 0)
                  f = 1 - a;
                else {
                  if (f === h)
                    return l ? NaN : (e ? -1 : 1) * (1 / 0);
                  l = l + Math.pow(2, n), f = f - a;
                }
                return (e ? -1 : 1) * l * Math.pow(2, f - n);
              }, d.write = function(t, o, r, n, i, f) {
                var l, u, h, a = f * 8 - i - 1, v = (1 << a) - 1, y = v >> 1, p = i === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0, e = n ? 0 : f - 1, m = n ? 1 : -1, w = o < 0 || o === 0 && 1 / o < 0 ? 1 : 0;
                for (o = Math.abs(o), isNaN(o) || o === 1 / 0 ? (u = isNaN(o) ? 1 : 0, l = v) : (l = Math.floor(Math.log(o) / Math.LN2), o * (h = Math.pow(2, -l)) < 1 && (l--, h *= 2), l + y >= 1 ? o += p / h : o += p * Math.pow(2, 1 - y), o * h >= 2 && (l++, h /= 2), l + y >= v ? (u = 0, l = v) : l + y >= 1 ? (u = (o * h - 1) * Math.pow(2, i), l = l + y) : (u = o * Math.pow(2, y - 1) * Math.pow(2, i), l = 0)); i >= 8; t[r + e] = u & 255, e += m, u /= 256, i -= 8)
                  ;
                for (l = l << i | u, a += i; a > 0; t[r + e] = l & 255, e += m, l /= 256, a -= 8)
                  ;
                t[r + e - m] |= w * 128;
              };
            }
          ),
          /***/
          48575: (
            /***/
            function(c) {
              typeof Object.create == "function" ? c.exports = function(t, o) {
                o && (t.super_ = o, t.prototype = Object.create(o.prototype, {
                  constructor: {
                    value: t,
                    enumerable: !1,
                    writable: !0,
                    configurable: !0
                  }
                }));
              } : c.exports = function(t, o) {
                if (o) {
                  t.super_ = o;
                  var r = function() {
                  };
                  r.prototype = o.prototype, t.prototype = new r(), t.prototype.constructor = t;
                }
              };
            }
          ),
          /***/
          77092: (
            /***/
            function(c, d, t) {
              var o = t(44111)(), r = t(97615), n = r("Object.prototype.toString"), i = function(h) {
                return o && h && typeof h == "object" && Symbol.toStringTag in h ? !1 : n(h) === "[object Arguments]";
              }, f = function(h) {
                return i(h) ? !0 : h !== null && typeof h == "object" && typeof h.length == "number" && h.length >= 0 && n(h) !== "[object Array]" && n(h.callee) === "[object Function]";
              }, l = function() {
                return i(arguments);
              }();
              i.isLegacyArguments = f, c.exports = l ? i : f;
            }
          ),
          /***/
          5443: (
            /***/
            function(c) {
              var d = Function.prototype.toString, t = typeof Reflect == "object" && Reflect !== null && Reflect.apply, o, r;
              if (typeof t == "function" && typeof Object.defineProperty == "function")
                try {
                  o = Object.defineProperty({}, "length", {
                    get: function() {
                      throw r;
                    }
                  }), r = {}, t(function() {
                    throw 42;
                  }, null, o);
                } catch (I) {
                  I !== r && (t = null);
                }
              else
                t = null;
              var n = /^\s*class\b/, i = function(E) {
                try {
                  var T = d.call(E);
                  return n.test(T);
                } catch {
                  return !1;
                }
              }, f = function(E) {
                try {
                  return i(E) ? !1 : (d.call(E), !0);
                } catch {
                  return !1;
                }
              }, l = Object.prototype.toString, u = "[object Object]", h = "[object Function]", a = "[object GeneratorFunction]", v = "[object HTMLAllCollection]", y = "[object HTML document.all class]", p = "[object HTMLCollection]", e = typeof Symbol == "function" && !!Symbol.toStringTag, m = !(0 in [,]), w = function() {
                return !1;
              };
              if (typeof document == "object") {
                var D = document.all;
                l.call(D) === l.call(document.all) && (w = function(E) {
                  if ((m || !E) && (typeof E > "u" || typeof E == "object"))
                    try {
                      var T = l.call(E);
                      return (T === v || T === y || T === p || T === u) && E("") == null;
                    } catch {
                    }
                  return !1;
                });
              }
              c.exports = t ? function(E) {
                if (w(E))
                  return !0;
                if (!E || typeof E != "function" && typeof E != "object")
                  return !1;
                try {
                  t(E, null, o);
                } catch (T) {
                  if (T !== r)
                    return !1;
                }
                return !i(E) && f(E);
              } : function(E) {
                if (w(E))
                  return !0;
                if (!E || typeof E != "function" && typeof E != "object")
                  return !1;
                if (e)
                  return f(E);
                if (i(E))
                  return !1;
                var T = l.call(E);
                return T !== h && T !== a && !/^\[object HTML/.test(T) ? !1 : f(E);
              };
            }
          ),
          /***/
          28659: (
            /***/
            function(c, d, t) {
              var o = Date.prototype.getDay, r = function(u) {
                try {
                  return o.call(u), !0;
                } catch {
                  return !1;
                }
              }, n = Object.prototype.toString, i = "[object Date]", f = t(44111)();
              c.exports = function(u) {
                return typeof u != "object" || u === null ? !1 : f ? r(u) : n.call(u) === i;
              };
            }
          ),
          /***/
          97427: (
            /***/
            function(c, d, t) {
              var o = Object.prototype.toString, r = Function.prototype.toString, n = /^\s*(?:function)?\*/, i = t(44111)(), f = Object.getPrototypeOf, l = function() {
                if (!i)
                  return !1;
                try {
                  return Function("return function*() {}")();
                } catch {
                }
              }, u;
              c.exports = function(a) {
                if (typeof a != "function")
                  return !1;
                if (n.test(r.call(a)))
                  return !0;
                if (!i) {
                  var v = o.call(a);
                  return v === "[object GeneratorFunction]";
                }
                if (!f)
                  return !1;
                if (typeof u > "u") {
                  var y = l();
                  u = y ? f(y) : !1;
                }
                return f(a) === u;
              };
            }
          ),
          /***/
          82100: (
            /***/
            function(c) {
              c.exports = function(t) {
                return t !== t;
              };
            }
          ),
          /***/
          98622: (
            /***/
            function(c, d, t) {
              var o = t(12550), r = t(19170), n = t(82100), i = t(64358), f = t(6232), l = o(i(), Number);
              r(l, {
                getPolyfill: i,
                implementation: n,
                shim: f
              }), c.exports = l;
            }
          ),
          /***/
          64358: (
            /***/
            function(c, d, t) {
              var o = t(82100);
              c.exports = function() {
                return Number.isNaN && Number.isNaN(NaN) && !Number.isNaN("a") ? Number.isNaN : o;
              };
            }
          ),
          /***/
          6232: (
            /***/
            function(c, d, t) {
              var o = t(19170), r = t(64358);
              c.exports = function() {
                var i = r();
                return o(Number, { isNaN: i }, {
                  isNaN: function() {
                    return Number.isNaN !== i;
                  }
                }), i;
              };
            }
          ),
          /***/
          55278: (
            /***/
            function(c, d, t) {
              var o = t(97615), r = t(44111)(), n, i, f, l;
              if (r) {
                n = o("Object.prototype.hasOwnProperty"), i = o("RegExp.prototype.exec"), f = {};
                var u = function() {
                  throw f;
                };
                l = {
                  toString: u,
                  valueOf: u
                }, typeof Symbol.toPrimitive == "symbol" && (l[Symbol.toPrimitive] = u);
              }
              var h = o("Object.prototype.toString"), a = Object.getOwnPropertyDescriptor, v = "[object RegExp]";
              c.exports = r ? function(p) {
                if (!p || typeof p != "object")
                  return !1;
                var e = a(p, "lastIndex"), m = e && n(e, "value");
                if (!m)
                  return !1;
                try {
                  i(p, l);
                } catch (w) {
                  return w === f;
                }
              } : function(p) {
                return !p || typeof p != "object" && typeof p != "function" ? !1 : h(p) === v;
              };
            }
          ),
          /***/
          82527: (
            /***/
            function(c, d, t) {
              var o = t(54010);
              c.exports = function(n) {
                return !!o(n);
              };
            }
          ),
          /***/
          98720: (
            /***/
            function(c) {
              var d = function(t) {
                return t !== t;
              };
              c.exports = function(o, r) {
                return o === 0 && r === 0 ? 1 / o === 1 / r : !!(o === r || d(o) && d(r));
              };
            }
          ),
          /***/
          7402: (
            /***/
            function(c, d, t) {
              var o = t(19170), r = t(12550), n = t(98720), i = t(25280), f = t(49129), l = r(i(), Object);
              o(l, {
                getPolyfill: i,
                implementation: n,
                shim: f
              }), c.exports = l;
            }
          ),
          /***/
          25280: (
            /***/
            function(c, d, t) {
              var o = t(98720);
              c.exports = function() {
                return typeof Object.is == "function" ? Object.is : o;
              };
            }
          ),
          /***/
          49129: (
            /***/
            function(c, d, t) {
              var o = t(25280), r = t(19170);
              c.exports = function() {
                var i = o();
                return r(Object, { is: i }, {
                  is: function() {
                    return Object.is !== i;
                  }
                }), i;
              };
            }
          ),
          /***/
          78383: (
            /***/
            function(c, d, t) {
              var o;
              if (!Object.keys) {
                var r = Object.prototype.hasOwnProperty, n = Object.prototype.toString, i = t(84418), f = Object.prototype.propertyIsEnumerable, l = !f.call({ toString: null }, "toString"), u = f.call(function() {
                }, "prototype"), h = [
                  "toString",
                  "toLocaleString",
                  "valueOf",
                  "hasOwnProperty",
                  "isPrototypeOf",
                  "propertyIsEnumerable",
                  "constructor"
                ], a = function(e) {
                  var m = e.constructor;
                  return m && m.prototype === e;
                }, v = {
                  $applicationCache: !0,
                  $console: !0,
                  $external: !0,
                  $frame: !0,
                  $frameElement: !0,
                  $frames: !0,
                  $innerHeight: !0,
                  $innerWidth: !0,
                  $onmozfullscreenchange: !0,
                  $onmozfullscreenerror: !0,
                  $outerHeight: !0,
                  $outerWidth: !0,
                  $pageXOffset: !0,
                  $pageYOffset: !0,
                  $parent: !0,
                  $scrollLeft: !0,
                  $scrollTop: !0,
                  $scrollX: !0,
                  $scrollY: !0,
                  $self: !0,
                  $webkitIndexedDB: !0,
                  $webkitStorageInfo: !0,
                  $window: !0
                }, y = function() {
                  if (typeof window > "u")
                    return !1;
                  for (var e in window)
                    try {
                      if (!v["$" + e] && r.call(window, e) && window[e] !== null && typeof window[e] == "object")
                        try {
                          a(window[e]);
                        } catch {
                          return !0;
                        }
                    } catch {
                      return !0;
                    }
                  return !1;
                }(), p = function(e) {
                  if (typeof window > "u" || !y)
                    return a(e);
                  try {
                    return a(e);
                  } catch {
                    return !1;
                  }
                };
                o = function(m) {
                  var w = m !== null && typeof m == "object", D = n.call(m) === "[object Function]", I = i(m), E = w && n.call(m) === "[object String]", T = [];
                  if (!w && !D && !I)
                    throw new TypeError("Object.keys called on a non-object");
                  var A = u && D;
                  if (E && m.length > 0 && !r.call(m, 0))
                    for (var F = 0; F < m.length; ++F)
                      T.push(String(F));
                  if (I && m.length > 0)
                    for (var b = 0; b < m.length; ++b)
                      T.push(String(b));
                  else
                    for (var R in m)
                      !(A && R === "prototype") && r.call(m, R) && T.push(String(R));
                  if (l)
                    for (var N = p(m), U = 0; U < h.length; ++U)
                      !(N && h[U] === "constructor") && r.call(m, h[U]) && T.push(h[U]);
                  return T;
                };
              }
              c.exports = o;
            }
          ),
          /***/
          806: (
            /***/
            function(c, d, t) {
              var o = Array.prototype.slice, r = t(84418), n = Object.keys, i = n ? function(u) {
                return n(u);
              } : t(78383), f = Object.keys;
              i.shim = function() {
                if (Object.keys) {
                  var u = function() {
                    var h = Object.keys(arguments);
                    return h && h.length === arguments.length;
                  }(1, 2);
                  u || (Object.keys = function(a) {
                    return r(a) ? f(o.call(a)) : f(a);
                  });
                } else
                  Object.keys = i;
                return Object.keys || i;
              }, c.exports = i;
            }
          ),
          /***/
          84418: (
            /***/
            function(c) {
              var d = Object.prototype.toString;
              c.exports = function(o) {
                var r = d.call(o), n = r === "[object Arguments]";
                return n || (n = r !== "[object Array]" && o !== null && typeof o == "object" && typeof o.length == "number" && o.length >= 0 && d.call(o.callee) === "[object Function]"), n;
              };
            }
          ),
          /***/
          22148: (
            /***/
            function(c, d, t) {
              var o = t(806), r = t(65682)(), n = t(97615), i = Object, f = n("Array.prototype.push"), l = n("Object.prototype.propertyIsEnumerable"), u = r ? Object.getOwnPropertySymbols : null;
              c.exports = function(a, v) {
                if (a == null)
                  throw new TypeError("target must be an object");
                var y = i(a);
                if (arguments.length === 1)
                  return y;
                for (var p = 1; p < arguments.length; ++p) {
                  var e = i(arguments[p]), m = o(e), w = r && (Object.getOwnPropertySymbols || u);
                  if (w)
                    for (var D = w(e), I = 0; I < D.length; ++I) {
                      var E = D[I];
                      l(e, E) && f(m, E);
                    }
                  for (var T = 0; T < m.length; ++T) {
                    var A = m[T];
                    if (l(e, A)) {
                      var F = e[A];
                      y[A] = F;
                    }
                  }
                }
                return y;
              };
            }
          ),
          /***/
          10293: (
            /***/
            function(c, d, t) {
              var o = t(22148), r = function() {
                if (!Object.assign)
                  return !1;
                for (var i = "abcdefghijklmnopqrst", f = i.split(""), l = {}, u = 0; u < f.length; ++u)
                  l[f[u]] = f[u];
                var h = Object.assign({}, l), a = "";
                for (var v in h)
                  a += v;
                return i !== a;
              }, n = function() {
                if (!Object.assign || !Object.preventExtensions)
                  return !1;
                var i = Object.preventExtensions({ 1: 2 });
                try {
                  Object.assign(i, "xy");
                } catch {
                  return i[1] === "y";
                }
                return !1;
              };
              c.exports = function() {
                return !Object.assign || r() || n() ? o : Object.assign;
              };
            }
          ),
          /***/
          69034: (
            /***/
            function(c, d) {
              var t = typeof Uint8Array < "u" && typeof Uint16Array < "u" && typeof Int32Array < "u";
              function o(i, f) {
                return Object.prototype.hasOwnProperty.call(i, f);
              }
              d.assign = function(i) {
                for (var f = Array.prototype.slice.call(arguments, 1); f.length; ) {
                  var l = f.shift();
                  if (l) {
                    if (typeof l != "object")
                      throw new TypeError(l + "must be non-object");
                    for (var u in l)
                      o(l, u) && (i[u] = l[u]);
                  }
                }
                return i;
              }, d.shrinkBuf = function(i, f) {
                return i.length === f ? i : i.subarray ? i.subarray(0, f) : (i.length = f, i);
              };
              var r = {
                arraySet: function(i, f, l, u, h) {
                  if (f.subarray && i.subarray) {
                    i.set(f.subarray(l, l + u), h);
                    return;
                  }
                  for (var a = 0; a < u; a++)
                    i[h + a] = f[l + a];
                },
                // Join array of chunks to single array.
                flattenChunks: function(i) {
                  var f, l, u, h, a, v;
                  for (u = 0, f = 0, l = i.length; f < l; f++)
                    u += i[f].length;
                  for (v = new Uint8Array(u), h = 0, f = 0, l = i.length; f < l; f++)
                    a = i[f], v.set(a, h), h += a.length;
                  return v;
                }
              }, n = {
                arraySet: function(i, f, l, u, h) {
                  for (var a = 0; a < u; a++)
                    i[h + a] = f[l + a];
                },
                // Join array of chunks to single array.
                flattenChunks: function(i) {
                  return [].concat.apply([], i);
                }
              };
              d.setTyped = function(i) {
                i ? (d.Buf8 = Uint8Array, d.Buf16 = Uint16Array, d.Buf32 = Int32Array, d.assign(d, r)) : (d.Buf8 = Array, d.Buf16 = Array, d.Buf32 = Array, d.assign(d, n));
              }, d.setTyped(t);
            }
          ),
          /***/
          51475: (
            /***/
            function(c) {
              function d(t, o, r, n) {
                for (var i = t & 65535 | 0, f = t >>> 16 & 65535 | 0, l = 0; r !== 0; ) {
                  l = r > 2e3 ? 2e3 : r, r -= l;
                  do
                    i = i + o[n++] | 0, f = f + i | 0;
                  while (--l);
                  i %= 65521, f %= 65521;
                }
                return i | f << 16 | 0;
              }
              c.exports = d;
            }
          ),
          /***/
          40549: (
            /***/
            function(c) {
              c.exports = {
                /* Allowed flush values; see deflate() and inflate() below for details */
                Z_NO_FLUSH: 0,
                Z_PARTIAL_FLUSH: 1,
                Z_SYNC_FLUSH: 2,
                Z_FULL_FLUSH: 3,
                Z_FINISH: 4,
                Z_BLOCK: 5,
                Z_TREES: 6,
                /* Return codes for the compression/decompression functions. Negative values
                * are errors, positive values are used for special but normal events.
                */
                Z_OK: 0,
                Z_STREAM_END: 1,
                Z_NEED_DICT: 2,
                Z_ERRNO: -1,
                Z_STREAM_ERROR: -2,
                Z_DATA_ERROR: -3,
                //Z_MEM_ERROR:     -4,
                Z_BUF_ERROR: -5,
                //Z_VERSION_ERROR: -6,
                /* compression levels */
                Z_NO_COMPRESSION: 0,
                Z_BEST_SPEED: 1,
                Z_BEST_COMPRESSION: 9,
                Z_DEFAULT_COMPRESSION: -1,
                Z_FILTERED: 1,
                Z_HUFFMAN_ONLY: 2,
                Z_RLE: 3,
                Z_FIXED: 4,
                Z_DEFAULT_STRATEGY: 0,
                /* Possible values of the data_type field (though see inflate()) */
                Z_BINARY: 0,
                Z_TEXT: 1,
                //Z_ASCII:                1, // = Z_TEXT (deprecated)
                Z_UNKNOWN: 2,
                /* The deflate compression method */
                Z_DEFLATED: 8
                //Z_NULL:                 null // Use -1 or null inline, depending on var type
              };
            }
          ),
          /***/
          38621: (
            /***/
            function(c) {
              function d() {
                for (var r, n = [], i = 0; i < 256; i++) {
                  r = i;
                  for (var f = 0; f < 8; f++)
                    r = r & 1 ? 3988292384 ^ r >>> 1 : r >>> 1;
                  n[i] = r;
                }
                return n;
              }
              var t = d();
              function o(r, n, i, f) {
                var l = t, u = f + i;
                r ^= -1;
                for (var h = f; h < u; h++)
                  r = r >>> 8 ^ l[(r ^ n[h]) & 255];
                return r ^ -1;
              }
              c.exports = o;
            }
          ),
          /***/
          24349: (
            /***/
            function(c, d, t) {
              var o = t(69034), r = t(70376), n = t(51475), i = t(38621), f = t(44594), l = 0, u = 1, h = 3, a = 4, v = 5, y = 0, p = 1, e = -2, m = -3, w = -5, D = -1, I = 1, E = 2, T = 3, A = 4, F = 0, b = 2, R = 8, N = 9, U = 15, W = 8, J = 29, ht = 256, K = ht + 1 + J, nt = 30, xt = 19, bt = 2 * K + 1, Tt = 15, It = 3, Lt = 258, Ut = Lt + It + 1, $ = 32, gt = 42, ut = 69, st = 73, yt = 91, G = 103, Et = 113, k = 666, S = 1, L = 2, V = 3, it = 4, tt = 3;
              function _(Q, Jt) {
                return Q.msg = f[Jt], Jt;
              }
              function At(Q) {
                return (Q << 1) - (Q > 4 ? 9 : 0);
              }
              function Rt(Q) {
                for (var Jt = Q.length; --Jt >= 0; )
                  Q[Jt] = 0;
              }
              function Yt(Q) {
                var Jt = Q.state, te = Jt.pending;
                te > Q.avail_out && (te = Q.avail_out), te !== 0 && (o.arraySet(Q.output, Jt.pending_buf, Jt.pending_out, te, Q.next_out), Q.next_out += te, Jt.pending_out += te, Q.total_out += te, Q.avail_out -= te, Jt.pending -= te, Jt.pending === 0 && (Jt.pending_out = 0));
              }
              function Gt(Q, Jt) {
                r._tr_flush_block(Q, Q.block_start >= 0 ? Q.block_start : -1, Q.strstart - Q.block_start, Jt), Q.block_start = Q.strstart, Yt(Q.strm);
              }
              function Dt(Q, Jt) {
                Q.pending_buf[Q.pending++] = Jt;
              }
              function ae(Q, Jt) {
                Q.pending_buf[Q.pending++] = Jt >>> 8 & 255, Q.pending_buf[Q.pending++] = Jt & 255;
              }
              function Ae(Q, Jt, te, Ct) {
                var Ht = Q.avail_in;
                return Ht > Ct && (Ht = Ct), Ht === 0 ? 0 : (Q.avail_in -= Ht, o.arraySet(Jt, Q.input, Q.next_in, Ht, te), Q.state.wrap === 1 ? Q.adler = n(Q.adler, Jt, Ht, te) : Q.state.wrap === 2 && (Q.adler = i(Q.adler, Jt, Ht, te)), Q.next_in += Ht, Q.total_in += Ht, Ht);
              }
              function xe(Q, Jt) {
                var te = Q.max_chain_length, Ct = Q.strstart, Ht, oe, Le = Q.prev_length, De = Q.nice_match, ke = Q.strstart > Q.w_size - Ut ? Q.strstart - (Q.w_size - Ut) : 0, Ne = Q.window, rn = Q.w_mask, tr = Q.prev, Ze = Q.strstart + Lt, br = Ne[Ct + Le - 1], Ir = Ne[Ct + Le];
                Q.prev_length >= Q.good_match && (te >>= 2), De > Q.lookahead && (De = Q.lookahead);
                do
                  if (Ht = Jt, !(Ne[Ht + Le] !== Ir || Ne[Ht + Le - 1] !== br || Ne[Ht] !== Ne[Ct] || Ne[++Ht] !== Ne[Ct + 1])) {
                    Ct += 2, Ht++;
                    do
                      ;
                    while (Ne[++Ct] === Ne[++Ht] && Ne[++Ct] === Ne[++Ht] && Ne[++Ct] === Ne[++Ht] && Ne[++Ct] === Ne[++Ht] && Ne[++Ct] === Ne[++Ht] && Ne[++Ct] === Ne[++Ht] && Ne[++Ct] === Ne[++Ht] && Ne[++Ct] === Ne[++Ht] && Ct < Ze);
                    if (oe = Lt - (Ze - Ct), Ct = Ze - Lt, oe > Le) {
                      if (Q.match_start = Jt, Le = oe, oe >= De)
                        break;
                      br = Ne[Ct + Le - 1], Ir = Ne[Ct + Le];
                    }
                  }
                while ((Jt = tr[Jt & rn]) > ke && --te !== 0);
                return Le <= Q.lookahead ? Le : Q.lookahead;
              }
              function ce(Q) {
                var Jt = Q.w_size, te, Ct, Ht, oe, Le;
                do {
                  if (oe = Q.window_size - Q.lookahead - Q.strstart, Q.strstart >= Jt + (Jt - Ut)) {
                    o.arraySet(Q.window, Q.window, Jt, Jt, 0), Q.match_start -= Jt, Q.strstart -= Jt, Q.block_start -= Jt, Ct = Q.hash_size, te = Ct;
                    do
                      Ht = Q.head[--te], Q.head[te] = Ht >= Jt ? Ht - Jt : 0;
                    while (--Ct);
                    Ct = Jt, te = Ct;
                    do
                      Ht = Q.prev[--te], Q.prev[te] = Ht >= Jt ? Ht - Jt : 0;
                    while (--Ct);
                    oe += Jt;
                  }
                  if (Q.strm.avail_in === 0)
                    break;
                  if (Ct = Ae(Q.strm, Q.window, Q.strstart + Q.lookahead, oe), Q.lookahead += Ct, Q.lookahead + Q.insert >= It)
                    for (Le = Q.strstart - Q.insert, Q.ins_h = Q.window[Le], Q.ins_h = (Q.ins_h << Q.hash_shift ^ Q.window[Le + 1]) & Q.hash_mask; Q.insert && (Q.ins_h = (Q.ins_h << Q.hash_shift ^ Q.window[Le + It - 1]) & Q.hash_mask, Q.prev[Le & Q.w_mask] = Q.head[Q.ins_h], Q.head[Q.ins_h] = Le, Le++, Q.insert--, !(Q.lookahead + Q.insert < It)); )
                      ;
                } while (Q.lookahead < Ut && Q.strm.avail_in !== 0);
              }
              function we(Q, Jt) {
                var te = 65535;
                for (te > Q.pending_buf_size - 5 && (te = Q.pending_buf_size - 5); ; ) {
                  if (Q.lookahead <= 1) {
                    if (ce(Q), Q.lookahead === 0 && Jt === l)
                      return S;
                    if (Q.lookahead === 0)
                      break;
                  }
                  Q.strstart += Q.lookahead, Q.lookahead = 0;
                  var Ct = Q.block_start + te;
                  if ((Q.strstart === 0 || Q.strstart >= Ct) && (Q.lookahead = Q.strstart - Ct, Q.strstart = Ct, Gt(Q, !1), Q.strm.avail_out === 0) || Q.strstart - Q.block_start >= Q.w_size - Ut && (Gt(Q, !1), Q.strm.avail_out === 0))
                    return S;
                }
                return Q.insert = 0, Jt === a ? (Gt(Q, !0), Q.strm.avail_out === 0 ? V : it) : (Q.strstart > Q.block_start && (Gt(Q, !1), Q.strm.avail_out === 0), S);
              }
              function zt(Q, Jt) {
                for (var te, Ct; ; ) {
                  if (Q.lookahead < Ut) {
                    if (ce(Q), Q.lookahead < Ut && Jt === l)
                      return S;
                    if (Q.lookahead === 0)
                      break;
                  }
                  if (te = 0, Q.lookahead >= It && (Q.ins_h = (Q.ins_h << Q.hash_shift ^ Q.window[Q.strstart + It - 1]) & Q.hash_mask, te = Q.prev[Q.strstart & Q.w_mask] = Q.head[Q.ins_h], Q.head[Q.ins_h] = Q.strstart), te !== 0 && Q.strstart - te <= Q.w_size - Ut && (Q.match_length = xe(Q, te)), Q.match_length >= It)
                    if (Ct = r._tr_tally(Q, Q.strstart - Q.match_start, Q.match_length - It), Q.lookahead -= Q.match_length, Q.match_length <= Q.max_lazy_match && Q.lookahead >= It) {
                      Q.match_length--;
                      do
                        Q.strstart++, Q.ins_h = (Q.ins_h << Q.hash_shift ^ Q.window[Q.strstart + It - 1]) & Q.hash_mask, te = Q.prev[Q.strstart & Q.w_mask] = Q.head[Q.ins_h], Q.head[Q.ins_h] = Q.strstart;
                      while (--Q.match_length !== 0);
                      Q.strstart++;
                    } else
                      Q.strstart += Q.match_length, Q.match_length = 0, Q.ins_h = Q.window[Q.strstart], Q.ins_h = (Q.ins_h << Q.hash_shift ^ Q.window[Q.strstart + 1]) & Q.hash_mask;
                  else
                    Ct = r._tr_tally(Q, 0, Q.window[Q.strstart]), Q.lookahead--, Q.strstart++;
                  if (Ct && (Gt(Q, !1), Q.strm.avail_out === 0))
                    return S;
                }
                return Q.insert = Q.strstart < It - 1 ? Q.strstart : It - 1, Jt === a ? (Gt(Q, !0), Q.strm.avail_out === 0 ? V : it) : Q.last_lit && (Gt(Q, !1), Q.strm.avail_out === 0) ? S : L;
              }
              function Qt(Q, Jt) {
                for (var te, Ct, Ht; ; ) {
                  if (Q.lookahead < Ut) {
                    if (ce(Q), Q.lookahead < Ut && Jt === l)
                      return S;
                    if (Q.lookahead === 0)
                      break;
                  }
                  if (te = 0, Q.lookahead >= It && (Q.ins_h = (Q.ins_h << Q.hash_shift ^ Q.window[Q.strstart + It - 1]) & Q.hash_mask, te = Q.prev[Q.strstart & Q.w_mask] = Q.head[Q.ins_h], Q.head[Q.ins_h] = Q.strstart), Q.prev_length = Q.match_length, Q.prev_match = Q.match_start, Q.match_length = It - 1, te !== 0 && Q.prev_length < Q.max_lazy_match && Q.strstart - te <= Q.w_size - Ut && (Q.match_length = xe(Q, te), Q.match_length <= 5 && (Q.strategy === I || Q.match_length === It && Q.strstart - Q.match_start > 4096) && (Q.match_length = It - 1)), Q.prev_length >= It && Q.match_length <= Q.prev_length) {
                    Ht = Q.strstart + Q.lookahead - It, Ct = r._tr_tally(Q, Q.strstart - 1 - Q.prev_match, Q.prev_length - It), Q.lookahead -= Q.prev_length - 1, Q.prev_length -= 2;
                    do
                      ++Q.strstart <= Ht && (Q.ins_h = (Q.ins_h << Q.hash_shift ^ Q.window[Q.strstart + It - 1]) & Q.hash_mask, te = Q.prev[Q.strstart & Q.w_mask] = Q.head[Q.ins_h], Q.head[Q.ins_h] = Q.strstart);
                    while (--Q.prev_length !== 0);
                    if (Q.match_available = 0, Q.match_length = It - 1, Q.strstart++, Ct && (Gt(Q, !1), Q.strm.avail_out === 0))
                      return S;
                  } else if (Q.match_available) {
                    if (Ct = r._tr_tally(Q, 0, Q.window[Q.strstart - 1]), Ct && Gt(Q, !1), Q.strstart++, Q.lookahead--, Q.strm.avail_out === 0)
                      return S;
                  } else
                    Q.match_available = 1, Q.strstart++, Q.lookahead--;
                }
                return Q.match_available && (Ct = r._tr_tally(Q, 0, Q.window[Q.strstart - 1]), Q.match_available = 0), Q.insert = Q.strstart < It - 1 ? Q.strstart : It - 1, Jt === a ? (Gt(Q, !0), Q.strm.avail_out === 0 ? V : it) : Q.last_lit && (Gt(Q, !1), Q.strm.avail_out === 0) ? S : L;
              }
              function le(Q, Jt) {
                for (var te, Ct, Ht, oe, Le = Q.window; ; ) {
                  if (Q.lookahead <= Lt) {
                    if (ce(Q), Q.lookahead <= Lt && Jt === l)
                      return S;
                    if (Q.lookahead === 0)
                      break;
                  }
                  if (Q.match_length = 0, Q.lookahead >= It && Q.strstart > 0 && (Ht = Q.strstart - 1, Ct = Le[Ht], Ct === Le[++Ht] && Ct === Le[++Ht] && Ct === Le[++Ht])) {
                    oe = Q.strstart + Lt;
                    do
                      ;
                    while (Ct === Le[++Ht] && Ct === Le[++Ht] && Ct === Le[++Ht] && Ct === Le[++Ht] && Ct === Le[++Ht] && Ct === Le[++Ht] && Ct === Le[++Ht] && Ct === Le[++Ht] && Ht < oe);
                    Q.match_length = Lt - (oe - Ht), Q.match_length > Q.lookahead && (Q.match_length = Q.lookahead);
                  }
                  if (Q.match_length >= It ? (te = r._tr_tally(Q, 1, Q.match_length - It), Q.lookahead -= Q.match_length, Q.strstart += Q.match_length, Q.match_length = 0) : (te = r._tr_tally(Q, 0, Q.window[Q.strstart]), Q.lookahead--, Q.strstart++), te && (Gt(Q, !1), Q.strm.avail_out === 0))
                    return S;
                }
                return Q.insert = 0, Jt === a ? (Gt(Q, !0), Q.strm.avail_out === 0 ? V : it) : Q.last_lit && (Gt(Q, !1), Q.strm.avail_out === 0) ? S : L;
              }
              function de(Q, Jt) {
                for (var te; ; ) {
                  if (Q.lookahead === 0 && (ce(Q), Q.lookahead === 0)) {
                    if (Jt === l)
                      return S;
                    break;
                  }
                  if (Q.match_length = 0, te = r._tr_tally(Q, 0, Q.window[Q.strstart]), Q.lookahead--, Q.strstart++, te && (Gt(Q, !1), Q.strm.avail_out === 0))
                    return S;
                }
                return Q.insert = 0, Jt === a ? (Gt(Q, !0), Q.strm.avail_out === 0 ? V : it) : Q.last_lit && (Gt(Q, !1), Q.strm.avail_out === 0) ? S : L;
              }
              function be(Q, Jt, te, Ct, Ht) {
                this.good_length = Q, this.max_lazy = Jt, this.nice_length = te, this.max_chain = Ct, this.func = Ht;
              }
              var Oe;
              Oe = [
                /*      good lazy nice chain */
                new be(0, 0, 0, 0, we),
                /* 0 store only */
                new be(4, 4, 8, 4, zt),
                /* 1 max speed, no lazy matches */
                new be(4, 5, 16, 8, zt),
                /* 2 */
                new be(4, 6, 32, 32, zt),
                /* 3 */
                new be(4, 4, 16, 16, Qt),
                /* 4 lazy matches */
                new be(8, 16, 32, 32, Qt),
                /* 5 */
                new be(8, 16, 128, 128, Qt),
                /* 6 */
                new be(8, 32, 128, 256, Qt),
                /* 7 */
                new be(32, 128, 258, 1024, Qt),
                /* 8 */
                new be(32, 258, 258, 4096, Qt)
                /* 9 max compression */
              ];
              function Fe(Q) {
                Q.window_size = 2 * Q.w_size, Rt(Q.head), Q.max_lazy_match = Oe[Q.level].max_lazy, Q.good_match = Oe[Q.level].good_length, Q.nice_match = Oe[Q.level].nice_length, Q.max_chain_length = Oe[Q.level].max_chain, Q.strstart = 0, Q.block_start = 0, Q.lookahead = 0, Q.insert = 0, Q.match_length = Q.prev_length = It - 1, Q.match_available = 0, Q.ins_h = 0;
              }
              function Ft() {
                this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = R, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new o.Buf16(bt * 2), this.dyn_dtree = new o.Buf16((2 * nt + 1) * 2), this.bl_tree = new o.Buf16((2 * xt + 1) * 2), Rt(this.dyn_ltree), Rt(this.dyn_dtree), Rt(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new o.Buf16(Tt + 1), this.heap = new o.Buf16(2 * K + 1), Rt(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new o.Buf16(2 * K + 1), Rt(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
              }
              function fe(Q) {
                var Jt;
                return !Q || !Q.state ? _(Q, e) : (Q.total_in = Q.total_out = 0, Q.data_type = b, Jt = Q.state, Jt.pending = 0, Jt.pending_out = 0, Jt.wrap < 0 && (Jt.wrap = -Jt.wrap), Jt.status = Jt.wrap ? gt : Et, Q.adler = Jt.wrap === 2 ? 0 : 1, Jt.last_flush = l, r._tr_init(Jt), y);
              }
              function ot(Q) {
                var Jt = fe(Q);
                return Jt === y && Fe(Q.state), Jt;
              }
              function Y(Q, Jt) {
                return !Q || !Q.state || Q.state.wrap !== 2 ? e : (Q.state.gzhead = Jt, y);
              }
              function j(Q, Jt, te, Ct, Ht, oe) {
                if (!Q)
                  return e;
                var Le = 1;
                if (Jt === D && (Jt = 6), Ct < 0 ? (Le = 0, Ct = -Ct) : Ct > 15 && (Le = 2, Ct -= 16), Ht < 1 || Ht > N || te !== R || Ct < 8 || Ct > 15 || Jt < 0 || Jt > 9 || oe < 0 || oe > A)
                  return _(Q, e);
                Ct === 8 && (Ct = 9);
                var De = new Ft();
                return Q.state = De, De.strm = Q, De.wrap = Le, De.gzhead = null, De.w_bits = Ct, De.w_size = 1 << De.w_bits, De.w_mask = De.w_size - 1, De.hash_bits = Ht + 7, De.hash_size = 1 << De.hash_bits, De.hash_mask = De.hash_size - 1, De.hash_shift = ~~((De.hash_bits + It - 1) / It), De.window = new o.Buf8(De.w_size * 2), De.head = new o.Buf16(De.hash_size), De.prev = new o.Buf16(De.w_size), De.lit_bufsize = 1 << Ht + 6, De.pending_buf_size = De.lit_bufsize * 4, De.pending_buf = new o.Buf8(De.pending_buf_size), De.d_buf = 1 * De.lit_bufsize, De.l_buf = 3 * De.lit_bufsize, De.level = Jt, De.strategy = oe, De.method = te, ot(Q);
              }
              function mt(Q, Jt) {
                return j(Q, Jt, R, U, W, F);
              }
              function at(Q, Jt) {
                var te, Ct, Ht, oe;
                if (!Q || !Q.state || Jt > v || Jt < 0)
                  return Q ? _(Q, e) : e;
                if (Ct = Q.state, !Q.output || !Q.input && Q.avail_in !== 0 || Ct.status === k && Jt !== a)
                  return _(Q, Q.avail_out === 0 ? w : e);
                if (Ct.strm = Q, te = Ct.last_flush, Ct.last_flush = Jt, Ct.status === gt)
                  if (Ct.wrap === 2)
                    Q.adler = 0, Dt(Ct, 31), Dt(Ct, 139), Dt(Ct, 8), Ct.gzhead ? (Dt(
                      Ct,
                      (Ct.gzhead.text ? 1 : 0) + (Ct.gzhead.hcrc ? 2 : 0) + (Ct.gzhead.extra ? 4 : 0) + (Ct.gzhead.name ? 8 : 0) + (Ct.gzhead.comment ? 16 : 0)
                    ), Dt(Ct, Ct.gzhead.time & 255), Dt(Ct, Ct.gzhead.time >> 8 & 255), Dt(Ct, Ct.gzhead.time >> 16 & 255), Dt(Ct, Ct.gzhead.time >> 24 & 255), Dt(Ct, Ct.level === 9 ? 2 : Ct.strategy >= E || Ct.level < 2 ? 4 : 0), Dt(Ct, Ct.gzhead.os & 255), Ct.gzhead.extra && Ct.gzhead.extra.length && (Dt(Ct, Ct.gzhead.extra.length & 255), Dt(Ct, Ct.gzhead.extra.length >> 8 & 255)), Ct.gzhead.hcrc && (Q.adler = i(Q.adler, Ct.pending_buf, Ct.pending, 0)), Ct.gzindex = 0, Ct.status = ut) : (Dt(Ct, 0), Dt(Ct, 0), Dt(Ct, 0), Dt(Ct, 0), Dt(Ct, 0), Dt(Ct, Ct.level === 9 ? 2 : Ct.strategy >= E || Ct.level < 2 ? 4 : 0), Dt(Ct, tt), Ct.status = Et);
                  else {
                    var Le = R + (Ct.w_bits - 8 << 4) << 8, De = -1;
                    Ct.strategy >= E || Ct.level < 2 ? De = 0 : Ct.level < 6 ? De = 1 : Ct.level === 6 ? De = 2 : De = 3, Le |= De << 6, Ct.strstart !== 0 && (Le |= $), Le += 31 - Le % 31, Ct.status = Et, ae(Ct, Le), Ct.strstart !== 0 && (ae(Ct, Q.adler >>> 16), ae(Ct, Q.adler & 65535)), Q.adler = 1;
                  }
                if (Ct.status === ut)
                  if (Ct.gzhead.extra) {
                    for (Ht = Ct.pending; Ct.gzindex < (Ct.gzhead.extra.length & 65535) && !(Ct.pending === Ct.pending_buf_size && (Ct.gzhead.hcrc && Ct.pending > Ht && (Q.adler = i(Q.adler, Ct.pending_buf, Ct.pending - Ht, Ht)), Yt(Q), Ht = Ct.pending, Ct.pending === Ct.pending_buf_size)); )
                      Dt(Ct, Ct.gzhead.extra[Ct.gzindex] & 255), Ct.gzindex++;
                    Ct.gzhead.hcrc && Ct.pending > Ht && (Q.adler = i(Q.adler, Ct.pending_buf, Ct.pending - Ht, Ht)), Ct.gzindex === Ct.gzhead.extra.length && (Ct.gzindex = 0, Ct.status = st);
                  } else
                    Ct.status = st;
                if (Ct.status === st)
                  if (Ct.gzhead.name) {
                    Ht = Ct.pending;
                    do {
                      if (Ct.pending === Ct.pending_buf_size && (Ct.gzhead.hcrc && Ct.pending > Ht && (Q.adler = i(Q.adler, Ct.pending_buf, Ct.pending - Ht, Ht)), Yt(Q), Ht = Ct.pending, Ct.pending === Ct.pending_buf_size)) {
                        oe = 1;
                        break;
                      }
                      Ct.gzindex < Ct.gzhead.name.length ? oe = Ct.gzhead.name.charCodeAt(Ct.gzindex++) & 255 : oe = 0, Dt(Ct, oe);
                    } while (oe !== 0);
                    Ct.gzhead.hcrc && Ct.pending > Ht && (Q.adler = i(Q.adler, Ct.pending_buf, Ct.pending - Ht, Ht)), oe === 0 && (Ct.gzindex = 0, Ct.status = yt);
                  } else
                    Ct.status = yt;
                if (Ct.status === yt)
                  if (Ct.gzhead.comment) {
                    Ht = Ct.pending;
                    do {
                      if (Ct.pending === Ct.pending_buf_size && (Ct.gzhead.hcrc && Ct.pending > Ht && (Q.adler = i(Q.adler, Ct.pending_buf, Ct.pending - Ht, Ht)), Yt(Q), Ht = Ct.pending, Ct.pending === Ct.pending_buf_size)) {
                        oe = 1;
                        break;
                      }
                      Ct.gzindex < Ct.gzhead.comment.length ? oe = Ct.gzhead.comment.charCodeAt(Ct.gzindex++) & 255 : oe = 0, Dt(Ct, oe);
                    } while (oe !== 0);
                    Ct.gzhead.hcrc && Ct.pending > Ht && (Q.adler = i(Q.adler, Ct.pending_buf, Ct.pending - Ht, Ht)), oe === 0 && (Ct.status = G);
                  } else
                    Ct.status = G;
                if (Ct.status === G && (Ct.gzhead.hcrc ? (Ct.pending + 2 > Ct.pending_buf_size && Yt(Q), Ct.pending + 2 <= Ct.pending_buf_size && (Dt(Ct, Q.adler & 255), Dt(Ct, Q.adler >> 8 & 255), Q.adler = 0, Ct.status = Et)) : Ct.status = Et), Ct.pending !== 0) {
                  if (Yt(Q), Q.avail_out === 0)
                    return Ct.last_flush = -1, y;
                } else if (Q.avail_in === 0 && At(Jt) <= At(te) && Jt !== a)
                  return _(Q, w);
                if (Ct.status === k && Q.avail_in !== 0)
                  return _(Q, w);
                if (Q.avail_in !== 0 || Ct.lookahead !== 0 || Jt !== l && Ct.status !== k) {
                  var ke = Ct.strategy === E ? de(Ct, Jt) : Ct.strategy === T ? le(Ct, Jt) : Oe[Ct.level].func(Ct, Jt);
                  if ((ke === V || ke === it) && (Ct.status = k), ke === S || ke === V)
                    return Q.avail_out === 0 && (Ct.last_flush = -1), y;
                  if (ke === L && (Jt === u ? r._tr_align(Ct) : Jt !== v && (r._tr_stored_block(Ct, 0, 0, !1), Jt === h && (Rt(Ct.head), Ct.lookahead === 0 && (Ct.strstart = 0, Ct.block_start = 0, Ct.insert = 0))), Yt(Q), Q.avail_out === 0))
                    return Ct.last_flush = -1, y;
                }
                return Jt !== a ? y : Ct.wrap <= 0 ? p : (Ct.wrap === 2 ? (Dt(Ct, Q.adler & 255), Dt(Ct, Q.adler >> 8 & 255), Dt(Ct, Q.adler >> 16 & 255), Dt(Ct, Q.adler >> 24 & 255), Dt(Ct, Q.total_in & 255), Dt(Ct, Q.total_in >> 8 & 255), Dt(Ct, Q.total_in >> 16 & 255), Dt(Ct, Q.total_in >> 24 & 255)) : (ae(Ct, Q.adler >>> 16), ae(Ct, Q.adler & 65535)), Yt(Q), Ct.wrap > 0 && (Ct.wrap = -Ct.wrap), Ct.pending !== 0 ? y : p);
              }
              function Wt(Q) {
                var Jt;
                return !Q || !Q.state ? e : (Jt = Q.state.status, Jt !== gt && Jt !== ut && Jt !== st && Jt !== yt && Jt !== G && Jt !== Et && Jt !== k ? _(Q, e) : (Q.state = null, Jt === Et ? _(Q, m) : y));
              }
              function _t(Q, Jt) {
                var te = Jt.length, Ct, Ht, oe, Le, De, ke, Ne, rn;
                if (!Q || !Q.state || (Ct = Q.state, Le = Ct.wrap, Le === 2 || Le === 1 && Ct.status !== gt || Ct.lookahead))
                  return e;
                for (Le === 1 && (Q.adler = n(Q.adler, Jt, te, 0)), Ct.wrap = 0, te >= Ct.w_size && (Le === 0 && (Rt(Ct.head), Ct.strstart = 0, Ct.block_start = 0, Ct.insert = 0), rn = new o.Buf8(Ct.w_size), o.arraySet(rn, Jt, te - Ct.w_size, Ct.w_size, 0), Jt = rn, te = Ct.w_size), De = Q.avail_in, ke = Q.next_in, Ne = Q.input, Q.avail_in = te, Q.next_in = 0, Q.input = Jt, ce(Ct); Ct.lookahead >= It; ) {
                  Ht = Ct.strstart, oe = Ct.lookahead - (It - 1);
                  do
                    Ct.ins_h = (Ct.ins_h << Ct.hash_shift ^ Ct.window[Ht + It - 1]) & Ct.hash_mask, Ct.prev[Ht & Ct.w_mask] = Ct.head[Ct.ins_h], Ct.head[Ct.ins_h] = Ht, Ht++;
                  while (--oe);
                  Ct.strstart = Ht, Ct.lookahead = It - 1, ce(Ct);
                }
                return Ct.strstart += Ct.lookahead, Ct.block_start = Ct.strstart, Ct.insert = Ct.lookahead, Ct.lookahead = 0, Ct.match_length = Ct.prev_length = It - 1, Ct.match_available = 0, Q.next_in = ke, Q.input = Ne, Q.avail_in = De, Ct.wrap = Le, y;
              }
              d.deflateInit = mt, d.deflateInit2 = j, d.deflateReset = ot, d.deflateResetKeep = fe, d.deflateSetHeader = Y, d.deflate = at, d.deflateEnd = Wt, d.deflateSetDictionary = _t, d.deflateInfo = "pako deflate (from Nodeca project)";
            }
          ),
          /***/
          63394: (
            /***/
            function(c) {
              var d = 30, t = 12;
              c.exports = function(r, n) {
                var i, f, l, u, h, a, v, y, p, e, m, w, D, I, E, T, A, F, b, R, N, U, W, J, ht;
                i = r.state, f = r.next_in, J = r.input, l = f + (r.avail_in - 5), u = r.next_out, ht = r.output, h = u - (n - r.avail_out), a = u + (r.avail_out - 257), v = i.dmax, y = i.wsize, p = i.whave, e = i.wnext, m = i.window, w = i.hold, D = i.bits, I = i.lencode, E = i.distcode, T = (1 << i.lenbits) - 1, A = (1 << i.distbits) - 1;
                t:
                  do {
                    D < 15 && (w += J[f++] << D, D += 8, w += J[f++] << D, D += 8), F = I[w & T];
                    e:
                      for (; ; ) {
                        if (b = F >>> 24, w >>>= b, D -= b, b = F >>> 16 & 255, b === 0)
                          ht[u++] = F & 65535;
                        else if (b & 16) {
                          R = F & 65535, b &= 15, b && (D < b && (w += J[f++] << D, D += 8), R += w & (1 << b) - 1, w >>>= b, D -= b), D < 15 && (w += J[f++] << D, D += 8, w += J[f++] << D, D += 8), F = E[w & A];
                          r:
                            for (; ; ) {
                              if (b = F >>> 24, w >>>= b, D -= b, b = F >>> 16 & 255, b & 16) {
                                if (N = F & 65535, b &= 15, D < b && (w += J[f++] << D, D += 8, D < b && (w += J[f++] << D, D += 8)), N += w & (1 << b) - 1, N > v) {
                                  r.msg = "invalid distance too far back", i.mode = d;
                                  break t;
                                }
                                if (w >>>= b, D -= b, b = u - h, N > b) {
                                  if (b = N - b, b > p && i.sane) {
                                    r.msg = "invalid distance too far back", i.mode = d;
                                    break t;
                                  }
                                  if (U = 0, W = m, e === 0) {
                                    if (U += y - b, b < R) {
                                      R -= b;
                                      do
                                        ht[u++] = m[U++];
                                      while (--b);
                                      U = u - N, W = ht;
                                    }
                                  } else if (e < b) {
                                    if (U += y + e - b, b -= e, b < R) {
                                      R -= b;
                                      do
                                        ht[u++] = m[U++];
                                      while (--b);
                                      if (U = 0, e < R) {
                                        b = e, R -= b;
                                        do
                                          ht[u++] = m[U++];
                                        while (--b);
                                        U = u - N, W = ht;
                                      }
                                    }
                                  } else if (U += e - b, b < R) {
                                    R -= b;
                                    do
                                      ht[u++] = m[U++];
                                    while (--b);
                                    U = u - N, W = ht;
                                  }
                                  for (; R > 2; )
                                    ht[u++] = W[U++], ht[u++] = W[U++], ht[u++] = W[U++], R -= 3;
                                  R && (ht[u++] = W[U++], R > 1 && (ht[u++] = W[U++]));
                                } else {
                                  U = u - N;
                                  do
                                    ht[u++] = ht[U++], ht[u++] = ht[U++], ht[u++] = ht[U++], R -= 3;
                                  while (R > 2);
                                  R && (ht[u++] = ht[U++], R > 1 && (ht[u++] = ht[U++]));
                                }
                              } else if (b & 64) {
                                r.msg = "invalid distance code", i.mode = d;
                                break t;
                              } else {
                                F = E[(F & 65535) + (w & (1 << b) - 1)];
                                continue r;
                              }
                              break;
                            }
                        } else if (b & 64)
                          if (b & 32) {
                            i.mode = t;
                            break t;
                          } else {
                            r.msg = "invalid literal/length code", i.mode = d;
                            break t;
                          }
                        else {
                          F = I[(F & 65535) + (w & (1 << b) - 1)];
                          continue e;
                        }
                        break;
                      }
                  } while (f < l && u < a);
                R = D >> 3, f -= R, D -= R << 3, w &= (1 << D) - 1, r.next_in = f, r.next_out = u, r.avail_in = f < l ? 5 + (l - f) : 5 - (f - l), r.avail_out = u < a ? 257 + (a - u) : 257 - (u - a), i.hold = w, i.bits = D;
              };
            }
          ),
          /***/
          3386: (
            /***/
            function(c, d, t) {
              var o = t(69034), r = t(51475), n = t(38621), i = t(63394), f = t(20598), l = 0, u = 1, h = 2, a = 4, v = 5, y = 6, p = 0, e = 1, m = 2, w = -2, D = -3, I = -4, E = -5, T = 8, A = 1, F = 2, b = 3, R = 4, N = 5, U = 6, W = 7, J = 8, ht = 9, K = 10, nt = 11, xt = 12, bt = 13, Tt = 14, It = 15, Lt = 16, Ut = 17, $ = 18, gt = 19, ut = 20, st = 21, yt = 22, G = 23, Et = 24, k = 25, S = 26, L = 27, V = 28, it = 29, tt = 30, _ = 31, At = 32, Rt = 852, Yt = 592, Gt = 15, Dt = Gt;
              function ae(j) {
                return (j >>> 24 & 255) + (j >>> 8 & 65280) + ((j & 65280) << 8) + ((j & 255) << 24);
              }
              function Ae() {
                this.mode = 0, this.last = !1, this.wrap = 0, this.havedict = !1, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new o.Buf16(320), this.work = new o.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
              }
              function xe(j) {
                var mt;
                return !j || !j.state ? w : (mt = j.state, j.total_in = j.total_out = mt.total = 0, j.msg = "", mt.wrap && (j.adler = mt.wrap & 1), mt.mode = A, mt.last = 0, mt.havedict = 0, mt.dmax = 32768, mt.head = null, mt.hold = 0, mt.bits = 0, mt.lencode = mt.lendyn = new o.Buf32(Rt), mt.distcode = mt.distdyn = new o.Buf32(Yt), mt.sane = 1, mt.back = -1, p);
              }
              function ce(j) {
                var mt;
                return !j || !j.state ? w : (mt = j.state, mt.wsize = 0, mt.whave = 0, mt.wnext = 0, xe(j));
              }
              function we(j, mt) {
                var at, Wt;
                return !j || !j.state || (Wt = j.state, mt < 0 ? (at = 0, mt = -mt) : (at = (mt >> 4) + 1, mt < 48 && (mt &= 15)), mt && (mt < 8 || mt > 15)) ? w : (Wt.window !== null && Wt.wbits !== mt && (Wt.window = null), Wt.wrap = at, Wt.wbits = mt, ce(j));
              }
              function zt(j, mt) {
                var at, Wt;
                return j ? (Wt = new Ae(), j.state = Wt, Wt.window = null, at = we(j, mt), at !== p && (j.state = null), at) : w;
              }
              function Qt(j) {
                return zt(j, Dt);
              }
              var le = !0, de, be;
              function Oe(j) {
                if (le) {
                  var mt;
                  for (de = new o.Buf32(512), be = new o.Buf32(32), mt = 0; mt < 144; )
                    j.lens[mt++] = 8;
                  for (; mt < 256; )
                    j.lens[mt++] = 9;
                  for (; mt < 280; )
                    j.lens[mt++] = 7;
                  for (; mt < 288; )
                    j.lens[mt++] = 8;
                  for (f(u, j.lens, 0, 288, de, 0, j.work, { bits: 9 }), mt = 0; mt < 32; )
                    j.lens[mt++] = 5;
                  f(h, j.lens, 0, 32, be, 0, j.work, { bits: 5 }), le = !1;
                }
                j.lencode = de, j.lenbits = 9, j.distcode = be, j.distbits = 5;
              }
              function Fe(j, mt, at, Wt) {
                var _t, Q = j.state;
                return Q.window === null && (Q.wsize = 1 << Q.wbits, Q.wnext = 0, Q.whave = 0, Q.window = new o.Buf8(Q.wsize)), Wt >= Q.wsize ? (o.arraySet(Q.window, mt, at - Q.wsize, Q.wsize, 0), Q.wnext = 0, Q.whave = Q.wsize) : (_t = Q.wsize - Q.wnext, _t > Wt && (_t = Wt), o.arraySet(Q.window, mt, at - Wt, _t, Q.wnext), Wt -= _t, Wt ? (o.arraySet(Q.window, mt, at - Wt, Wt, 0), Q.wnext = Wt, Q.whave = Q.wsize) : (Q.wnext += _t, Q.wnext === Q.wsize && (Q.wnext = 0), Q.whave < Q.wsize && (Q.whave += _t))), 0;
              }
              function Ft(j, mt) {
                var at, Wt, _t, Q, Jt, te, Ct, Ht, oe, Le, De, ke, Ne, rn, tr = 0, Ze, br, Ir, Zr, Cn, Mn, rr, nn, Mr = new o.Buf8(4), $r, Wr, Hn = (
                  /* permutation of code lengths */
                  [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15]
                );
                if (!j || !j.state || !j.output || !j.input && j.avail_in !== 0)
                  return w;
                at = j.state, at.mode === xt && (at.mode = bt), Jt = j.next_out, _t = j.output, Ct = j.avail_out, Q = j.next_in, Wt = j.input, te = j.avail_in, Ht = at.hold, oe = at.bits, Le = te, De = Ct, nn = p;
                t:
                  for (; ; )
                    switch (at.mode) {
                      case A:
                        if (at.wrap === 0) {
                          at.mode = bt;
                          break;
                        }
                        for (; oe < 16; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[Q++] << oe, oe += 8;
                        }
                        if (at.wrap & 2 && Ht === 35615) {
                          at.check = 0, Mr[0] = Ht & 255, Mr[1] = Ht >>> 8 & 255, at.check = n(at.check, Mr, 2, 0), Ht = 0, oe = 0, at.mode = F;
                          break;
                        }
                        if (at.flags = 0, at.head && (at.head.done = !1), !(at.wrap & 1) || /* check if zlib header allowed */
                        (((Ht & 255) << 8) + (Ht >> 8)) % 31) {
                          j.msg = "incorrect header check", at.mode = tt;
                          break;
                        }
                        if ((Ht & 15) !== T) {
                          j.msg = "unknown compression method", at.mode = tt;
                          break;
                        }
                        if (Ht >>>= 4, oe -= 4, rr = (Ht & 15) + 8, at.wbits === 0)
                          at.wbits = rr;
                        else if (rr > at.wbits) {
                          j.msg = "invalid window size", at.mode = tt;
                          break;
                        }
                        at.dmax = 1 << rr, j.adler = at.check = 1, at.mode = Ht & 512 ? K : xt, Ht = 0, oe = 0;
                        break;
                      case F:
                        for (; oe < 16; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[Q++] << oe, oe += 8;
                        }
                        if (at.flags = Ht, (at.flags & 255) !== T) {
                          j.msg = "unknown compression method", at.mode = tt;
                          break;
                        }
                        if (at.flags & 57344) {
                          j.msg = "unknown header flags set", at.mode = tt;
                          break;
                        }
                        at.head && (at.head.text = Ht >> 8 & 1), at.flags & 512 && (Mr[0] = Ht & 255, Mr[1] = Ht >>> 8 & 255, at.check = n(at.check, Mr, 2, 0)), Ht = 0, oe = 0, at.mode = b;
                      case b:
                        for (; oe < 32; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[Q++] << oe, oe += 8;
                        }
                        at.head && (at.head.time = Ht), at.flags & 512 && (Mr[0] = Ht & 255, Mr[1] = Ht >>> 8 & 255, Mr[2] = Ht >>> 16 & 255, Mr[3] = Ht >>> 24 & 255, at.check = n(at.check, Mr, 4, 0)), Ht = 0, oe = 0, at.mode = R;
                      case R:
                        for (; oe < 16; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[Q++] << oe, oe += 8;
                        }
                        at.head && (at.head.xflags = Ht & 255, at.head.os = Ht >> 8), at.flags & 512 && (Mr[0] = Ht & 255, Mr[1] = Ht >>> 8 & 255, at.check = n(at.check, Mr, 2, 0)), Ht = 0, oe = 0, at.mode = N;
                      case N:
                        if (at.flags & 1024) {
                          for (; oe < 16; ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[Q++] << oe, oe += 8;
                          }
                          at.length = Ht, at.head && (at.head.extra_len = Ht), at.flags & 512 && (Mr[0] = Ht & 255, Mr[1] = Ht >>> 8 & 255, at.check = n(at.check, Mr, 2, 0)), Ht = 0, oe = 0;
                        } else
                          at.head && (at.head.extra = null);
                        at.mode = U;
                      case U:
                        if (at.flags & 1024 && (ke = at.length, ke > te && (ke = te), ke && (at.head && (rr = at.head.extra_len - at.length, at.head.extra || (at.head.extra = new Array(at.head.extra_len)), o.arraySet(
                          at.head.extra,
                          Wt,
                          Q,
                          // extra field is limited to 65536 bytes
                          // - no need for additional size check
                          ke,
                          /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/
                          rr
                        )), at.flags & 512 && (at.check = n(at.check, Wt, ke, Q)), te -= ke, Q += ke, at.length -= ke), at.length))
                          break t;
                        at.length = 0, at.mode = W;
                      case W:
                        if (at.flags & 2048) {
                          if (te === 0)
                            break t;
                          ke = 0;
                          do
                            rr = Wt[Q + ke++], at.head && rr && at.length < 65536 && (at.head.name += String.fromCharCode(rr));
                          while (rr && ke < te);
                          if (at.flags & 512 && (at.check = n(at.check, Wt, ke, Q)), te -= ke, Q += ke, rr)
                            break t;
                        } else
                          at.head && (at.head.name = null);
                        at.length = 0, at.mode = J;
                      case J:
                        if (at.flags & 4096) {
                          if (te === 0)
                            break t;
                          ke = 0;
                          do
                            rr = Wt[Q + ke++], at.head && rr && at.length < 65536 && (at.head.comment += String.fromCharCode(rr));
                          while (rr && ke < te);
                          if (at.flags & 512 && (at.check = n(at.check, Wt, ke, Q)), te -= ke, Q += ke, rr)
                            break t;
                        } else
                          at.head && (at.head.comment = null);
                        at.mode = ht;
                      case ht:
                        if (at.flags & 512) {
                          for (; oe < 16; ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[Q++] << oe, oe += 8;
                          }
                          if (Ht !== (at.check & 65535)) {
                            j.msg = "header crc mismatch", at.mode = tt;
                            break;
                          }
                          Ht = 0, oe = 0;
                        }
                        at.head && (at.head.hcrc = at.flags >> 9 & 1, at.head.done = !0), j.adler = at.check = 0, at.mode = xt;
                        break;
                      case K:
                        for (; oe < 32; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[Q++] << oe, oe += 8;
                        }
                        j.adler = at.check = ae(Ht), Ht = 0, oe = 0, at.mode = nt;
                      case nt:
                        if (at.havedict === 0)
                          return j.next_out = Jt, j.avail_out = Ct, j.next_in = Q, j.avail_in = te, at.hold = Ht, at.bits = oe, m;
                        j.adler = at.check = 1, at.mode = xt;
                      case xt:
                        if (mt === v || mt === y)
                          break t;
                      case bt:
                        if (at.last) {
                          Ht >>>= oe & 7, oe -= oe & 7, at.mode = L;
                          break;
                        }
                        for (; oe < 3; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[Q++] << oe, oe += 8;
                        }
                        switch (at.last = Ht & 1, Ht >>>= 1, oe -= 1, Ht & 3) {
                          case 0:
                            at.mode = Tt;
                            break;
                          case 1:
                            if (Oe(at), at.mode = ut, mt === y) {
                              Ht >>>= 2, oe -= 2;
                              break t;
                            }
                            break;
                          case 2:
                            at.mode = Ut;
                            break;
                          case 3:
                            j.msg = "invalid block type", at.mode = tt;
                        }
                        Ht >>>= 2, oe -= 2;
                        break;
                      case Tt:
                        for (Ht >>>= oe & 7, oe -= oe & 7; oe < 32; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[Q++] << oe, oe += 8;
                        }
                        if ((Ht & 65535) !== (Ht >>> 16 ^ 65535)) {
                          j.msg = "invalid stored block lengths", at.mode = tt;
                          break;
                        }
                        if (at.length = Ht & 65535, Ht = 0, oe = 0, at.mode = It, mt === y)
                          break t;
                      case It:
                        at.mode = Lt;
                      case Lt:
                        if (ke = at.length, ke) {
                          if (ke > te && (ke = te), ke > Ct && (ke = Ct), ke === 0)
                            break t;
                          o.arraySet(_t, Wt, Q, ke, Jt), te -= ke, Q += ke, Ct -= ke, Jt += ke, at.length -= ke;
                          break;
                        }
                        at.mode = xt;
                        break;
                      case Ut:
                        for (; oe < 14; ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[Q++] << oe, oe += 8;
                        }
                        if (at.nlen = (Ht & 31) + 257, Ht >>>= 5, oe -= 5, at.ndist = (Ht & 31) + 1, Ht >>>= 5, oe -= 5, at.ncode = (Ht & 15) + 4, Ht >>>= 4, oe -= 4, at.nlen > 286 || at.ndist > 30) {
                          j.msg = "too many length or distance symbols", at.mode = tt;
                          break;
                        }
                        at.have = 0, at.mode = $;
                      case $:
                        for (; at.have < at.ncode; ) {
                          for (; oe < 3; ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[Q++] << oe, oe += 8;
                          }
                          at.lens[Hn[at.have++]] = Ht & 7, Ht >>>= 3, oe -= 3;
                        }
                        for (; at.have < 19; )
                          at.lens[Hn[at.have++]] = 0;
                        if (at.lencode = at.lendyn, at.lenbits = 7, $r = { bits: at.lenbits }, nn = f(l, at.lens, 0, 19, at.lencode, 0, at.work, $r), at.lenbits = $r.bits, nn) {
                          j.msg = "invalid code lengths set", at.mode = tt;
                          break;
                        }
                        at.have = 0, at.mode = gt;
                      case gt:
                        for (; at.have < at.nlen + at.ndist; ) {
                          for (; tr = at.lencode[Ht & (1 << at.lenbits) - 1], Ze = tr >>> 24, br = tr >>> 16 & 255, Ir = tr & 65535, !(Ze <= oe); ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[Q++] << oe, oe += 8;
                          }
                          if (Ir < 16)
                            Ht >>>= Ze, oe -= Ze, at.lens[at.have++] = Ir;
                          else {
                            if (Ir === 16) {
                              for (Wr = Ze + 2; oe < Wr; ) {
                                if (te === 0)
                                  break t;
                                te--, Ht += Wt[Q++] << oe, oe += 8;
                              }
                              if (Ht >>>= Ze, oe -= Ze, at.have === 0) {
                                j.msg = "invalid bit length repeat", at.mode = tt;
                                break;
                              }
                              rr = at.lens[at.have - 1], ke = 3 + (Ht & 3), Ht >>>= 2, oe -= 2;
                            } else if (Ir === 17) {
                              for (Wr = Ze + 3; oe < Wr; ) {
                                if (te === 0)
                                  break t;
                                te--, Ht += Wt[Q++] << oe, oe += 8;
                              }
                              Ht >>>= Ze, oe -= Ze, rr = 0, ke = 3 + (Ht & 7), Ht >>>= 3, oe -= 3;
                            } else {
                              for (Wr = Ze + 7; oe < Wr; ) {
                                if (te === 0)
                                  break t;
                                te--, Ht += Wt[Q++] << oe, oe += 8;
                              }
                              Ht >>>= Ze, oe -= Ze, rr = 0, ke = 11 + (Ht & 127), Ht >>>= 7, oe -= 7;
                            }
                            if (at.have + ke > at.nlen + at.ndist) {
                              j.msg = "invalid bit length repeat", at.mode = tt;
                              break;
                            }
                            for (; ke--; )
                              at.lens[at.have++] = rr;
                          }
                        }
                        if (at.mode === tt)
                          break;
                        if (at.lens[256] === 0) {
                          j.msg = "invalid code -- missing end-of-block", at.mode = tt;
                          break;
                        }
                        if (at.lenbits = 9, $r = { bits: at.lenbits }, nn = f(u, at.lens, 0, at.nlen, at.lencode, 0, at.work, $r), at.lenbits = $r.bits, nn) {
                          j.msg = "invalid literal/lengths set", at.mode = tt;
                          break;
                        }
                        if (at.distbits = 6, at.distcode = at.distdyn, $r = { bits: at.distbits }, nn = f(h, at.lens, at.nlen, at.ndist, at.distcode, 0, at.work, $r), at.distbits = $r.bits, nn) {
                          j.msg = "invalid distances set", at.mode = tt;
                          break;
                        }
                        if (at.mode = ut, mt === y)
                          break t;
                      case ut:
                        at.mode = st;
                      case st:
                        if (te >= 6 && Ct >= 258) {
                          j.next_out = Jt, j.avail_out = Ct, j.next_in = Q, j.avail_in = te, at.hold = Ht, at.bits = oe, i(j, De), Jt = j.next_out, _t = j.output, Ct = j.avail_out, Q = j.next_in, Wt = j.input, te = j.avail_in, Ht = at.hold, oe = at.bits, at.mode === xt && (at.back = -1);
                          break;
                        }
                        for (at.back = 0; tr = at.lencode[Ht & (1 << at.lenbits) - 1], Ze = tr >>> 24, br = tr >>> 16 & 255, Ir = tr & 65535, !(Ze <= oe); ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[Q++] << oe, oe += 8;
                        }
                        if (br && !(br & 240)) {
                          for (Zr = Ze, Cn = br, Mn = Ir; tr = at.lencode[Mn + ((Ht & (1 << Zr + Cn) - 1) >> Zr)], Ze = tr >>> 24, br = tr >>> 16 & 255, Ir = tr & 65535, !(Zr + Ze <= oe); ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[Q++] << oe, oe += 8;
                          }
                          Ht >>>= Zr, oe -= Zr, at.back += Zr;
                        }
                        if (Ht >>>= Ze, oe -= Ze, at.back += Ze, at.length = Ir, br === 0) {
                          at.mode = S;
                          break;
                        }
                        if (br & 32) {
                          at.back = -1, at.mode = xt;
                          break;
                        }
                        if (br & 64) {
                          j.msg = "invalid literal/length code", at.mode = tt;
                          break;
                        }
                        at.extra = br & 15, at.mode = yt;
                      case yt:
                        if (at.extra) {
                          for (Wr = at.extra; oe < Wr; ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[Q++] << oe, oe += 8;
                          }
                          at.length += Ht & (1 << at.extra) - 1, Ht >>>= at.extra, oe -= at.extra, at.back += at.extra;
                        }
                        at.was = at.length, at.mode = G;
                      case G:
                        for (; tr = at.distcode[Ht & (1 << at.distbits) - 1], Ze = tr >>> 24, br = tr >>> 16 & 255, Ir = tr & 65535, !(Ze <= oe); ) {
                          if (te === 0)
                            break t;
                          te--, Ht += Wt[Q++] << oe, oe += 8;
                        }
                        if (!(br & 240)) {
                          for (Zr = Ze, Cn = br, Mn = Ir; tr = at.distcode[Mn + ((Ht & (1 << Zr + Cn) - 1) >> Zr)], Ze = tr >>> 24, br = tr >>> 16 & 255, Ir = tr & 65535, !(Zr + Ze <= oe); ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[Q++] << oe, oe += 8;
                          }
                          Ht >>>= Zr, oe -= Zr, at.back += Zr;
                        }
                        if (Ht >>>= Ze, oe -= Ze, at.back += Ze, br & 64) {
                          j.msg = "invalid distance code", at.mode = tt;
                          break;
                        }
                        at.offset = Ir, at.extra = br & 15, at.mode = Et;
                      case Et:
                        if (at.extra) {
                          for (Wr = at.extra; oe < Wr; ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[Q++] << oe, oe += 8;
                          }
                          at.offset += Ht & (1 << at.extra) - 1, Ht >>>= at.extra, oe -= at.extra, at.back += at.extra;
                        }
                        if (at.offset > at.dmax) {
                          j.msg = "invalid distance too far back", at.mode = tt;
                          break;
                        }
                        at.mode = k;
                      case k:
                        if (Ct === 0)
                          break t;
                        if (ke = De - Ct, at.offset > ke) {
                          if (ke = at.offset - ke, ke > at.whave && at.sane) {
                            j.msg = "invalid distance too far back", at.mode = tt;
                            break;
                          }
                          ke > at.wnext ? (ke -= at.wnext, Ne = at.wsize - ke) : Ne = at.wnext - ke, ke > at.length && (ke = at.length), rn = at.window;
                        } else
                          rn = _t, Ne = Jt - at.offset, ke = at.length;
                        ke > Ct && (ke = Ct), Ct -= ke, at.length -= ke;
                        do
                          _t[Jt++] = rn[Ne++];
                        while (--ke);
                        at.length === 0 && (at.mode = st);
                        break;
                      case S:
                        if (Ct === 0)
                          break t;
                        _t[Jt++] = at.length, Ct--, at.mode = st;
                        break;
                      case L:
                        if (at.wrap) {
                          for (; oe < 32; ) {
                            if (te === 0)
                              break t;
                            te--, Ht |= Wt[Q++] << oe, oe += 8;
                          }
                          if (De -= Ct, j.total_out += De, at.total += De, De && (j.adler = at.check = /*UPDATE(state.check, put - _out, _out);*/
                          at.flags ? n(at.check, _t, De, Jt - De) : r(at.check, _t, De, Jt - De)), De = Ct, (at.flags ? Ht : ae(Ht)) !== at.check) {
                            j.msg = "incorrect data check", at.mode = tt;
                            break;
                          }
                          Ht = 0, oe = 0;
                        }
                        at.mode = V;
                      case V:
                        if (at.wrap && at.flags) {
                          for (; oe < 32; ) {
                            if (te === 0)
                              break t;
                            te--, Ht += Wt[Q++] << oe, oe += 8;
                          }
                          if (Ht !== (at.total & 4294967295)) {
                            j.msg = "incorrect length check", at.mode = tt;
                            break;
                          }
                          Ht = 0, oe = 0;
                        }
                        at.mode = it;
                      case it:
                        nn = e;
                        break t;
                      case tt:
                        nn = D;
                        break t;
                      case _:
                        return I;
                      case At:
                      default:
                        return w;
                    }
                return j.next_out = Jt, j.avail_out = Ct, j.next_in = Q, j.avail_in = te, at.hold = Ht, at.bits = oe, (at.wsize || De !== j.avail_out && at.mode < tt && (at.mode < L || mt !== a)) && Fe(j, j.output, j.next_out, De - j.avail_out), Le -= j.avail_in, De -= j.avail_out, j.total_in += Le, j.total_out += De, at.total += De, at.wrap && De && (j.adler = at.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/
                at.flags ? n(at.check, _t, De, j.next_out - De) : r(at.check, _t, De, j.next_out - De)), j.data_type = at.bits + (at.last ? 64 : 0) + (at.mode === xt ? 128 : 0) + (at.mode === ut || at.mode === It ? 256 : 0), (Le === 0 && De === 0 || mt === a) && nn === p && (nn = E), nn;
              }
              function fe(j) {
                if (!j || !j.state)
                  return w;
                var mt = j.state;
                return mt.window && (mt.window = null), j.state = null, p;
              }
              function ot(j, mt) {
                var at;
                return !j || !j.state || (at = j.state, !(at.wrap & 2)) ? w : (at.head = mt, mt.done = !1, p);
              }
              function Y(j, mt) {
                var at = mt.length, Wt, _t, Q;
                return !j || !j.state || (Wt = j.state, Wt.wrap !== 0 && Wt.mode !== nt) ? w : Wt.mode === nt && (_t = 1, _t = r(_t, mt, at, 0), _t !== Wt.check) ? D : (Q = Fe(j, mt, at, at), Q ? (Wt.mode = _, I) : (Wt.havedict = 1, p));
              }
              d.inflateReset = ce, d.inflateReset2 = we, d.inflateResetKeep = xe, d.inflateInit = Qt, d.inflateInit2 = zt, d.inflate = Ft, d.inflateEnd = fe, d.inflateGetHeader = ot, d.inflateSetDictionary = Y, d.inflateInfo = "pako inflate (from Nodeca project)";
            }
          ),
          /***/
          20598: (
            /***/
            function(c, d, t) {
              var o = t(69034), r = 15, n = 852, i = 592, f = 0, l = 1, u = 2, h = [
                /* Length codes 257..285 base */
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                13,
                15,
                17,
                19,
                23,
                27,
                31,
                35,
                43,
                51,
                59,
                67,
                83,
                99,
                115,
                131,
                163,
                195,
                227,
                258,
                0,
                0
              ], a = [
                /* Length codes 257..285 extra */
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                16,
                17,
                17,
                17,
                17,
                18,
                18,
                18,
                18,
                19,
                19,
                19,
                19,
                20,
                20,
                20,
                20,
                21,
                21,
                21,
                21,
                16,
                72,
                78
              ], v = [
                /* Distance codes 0..29 base */
                1,
                2,
                3,
                4,
                5,
                7,
                9,
                13,
                17,
                25,
                33,
                49,
                65,
                97,
                129,
                193,
                257,
                385,
                513,
                769,
                1025,
                1537,
                2049,
                3073,
                4097,
                6145,
                8193,
                12289,
                16385,
                24577,
                0,
                0
              ], y = [
                /* Distance codes 0..29 extra */
                16,
                16,
                16,
                16,
                17,
                17,
                18,
                18,
                19,
                19,
                20,
                20,
                21,
                21,
                22,
                22,
                23,
                23,
                24,
                24,
                25,
                25,
                26,
                26,
                27,
                27,
                28,
                28,
                29,
                29,
                64,
                64
              ];
              c.exports = function(e, m, w, D, I, E, T, A) {
                var F = A.bits, b = 0, R = 0, N = 0, U = 0, W = 0, J = 0, ht = 0, K = 0, nt = 0, xt = 0, bt, Tt, It, Lt, Ut, $ = null, gt = 0, ut, st = new o.Buf16(r + 1), yt = new o.Buf16(r + 1), G = null, Et = 0, k, S, L;
                for (b = 0; b <= r; b++)
                  st[b] = 0;
                for (R = 0; R < D; R++)
                  st[m[w + R]]++;
                for (W = F, U = r; U >= 1 && st[U] === 0; U--)
                  ;
                if (W > U && (W = U), U === 0)
                  return I[E++] = 20971520, I[E++] = 20971520, A.bits = 1, 0;
                for (N = 1; N < U && st[N] === 0; N++)
                  ;
                for (W < N && (W = N), K = 1, b = 1; b <= r; b++)
                  if (K <<= 1, K -= st[b], K < 0)
                    return -1;
                if (K > 0 && (e === f || U !== 1))
                  return -1;
                for (yt[1] = 0, b = 1; b < r; b++)
                  yt[b + 1] = yt[b] + st[b];
                for (R = 0; R < D; R++)
                  m[w + R] !== 0 && (T[yt[m[w + R]]++] = R);
                if (e === f ? ($ = G = T, ut = 19) : e === l ? ($ = h, gt -= 257, G = a, Et -= 257, ut = 256) : ($ = v, G = y, ut = -1), xt = 0, R = 0, b = N, Ut = E, J = W, ht = 0, It = -1, nt = 1 << W, Lt = nt - 1, e === l && nt > n || e === u && nt > i)
                  return 1;
                for (; ; ) {
                  k = b - ht, T[R] < ut ? (S = 0, L = T[R]) : T[R] > ut ? (S = G[Et + T[R]], L = $[gt + T[R]]) : (S = 96, L = 0), bt = 1 << b - ht, Tt = 1 << J, N = Tt;
                  do
                    Tt -= bt, I[Ut + (xt >> ht) + Tt] = k << 24 | S << 16 | L | 0;
                  while (Tt !== 0);
                  for (bt = 1 << b - 1; xt & bt; )
                    bt >>= 1;
                  if (bt !== 0 ? (xt &= bt - 1, xt += bt) : xt = 0, R++, --st[b] === 0) {
                    if (b === U)
                      break;
                    b = m[w + T[R]];
                  }
                  if (b > W && (xt & Lt) !== It) {
                    for (ht === 0 && (ht = W), Ut += N, J = b - ht, K = 1 << J; J + ht < U && (K -= st[J + ht], !(K <= 0)); )
                      J++, K <<= 1;
                    if (nt += 1 << J, e === l && nt > n || e === u && nt > i)
                      return 1;
                    It = xt & Lt, I[It] = W << 24 | J << 16 | Ut - E | 0;
                  }
                }
                return xt !== 0 && (I[Ut + xt] = b - ht << 24 | 4194304 | 0), A.bits = W, 0;
              };
            }
          ),
          /***/
          44594: (
            /***/
            function(c) {
              c.exports = {
                2: "need dictionary",
                /* Z_NEED_DICT       2  */
                1: "stream end",
                /* Z_STREAM_END      1  */
                0: "",
                /* Z_OK              0  */
                "-1": "file error",
                /* Z_ERRNO         (-1) */
                "-2": "stream error",
                /* Z_STREAM_ERROR  (-2) */
                "-3": "data error",
                /* Z_DATA_ERROR    (-3) */
                "-4": "insufficient memory",
                /* Z_MEM_ERROR     (-4) */
                "-5": "buffer error",
                /* Z_BUF_ERROR     (-5) */
                "-6": "incompatible version"
                /* Z_VERSION_ERROR (-6) */
              };
            }
          ),
          /***/
          70376: (
            /***/
            function(c, d, t) {
              var o = t(69034), r = 4, n = 0, i = 1, f = 2;
              function l(Ft) {
                for (var fe = Ft.length; --fe >= 0; )
                  Ft[fe] = 0;
              }
              var u = 0, h = 1, a = 2, v = 3, y = 258, p = 29, e = 256, m = e + 1 + p, w = 30, D = 19, I = 2 * m + 1, E = 15, T = 16, A = 7, F = 256, b = 16, R = 17, N = 18, U = (
                /* extra bits for each length code */
                [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0]
              ), W = (
                /* extra bits for each distance code */
                [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13]
              ), J = (
                /* extra bits for each bit length code */
                [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7]
              ), ht = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], K = 512, nt = new Array((m + 2) * 2);
              l(nt);
              var xt = new Array(w * 2);
              l(xt);
              var bt = new Array(K);
              l(bt);
              var Tt = new Array(y - v + 1);
              l(Tt);
              var It = new Array(p);
              l(It);
              var Lt = new Array(w);
              l(Lt);
              function Ut(Ft, fe, ot, Y, j) {
                this.static_tree = Ft, this.extra_bits = fe, this.extra_base = ot, this.elems = Y, this.max_length = j, this.has_stree = Ft && Ft.length;
              }
              var $, gt, ut;
              function st(Ft, fe) {
                this.dyn_tree = Ft, this.max_code = 0, this.stat_desc = fe;
              }
              function yt(Ft) {
                return Ft < 256 ? bt[Ft] : bt[256 + (Ft >>> 7)];
              }
              function G(Ft, fe) {
                Ft.pending_buf[Ft.pending++] = fe & 255, Ft.pending_buf[Ft.pending++] = fe >>> 8 & 255;
              }
              function Et(Ft, fe, ot) {
                Ft.bi_valid > T - ot ? (Ft.bi_buf |= fe << Ft.bi_valid & 65535, G(Ft, Ft.bi_buf), Ft.bi_buf = fe >> T - Ft.bi_valid, Ft.bi_valid += ot - T) : (Ft.bi_buf |= fe << Ft.bi_valid & 65535, Ft.bi_valid += ot);
              }
              function k(Ft, fe, ot) {
                Et(
                  Ft,
                  ot[fe * 2],
                  ot[fe * 2 + 1]
                  /*.Len*/
                );
              }
              function S(Ft, fe) {
                var ot = 0;
                do
                  ot |= Ft & 1, Ft >>>= 1, ot <<= 1;
                while (--fe > 0);
                return ot >>> 1;
              }
              function L(Ft) {
                Ft.bi_valid === 16 ? (G(Ft, Ft.bi_buf), Ft.bi_buf = 0, Ft.bi_valid = 0) : Ft.bi_valid >= 8 && (Ft.pending_buf[Ft.pending++] = Ft.bi_buf & 255, Ft.bi_buf >>= 8, Ft.bi_valid -= 8);
              }
              function V(Ft, fe) {
                var ot = fe.dyn_tree, Y = fe.max_code, j = fe.stat_desc.static_tree, mt = fe.stat_desc.has_stree, at = fe.stat_desc.extra_bits, Wt = fe.stat_desc.extra_base, _t = fe.stat_desc.max_length, Q, Jt, te, Ct, Ht, oe, Le = 0;
                for (Ct = 0; Ct <= E; Ct++)
                  Ft.bl_count[Ct] = 0;
                for (ot[Ft.heap[Ft.heap_max] * 2 + 1] = 0, Q = Ft.heap_max + 1; Q < I; Q++)
                  Jt = Ft.heap[Q], Ct = ot[ot[Jt * 2 + 1] * 2 + 1] + 1, Ct > _t && (Ct = _t, Le++), ot[Jt * 2 + 1] = Ct, !(Jt > Y) && (Ft.bl_count[Ct]++, Ht = 0, Jt >= Wt && (Ht = at[Jt - Wt]), oe = ot[Jt * 2], Ft.opt_len += oe * (Ct + Ht), mt && (Ft.static_len += oe * (j[Jt * 2 + 1] + Ht)));
                if (Le !== 0) {
                  do {
                    for (Ct = _t - 1; Ft.bl_count[Ct] === 0; )
                      Ct--;
                    Ft.bl_count[Ct]--, Ft.bl_count[Ct + 1] += 2, Ft.bl_count[_t]--, Le -= 2;
                  } while (Le > 0);
                  for (Ct = _t; Ct !== 0; Ct--)
                    for (Jt = Ft.bl_count[Ct]; Jt !== 0; )
                      te = Ft.heap[--Q], !(te > Y) && (ot[te * 2 + 1] !== Ct && (Ft.opt_len += (Ct - ot[te * 2 + 1]) * ot[te * 2], ot[te * 2 + 1] = Ct), Jt--);
                }
              }
              function it(Ft, fe, ot) {
                var Y = new Array(E + 1), j = 0, mt, at;
                for (mt = 1; mt <= E; mt++)
                  Y[mt] = j = j + ot[mt - 1] << 1;
                for (at = 0; at <= fe; at++) {
                  var Wt = Ft[at * 2 + 1];
                  Wt !== 0 && (Ft[at * 2] = S(Y[Wt]++, Wt));
                }
              }
              function tt() {
                var Ft, fe, ot, Y, j, mt = new Array(E + 1);
                for (ot = 0, Y = 0; Y < p - 1; Y++)
                  for (It[Y] = ot, Ft = 0; Ft < 1 << U[Y]; Ft++)
                    Tt[ot++] = Y;
                for (Tt[ot - 1] = Y, j = 0, Y = 0; Y < 16; Y++)
                  for (Lt[Y] = j, Ft = 0; Ft < 1 << W[Y]; Ft++)
                    bt[j++] = Y;
                for (j >>= 7; Y < w; Y++)
                  for (Lt[Y] = j << 7, Ft = 0; Ft < 1 << W[Y] - 7; Ft++)
                    bt[256 + j++] = Y;
                for (fe = 0; fe <= E; fe++)
                  mt[fe] = 0;
                for (Ft = 0; Ft <= 143; )
                  nt[Ft * 2 + 1] = 8, Ft++, mt[8]++;
                for (; Ft <= 255; )
                  nt[Ft * 2 + 1] = 9, Ft++, mt[9]++;
                for (; Ft <= 279; )
                  nt[Ft * 2 + 1] = 7, Ft++, mt[7]++;
                for (; Ft <= 287; )
                  nt[Ft * 2 + 1] = 8, Ft++, mt[8]++;
                for (it(nt, m + 1, mt), Ft = 0; Ft < w; Ft++)
                  xt[Ft * 2 + 1] = 5, xt[Ft * 2] = S(Ft, 5);
                $ = new Ut(nt, U, e + 1, m, E), gt = new Ut(xt, W, 0, w, E), ut = new Ut(new Array(0), J, 0, D, A);
              }
              function _(Ft) {
                var fe;
                for (fe = 0; fe < m; fe++)
                  Ft.dyn_ltree[fe * 2] = 0;
                for (fe = 0; fe < w; fe++)
                  Ft.dyn_dtree[fe * 2] = 0;
                for (fe = 0; fe < D; fe++)
                  Ft.bl_tree[fe * 2] = 0;
                Ft.dyn_ltree[F * 2] = 1, Ft.opt_len = Ft.static_len = 0, Ft.last_lit = Ft.matches = 0;
              }
              function At(Ft) {
                Ft.bi_valid > 8 ? G(Ft, Ft.bi_buf) : Ft.bi_valid > 0 && (Ft.pending_buf[Ft.pending++] = Ft.bi_buf), Ft.bi_buf = 0, Ft.bi_valid = 0;
              }
              function Rt(Ft, fe, ot, Y) {
                At(Ft), Y && (G(Ft, ot), G(Ft, ~ot)), o.arraySet(Ft.pending_buf, Ft.window, fe, ot, Ft.pending), Ft.pending += ot;
              }
              function Yt(Ft, fe, ot, Y) {
                var j = fe * 2, mt = ot * 2;
                return Ft[j] < Ft[mt] || Ft[j] === Ft[mt] && Y[fe] <= Y[ot];
              }
              function Gt(Ft, fe, ot) {
                for (var Y = Ft.heap[ot], j = ot << 1; j <= Ft.heap_len && (j < Ft.heap_len && Yt(fe, Ft.heap[j + 1], Ft.heap[j], Ft.depth) && j++, !Yt(fe, Y, Ft.heap[j], Ft.depth)); )
                  Ft.heap[ot] = Ft.heap[j], ot = j, j <<= 1;
                Ft.heap[ot] = Y;
              }
              function Dt(Ft, fe, ot) {
                var Y, j, mt = 0, at, Wt;
                if (Ft.last_lit !== 0)
                  do
                    Y = Ft.pending_buf[Ft.d_buf + mt * 2] << 8 | Ft.pending_buf[Ft.d_buf + mt * 2 + 1], j = Ft.pending_buf[Ft.l_buf + mt], mt++, Y === 0 ? k(Ft, j, fe) : (at = Tt[j], k(Ft, at + e + 1, fe), Wt = U[at], Wt !== 0 && (j -= It[at], Et(Ft, j, Wt)), Y--, at = yt(Y), k(Ft, at, ot), Wt = W[at], Wt !== 0 && (Y -= Lt[at], Et(Ft, Y, Wt)));
                  while (mt < Ft.last_lit);
                k(Ft, F, fe);
              }
              function ae(Ft, fe) {
                var ot = fe.dyn_tree, Y = fe.stat_desc.static_tree, j = fe.stat_desc.has_stree, mt = fe.stat_desc.elems, at, Wt, _t = -1, Q;
                for (Ft.heap_len = 0, Ft.heap_max = I, at = 0; at < mt; at++)
                  ot[at * 2] !== 0 ? (Ft.heap[++Ft.heap_len] = _t = at, Ft.depth[at] = 0) : ot[at * 2 + 1] = 0;
                for (; Ft.heap_len < 2; )
                  Q = Ft.heap[++Ft.heap_len] = _t < 2 ? ++_t : 0, ot[Q * 2] = 1, Ft.depth[Q] = 0, Ft.opt_len--, j && (Ft.static_len -= Y[Q * 2 + 1]);
                for (fe.max_code = _t, at = Ft.heap_len >> 1; at >= 1; at--)
                  Gt(Ft, ot, at);
                Q = mt;
                do
                  at = Ft.heap[
                    1
                    /*SMALLEST*/
                  ], Ft.heap[
                    1
                    /*SMALLEST*/
                  ] = Ft.heap[Ft.heap_len--], Gt(
                    Ft,
                    ot,
                    1
                    /*SMALLEST*/
                  ), Wt = Ft.heap[
                    1
                    /*SMALLEST*/
                  ], Ft.heap[--Ft.heap_max] = at, Ft.heap[--Ft.heap_max] = Wt, ot[Q * 2] = ot[at * 2] + ot[Wt * 2], Ft.depth[Q] = (Ft.depth[at] >= Ft.depth[Wt] ? Ft.depth[at] : Ft.depth[Wt]) + 1, ot[at * 2 + 1] = ot[Wt * 2 + 1] = Q, Ft.heap[
                    1
                    /*SMALLEST*/
                  ] = Q++, Gt(
                    Ft,
                    ot,
                    1
                    /*SMALLEST*/
                  );
                while (Ft.heap_len >= 2);
                Ft.heap[--Ft.heap_max] = Ft.heap[
                  1
                  /*SMALLEST*/
                ], V(Ft, fe), it(ot, _t, Ft.bl_count);
              }
              function Ae(Ft, fe, ot) {
                var Y, j = -1, mt, at = fe[0 * 2 + 1], Wt = 0, _t = 7, Q = 4;
                for (at === 0 && (_t = 138, Q = 3), fe[(ot + 1) * 2 + 1] = 65535, Y = 0; Y <= ot; Y++)
                  mt = at, at = fe[(Y + 1) * 2 + 1], !(++Wt < _t && mt === at) && (Wt < Q ? Ft.bl_tree[mt * 2] += Wt : mt !== 0 ? (mt !== j && Ft.bl_tree[mt * 2]++, Ft.bl_tree[b * 2]++) : Wt <= 10 ? Ft.bl_tree[R * 2]++ : Ft.bl_tree[N * 2]++, Wt = 0, j = mt, at === 0 ? (_t = 138, Q = 3) : mt === at ? (_t = 6, Q = 3) : (_t = 7, Q = 4));
              }
              function xe(Ft, fe, ot) {
                var Y, j = -1, mt, at = fe[0 * 2 + 1], Wt = 0, _t = 7, Q = 4;
                for (at === 0 && (_t = 138, Q = 3), Y = 0; Y <= ot; Y++)
                  if (mt = at, at = fe[(Y + 1) * 2 + 1], !(++Wt < _t && mt === at)) {
                    if (Wt < Q)
                      do
                        k(Ft, mt, Ft.bl_tree);
                      while (--Wt !== 0);
                    else
                      mt !== 0 ? (mt !== j && (k(Ft, mt, Ft.bl_tree), Wt--), k(Ft, b, Ft.bl_tree), Et(Ft, Wt - 3, 2)) : Wt <= 10 ? (k(Ft, R, Ft.bl_tree), Et(Ft, Wt - 3, 3)) : (k(Ft, N, Ft.bl_tree), Et(Ft, Wt - 11, 7));
                    Wt = 0, j = mt, at === 0 ? (_t = 138, Q = 3) : mt === at ? (_t = 6, Q = 3) : (_t = 7, Q = 4);
                  }
              }
              function ce(Ft) {
                var fe;
                for (Ae(Ft, Ft.dyn_ltree, Ft.l_desc.max_code), Ae(Ft, Ft.dyn_dtree, Ft.d_desc.max_code), ae(Ft, Ft.bl_desc), fe = D - 1; fe >= 3 && Ft.bl_tree[ht[fe] * 2 + 1] === 0; fe--)
                  ;
                return Ft.opt_len += 3 * (fe + 1) + 5 + 5 + 4, fe;
              }
              function we(Ft, fe, ot, Y) {
                var j;
                for (Et(Ft, fe - 257, 5), Et(Ft, ot - 1, 5), Et(Ft, Y - 4, 4), j = 0; j < Y; j++)
                  Et(Ft, Ft.bl_tree[ht[j] * 2 + 1], 3);
                xe(Ft, Ft.dyn_ltree, fe - 1), xe(Ft, Ft.dyn_dtree, ot - 1);
              }
              function zt(Ft) {
                var fe = 4093624447, ot;
                for (ot = 0; ot <= 31; ot++, fe >>>= 1)
                  if (fe & 1 && Ft.dyn_ltree[ot * 2] !== 0)
                    return n;
                if (Ft.dyn_ltree[18] !== 0 || Ft.dyn_ltree[20] !== 0 || Ft.dyn_ltree[26] !== 0)
                  return i;
                for (ot = 32; ot < e; ot++)
                  if (Ft.dyn_ltree[ot * 2] !== 0)
                    return i;
                return n;
              }
              var Qt = !1;
              function le(Ft) {
                Qt || (tt(), Qt = !0), Ft.l_desc = new st(Ft.dyn_ltree, $), Ft.d_desc = new st(Ft.dyn_dtree, gt), Ft.bl_desc = new st(Ft.bl_tree, ut), Ft.bi_buf = 0, Ft.bi_valid = 0, _(Ft);
              }
              function de(Ft, fe, ot, Y) {
                Et(Ft, (u << 1) + (Y ? 1 : 0), 3), Rt(Ft, fe, ot, !0);
              }
              function be(Ft) {
                Et(Ft, h << 1, 3), k(Ft, F, nt), L(Ft);
              }
              function Oe(Ft, fe, ot, Y) {
                var j, mt, at = 0;
                Ft.level > 0 ? (Ft.strm.data_type === f && (Ft.strm.data_type = zt(Ft)), ae(Ft, Ft.l_desc), ae(Ft, Ft.d_desc), at = ce(Ft), j = Ft.opt_len + 3 + 7 >>> 3, mt = Ft.static_len + 3 + 7 >>> 3, mt <= j && (j = mt)) : j = mt = ot + 5, ot + 4 <= j && fe !== -1 ? de(Ft, fe, ot, Y) : Ft.strategy === r || mt === j ? (Et(Ft, (h << 1) + (Y ? 1 : 0), 3), Dt(Ft, nt, xt)) : (Et(Ft, (a << 1) + (Y ? 1 : 0), 3), we(Ft, Ft.l_desc.max_code + 1, Ft.d_desc.max_code + 1, at + 1), Dt(Ft, Ft.dyn_ltree, Ft.dyn_dtree)), _(Ft), Y && At(Ft);
              }
              function Fe(Ft, fe, ot) {
                return Ft.pending_buf[Ft.d_buf + Ft.last_lit * 2] = fe >>> 8 & 255, Ft.pending_buf[Ft.d_buf + Ft.last_lit * 2 + 1] = fe & 255, Ft.pending_buf[Ft.l_buf + Ft.last_lit] = ot & 255, Ft.last_lit++, fe === 0 ? Ft.dyn_ltree[ot * 2]++ : (Ft.matches++, fe--, Ft.dyn_ltree[(Tt[ot] + e + 1) * 2]++, Ft.dyn_dtree[yt(fe) * 2]++), Ft.last_lit === Ft.lit_bufsize - 1;
              }
              d._tr_init = le, d._tr_stored_block = de, d._tr_flush_block = Oe, d._tr_tally = Fe, d._tr_align = be;
            }
          ),
          /***/
          28755: (
            /***/
            function(c) {
              function d() {
                this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
              }
              c.exports = d;
            }
          ),
          /***/
          82530: (
            /***/
            function(c) {
              var d = c.exports = {}, t, o;
              function r() {
                throw new Error("setTimeout has not been defined");
              }
              function n() {
                throw new Error("clearTimeout has not been defined");
              }
              (function() {
                try {
                  typeof setTimeout == "function" ? t = setTimeout : t = r;
                } catch {
                  t = r;
                }
                try {
                  typeof clearTimeout == "function" ? o = clearTimeout : o = n;
                } catch {
                  o = n;
                }
              })();
              function i(m) {
                if (t === setTimeout)
                  return setTimeout(m, 0);
                if ((t === r || !t) && setTimeout)
                  return t = setTimeout, setTimeout(m, 0);
                try {
                  return t(m, 0);
                } catch {
                  try {
                    return t.call(null, m, 0);
                  } catch {
                    return t.call(this, m, 0);
                  }
                }
              }
              function f(m) {
                if (o === clearTimeout)
                  return clearTimeout(m);
                if ((o === n || !o) && clearTimeout)
                  return o = clearTimeout, clearTimeout(m);
                try {
                  return o(m);
                } catch {
                  try {
                    return o.call(null, m);
                  } catch {
                    return o.call(this, m);
                  }
                }
              }
              var l = [], u = !1, h, a = -1;
              function v() {
                !u || !h || (u = !1, h.length ? l = h.concat(l) : a = -1, l.length && y());
              }
              function y() {
                if (!u) {
                  var m = i(v);
                  u = !0;
                  for (var w = l.length; w; ) {
                    for (h = l, l = []; ++a < w; )
                      h && h[a].run();
                    a = -1, w = l.length;
                  }
                  h = null, u = !1, f(m);
                }
              }
              d.nextTick = function(m) {
                var w = new Array(arguments.length - 1);
                if (arguments.length > 1)
                  for (var D = 1; D < arguments.length; D++)
                    w[D - 1] = arguments[D];
                l.push(new p(m, w)), l.length === 1 && !u && i(y);
              };
              function p(m, w) {
                this.fun = m, this.array = w;
              }
              p.prototype.run = function() {
                this.fun.apply(null, this.array);
              }, d.title = "browser", d.browser = !0, d.env = {}, d.argv = [], d.version = "", d.versions = {};
              function e() {
              }
              d.on = e, d.addListener = e, d.once = e, d.off = e, d.removeListener = e, d.removeAllListeners = e, d.emit = e, d.prependListener = e, d.prependOnceListener = e, d.listeners = function(m) {
                return [];
              }, d.binding = function(m) {
                throw new Error("process.binding is not supported");
              }, d.cwd = function() {
                return "/";
              }, d.chdir = function(m) {
                throw new Error("process.chdir is not supported");
              }, d.umask = function() {
                return 0;
              };
            }
          ),
          /***/
          73994: (
            /***/
            function(c, d, t) {
              var o = t(25021), r = Object, n = TypeError;
              c.exports = o(function() {
                if (this != null && this !== r(this))
                  throw new n("RegExp.prototype.flags getter called on non-object");
                var f = "";
                return this.hasIndices && (f += "d"), this.global && (f += "g"), this.ignoreCase && (f += "i"), this.multiline && (f += "m"), this.dotAll && (f += "s"), this.unicode && (f += "u"), this.unicodeSets && (f += "v"), this.sticky && (f += "y"), f;
              }, "get flags", !0);
            }
          ),
          /***/
          80251: (
            /***/
            function(c, d, t) {
              var o = t(19170), r = t(12550), n = t(73994), i = t(71856), f = t(47278), l = r(i());
              o(l, {
                getPolyfill: i,
                implementation: n,
                shim: f
              }), c.exports = l;
            }
          ),
          /***/
          71856: (
            /***/
            function(c, d, t) {
              var o = t(73994), r = t(19170).supportsDescriptors, n = Object.getOwnPropertyDescriptor;
              c.exports = function() {
                if (r && /a/mig.flags === "gim") {
                  var f = n(RegExp.prototype, "flags");
                  if (f && typeof f.get == "function" && typeof RegExp.prototype.dotAll == "boolean" && typeof RegExp.prototype.hasIndices == "boolean") {
                    var l = "", u = {};
                    if (Object.defineProperty(u, "hasIndices", {
                      get: function() {
                        l += "d";
                      }
                    }), Object.defineProperty(u, "sticky", {
                      get: function() {
                        l += "y";
                      }
                    }), l === "dy")
                      return f.get;
                  }
                }
                return o;
              };
            }
          ),
          /***/
          47278: (
            /***/
            function(c, d, t) {
              var o = t(19170).supportsDescriptors, r = t(71856), n = Object.getOwnPropertyDescriptor, i = Object.defineProperty, f = TypeError, l = Object.getPrototypeOf, u = /a/;
              c.exports = function() {
                if (!o || !l)
                  throw new f("RegExp.prototype.flags requires a true ES5 environment that supports property descriptors");
                var a = r(), v = l(u), y = n(v, "flags");
                return (!y || y.get !== a) && i(v, "flags", {
                  configurable: !0,
                  enumerable: !1,
                  get: a
                }), a;
              };
            }
          ),
          /***/
          53407: (
            /***/
            function(c, d, t) {
              var o = t(43060).Buffer;
              (function(r) {
                r.parser = function(k, S) {
                  return new i(k, S);
                }, r.SAXParser = i, r.SAXStream = y, r.createStream = v, r.MAX_BUFFER_LENGTH = 65536;
                var n = [
                  "comment",
                  "sgmlDecl",
                  "textNode",
                  "tagName",
                  "doctype",
                  "procInstName",
                  "procInstBody",
                  "entity",
                  "attribName",
                  "attribValue",
                  "cdata",
                  "script"
                ];
                r.EVENTS = [
                  "text",
                  "processinginstruction",
                  "sgmldeclaration",
                  "doctype",
                  "comment",
                  "opentagstart",
                  "attribute",
                  "opentag",
                  "closetag",
                  "opencdata",
                  "cdata",
                  "closecdata",
                  "error",
                  "end",
                  "ready",
                  "script",
                  "opennamespace",
                  "closenamespace"
                ];
                function i(k, S) {
                  if (!(this instanceof i))
                    return new i(k, S);
                  var L = this;
                  l(L), L.q = L.c = "", L.bufferCheckPosition = r.MAX_BUFFER_LENGTH, L.opt = S || {}, L.opt.lowercase = L.opt.lowercase || L.opt.lowercasetags, L.looseCase = L.opt.lowercase ? "toLowerCase" : "toUpperCase", L.tags = [], L.closed = L.closedRoot = L.sawRoot = !1, L.tag = L.error = null, L.strict = !!k, L.noscript = !!(k || L.opt.noscript), L.state = W.BEGIN, L.strictEntities = L.opt.strictEntities, L.ENTITIES = L.strictEntities ? Object.create(r.XML_ENTITIES) : Object.create(r.ENTITIES), L.attribList = [], L.opt.xmlns && (L.ns = Object.create(D)), L.trackPosition = L.opt.position !== !1, L.trackPosition && (L.position = L.line = L.column = 0), ht(L, "onready");
                }
                Object.create || (Object.create = function(k) {
                  function S() {
                  }
                  S.prototype = k;
                  var L = new S();
                  return L;
                }), Object.keys || (Object.keys = function(k) {
                  var S = [];
                  for (var L in k)
                    k.hasOwnProperty(L) && S.push(L);
                  return S;
                });
                function f(k) {
                  for (var S = Math.max(r.MAX_BUFFER_LENGTH, 10), L = 0, V = 0, it = n.length; V < it; V++) {
                    var tt = k[n[V]].length;
                    if (tt > S)
                      switch (n[V]) {
                        case "textNode":
                          nt(k);
                          break;
                        case "cdata":
                          K(k, "oncdata", k.cdata), k.cdata = "";
                          break;
                        case "script":
                          K(k, "onscript", k.script), k.script = "";
                          break;
                        default:
                          bt(k, "Max buffer length exceeded: " + n[V]);
                      }
                    L = Math.max(L, tt);
                  }
                  var _ = r.MAX_BUFFER_LENGTH - L;
                  k.bufferCheckPosition = _ + k.position;
                }
                function l(k) {
                  for (var S = 0, L = n.length; S < L; S++)
                    k[n[S]] = "";
                }
                function u(k) {
                  nt(k), k.cdata !== "" && (K(k, "oncdata", k.cdata), k.cdata = ""), k.script !== "" && (K(k, "onscript", k.script), k.script = "");
                }
                i.prototype = {
                  end: function() {
                    Tt(this);
                  },
                  write: Et,
                  resume: function() {
                    return this.error = null, this;
                  },
                  close: function() {
                    return this.write(null);
                  },
                  flush: function() {
                    u(this);
                  }
                };
                var h;
                try {
                  h = t(20202).Stream;
                } catch {
                  h = function() {
                  };
                }
                h || (h = function() {
                });
                var a = r.EVENTS.filter(function(k) {
                  return k !== "error" && k !== "end";
                });
                function v(k, S) {
                  return new y(k, S);
                }
                function y(k, S) {
                  if (!(this instanceof y))
                    return new y(k, S);
                  h.apply(this), this._parser = new i(k, S), this.writable = !0, this.readable = !0;
                  var L = this;
                  this._parser.onend = function() {
                    L.emit("end");
                  }, this._parser.onerror = function(V) {
                    L.emit("error", V), L._parser.error = null;
                  }, this._decoder = null, a.forEach(function(V) {
                    Object.defineProperty(L, "on" + V, {
                      get: function() {
                        return L._parser["on" + V];
                      },
                      set: function(it) {
                        if (!it)
                          return L.removeAllListeners(V), L._parser["on" + V] = it, it;
                        L.on(V, it);
                      },
                      enumerable: !0,
                      configurable: !1
                    });
                  });
                }
                y.prototype = Object.create(h.prototype, {
                  constructor: {
                    value: y
                  }
                }), y.prototype.write = function(k) {
                  if (typeof o == "function" && typeof o.isBuffer == "function" && o.isBuffer(k)) {
                    if (!this._decoder) {
                      var S = t(10301).s;
                      this._decoder = new S("utf8");
                    }
                    k = this._decoder.write(k);
                  }
                  return this._parser.write(k.toString()), this.emit("data", k), !0;
                }, y.prototype.end = function(k) {
                  return k && k.length && this.write(k), this._parser.end(), !0;
                }, y.prototype.on = function(k, S) {
                  var L = this;
                  return !L._parser["on" + k] && a.indexOf(k) !== -1 && (L._parser["on" + k] = function() {
                    var V = arguments.length === 1 ? [arguments[0]] : Array.apply(null, arguments);
                    V.splice(0, 0, k), L.emit.apply(L, V);
                  }), h.prototype.on.call(L, k, S);
                };
                var p = "[CDATA[", e = "DOCTYPE", m = "http://www.w3.org/XML/1998/namespace", w = "http://www.w3.org/2000/xmlns/", D = { xml: m, xmlns: w }, I = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, E = /[:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/, T = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD]/, A = /[#:_A-Za-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\u00B7\u0300-\u036F\u203F-\u2040.\d-]/;
                function F(k) {
                  return k === " " || k === `
` || k === "\r" || k === "	";
                }
                function b(k) {
                  return k === '"' || k === "'";
                }
                function R(k) {
                  return k === ">" || F(k);
                }
                function N(k, S) {
                  return k.test(S);
                }
                function U(k, S) {
                  return !N(k, S);
                }
                var W = 0;
                r.STATE = {
                  BEGIN: W++,
                  // leading byte order mark or whitespace
                  BEGIN_WHITESPACE: W++,
                  // leading whitespace
                  TEXT: W++,
                  // general stuff
                  TEXT_ENTITY: W++,
                  // &amp and such.
                  OPEN_WAKA: W++,
                  // <
                  SGML_DECL: W++,
                  // <!BLARG
                  SGML_DECL_QUOTED: W++,
                  // <!BLARG foo "bar
                  DOCTYPE: W++,
                  // <!DOCTYPE
                  DOCTYPE_QUOTED: W++,
                  // <!DOCTYPE "//blah
                  DOCTYPE_DTD: W++,
                  // <!DOCTYPE "//blah" [ ...
                  DOCTYPE_DTD_QUOTED: W++,
                  // <!DOCTYPE "//blah" [ "foo
                  COMMENT_STARTING: W++,
                  // <!-
                  COMMENT: W++,
                  // <!--
                  COMMENT_ENDING: W++,
                  // <!-- blah -
                  COMMENT_ENDED: W++,
                  // <!-- blah --
                  CDATA: W++,
                  // <![CDATA[ something
                  CDATA_ENDING: W++,
                  // ]
                  CDATA_ENDING_2: W++,
                  // ]]
                  PROC_INST: W++,
                  // <?hi
                  PROC_INST_BODY: W++,
                  // <?hi there
                  PROC_INST_ENDING: W++,
                  // <?hi "there" ?
                  OPEN_TAG: W++,
                  // <strong
                  OPEN_TAG_SLASH: W++,
                  // <strong /
                  ATTRIB: W++,
                  // <a
                  ATTRIB_NAME: W++,
                  // <a foo
                  ATTRIB_NAME_SAW_WHITE: W++,
                  // <a foo _
                  ATTRIB_VALUE: W++,
                  // <a foo=
                  ATTRIB_VALUE_QUOTED: W++,
                  // <a foo="bar
                  ATTRIB_VALUE_CLOSED: W++,
                  // <a foo="bar"
                  ATTRIB_VALUE_UNQUOTED: W++,
                  // <a foo=bar
                  ATTRIB_VALUE_ENTITY_Q: W++,
                  // <foo bar="&quot;"
                  ATTRIB_VALUE_ENTITY_U: W++,
                  // <foo bar=&quot
                  CLOSE_TAG: W++,
                  // </a
                  CLOSE_TAG_SAW_WHITE: W++,
                  // </a   >
                  SCRIPT: W++,
                  // <script> ...
                  SCRIPT_ENDING: W++
                  // <script> ... <
                }, r.XML_ENTITIES = {
                  amp: "&",
                  gt: ">",
                  lt: "<",
                  quot: '"',
                  apos: "'"
                }, r.ENTITIES = {
                  amp: "&",
                  gt: ">",
                  lt: "<",
                  quot: '"',
                  apos: "'",
                  AElig: 198,
                  Aacute: 193,
                  Acirc: 194,
                  Agrave: 192,
                  Aring: 197,
                  Atilde: 195,
                  Auml: 196,
                  Ccedil: 199,
                  ETH: 208,
                  Eacute: 201,
                  Ecirc: 202,
                  Egrave: 200,
                  Euml: 203,
                  Iacute: 205,
                  Icirc: 206,
                  Igrave: 204,
                  Iuml: 207,
                  Ntilde: 209,
                  Oacute: 211,
                  Ocirc: 212,
                  Ograve: 210,
                  Oslash: 216,
                  Otilde: 213,
                  Ouml: 214,
                  THORN: 222,
                  Uacute: 218,
                  Ucirc: 219,
                  Ugrave: 217,
                  Uuml: 220,
                  Yacute: 221,
                  aacute: 225,
                  acirc: 226,
                  aelig: 230,
                  agrave: 224,
                  aring: 229,
                  atilde: 227,
                  auml: 228,
                  ccedil: 231,
                  eacute: 233,
                  ecirc: 234,
                  egrave: 232,
                  eth: 240,
                  euml: 235,
                  iacute: 237,
                  icirc: 238,
                  igrave: 236,
                  iuml: 239,
                  ntilde: 241,
                  oacute: 243,
                  ocirc: 244,
                  ograve: 242,
                  oslash: 248,
                  otilde: 245,
                  ouml: 246,
                  szlig: 223,
                  thorn: 254,
                  uacute: 250,
                  ucirc: 251,
                  ugrave: 249,
                  uuml: 252,
                  yacute: 253,
                  yuml: 255,
                  copy: 169,
                  reg: 174,
                  nbsp: 160,
                  iexcl: 161,
                  cent: 162,
                  pound: 163,
                  curren: 164,
                  yen: 165,
                  brvbar: 166,
                  sect: 167,
                  uml: 168,
                  ordf: 170,
                  laquo: 171,
                  not: 172,
                  shy: 173,
                  macr: 175,
                  deg: 176,
                  plusmn: 177,
                  sup1: 185,
                  sup2: 178,
                  sup3: 179,
                  acute: 180,
                  micro: 181,
                  para: 182,
                  middot: 183,
                  cedil: 184,
                  ordm: 186,
                  raquo: 187,
                  frac14: 188,
                  frac12: 189,
                  frac34: 190,
                  iquest: 191,
                  times: 215,
                  divide: 247,
                  OElig: 338,
                  oelig: 339,
                  Scaron: 352,
                  scaron: 353,
                  Yuml: 376,
                  fnof: 402,
                  circ: 710,
                  tilde: 732,
                  Alpha: 913,
                  Beta: 914,
                  Gamma: 915,
                  Delta: 916,
                  Epsilon: 917,
                  Zeta: 918,
                  Eta: 919,
                  Theta: 920,
                  Iota: 921,
                  Kappa: 922,
                  Lambda: 923,
                  Mu: 924,
                  Nu: 925,
                  Xi: 926,
                  Omicron: 927,
                  Pi: 928,
                  Rho: 929,
                  Sigma: 931,
                  Tau: 932,
                  Upsilon: 933,
                  Phi: 934,
                  Chi: 935,
                  Psi: 936,
                  Omega: 937,
                  alpha: 945,
                  beta: 946,
                  gamma: 947,
                  delta: 948,
                  epsilon: 949,
                  zeta: 950,
                  eta: 951,
                  theta: 952,
                  iota: 953,
                  kappa: 954,
                  lambda: 955,
                  mu: 956,
                  nu: 957,
                  xi: 958,
                  omicron: 959,
                  pi: 960,
                  rho: 961,
                  sigmaf: 962,
                  sigma: 963,
                  tau: 964,
                  upsilon: 965,
                  phi: 966,
                  chi: 967,
                  psi: 968,
                  omega: 969,
                  thetasym: 977,
                  upsih: 978,
                  piv: 982,
                  ensp: 8194,
                  emsp: 8195,
                  thinsp: 8201,
                  zwnj: 8204,
                  zwj: 8205,
                  lrm: 8206,
                  rlm: 8207,
                  ndash: 8211,
                  mdash: 8212,
                  lsquo: 8216,
                  rsquo: 8217,
                  sbquo: 8218,
                  ldquo: 8220,
                  rdquo: 8221,
                  bdquo: 8222,
                  dagger: 8224,
                  Dagger: 8225,
                  bull: 8226,
                  hellip: 8230,
                  permil: 8240,
                  prime: 8242,
                  Prime: 8243,
                  lsaquo: 8249,
                  rsaquo: 8250,
                  oline: 8254,
                  frasl: 8260,
                  euro: 8364,
                  image: 8465,
                  weierp: 8472,
                  real: 8476,
                  trade: 8482,
                  alefsym: 8501,
                  larr: 8592,
                  uarr: 8593,
                  rarr: 8594,
                  darr: 8595,
                  harr: 8596,
                  crarr: 8629,
                  lArr: 8656,
                  uArr: 8657,
                  rArr: 8658,
                  dArr: 8659,
                  hArr: 8660,
                  forall: 8704,
                  part: 8706,
                  exist: 8707,
                  empty: 8709,
                  nabla: 8711,
                  isin: 8712,
                  notin: 8713,
                  ni: 8715,
                  prod: 8719,
                  sum: 8721,
                  minus: 8722,
                  lowast: 8727,
                  radic: 8730,
                  prop: 8733,
                  infin: 8734,
                  ang: 8736,
                  and: 8743,
                  or: 8744,
                  cap: 8745,
                  cup: 8746,
                  int: 8747,
                  there4: 8756,
                  sim: 8764,
                  cong: 8773,
                  asymp: 8776,
                  ne: 8800,
                  equiv: 8801,
                  le: 8804,
                  ge: 8805,
                  sub: 8834,
                  sup: 8835,
                  nsub: 8836,
                  sube: 8838,
                  supe: 8839,
                  oplus: 8853,
                  otimes: 8855,
                  perp: 8869,
                  sdot: 8901,
                  lceil: 8968,
                  rceil: 8969,
                  lfloor: 8970,
                  rfloor: 8971,
                  lang: 9001,
                  rang: 9002,
                  loz: 9674,
                  spades: 9824,
                  clubs: 9827,
                  hearts: 9829,
                  diams: 9830
                }, Object.keys(r.ENTITIES).forEach(function(k) {
                  var S = r.ENTITIES[k], L = typeof S == "number" ? String.fromCharCode(S) : S;
                  r.ENTITIES[k] = L;
                });
                for (var J in r.STATE)
                  r.STATE[r.STATE[J]] = J;
                W = r.STATE;
                function ht(k, S, L) {
                  k[S] && k[S](L);
                }
                function K(k, S, L) {
                  k.textNode && nt(k), ht(k, S, L);
                }
                function nt(k) {
                  k.textNode = xt(k.opt, k.textNode), k.textNode && ht(k, "ontext", k.textNode), k.textNode = "";
                }
                function xt(k, S) {
                  return k.trim && (S = S.trim()), k.normalize && (S = S.replace(/\s+/g, " ")), S;
                }
                function bt(k, S) {
                  return nt(k), k.trackPosition && (S += `
Line: ` + k.line + `
Column: ` + k.column + `
Char: ` + k.c), S = new Error(S), k.error = S, ht(k, "onerror", S), k;
                }
                function Tt(k) {
                  return k.sawRoot && !k.closedRoot && It(k, "Unclosed root tag"), k.state !== W.BEGIN && k.state !== W.BEGIN_WHITESPACE && k.state !== W.TEXT && bt(k, "Unexpected end"), nt(k), k.c = "", k.closed = !0, ht(k, "onend"), i.call(k, k.strict, k.opt), k;
                }
                function It(k, S) {
                  if (typeof k != "object" || !(k instanceof i))
                    throw new Error("bad call to strictFail");
                  k.strict && bt(k, S);
                }
                function Lt(k) {
                  k.strict || (k.tagName = k.tagName[k.looseCase]());
                  var S = k.tags[k.tags.length - 1] || k, L = k.tag = { name: k.tagName, attributes: {} };
                  k.opt.xmlns && (L.ns = S.ns), k.attribList.length = 0, K(k, "onopentagstart", L);
                }
                function Ut(k, S) {
                  var L = k.indexOf(":"), V = L < 0 ? ["", k] : k.split(":"), it = V[0], tt = V[1];
                  return S && k === "xmlns" && (it = "xmlns", tt = ""), { prefix: it, local: tt };
                }
                function $(k) {
                  if (k.strict || (k.attribName = k.attribName[k.looseCase]()), k.attribList.indexOf(k.attribName) !== -1 || k.tag.attributes.hasOwnProperty(k.attribName)) {
                    k.attribName = k.attribValue = "";
                    return;
                  }
                  if (k.opt.xmlns) {
                    var S = Ut(k.attribName, !0), L = S.prefix, V = S.local;
                    if (L === "xmlns")
                      if (V === "xml" && k.attribValue !== m)
                        It(
                          k,
                          "xml: prefix must be bound to " + m + `
Actual: ` + k.attribValue
                        );
                      else if (V === "xmlns" && k.attribValue !== w)
                        It(
                          k,
                          "xmlns: prefix must be bound to " + w + `
Actual: ` + k.attribValue
                        );
                      else {
                        var it = k.tag, tt = k.tags[k.tags.length - 1] || k;
                        it.ns === tt.ns && (it.ns = Object.create(tt.ns)), it.ns[V] = k.attribValue;
                      }
                    k.attribList.push([k.attribName, k.attribValue]);
                  } else
                    k.tag.attributes[k.attribName] = k.attribValue, K(k, "onattribute", {
                      name: k.attribName,
                      value: k.attribValue
                    });
                  k.attribName = k.attribValue = "";
                }
                function gt(k, S) {
                  if (k.opt.xmlns) {
                    var L = k.tag, V = Ut(k.tagName);
                    L.prefix = V.prefix, L.local = V.local, L.uri = L.ns[V.prefix] || "", L.prefix && !L.uri && (It(k, "Unbound namespace prefix: " + JSON.stringify(k.tagName)), L.uri = V.prefix);
                    var it = k.tags[k.tags.length - 1] || k;
                    L.ns && it.ns !== L.ns && Object.keys(L.ns).forEach(function(ce) {
                      K(k, "onopennamespace", {
                        prefix: ce,
                        uri: L.ns[ce]
                      });
                    });
                    for (var tt = 0, _ = k.attribList.length; tt < _; tt++) {
                      var At = k.attribList[tt], Rt = At[0], Yt = At[1], Gt = Ut(Rt, !0), Dt = Gt.prefix, ae = Gt.local, Ae = Dt === "" ? "" : L.ns[Dt] || "", xe = {
                        name: Rt,
                        value: Yt,
                        prefix: Dt,
                        local: ae,
                        uri: Ae
                      };
                      Dt && Dt !== "xmlns" && !Ae && (It(k, "Unbound namespace prefix: " + JSON.stringify(Dt)), xe.uri = Dt), k.tag.attributes[Rt] = xe, K(k, "onattribute", xe);
                    }
                    k.attribList.length = 0;
                  }
                  k.tag.isSelfClosing = !!S, k.sawRoot = !0, k.tags.push(k.tag), K(k, "onopentag", k.tag), S || (!k.noscript && k.tagName.toLowerCase() === "script" ? k.state = W.SCRIPT : k.state = W.TEXT, k.tag = null, k.tagName = ""), k.attribName = k.attribValue = "", k.attribList.length = 0;
                }
                function ut(k) {
                  if (!k.tagName) {
                    It(k, "Weird empty close tag."), k.textNode += "</>", k.state = W.TEXT;
                    return;
                  }
                  if (k.script) {
                    if (k.tagName !== "script") {
                      k.script += "</" + k.tagName + ">", k.tagName = "", k.state = W.SCRIPT;
                      return;
                    }
                    K(k, "onscript", k.script), k.script = "";
                  }
                  var S = k.tags.length, L = k.tagName;
                  k.strict || (L = L[k.looseCase]());
                  for (var V = L; S--; ) {
                    var it = k.tags[S];
                    if (it.name !== V)
                      It(k, "Unexpected close tag");
                    else
                      break;
                  }
                  if (S < 0) {
                    It(k, "Unmatched closing tag: " + k.tagName), k.textNode += "</" + k.tagName + ">", k.state = W.TEXT;
                    return;
                  }
                  k.tagName = L;
                  for (var tt = k.tags.length; tt-- > S; ) {
                    var _ = k.tag = k.tags.pop();
                    k.tagName = k.tag.name, K(k, "onclosetag", k.tagName);
                    var At = {};
                    for (var Rt in _.ns)
                      At[Rt] = _.ns[Rt];
                    var Yt = k.tags[k.tags.length - 1] || k;
                    k.opt.xmlns && _.ns !== Yt.ns && Object.keys(_.ns).forEach(function(Gt) {
                      var Dt = _.ns[Gt];
                      K(k, "onclosenamespace", { prefix: Gt, uri: Dt });
                    });
                  }
                  S === 0 && (k.closedRoot = !0), k.tagName = k.attribValue = k.attribName = "", k.attribList.length = 0, k.state = W.TEXT;
                }
                function st(k) {
                  var S = k.entity, L = S.toLowerCase(), V, it = "";
                  return k.ENTITIES[S] ? k.ENTITIES[S] : k.ENTITIES[L] ? k.ENTITIES[L] : (S = L, S.charAt(0) === "#" && (S.charAt(1) === "x" ? (S = S.slice(2), V = parseInt(S, 16), it = V.toString(16)) : (S = S.slice(1), V = parseInt(S, 10), it = V.toString(10))), S = S.replace(/^0+/, ""), isNaN(V) || it.toLowerCase() !== S ? (It(k, "Invalid character entity"), "&" + k.entity + ";") : String.fromCodePoint(V));
                }
                function yt(k, S) {
                  S === "<" ? (k.state = W.OPEN_WAKA, k.startTagPosition = k.position) : F(S) || (It(k, "Non-whitespace before first tag."), k.textNode = S, k.state = W.TEXT);
                }
                function G(k, S) {
                  var L = "";
                  return S < k.length && (L = k.charAt(S)), L;
                }
                function Et(k) {
                  var S = this;
                  if (this.error)
                    throw this.error;
                  if (S.closed)
                    return bt(
                      S,
                      "Cannot write after close. Assign an onready handler."
                    );
                  if (k === null)
                    return Tt(S);
                  typeof k == "object" && (k = k.toString());
                  for (var L = 0, V = ""; V = G(k, L++), S.c = V, !!V; )
                    switch (S.trackPosition && (S.position++, V === `
` ? (S.line++, S.column = 0) : S.column++), S.state) {
                      case W.BEGIN:
                        if (S.state = W.BEGIN_WHITESPACE, V === "\uFEFF")
                          continue;
                        yt(S, V);
                        continue;
                      case W.BEGIN_WHITESPACE:
                        yt(S, V);
                        continue;
                      case W.TEXT:
                        if (S.sawRoot && !S.closedRoot) {
                          for (var it = L - 1; V && V !== "<" && V !== "&"; )
                            V = G(k, L++), V && S.trackPosition && (S.position++, V === `
` ? (S.line++, S.column = 0) : S.column++);
                          S.textNode += k.substring(it, L - 1);
                        }
                        V === "<" && !(S.sawRoot && S.closedRoot && !S.strict) ? (S.state = W.OPEN_WAKA, S.startTagPosition = S.position) : (!F(V) && (!S.sawRoot || S.closedRoot) && It(S, "Text data outside of root node."), V === "&" ? S.state = W.TEXT_ENTITY : S.textNode += V);
                        continue;
                      case W.SCRIPT:
                        V === "<" ? S.state = W.SCRIPT_ENDING : S.script += V;
                        continue;
                      case W.SCRIPT_ENDING:
                        V === "/" ? S.state = W.CLOSE_TAG : (S.script += "<" + V, S.state = W.SCRIPT);
                        continue;
                      case W.OPEN_WAKA:
                        if (V === "!")
                          S.state = W.SGML_DECL, S.sgmlDecl = "";
                        else if (!F(V))
                          if (N(I, V))
                            S.state = W.OPEN_TAG, S.tagName = V;
                          else if (V === "/")
                            S.state = W.CLOSE_TAG, S.tagName = "";
                          else if (V === "?")
                            S.state = W.PROC_INST, S.procInstName = S.procInstBody = "";
                          else {
                            if (It(S, "Unencoded <"), S.startTagPosition + 1 < S.position) {
                              var tt = S.position - S.startTagPosition;
                              V = new Array(tt).join(" ") + V;
                            }
                            S.textNode += "<" + V, S.state = W.TEXT;
                          }
                        continue;
                      case W.SGML_DECL:
                        (S.sgmlDecl + V).toUpperCase() === p ? (K(S, "onopencdata"), S.state = W.CDATA, S.sgmlDecl = "", S.cdata = "") : S.sgmlDecl + V === "--" ? (S.state = W.COMMENT, S.comment = "", S.sgmlDecl = "") : (S.sgmlDecl + V).toUpperCase() === e ? (S.state = W.DOCTYPE, (S.doctype || S.sawRoot) && It(
                          S,
                          "Inappropriately located doctype declaration"
                        ), S.doctype = "", S.sgmlDecl = "") : V === ">" ? (K(S, "onsgmldeclaration", S.sgmlDecl), S.sgmlDecl = "", S.state = W.TEXT) : (b(V) && (S.state = W.SGML_DECL_QUOTED), S.sgmlDecl += V);
                        continue;
                      case W.SGML_DECL_QUOTED:
                        V === S.q && (S.state = W.SGML_DECL, S.q = ""), S.sgmlDecl += V;
                        continue;
                      case W.DOCTYPE:
                        V === ">" ? (S.state = W.TEXT, K(S, "ondoctype", S.doctype), S.doctype = !0) : (S.doctype += V, V === "[" ? S.state = W.DOCTYPE_DTD : b(V) && (S.state = W.DOCTYPE_QUOTED, S.q = V));
                        continue;
                      case W.DOCTYPE_QUOTED:
                        S.doctype += V, V === S.q && (S.q = "", S.state = W.DOCTYPE);
                        continue;
                      case W.DOCTYPE_DTD:
                        S.doctype += V, V === "]" ? S.state = W.DOCTYPE : b(V) && (S.state = W.DOCTYPE_DTD_QUOTED, S.q = V);
                        continue;
                      case W.DOCTYPE_DTD_QUOTED:
                        S.doctype += V, V === S.q && (S.state = W.DOCTYPE_DTD, S.q = "");
                        continue;
                      case W.COMMENT:
                        V === "-" ? S.state = W.COMMENT_ENDING : S.comment += V;
                        continue;
                      case W.COMMENT_ENDING:
                        V === "-" ? (S.state = W.COMMENT_ENDED, S.comment = xt(S.opt, S.comment), S.comment && K(S, "oncomment", S.comment), S.comment = "") : (S.comment += "-" + V, S.state = W.COMMENT);
                        continue;
                      case W.COMMENT_ENDED:
                        V !== ">" ? (It(S, "Malformed comment"), S.comment += "--" + V, S.state = W.COMMENT) : S.state = W.TEXT;
                        continue;
                      case W.CDATA:
                        V === "]" ? S.state = W.CDATA_ENDING : S.cdata += V;
                        continue;
                      case W.CDATA_ENDING:
                        V === "]" ? S.state = W.CDATA_ENDING_2 : (S.cdata += "]" + V, S.state = W.CDATA);
                        continue;
                      case W.CDATA_ENDING_2:
                        V === ">" ? (S.cdata && K(S, "oncdata", S.cdata), K(S, "onclosecdata"), S.cdata = "", S.state = W.TEXT) : V === "]" ? S.cdata += "]" : (S.cdata += "]]" + V, S.state = W.CDATA);
                        continue;
                      case W.PROC_INST:
                        V === "?" ? S.state = W.PROC_INST_ENDING : F(V) ? S.state = W.PROC_INST_BODY : S.procInstName += V;
                        continue;
                      case W.PROC_INST_BODY:
                        if (!S.procInstBody && F(V))
                          continue;
                        V === "?" ? S.state = W.PROC_INST_ENDING : S.procInstBody += V;
                        continue;
                      case W.PROC_INST_ENDING:
                        V === ">" ? (K(S, "onprocessinginstruction", {
                          name: S.procInstName,
                          body: S.procInstBody
                        }), S.procInstName = S.procInstBody = "", S.state = W.TEXT) : (S.procInstBody += "?" + V, S.state = W.PROC_INST_BODY);
                        continue;
                      case W.OPEN_TAG:
                        N(E, V) ? S.tagName += V : (Lt(S), V === ">" ? gt(S) : V === "/" ? S.state = W.OPEN_TAG_SLASH : (F(V) || It(S, "Invalid character in tag name"), S.state = W.ATTRIB));
                        continue;
                      case W.OPEN_TAG_SLASH:
                        V === ">" ? (gt(S, !0), ut(S)) : (It(S, "Forward-slash in opening tag not followed by >"), S.state = W.ATTRIB);
                        continue;
                      case W.ATTRIB:
                        if (F(V))
                          continue;
                        V === ">" ? gt(S) : V === "/" ? S.state = W.OPEN_TAG_SLASH : N(I, V) ? (S.attribName = V, S.attribValue = "", S.state = W.ATTRIB_NAME) : It(S, "Invalid attribute name");
                        continue;
                      case W.ATTRIB_NAME:
                        V === "=" ? S.state = W.ATTRIB_VALUE : V === ">" ? (It(S, "Attribute without value"), S.attribValue = S.attribName, $(S), gt(S)) : F(V) ? S.state = W.ATTRIB_NAME_SAW_WHITE : N(E, V) ? S.attribName += V : It(S, "Invalid attribute name");
                        continue;
                      case W.ATTRIB_NAME_SAW_WHITE:
                        if (V === "=")
                          S.state = W.ATTRIB_VALUE;
                        else {
                          if (F(V))
                            continue;
                          It(S, "Attribute without value"), S.tag.attributes[S.attribName] = "", S.attribValue = "", K(S, "onattribute", {
                            name: S.attribName,
                            value: ""
                          }), S.attribName = "", V === ">" ? gt(S) : N(I, V) ? (S.attribName = V, S.state = W.ATTRIB_NAME) : (It(S, "Invalid attribute name"), S.state = W.ATTRIB);
                        }
                        continue;
                      case W.ATTRIB_VALUE:
                        if (F(V))
                          continue;
                        b(V) ? (S.q = V, S.state = W.ATTRIB_VALUE_QUOTED) : (It(S, "Unquoted attribute value"), S.state = W.ATTRIB_VALUE_UNQUOTED, S.attribValue = V);
                        continue;
                      case W.ATTRIB_VALUE_QUOTED:
                        if (V !== S.q) {
                          V === "&" ? S.state = W.ATTRIB_VALUE_ENTITY_Q : S.attribValue += V;
                          continue;
                        }
                        $(S), S.q = "", S.state = W.ATTRIB_VALUE_CLOSED;
                        continue;
                      case W.ATTRIB_VALUE_CLOSED:
                        F(V) ? S.state = W.ATTRIB : V === ">" ? gt(S) : V === "/" ? S.state = W.OPEN_TAG_SLASH : N(I, V) ? (It(S, "No whitespace between attributes"), S.attribName = V, S.attribValue = "", S.state = W.ATTRIB_NAME) : It(S, "Invalid attribute name");
                        continue;
                      case W.ATTRIB_VALUE_UNQUOTED:
                        if (!R(V)) {
                          V === "&" ? S.state = W.ATTRIB_VALUE_ENTITY_U : S.attribValue += V;
                          continue;
                        }
                        $(S), V === ">" ? gt(S) : S.state = W.ATTRIB;
                        continue;
                      case W.CLOSE_TAG:
                        if (S.tagName)
                          V === ">" ? ut(S) : N(E, V) ? S.tagName += V : S.script ? (S.script += "</" + S.tagName, S.tagName = "", S.state = W.SCRIPT) : (F(V) || It(S, "Invalid tagname in closing tag"), S.state = W.CLOSE_TAG_SAW_WHITE);
                        else {
                          if (F(V))
                            continue;
                          U(I, V) ? S.script ? (S.script += "</" + V, S.state = W.SCRIPT) : It(S, "Invalid tagname in closing tag.") : S.tagName = V;
                        }
                        continue;
                      case W.CLOSE_TAG_SAW_WHITE:
                        if (F(V))
                          continue;
                        V === ">" ? ut(S) : It(S, "Invalid characters in closing tag");
                        continue;
                      case W.TEXT_ENTITY:
                      case W.ATTRIB_VALUE_ENTITY_Q:
                      case W.ATTRIB_VALUE_ENTITY_U:
                        var _, At;
                        switch (S.state) {
                          case W.TEXT_ENTITY:
                            _ = W.TEXT, At = "textNode";
                            break;
                          case W.ATTRIB_VALUE_ENTITY_Q:
                            _ = W.ATTRIB_VALUE_QUOTED, At = "attribValue";
                            break;
                          case W.ATTRIB_VALUE_ENTITY_U:
                            _ = W.ATTRIB_VALUE_UNQUOTED, At = "attribValue";
                            break;
                        }
                        if (V === ";")
                          if (S.opt.unparsedEntities) {
                            var Rt = st(S);
                            S.entity = "", S.state = _, S.write(Rt);
                          } else
                            S[At] += st(S), S.entity = "", S.state = _;
                        else
                          N(S.entity.length ? A : T, V) ? S.entity += V : (It(S, "Invalid character in entity name"), S[At] += "&" + S.entity + V, S.entity = "", S.state = _);
                        continue;
                      default:
                        throw new Error(S, "Unknown state: " + S.state);
                    }
                  return S.position >= S.bufferCheckPosition && f(S), S;
                }
                /*! http://mths.be/fromcodepoint v0.1.0 by @mathias */
                String.fromCodePoint || function() {
                  var k = String.fromCharCode, S = Math.floor, L = function() {
                    var V = 16384, it = [], tt, _, At = -1, Rt = arguments.length;
                    if (!Rt)
                      return "";
                    for (var Yt = ""; ++At < Rt; ) {
                      var Gt = Number(arguments[At]);
                      if (!isFinite(Gt) || // `NaN`, `+Infinity`, or `-Infinity`
                      Gt < 0 || // not a valid Unicode code point
                      Gt > 1114111 || // not a valid Unicode code point
                      S(Gt) !== Gt)
                        throw RangeError("Invalid code point: " + Gt);
                      Gt <= 65535 ? it.push(Gt) : (Gt -= 65536, tt = (Gt >> 10) + 55296, _ = Gt % 1024 + 56320, it.push(tt, _)), (At + 1 === Rt || it.length > V) && (Yt += k.apply(null, it), it.length = 0);
                    }
                    return Yt;
                  };
                  Object.defineProperty ? Object.defineProperty(String, "fromCodePoint", {
                    value: L,
                    configurable: !0,
                    writable: !0
                  }) : String.fromCodePoint = L;
                }();
              })(d);
            }
          ),
          /***/
          34521: (
            /***/
            function(c, d, t) {
              var o = t(31801), r = t(72656), n = t(28198)(), i = t(93828), f = o("%TypeError%"), l = o("%Math.floor%");
              c.exports = function(h, a) {
                if (typeof h != "function")
                  throw new f("`fn` is not a function");
                if (typeof a != "number" || a < 0 || a > 4294967295 || l(a) !== a)
                  throw new f("`length` must be a positive 32-bit integer");
                var v = arguments.length > 2 && !!arguments[2], y = !0, p = !0;
                if ("length" in h && i) {
                  var e = i(h, "length");
                  e && !e.configurable && (y = !1), e && !e.writable && (p = !1);
                }
                return (y || p || !v) && (n ? r(h, "length", a, !0, !0) : r(h, "length", a)), h;
              };
            }
          ),
          /***/
          25021: (
            /***/
            function(c, d, t) {
              var o = t(72656), r = t(28198)(), n = t(87105).functionsHaveConfigurableNames(), i = TypeError;
              c.exports = function(l, u) {
                if (typeof l != "function")
                  throw new i("`fn` is not a function");
                var h = arguments.length > 2 && !!arguments[2];
                return (!h || n) && (r ? o(l, "name", u, !0, !0) : o(l, "name", u)), l;
              };
            }
          ),
          /***/
          20202: (
            /***/
            function(c, d, t) {
              c.exports = n;
              var o = t(5939).EventEmitter, r = t(48575);
              r(n, o), n.Readable = t(28193), n.Writable = t(16667), n.Duplex = t(53551), n.Transform = t(10695), n.PassThrough = t(89371), n.finished = t(47549), n.pipeline = t(44858), n.Stream = n;
              function n() {
                o.call(this);
              }
              n.prototype.pipe = function(i, f) {
                var l = this;
                function u(m) {
                  i.writable && i.write(m) === !1 && l.pause && l.pause();
                }
                l.on("data", u);
                function h() {
                  l.readable && l.resume && l.resume();
                }
                i.on("drain", h), !i._isStdio && (!f || f.end !== !1) && (l.on("end", v), l.on("close", y));
                var a = !1;
                function v() {
                  a || (a = !0, i.end());
                }
                function y() {
                  a || (a = !0, typeof i.destroy == "function" && i.destroy());
                }
                function p(m) {
                  if (e(), o.listenerCount(this, "error") === 0)
                    throw m;
                }
                l.on("error", p), i.on("error", p);
                function e() {
                  l.removeListener("data", u), i.removeListener("drain", h), l.removeListener("end", v), l.removeListener("close", y), l.removeListener("error", p), i.removeListener("error", p), l.removeListener("end", e), l.removeListener("close", e), i.removeListener("close", e);
                }
                return l.on("end", e), l.on("close", e), i.on("close", e), i.emit("pipe", l), i;
              };
            }
          ),
          /***/
          75065: (
            /***/
            function(c) {
              function d(l, u) {
                l.prototype = Object.create(u.prototype), l.prototype.constructor = l, l.__proto__ = u;
              }
              var t = {};
              function o(l, u, h) {
                h || (h = Error);
                function a(y, p, e) {
                  return typeof u == "string" ? u : u(y, p, e);
                }
                var v = /* @__PURE__ */ function(y) {
                  d(p, y);
                  function p(e, m, w) {
                    return y.call(this, a(e, m, w)) || this;
                  }
                  return p;
                }(h);
                v.prototype.name = h.name, v.prototype.code = l, t[l] = v;
              }
              function r(l, u) {
                if (Array.isArray(l)) {
                  var h = l.length;
                  return l = l.map(function(a) {
                    return String(a);
                  }), h > 2 ? "one of ".concat(u, " ").concat(l.slice(0, h - 1).join(", "), ", or ") + l[h - 1] : h === 2 ? "one of ".concat(u, " ").concat(l[0], " or ").concat(l[1]) : "of ".concat(u, " ").concat(l[0]);
                } else
                  return "of ".concat(u, " ").concat(String(l));
              }
              function n(l, u, h) {
                return l.substr(!h || h < 0 ? 0 : +h, u.length) === u;
              }
              function i(l, u, h) {
                return (h === void 0 || h > l.length) && (h = l.length), l.substring(h - u.length, h) === u;
              }
              function f(l, u, h) {
                return typeof h != "number" && (h = 0), h + u.length > l.length ? !1 : l.indexOf(u, h) !== -1;
              }
              o("ERR_INVALID_OPT_VALUE", function(l, u) {
                return 'The value "' + u + '" is invalid for option "' + l + '"';
              }, TypeError), o("ERR_INVALID_ARG_TYPE", function(l, u, h) {
                var a;
                typeof u == "string" && n(u, "not ") ? (a = "must not be", u = u.replace(/^not /, "")) : a = "must be";
                var v;
                if (i(l, " argument"))
                  v = "The ".concat(l, " ").concat(a, " ").concat(r(u, "type"));
                else {
                  var y = f(l, ".") ? "property" : "argument";
                  v = 'The "'.concat(l, '" ').concat(y, " ").concat(a, " ").concat(r(u, "type"));
                }
                return v += ". Received type ".concat(typeof h), v;
              }, TypeError), o("ERR_STREAM_PUSH_AFTER_EOF", "stream.push() after EOF"), o("ERR_METHOD_NOT_IMPLEMENTED", function(l) {
                return "The " + l + " method is not implemented";
              }), o("ERR_STREAM_PREMATURE_CLOSE", "Premature close"), o("ERR_STREAM_DESTROYED", function(l) {
                return "Cannot call " + l + " after a stream was destroyed";
              }), o("ERR_MULTIPLE_CALLBACK", "Callback called multiple times"), o("ERR_STREAM_CANNOT_PIPE", "Cannot pipe, not readable"), o("ERR_STREAM_WRITE_AFTER_END", "write after end"), o("ERR_STREAM_NULL_VALUES", "May not write null values to stream", TypeError), o("ERR_UNKNOWN_ENCODING", function(l) {
                return "Unknown encoding: " + l;
              }, TypeError), o("ERR_STREAM_UNSHIFT_AFTER_END_EVENT", "stream.unshift() after end event"), c.exports.q = t;
            }
          ),
          /***/
          53551: (
            /***/
            function(c, d, t) {
              var o = t(82530), r = Object.keys || function(y) {
                var p = [];
                for (var e in y)
                  p.push(e);
                return p;
              };
              c.exports = h;
              var n = t(28193), i = t(16667);
              t(48575)(h, n);
              for (var f = r(i.prototype), l = 0; l < f.length; l++) {
                var u = f[l];
                h.prototype[u] || (h.prototype[u] = i.prototype[u]);
              }
              function h(y) {
                if (!(this instanceof h))
                  return new h(y);
                n.call(this, y), i.call(this, y), this.allowHalfOpen = !0, y && (y.readable === !1 && (this.readable = !1), y.writable === !1 && (this.writable = !1), y.allowHalfOpen === !1 && (this.allowHalfOpen = !1, this.once("end", a)));
              }
              Object.defineProperty(h.prototype, "writableHighWaterMark", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.highWaterMark;
                }
              }), Object.defineProperty(h.prototype, "writableBuffer", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState && this._writableState.getBuffer();
                }
              }), Object.defineProperty(h.prototype, "writableLength", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.length;
                }
              });
              function a() {
                this._writableState.ended || o.nextTick(v, this);
              }
              function v(y) {
                y.end();
              }
              Object.defineProperty(h.prototype, "destroyed", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState === void 0 || this._writableState === void 0 ? !1 : this._readableState.destroyed && this._writableState.destroyed;
                },
                set: function(p) {
                  this._readableState === void 0 || this._writableState === void 0 || (this._readableState.destroyed = p, this._writableState.destroyed = p);
                }
              });
            }
          ),
          /***/
          89371: (
            /***/
            function(c, d, t) {
              c.exports = r;
              var o = t(10695);
              t(48575)(r, o);
              function r(n) {
                if (!(this instanceof r))
                  return new r(n);
                o.call(this, n);
              }
              r.prototype._transform = function(n, i, f) {
                f(null, n);
              };
            }
          ),
          /***/
          28193: (
            /***/
            function(c, d, t) {
              var o = t(82530);
              c.exports = J;
              var r;
              J.ReadableState = W, t(5939).EventEmitter;
              var n = function(_, At) {
                return _.listeners(At).length;
              }, i = t(5908), f = t(43060).Buffer, l = (typeof t.g < "u" ? t.g : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
              };
              function u(tt) {
                return f.from(tt);
              }
              function h(tt) {
                return f.isBuffer(tt) || tt instanceof l;
              }
              var a = t(40964), v;
              a && a.debuglog ? v = a.debuglog("stream") : v = function() {
              };
              var y = t(55681), p = t(89930), e = t(39025), m = e.getHighWaterMark, w = t(75065).q, D = w.ERR_INVALID_ARG_TYPE, I = w.ERR_STREAM_PUSH_AFTER_EOF, E = w.ERR_METHOD_NOT_IMPLEMENTED, T = w.ERR_STREAM_UNSHIFT_AFTER_END_EVENT, A, F, b;
              t(48575)(J, i);
              var R = p.errorOrDestroy, N = ["error", "close", "destroy", "pause", "resume"];
              function U(tt, _, At) {
                if (typeof tt.prependListener == "function")
                  return tt.prependListener(_, At);
                !tt._events || !tt._events[_] ? tt.on(_, At) : Array.isArray(tt._events[_]) ? tt._events[_].unshift(At) : tt._events[_] = [At, tt._events[_]];
              }
              function W(tt, _, At) {
                r = r || t(53551), tt = tt || {}, typeof At != "boolean" && (At = _ instanceof r), this.objectMode = !!tt.objectMode, At && (this.objectMode = this.objectMode || !!tt.readableObjectMode), this.highWaterMark = m(this, tt, "readableHighWaterMark", At), this.buffer = new y(), this.length = 0, this.pipes = null, this.pipesCount = 0, this.flowing = null, this.ended = !1, this.endEmitted = !1, this.reading = !1, this.sync = !0, this.needReadable = !1, this.emittedReadable = !1, this.readableListening = !1, this.resumeScheduled = !1, this.paused = !0, this.emitClose = tt.emitClose !== !1, this.autoDestroy = !!tt.autoDestroy, this.destroyed = !1, this.defaultEncoding = tt.defaultEncoding || "utf8", this.awaitDrain = 0, this.readingMore = !1, this.decoder = null, this.encoding = null, tt.encoding && (A || (A = t(10301).s), this.decoder = new A(tt.encoding), this.encoding = tt.encoding);
              }
              function J(tt) {
                if (r = r || t(53551), !(this instanceof J))
                  return new J(tt);
                var _ = this instanceof r;
                this._readableState = new W(tt, this, _), this.readable = !0, tt && (typeof tt.read == "function" && (this._read = tt.read), typeof tt.destroy == "function" && (this._destroy = tt.destroy)), i.call(this);
              }
              Object.defineProperty(J.prototype, "destroyed", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState === void 0 ? !1 : this._readableState.destroyed;
                },
                set: function(_) {
                  this._readableState && (this._readableState.destroyed = _);
                }
              }), J.prototype.destroy = p.destroy, J.prototype._undestroy = p.undestroy, J.prototype._destroy = function(tt, _) {
                _(tt);
              }, J.prototype.push = function(tt, _) {
                var At = this._readableState, Rt;
                return At.objectMode ? Rt = !0 : typeof tt == "string" && (_ = _ || At.defaultEncoding, _ !== At.encoding && (tt = f.from(tt, _), _ = ""), Rt = !0), ht(this, tt, _, !1, Rt);
              }, J.prototype.unshift = function(tt) {
                return ht(this, tt, null, !0, !1);
              };
              function ht(tt, _, At, Rt, Yt) {
                v("readableAddChunk", _);
                var Gt = tt._readableState;
                if (_ === null)
                  Gt.reading = !1, It(tt, Gt);
                else {
                  var Dt;
                  if (Yt || (Dt = nt(Gt, _)), Dt)
                    R(tt, Dt);
                  else if (Gt.objectMode || _ && _.length > 0)
                    if (typeof _ != "string" && !Gt.objectMode && Object.getPrototypeOf(_) !== f.prototype && (_ = u(_)), Rt)
                      Gt.endEmitted ? R(tt, new T()) : K(tt, Gt, _, !0);
                    else if (Gt.ended)
                      R(tt, new I());
                    else {
                      if (Gt.destroyed)
                        return !1;
                      Gt.reading = !1, Gt.decoder && !At ? (_ = Gt.decoder.write(_), Gt.objectMode || _.length !== 0 ? K(tt, Gt, _, !1) : $(tt, Gt)) : K(tt, Gt, _, !1);
                    }
                  else
                    Rt || (Gt.reading = !1, $(tt, Gt));
                }
                return !Gt.ended && (Gt.length < Gt.highWaterMark || Gt.length === 0);
              }
              function K(tt, _, At, Rt) {
                _.flowing && _.length === 0 && !_.sync ? (_.awaitDrain = 0, tt.emit("data", At)) : (_.length += _.objectMode ? 1 : At.length, Rt ? _.buffer.unshift(At) : _.buffer.push(At), _.needReadable && Lt(tt)), $(tt, _);
              }
              function nt(tt, _) {
                var At;
                return !h(_) && typeof _ != "string" && _ !== void 0 && !tt.objectMode && (At = new D("chunk", ["string", "Buffer", "Uint8Array"], _)), At;
              }
              J.prototype.isPaused = function() {
                return this._readableState.flowing === !1;
              }, J.prototype.setEncoding = function(tt) {
                A || (A = t(10301).s);
                var _ = new A(tt);
                this._readableState.decoder = _, this._readableState.encoding = this._readableState.decoder.encoding;
                for (var At = this._readableState.buffer.head, Rt = ""; At !== null; )
                  Rt += _.write(At.data), At = At.next;
                return this._readableState.buffer.clear(), Rt !== "" && this._readableState.buffer.push(Rt), this._readableState.length = Rt.length, this;
              };
              var xt = 1073741824;
              function bt(tt) {
                return tt >= xt ? tt = xt : (tt--, tt |= tt >>> 1, tt |= tt >>> 2, tt |= tt >>> 4, tt |= tt >>> 8, tt |= tt >>> 16, tt++), tt;
              }
              function Tt(tt, _) {
                return tt <= 0 || _.length === 0 && _.ended ? 0 : _.objectMode ? 1 : tt !== tt ? _.flowing && _.length ? _.buffer.head.data.length : _.length : (tt > _.highWaterMark && (_.highWaterMark = bt(tt)), tt <= _.length ? tt : _.ended ? _.length : (_.needReadable = !0, 0));
              }
              J.prototype.read = function(tt) {
                v("read", tt), tt = parseInt(tt, 10);
                var _ = this._readableState, At = tt;
                if (tt !== 0 && (_.emittedReadable = !1), tt === 0 && _.needReadable && ((_.highWaterMark !== 0 ? _.length >= _.highWaterMark : _.length > 0) || _.ended))
                  return v("read: emitReadable", _.length, _.ended), _.length === 0 && _.ended ? L(this) : Lt(this), null;
                if (tt = Tt(tt, _), tt === 0 && _.ended)
                  return _.length === 0 && L(this), null;
                var Rt = _.needReadable;
                v("need readable", Rt), (_.length === 0 || _.length - tt < _.highWaterMark) && (Rt = !0, v("length less than watermark", Rt)), _.ended || _.reading ? (Rt = !1, v("reading or ended", Rt)) : Rt && (v("do read"), _.reading = !0, _.sync = !0, _.length === 0 && (_.needReadable = !0), this._read(_.highWaterMark), _.sync = !1, _.reading || (tt = Tt(At, _)));
                var Yt;
                return tt > 0 ? Yt = S(tt, _) : Yt = null, Yt === null ? (_.needReadable = _.length <= _.highWaterMark, tt = 0) : (_.length -= tt, _.awaitDrain = 0), _.length === 0 && (_.ended || (_.needReadable = !0), At !== tt && _.ended && L(this)), Yt !== null && this.emit("data", Yt), Yt;
              };
              function It(tt, _) {
                if (v("onEofChunk"), !_.ended) {
                  if (_.decoder) {
                    var At = _.decoder.end();
                    At && At.length && (_.buffer.push(At), _.length += _.objectMode ? 1 : At.length);
                  }
                  _.ended = !0, _.sync ? Lt(tt) : (_.needReadable = !1, _.emittedReadable || (_.emittedReadable = !0, Ut(tt)));
                }
              }
              function Lt(tt) {
                var _ = tt._readableState;
                v("emitReadable", _.needReadable, _.emittedReadable), _.needReadable = !1, _.emittedReadable || (v("emitReadable", _.flowing), _.emittedReadable = !0, o.nextTick(Ut, tt));
              }
              function Ut(tt) {
                var _ = tt._readableState;
                v("emitReadable_", _.destroyed, _.length, _.ended), !_.destroyed && (_.length || _.ended) && (tt.emit("readable"), _.emittedReadable = !1), _.needReadable = !_.flowing && !_.ended && _.length <= _.highWaterMark, k(tt);
              }
              function $(tt, _) {
                _.readingMore || (_.readingMore = !0, o.nextTick(gt, tt, _));
              }
              function gt(tt, _) {
                for (; !_.reading && !_.ended && (_.length < _.highWaterMark || _.flowing && _.length === 0); ) {
                  var At = _.length;
                  if (v("maybeReadMore read 0"), tt.read(0), At === _.length)
                    break;
                }
                _.readingMore = !1;
              }
              J.prototype._read = function(tt) {
                R(this, new E("_read()"));
              }, J.prototype.pipe = function(tt, _) {
                var At = this, Rt = this._readableState;
                switch (Rt.pipesCount) {
                  case 0:
                    Rt.pipes = tt;
                    break;
                  case 1:
                    Rt.pipes = [Rt.pipes, tt];
                    break;
                  default:
                    Rt.pipes.push(tt);
                    break;
                }
                Rt.pipesCount += 1, v("pipe count=%d opts=%j", Rt.pipesCount, _);
                var Yt = (!_ || _.end !== !1) && tt !== o.stdout && tt !== o.stderr, Gt = Yt ? ae : de;
                Rt.endEmitted ? o.nextTick(Gt) : At.once("end", Gt), tt.on("unpipe", Dt);
                function Dt(be, Oe) {
                  v("onunpipe"), be === At && Oe && Oe.hasUnpiped === !1 && (Oe.hasUnpiped = !0, ce());
                }
                function ae() {
                  v("onend"), tt.end();
                }
                var Ae = ut(At);
                tt.on("drain", Ae);
                var xe = !1;
                function ce() {
                  v("cleanup"), tt.removeListener("close", Qt), tt.removeListener("finish", le), tt.removeListener("drain", Ae), tt.removeListener("error", zt), tt.removeListener("unpipe", Dt), At.removeListener("end", ae), At.removeListener("end", de), At.removeListener("data", we), xe = !0, Rt.awaitDrain && (!tt._writableState || tt._writableState.needDrain) && Ae();
                }
                At.on("data", we);
                function we(be) {
                  v("ondata");
                  var Oe = tt.write(be);
                  v("dest.write", Oe), Oe === !1 && ((Rt.pipesCount === 1 && Rt.pipes === tt || Rt.pipesCount > 1 && it(Rt.pipes, tt) !== -1) && !xe && (v("false write response, pause", Rt.awaitDrain), Rt.awaitDrain++), At.pause());
                }
                function zt(be) {
                  v("onerror", be), de(), tt.removeListener("error", zt), n(tt, "error") === 0 && R(tt, be);
                }
                U(tt, "error", zt);
                function Qt() {
                  tt.removeListener("finish", le), de();
                }
                tt.once("close", Qt);
                function le() {
                  v("onfinish"), tt.removeListener("close", Qt), de();
                }
                tt.once("finish", le);
                function de() {
                  v("unpipe"), At.unpipe(tt);
                }
                return tt.emit("pipe", At), Rt.flowing || (v("pipe resume"), At.resume()), tt;
              };
              function ut(tt) {
                return function() {
                  var At = tt._readableState;
                  v("pipeOnDrain", At.awaitDrain), At.awaitDrain && At.awaitDrain--, At.awaitDrain === 0 && n(tt, "data") && (At.flowing = !0, k(tt));
                };
              }
              J.prototype.unpipe = function(tt) {
                var _ = this._readableState, At = {
                  hasUnpiped: !1
                };
                if (_.pipesCount === 0)
                  return this;
                if (_.pipesCount === 1)
                  return tt && tt !== _.pipes ? this : (tt || (tt = _.pipes), _.pipes = null, _.pipesCount = 0, _.flowing = !1, tt && tt.emit("unpipe", this, At), this);
                if (!tt) {
                  var Rt = _.pipes, Yt = _.pipesCount;
                  _.pipes = null, _.pipesCount = 0, _.flowing = !1;
                  for (var Gt = 0; Gt < Yt; Gt++)
                    Rt[Gt].emit("unpipe", this, {
                      hasUnpiped: !1
                    });
                  return this;
                }
                var Dt = it(_.pipes, tt);
                return Dt === -1 ? this : (_.pipes.splice(Dt, 1), _.pipesCount -= 1, _.pipesCount === 1 && (_.pipes = _.pipes[0]), tt.emit("unpipe", this, At), this);
              }, J.prototype.on = function(tt, _) {
                var At = i.prototype.on.call(this, tt, _), Rt = this._readableState;
                return tt === "data" ? (Rt.readableListening = this.listenerCount("readable") > 0, Rt.flowing !== !1 && this.resume()) : tt === "readable" && !Rt.endEmitted && !Rt.readableListening && (Rt.readableListening = Rt.needReadable = !0, Rt.flowing = !1, Rt.emittedReadable = !1, v("on readable", Rt.length, Rt.reading), Rt.length ? Lt(this) : Rt.reading || o.nextTick(yt, this)), At;
              }, J.prototype.addListener = J.prototype.on, J.prototype.removeListener = function(tt, _) {
                var At = i.prototype.removeListener.call(this, tt, _);
                return tt === "readable" && o.nextTick(st, this), At;
              }, J.prototype.removeAllListeners = function(tt) {
                var _ = i.prototype.removeAllListeners.apply(this, arguments);
                return (tt === "readable" || tt === void 0) && o.nextTick(st, this), _;
              };
              function st(tt) {
                var _ = tt._readableState;
                _.readableListening = tt.listenerCount("readable") > 0, _.resumeScheduled && !_.paused ? _.flowing = !0 : tt.listenerCount("data") > 0 && tt.resume();
              }
              function yt(tt) {
                v("readable nexttick read 0"), tt.read(0);
              }
              J.prototype.resume = function() {
                var tt = this._readableState;
                return tt.flowing || (v("resume"), tt.flowing = !tt.readableListening, G(this, tt)), tt.paused = !1, this;
              };
              function G(tt, _) {
                _.resumeScheduled || (_.resumeScheduled = !0, o.nextTick(Et, tt, _));
              }
              function Et(tt, _) {
                v("resume", _.reading), _.reading || tt.read(0), _.resumeScheduled = !1, tt.emit("resume"), k(tt), _.flowing && !_.reading && tt.read(0);
              }
              J.prototype.pause = function() {
                return v("call pause flowing=%j", this._readableState.flowing), this._readableState.flowing !== !1 && (v("pause"), this._readableState.flowing = !1, this.emit("pause")), this._readableState.paused = !0, this;
              };
              function k(tt) {
                var _ = tt._readableState;
                for (v("flow", _.flowing); _.flowing && tt.read() !== null; )
                  ;
              }
              J.prototype.wrap = function(tt) {
                var _ = this, At = this._readableState, Rt = !1;
                tt.on("end", function() {
                  if (v("wrapped end"), At.decoder && !At.ended) {
                    var Dt = At.decoder.end();
                    Dt && Dt.length && _.push(Dt);
                  }
                  _.push(null);
                }), tt.on("data", function(Dt) {
                  if (v("wrapped data"), At.decoder && (Dt = At.decoder.write(Dt)), !(At.objectMode && Dt == null) && !(!At.objectMode && (!Dt || !Dt.length))) {
                    var ae = _.push(Dt);
                    ae || (Rt = !0, tt.pause());
                  }
                });
                for (var Yt in tt)
                  this[Yt] === void 0 && typeof tt[Yt] == "function" && (this[Yt] = function(ae) {
                    return function() {
                      return tt[ae].apply(tt, arguments);
                    };
                  }(Yt));
                for (var Gt = 0; Gt < N.length; Gt++)
                  tt.on(N[Gt], this.emit.bind(this, N[Gt]));
                return this._read = function(Dt) {
                  v("wrapped _read", Dt), Rt && (Rt = !1, tt.resume());
                }, this;
              }, typeof Symbol == "function" && (J.prototype[Symbol.asyncIterator] = function() {
                return F === void 0 && (F = t(90933)), F(this);
              }), Object.defineProperty(J.prototype, "readableHighWaterMark", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState.highWaterMark;
                }
              }), Object.defineProperty(J.prototype, "readableBuffer", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState && this._readableState.buffer;
                }
              }), Object.defineProperty(J.prototype, "readableFlowing", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState.flowing;
                },
                set: function(_) {
                  this._readableState && (this._readableState.flowing = _);
                }
              }), J._fromList = S, Object.defineProperty(J.prototype, "readableLength", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._readableState.length;
                }
              });
              function S(tt, _) {
                if (_.length === 0)
                  return null;
                var At;
                return _.objectMode ? At = _.buffer.shift() : !tt || tt >= _.length ? (_.decoder ? At = _.buffer.join("") : _.buffer.length === 1 ? At = _.buffer.first() : At = _.buffer.concat(_.length), _.buffer.clear()) : At = _.buffer.consume(tt, _.decoder), At;
              }
              function L(tt) {
                var _ = tt._readableState;
                v("endReadable", _.endEmitted), _.endEmitted || (_.ended = !0, o.nextTick(V, _, tt));
              }
              function V(tt, _) {
                if (v("endReadableNT", tt.endEmitted, tt.length), !tt.endEmitted && tt.length === 0 && (tt.endEmitted = !0, _.readable = !1, _.emit("end"), tt.autoDestroy)) {
                  var At = _._writableState;
                  (!At || At.autoDestroy && At.finished) && _.destroy();
                }
              }
              typeof Symbol == "function" && (J.from = function(tt, _) {
                return b === void 0 && (b = t(24881)), b(J, tt, _);
              });
              function it(tt, _) {
                for (var At = 0, Rt = tt.length; At < Rt; At++)
                  if (tt[At] === _)
                    return At;
                return -1;
              }
            }
          ),
          /***/
          10695: (
            /***/
            function(c, d, t) {
              c.exports = h;
              var o = t(75065).q, r = o.ERR_METHOD_NOT_IMPLEMENTED, n = o.ERR_MULTIPLE_CALLBACK, i = o.ERR_TRANSFORM_ALREADY_TRANSFORMING, f = o.ERR_TRANSFORM_WITH_LENGTH_0, l = t(53551);
              t(48575)(h, l);
              function u(y, p) {
                var e = this._transformState;
                e.transforming = !1;
                var m = e.writecb;
                if (m === null)
                  return this.emit("error", new n());
                e.writechunk = null, e.writecb = null, p != null && this.push(p), m(y);
                var w = this._readableState;
                w.reading = !1, (w.needReadable || w.length < w.highWaterMark) && this._read(w.highWaterMark);
              }
              function h(y) {
                if (!(this instanceof h))
                  return new h(y);
                l.call(this, y), this._transformState = {
                  afterTransform: u.bind(this),
                  needTransform: !1,
                  transforming: !1,
                  writecb: null,
                  writechunk: null,
                  writeencoding: null
                }, this._readableState.needReadable = !0, this._readableState.sync = !1, y && (typeof y.transform == "function" && (this._transform = y.transform), typeof y.flush == "function" && (this._flush = y.flush)), this.on("prefinish", a);
              }
              function a() {
                var y = this;
                typeof this._flush == "function" && !this._readableState.destroyed ? this._flush(function(p, e) {
                  v(y, p, e);
                }) : v(this, null, null);
              }
              h.prototype.push = function(y, p) {
                return this._transformState.needTransform = !1, l.prototype.push.call(this, y, p);
              }, h.prototype._transform = function(y, p, e) {
                e(new r("_transform()"));
              }, h.prototype._write = function(y, p, e) {
                var m = this._transformState;
                if (m.writecb = e, m.writechunk = y, m.writeencoding = p, !m.transforming) {
                  var w = this._readableState;
                  (m.needTransform || w.needReadable || w.length < w.highWaterMark) && this._read(w.highWaterMark);
                }
              }, h.prototype._read = function(y) {
                var p = this._transformState;
                p.writechunk !== null && !p.transforming ? (p.transforming = !0, this._transform(p.writechunk, p.writeencoding, p.afterTransform)) : p.needTransform = !0;
              }, h.prototype._destroy = function(y, p) {
                l.prototype._destroy.call(this, y, function(e) {
                  p(e);
                });
              };
              function v(y, p, e) {
                if (p)
                  return y.emit("error", p);
                if (e != null && y.push(e), y._writableState.length)
                  throw new f();
                if (y._transformState.transforming)
                  throw new i();
                return y.push(null);
              }
            }
          ),
          /***/
          16667: (
            /***/
            function(c, d, t) {
              var o = t(82530);
              c.exports = W;
              function r(k) {
                var S = this;
                this.next = null, this.entry = null, this.finish = function() {
                  Et(S, k);
                };
              }
              var n;
              W.WritableState = N;
              var i = {
                deprecate: t(29440)
              }, f = t(5908), l = t(43060).Buffer, u = (typeof t.g < "u" ? t.g : typeof window < "u" ? window : typeof self < "u" ? self : {}).Uint8Array || function() {
              };
              function h(k) {
                return l.from(k);
              }
              function a(k) {
                return l.isBuffer(k) || k instanceof u;
              }
              var v = t(89930), y = t(39025), p = y.getHighWaterMark, e = t(75065).q, m = e.ERR_INVALID_ARG_TYPE, w = e.ERR_METHOD_NOT_IMPLEMENTED, D = e.ERR_MULTIPLE_CALLBACK, I = e.ERR_STREAM_CANNOT_PIPE, E = e.ERR_STREAM_DESTROYED, T = e.ERR_STREAM_NULL_VALUES, A = e.ERR_STREAM_WRITE_AFTER_END, F = e.ERR_UNKNOWN_ENCODING, b = v.errorOrDestroy;
              t(48575)(W, f);
              function R() {
              }
              function N(k, S, L) {
                n = n || t(53551), k = k || {}, typeof L != "boolean" && (L = S instanceof n), this.objectMode = !!k.objectMode, L && (this.objectMode = this.objectMode || !!k.writableObjectMode), this.highWaterMark = p(this, k, "writableHighWaterMark", L), this.finalCalled = !1, this.needDrain = !1, this.ending = !1, this.ended = !1, this.finished = !1, this.destroyed = !1;
                var V = k.decodeStrings === !1;
                this.decodeStrings = !V, this.defaultEncoding = k.defaultEncoding || "utf8", this.length = 0, this.writing = !1, this.corked = 0, this.sync = !0, this.bufferProcessing = !1, this.onwrite = function(it) {
                  It(S, it);
                }, this.writecb = null, this.writelen = 0, this.bufferedRequest = null, this.lastBufferedRequest = null, this.pendingcb = 0, this.prefinished = !1, this.errorEmitted = !1, this.emitClose = k.emitClose !== !1, this.autoDestroy = !!k.autoDestroy, this.bufferedRequestCount = 0, this.corkedRequestsFree = new r(this);
              }
              N.prototype.getBuffer = function() {
                for (var S = this.bufferedRequest, L = []; S; )
                  L.push(S), S = S.next;
                return L;
              }, function() {
                try {
                  Object.defineProperty(N.prototype, "buffer", {
                    get: i.deprecate(function() {
                      return this.getBuffer();
                    }, "_writableState.buffer is deprecated. Use _writableState.getBuffer instead.", "DEP0003")
                  });
                } catch {
                }
              }();
              var U;
              typeof Symbol == "function" && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] == "function" ? (U = Function.prototype[Symbol.hasInstance], Object.defineProperty(W, Symbol.hasInstance, {
                value: function(S) {
                  return U.call(this, S) ? !0 : this !== W ? !1 : S && S._writableState instanceof N;
                }
              })) : U = function(S) {
                return S instanceof this;
              };
              function W(k) {
                n = n || t(53551);
                var S = this instanceof n;
                if (!S && !U.call(W, this))
                  return new W(k);
                this._writableState = new N(k, this, S), this.writable = !0, k && (typeof k.write == "function" && (this._write = k.write), typeof k.writev == "function" && (this._writev = k.writev), typeof k.destroy == "function" && (this._destroy = k.destroy), typeof k.final == "function" && (this._final = k.final)), f.call(this);
              }
              W.prototype.pipe = function() {
                b(this, new I());
              };
              function J(k, S) {
                var L = new A();
                b(k, L), o.nextTick(S, L);
              }
              function ht(k, S, L, V) {
                var it;
                return L === null ? it = new T() : typeof L != "string" && !S.objectMode && (it = new m("chunk", ["string", "Buffer"], L)), it ? (b(k, it), o.nextTick(V, it), !1) : !0;
              }
              W.prototype.write = function(k, S, L) {
                var V = this._writableState, it = !1, tt = !V.objectMode && a(k);
                return tt && !l.isBuffer(k) && (k = h(k)), typeof S == "function" && (L = S, S = null), tt ? S = "buffer" : S || (S = V.defaultEncoding), typeof L != "function" && (L = R), V.ending ? J(this, L) : (tt || ht(this, V, k, L)) && (V.pendingcb++, it = nt(this, V, tt, k, S, L)), it;
              }, W.prototype.cork = function() {
                this._writableState.corked++;
              }, W.prototype.uncork = function() {
                var k = this._writableState;
                k.corked && (k.corked--, !k.writing && !k.corked && !k.bufferProcessing && k.bufferedRequest && $(this, k));
              }, W.prototype.setDefaultEncoding = function(S) {
                if (typeof S == "string" && (S = S.toLowerCase()), !(["hex", "utf8", "utf-8", "ascii", "binary", "base64", "ucs2", "ucs-2", "utf16le", "utf-16le", "raw"].indexOf((S + "").toLowerCase()) > -1))
                  throw new F(S);
                return this._writableState.defaultEncoding = S, this;
              }, Object.defineProperty(W.prototype, "writableBuffer", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState && this._writableState.getBuffer();
                }
              });
              function K(k, S, L) {
                return !k.objectMode && k.decodeStrings !== !1 && typeof S == "string" && (S = l.from(S, L)), S;
              }
              Object.defineProperty(W.prototype, "writableHighWaterMark", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.highWaterMark;
                }
              });
              function nt(k, S, L, V, it, tt) {
                if (!L) {
                  var _ = K(S, V, it);
                  V !== _ && (L = !0, it = "buffer", V = _);
                }
                var At = S.objectMode ? 1 : V.length;
                S.length += At;
                var Rt = S.length < S.highWaterMark;
                if (Rt || (S.needDrain = !0), S.writing || S.corked) {
                  var Yt = S.lastBufferedRequest;
                  S.lastBufferedRequest = {
                    chunk: V,
                    encoding: it,
                    isBuf: L,
                    callback: tt,
                    next: null
                  }, Yt ? Yt.next = S.lastBufferedRequest : S.bufferedRequest = S.lastBufferedRequest, S.bufferedRequestCount += 1;
                } else
                  xt(k, S, !1, At, V, it, tt);
                return Rt;
              }
              function xt(k, S, L, V, it, tt, _) {
                S.writelen = V, S.writecb = _, S.writing = !0, S.sync = !0, S.destroyed ? S.onwrite(new E("write")) : L ? k._writev(it, S.onwrite) : k._write(it, tt, S.onwrite), S.sync = !1;
              }
              function bt(k, S, L, V, it) {
                --S.pendingcb, L ? (o.nextTick(it, V), o.nextTick(yt, k, S), k._writableState.errorEmitted = !0, b(k, V)) : (it(V), k._writableState.errorEmitted = !0, b(k, V), yt(k, S));
              }
              function Tt(k) {
                k.writing = !1, k.writecb = null, k.length -= k.writelen, k.writelen = 0;
              }
              function It(k, S) {
                var L = k._writableState, V = L.sync, it = L.writecb;
                if (typeof it != "function")
                  throw new D();
                if (Tt(L), S)
                  bt(k, L, V, S, it);
                else {
                  var tt = gt(L) || k.destroyed;
                  !tt && !L.corked && !L.bufferProcessing && L.bufferedRequest && $(k, L), V ? o.nextTick(Lt, k, L, tt, it) : Lt(k, L, tt, it);
                }
              }
              function Lt(k, S, L, V) {
                L || Ut(k, S), S.pendingcb--, V(), yt(k, S);
              }
              function Ut(k, S) {
                S.length === 0 && S.needDrain && (S.needDrain = !1, k.emit("drain"));
              }
              function $(k, S) {
                S.bufferProcessing = !0;
                var L = S.bufferedRequest;
                if (k._writev && L && L.next) {
                  var V = S.bufferedRequestCount, it = new Array(V), tt = S.corkedRequestsFree;
                  tt.entry = L;
                  for (var _ = 0, At = !0; L; )
                    it[_] = L, L.isBuf || (At = !1), L = L.next, _ += 1;
                  it.allBuffers = At, xt(k, S, !0, S.length, it, "", tt.finish), S.pendingcb++, S.lastBufferedRequest = null, tt.next ? (S.corkedRequestsFree = tt.next, tt.next = null) : S.corkedRequestsFree = new r(S), S.bufferedRequestCount = 0;
                } else {
                  for (; L; ) {
                    var Rt = L.chunk, Yt = L.encoding, Gt = L.callback, Dt = S.objectMode ? 1 : Rt.length;
                    if (xt(k, S, !1, Dt, Rt, Yt, Gt), L = L.next, S.bufferedRequestCount--, S.writing)
                      break;
                  }
                  L === null && (S.lastBufferedRequest = null);
                }
                S.bufferedRequest = L, S.bufferProcessing = !1;
              }
              W.prototype._write = function(k, S, L) {
                L(new w("_write()"));
              }, W.prototype._writev = null, W.prototype.end = function(k, S, L) {
                var V = this._writableState;
                return typeof k == "function" ? (L = k, k = null, S = null) : typeof S == "function" && (L = S, S = null), k != null && this.write(k, S), V.corked && (V.corked = 1, this.uncork()), V.ending || G(this, V, L), this;
              }, Object.defineProperty(W.prototype, "writableLength", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState.length;
                }
              });
              function gt(k) {
                return k.ending && k.length === 0 && k.bufferedRequest === null && !k.finished && !k.writing;
              }
              function ut(k, S) {
                k._final(function(L) {
                  S.pendingcb--, L && b(k, L), S.prefinished = !0, k.emit("prefinish"), yt(k, S);
                });
              }
              function st(k, S) {
                !S.prefinished && !S.finalCalled && (typeof k._final == "function" && !S.destroyed ? (S.pendingcb++, S.finalCalled = !0, o.nextTick(ut, k, S)) : (S.prefinished = !0, k.emit("prefinish")));
              }
              function yt(k, S) {
                var L = gt(S);
                if (L && (st(k, S), S.pendingcb === 0 && (S.finished = !0, k.emit("finish"), S.autoDestroy))) {
                  var V = k._readableState;
                  (!V || V.autoDestroy && V.endEmitted) && k.destroy();
                }
                return L;
              }
              function G(k, S, L) {
                S.ending = !0, yt(k, S), L && (S.finished ? o.nextTick(L) : k.once("finish", L)), S.ended = !0, k.writable = !1;
              }
              function Et(k, S, L) {
                var V = k.entry;
                for (k.entry = null; V; ) {
                  var it = V.callback;
                  S.pendingcb--, it(L), V = V.next;
                }
                S.corkedRequestsFree.next = k;
              }
              Object.defineProperty(W.prototype, "destroyed", {
                // making it explicit this property is not enumerable
                // because otherwise some prototype manipulation in
                // userland will fail
                enumerable: !1,
                get: function() {
                  return this._writableState === void 0 ? !1 : this._writableState.destroyed;
                },
                set: function(S) {
                  this._writableState && (this._writableState.destroyed = S);
                }
              }), W.prototype.destroy = v.destroy, W.prototype._undestroy = v.undestroy, W.prototype._destroy = function(k, S) {
                S(k);
              };
            }
          ),
          /***/
          90933: (
            /***/
            function(c, d, t) {
              var o = t(82530), r;
              function n(F, b, R) {
                return b = i(b), b in F ? Object.defineProperty(F, b, { value: R, enumerable: !0, configurable: !0, writable: !0 }) : F[b] = R, F;
              }
              function i(F) {
                var b = f(F, "string");
                return typeof b == "symbol" ? b : String(b);
              }
              function f(F, b) {
                if (typeof F != "object" || F === null)
                  return F;
                var R = F[Symbol.toPrimitive];
                if (R !== void 0) {
                  var N = R.call(F, b || "default");
                  if (typeof N != "object")
                    return N;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (b === "string" ? String : Number)(F);
              }
              var l = t(47549), u = Symbol("lastResolve"), h = Symbol("lastReject"), a = Symbol("error"), v = Symbol("ended"), y = Symbol("lastPromise"), p = Symbol("handlePromise"), e = Symbol("stream");
              function m(F, b) {
                return {
                  value: F,
                  done: b
                };
              }
              function w(F) {
                var b = F[u];
                if (b !== null) {
                  var R = F[e].read();
                  R !== null && (F[y] = null, F[u] = null, F[h] = null, b(m(R, !1)));
                }
              }
              function D(F) {
                o.nextTick(w, F);
              }
              function I(F, b) {
                return function(R, N) {
                  F.then(function() {
                    if (b[v]) {
                      R(m(void 0, !0));
                      return;
                    }
                    b[p](R, N);
                  }, N);
                };
              }
              var E = Object.getPrototypeOf(function() {
              }), T = Object.setPrototypeOf((r = {
                get stream() {
                  return this[e];
                },
                next: function() {
                  var b = this, R = this[a];
                  if (R !== null)
                    return Promise.reject(R);
                  if (this[v])
                    return Promise.resolve(m(void 0, !0));
                  if (this[e].destroyed)
                    return new Promise(function(J, ht) {
                      o.nextTick(function() {
                        b[a] ? ht(b[a]) : J(m(void 0, !0));
                      });
                    });
                  var N = this[y], U;
                  if (N)
                    U = new Promise(I(N, this));
                  else {
                    var W = this[e].read();
                    if (W !== null)
                      return Promise.resolve(m(W, !1));
                    U = new Promise(this[p]);
                  }
                  return this[y] = U, U;
                }
              }, n(r, Symbol.asyncIterator, function() {
                return this;
              }), n(r, "return", function() {
                var b = this;
                return new Promise(function(R, N) {
                  b[e].destroy(null, function(U) {
                    if (U) {
                      N(U);
                      return;
                    }
                    R(m(void 0, !0));
                  });
                });
              }), r), E), A = function(b) {
                var R, N = Object.create(T, (R = {}, n(R, e, {
                  value: b,
                  writable: !0
                }), n(R, u, {
                  value: null,
                  writable: !0
                }), n(R, h, {
                  value: null,
                  writable: !0
                }), n(R, a, {
                  value: null,
                  writable: !0
                }), n(R, v, {
                  value: b._readableState.endEmitted,
                  writable: !0
                }), n(R, p, {
                  value: function(W, J) {
                    var ht = N[e].read();
                    ht ? (N[y] = null, N[u] = null, N[h] = null, W(m(ht, !1))) : (N[u] = W, N[h] = J);
                  },
                  writable: !0
                }), R));
                return N[y] = null, l(b, function(U) {
                  if (U && U.code !== "ERR_STREAM_PREMATURE_CLOSE") {
                    var W = N[h];
                    W !== null && (N[y] = null, N[u] = null, N[h] = null, W(U)), N[a] = U;
                    return;
                  }
                  var J = N[u];
                  J !== null && (N[y] = null, N[u] = null, N[h] = null, J(m(void 0, !0))), N[v] = !0;
                }), b.on("readable", D.bind(null, N)), N;
              };
              c.exports = A;
            }
          ),
          /***/
          89930: (
            /***/
            function(c, d, t) {
              var o = t(82530);
              function r(h, a) {
                var v = this, y = this._readableState && this._readableState.destroyed, p = this._writableState && this._writableState.destroyed;
                return y || p ? (a ? a(h) : h && (this._writableState ? this._writableState.errorEmitted || (this._writableState.errorEmitted = !0, o.nextTick(l, this, h)) : o.nextTick(l, this, h)), this) : (this._readableState && (this._readableState.destroyed = !0), this._writableState && (this._writableState.destroyed = !0), this._destroy(h || null, function(e) {
                  !a && e ? v._writableState ? v._writableState.errorEmitted ? o.nextTick(i, v) : (v._writableState.errorEmitted = !0, o.nextTick(n, v, e)) : o.nextTick(n, v, e) : a ? (o.nextTick(i, v), a(e)) : o.nextTick(i, v);
                }), this);
              }
              function n(h, a) {
                l(h, a), i(h);
              }
              function i(h) {
                h._writableState && !h._writableState.emitClose || h._readableState && !h._readableState.emitClose || h.emit("close");
              }
              function f() {
                this._readableState && (this._readableState.destroyed = !1, this._readableState.reading = !1, this._readableState.ended = !1, this._readableState.endEmitted = !1), this._writableState && (this._writableState.destroyed = !1, this._writableState.ended = !1, this._writableState.ending = !1, this._writableState.finalCalled = !1, this._writableState.prefinished = !1, this._writableState.finished = !1, this._writableState.errorEmitted = !1);
              }
              function l(h, a) {
                h.emit("error", a);
              }
              function u(h, a) {
                var v = h._readableState, y = h._writableState;
                v && v.autoDestroy || y && y.autoDestroy ? h.destroy(a) : h.emit("error", a);
              }
              c.exports = {
                destroy: r,
                undestroy: f,
                errorOrDestroy: u
              };
            }
          ),
          /***/
          47549: (
            /***/
            function(c, d, t) {
              var o = t(75065).q.ERR_STREAM_PREMATURE_CLOSE;
              function r(l) {
                var u = !1;
                return function() {
                  if (!u) {
                    u = !0;
                    for (var h = arguments.length, a = new Array(h), v = 0; v < h; v++)
                      a[v] = arguments[v];
                    l.apply(this, a);
                  }
                };
              }
              function n() {
              }
              function i(l) {
                return l.setHeader && typeof l.abort == "function";
              }
              function f(l, u, h) {
                if (typeof u == "function")
                  return f(l, null, u);
                u || (u = {}), h = r(h || n);
                var a = u.readable || u.readable !== !1 && l.readable, v = u.writable || u.writable !== !1 && l.writable, y = function() {
                  l.writable || e();
                }, p = l._writableState && l._writableState.finished, e = function() {
                  v = !1, p = !0, a || h.call(l);
                }, m = l._readableState && l._readableState.endEmitted, w = function() {
                  a = !1, m = !0, v || h.call(l);
                }, D = function(A) {
                  h.call(l, A);
                }, I = function() {
                  var A;
                  if (a && !m)
                    return (!l._readableState || !l._readableState.ended) && (A = new o()), h.call(l, A);
                  if (v && !p)
                    return (!l._writableState || !l._writableState.ended) && (A = new o()), h.call(l, A);
                }, E = function() {
                  l.req.on("finish", e);
                };
                return i(l) ? (l.on("complete", e), l.on("abort", I), l.req ? E() : l.on("request", E)) : v && !l._writableState && (l.on("end", y), l.on("close", y)), l.on("end", w), l.on("finish", e), u.error !== !1 && l.on("error", D), l.on("close", I), function() {
                  l.removeListener("complete", e), l.removeListener("abort", I), l.removeListener("request", E), l.req && l.req.removeListener("finish", e), l.removeListener("end", y), l.removeListener("close", y), l.removeListener("finish", e), l.removeListener("end", w), l.removeListener("error", D), l.removeListener("close", I);
                };
              }
              c.exports = f;
            }
          ),
          /***/
          24881: (
            /***/
            function(c) {
              c.exports = function() {
                throw new Error("Readable.from is not available in the browser");
              };
            }
          ),
          /***/
          44858: (
            /***/
            function(c, d, t) {
              var o;
              function r(e) {
                var m = !1;
                return function() {
                  m || (m = !0, e.apply(void 0, arguments));
                };
              }
              var n = t(75065).q, i = n.ERR_MISSING_ARGS, f = n.ERR_STREAM_DESTROYED;
              function l(e) {
                if (e)
                  throw e;
              }
              function u(e) {
                return e.setHeader && typeof e.abort == "function";
              }
              function h(e, m, w, D) {
                D = r(D);
                var I = !1;
                e.on("close", function() {
                  I = !0;
                }), o === void 0 && (o = t(47549)), o(e, {
                  readable: m,
                  writable: w
                }, function(T) {
                  if (T)
                    return D(T);
                  I = !0, D();
                });
                var E = !1;
                return function(T) {
                  if (!I && !E) {
                    if (E = !0, u(e))
                      return e.abort();
                    if (typeof e.destroy == "function")
                      return e.destroy();
                    D(T || new f("pipe"));
                  }
                };
              }
              function a(e) {
                e();
              }
              function v(e, m) {
                return e.pipe(m);
              }
              function y(e) {
                return !e.length || typeof e[e.length - 1] != "function" ? l : e.pop();
              }
              function p() {
                for (var e = arguments.length, m = new Array(e), w = 0; w < e; w++)
                  m[w] = arguments[w];
                var D = y(m);
                if (Array.isArray(m[0]) && (m = m[0]), m.length < 2)
                  throw new i("streams");
                var I, E = m.map(function(T, A) {
                  var F = A < m.length - 1, b = A > 0;
                  return h(T, F, b, function(R) {
                    I || (I = R), R && E.forEach(a), !F && (E.forEach(a), D(I));
                  });
                });
                return m.reduce(v);
              }
              c.exports = p;
            }
          ),
          /***/
          39025: (
            /***/
            function(c, d, t) {
              var o = t(75065).q.ERR_INVALID_OPT_VALUE;
              function r(i, f, l) {
                return i.highWaterMark != null ? i.highWaterMark : f ? i[l] : null;
              }
              function n(i, f, l, u) {
                var h = r(f, u, l);
                if (h != null) {
                  if (!(isFinite(h) && Math.floor(h) === h) || h < 0) {
                    var a = u ? l : "highWaterMark";
                    throw new o(a, h);
                  }
                  return Math.floor(h);
                }
                return i.objectMode ? 16 : 16384;
              }
              c.exports = {
                getHighWaterMark: n
              };
            }
          ),
          /***/
          5908: (
            /***/
            function(c, d, t) {
              c.exports = t(5939).EventEmitter;
            }
          ),
          /***/
          10301: (
            /***/
            function(c, d, t) {
              var o = t(11504).Buffer, r = o.isEncoding || function(E) {
                switch (E = "" + E, E && E.toLowerCase()) {
                  case "hex":
                  case "utf8":
                  case "utf-8":
                  case "ascii":
                  case "binary":
                  case "base64":
                  case "ucs2":
                  case "ucs-2":
                  case "utf16le":
                  case "utf-16le":
                  case "raw":
                    return !0;
                  default:
                    return !1;
                }
              };
              function n(E) {
                if (!E)
                  return "utf8";
                for (var T; ; )
                  switch (E) {
                    case "utf8":
                    case "utf-8":
                      return "utf8";
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                      return "utf16le";
                    case "latin1":
                    case "binary":
                      return "latin1";
                    case "base64":
                    case "ascii":
                    case "hex":
                      return E;
                    default:
                      if (T)
                        return;
                      E = ("" + E).toLowerCase(), T = !0;
                  }
              }
              function i(E) {
                var T = n(E);
                if (typeof T != "string" && (o.isEncoding === r || !r(E)))
                  throw new Error("Unknown encoding: " + E);
                return T || E;
              }
              d.s = f;
              function f(E) {
                this.encoding = i(E);
                var T;
                switch (this.encoding) {
                  case "utf16le":
                    this.text = p, this.end = e, T = 4;
                    break;
                  case "utf8":
                    this.fillLast = a, T = 4;
                    break;
                  case "base64":
                    this.text = m, this.end = w, T = 3;
                    break;
                  default:
                    this.write = D, this.end = I;
                    return;
                }
                this.lastNeed = 0, this.lastTotal = 0, this.lastChar = o.allocUnsafe(T);
              }
              f.prototype.write = function(E) {
                if (E.length === 0)
                  return "";
                var T, A;
                if (this.lastNeed) {
                  if (T = this.fillLast(E), T === void 0)
                    return "";
                  A = this.lastNeed, this.lastNeed = 0;
                } else
                  A = 0;
                return A < E.length ? T ? T + this.text(E, A) : this.text(E, A) : T || "";
              }, f.prototype.end = y, f.prototype.text = v, f.prototype.fillLast = function(E) {
                if (this.lastNeed <= E.length)
                  return E.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
                E.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, E.length), this.lastNeed -= E.length;
              };
              function l(E) {
                return E <= 127 ? 0 : E >> 5 === 6 ? 2 : E >> 4 === 14 ? 3 : E >> 3 === 30 ? 4 : E >> 6 === 2 ? -1 : -2;
              }
              function u(E, T, A) {
                var F = T.length - 1;
                if (F < A)
                  return 0;
                var b = l(T[F]);
                return b >= 0 ? (b > 0 && (E.lastNeed = b - 1), b) : --F < A || b === -2 ? 0 : (b = l(T[F]), b >= 0 ? (b > 0 && (E.lastNeed = b - 2), b) : --F < A || b === -2 ? 0 : (b = l(T[F]), b >= 0 ? (b > 0 && (b === 2 ? b = 0 : E.lastNeed = b - 3), b) : 0));
              }
              function h(E, T, A) {
                if ((T[0] & 192) !== 128)
                  return E.lastNeed = 0, "ï¿½";
                if (E.lastNeed > 1 && T.length > 1) {
                  if ((T[1] & 192) !== 128)
                    return E.lastNeed = 1, "ï¿½";
                  if (E.lastNeed > 2 && T.length > 2 && (T[2] & 192) !== 128)
                    return E.lastNeed = 2, "ï¿½";
                }
              }
              function a(E) {
                var T = this.lastTotal - this.lastNeed, A = h(this, E);
                if (A !== void 0)
                  return A;
                if (this.lastNeed <= E.length)
                  return E.copy(this.lastChar, T, 0, this.lastNeed), this.lastChar.toString(this.encoding, 0, this.lastTotal);
                E.copy(this.lastChar, T, 0, E.length), this.lastNeed -= E.length;
              }
              function v(E, T) {
                var A = u(this, E, T);
                if (!this.lastNeed)
                  return E.toString("utf8", T);
                this.lastTotal = A;
                var F = E.length - (A - this.lastNeed);
                return E.copy(this.lastChar, 0, F), E.toString("utf8", T, F);
              }
              function y(E) {
                var T = E && E.length ? this.write(E) : "";
                return this.lastNeed ? T + "ï¿½" : T;
              }
              function p(E, T) {
                if ((E.length - T) % 2 === 0) {
                  var A = E.toString("utf16le", T);
                  if (A) {
                    var F = A.charCodeAt(A.length - 1);
                    if (F >= 55296 && F <= 56319)
                      return this.lastNeed = 2, this.lastTotal = 4, this.lastChar[0] = E[E.length - 2], this.lastChar[1] = E[E.length - 1], A.slice(0, -1);
                  }
                  return A;
                }
                return this.lastNeed = 1, this.lastTotal = 2, this.lastChar[0] = E[E.length - 1], E.toString("utf16le", T, E.length - 1);
              }
              function e(E) {
                var T = E && E.length ? this.write(E) : "";
                if (this.lastNeed) {
                  var A = this.lastTotal - this.lastNeed;
                  return T + this.lastChar.toString("utf16le", 0, A);
                }
                return T;
              }
              function m(E, T) {
                var A = (E.length - T) % 3;
                return A === 0 ? E.toString("base64", T) : (this.lastNeed = 3 - A, this.lastTotal = 3, A === 1 ? this.lastChar[0] = E[E.length - 1] : (this.lastChar[0] = E[E.length - 2], this.lastChar[1] = E[E.length - 1]), E.toString("base64", T, E.length - A));
              }
              function w(E) {
                var T = E && E.length ? this.write(E) : "";
                return this.lastNeed ? T + this.lastChar.toString("base64", 0, 3 - this.lastNeed) : T;
              }
              function D(E) {
                return E.toString(this.encoding);
              }
              function I(E) {
                return E && E.length ? this.write(E) : "";
              }
            }
          ),
          /***/
          84346: (
            /***/
            function(c) {
              var d = 0, t = -3;
              function o() {
                this.table = new Uint16Array(16), this.trans = new Uint16Array(288);
              }
              function r(R, N) {
                this.source = R, this.sourceIndex = 0, this.tag = 0, this.bitcount = 0, this.dest = N, this.destLen = 0, this.ltree = new o(), this.dtree = new o();
              }
              var n = new o(), i = new o(), f = new Uint8Array(30), l = new Uint16Array(30), u = new Uint8Array(30), h = new Uint16Array(30), a = new Uint8Array([
                16,
                17,
                18,
                0,
                8,
                7,
                9,
                6,
                10,
                5,
                11,
                4,
                12,
                3,
                13,
                2,
                14,
                1,
                15
              ]), v = new o(), y = new Uint8Array(288 + 32);
              function p(R, N, U, W) {
                var J, ht;
                for (J = 0; J < U; ++J)
                  R[J] = 0;
                for (J = 0; J < 30 - U; ++J)
                  R[J + U] = J / U | 0;
                for (ht = W, J = 0; J < 30; ++J)
                  N[J] = ht, ht += 1 << R[J];
              }
              function e(R, N) {
                var U;
                for (U = 0; U < 7; ++U)
                  R.table[U] = 0;
                for (R.table[7] = 24, R.table[8] = 152, R.table[9] = 112, U = 0; U < 24; ++U)
                  R.trans[U] = 256 + U;
                for (U = 0; U < 144; ++U)
                  R.trans[24 + U] = U;
                for (U = 0; U < 8; ++U)
                  R.trans[168 + U] = 280 + U;
                for (U = 0; U < 112; ++U)
                  R.trans[176 + U] = 144 + U;
                for (U = 0; U < 5; ++U)
                  N.table[U] = 0;
                for (N.table[5] = 32, U = 0; U < 32; ++U)
                  N.trans[U] = U;
              }
              var m = new Uint16Array(16);
              function w(R, N, U, W) {
                var J, ht;
                for (J = 0; J < 16; ++J)
                  R.table[J] = 0;
                for (J = 0; J < W; ++J)
                  R.table[N[U + J]]++;
                for (R.table[0] = 0, ht = 0, J = 0; J < 16; ++J)
                  m[J] = ht, ht += R.table[J];
                for (J = 0; J < W; ++J)
                  N[U + J] && (R.trans[m[N[U + J]]++] = J);
              }
              function D(R) {
                R.bitcount-- || (R.tag = R.source[R.sourceIndex++], R.bitcount = 7);
                var N = R.tag & 1;
                return R.tag >>>= 1, N;
              }
              function I(R, N, U) {
                if (!N)
                  return U;
                for (; R.bitcount < 24; )
                  R.tag |= R.source[R.sourceIndex++] << R.bitcount, R.bitcount += 8;
                var W = R.tag & 65535 >>> 16 - N;
                return R.tag >>>= N, R.bitcount -= N, W + U;
              }
              function E(R, N) {
                for (; R.bitcount < 24; )
                  R.tag |= R.source[R.sourceIndex++] << R.bitcount, R.bitcount += 8;
                var U = 0, W = 0, J = 0, ht = R.tag;
                do
                  W = 2 * W + (ht & 1), ht >>>= 1, ++J, U += N.table[J], W -= N.table[J];
                while (W >= 0);
                return R.tag = ht, R.bitcount -= J, N.trans[U + W];
              }
              function T(R, N, U) {
                var W, J, ht, K, nt, xt;
                for (W = I(R, 5, 257), J = I(R, 5, 1), ht = I(R, 4, 4), K = 0; K < 19; ++K)
                  y[K] = 0;
                for (K = 0; K < ht; ++K) {
                  var bt = I(R, 3, 0);
                  y[a[K]] = bt;
                }
                for (w(v, y, 0, 19), nt = 0; nt < W + J; ) {
                  var Tt = E(R, v);
                  switch (Tt) {
                    case 16:
                      var It = y[nt - 1];
                      for (xt = I(R, 2, 3); xt; --xt)
                        y[nt++] = It;
                      break;
                    case 17:
                      for (xt = I(R, 3, 3); xt; --xt)
                        y[nt++] = 0;
                      break;
                    case 18:
                      for (xt = I(R, 7, 11); xt; --xt)
                        y[nt++] = 0;
                      break;
                    default:
                      y[nt++] = Tt;
                      break;
                  }
                }
                w(N, y, 0, W), w(U, y, W, J);
              }
              function A(R, N, U) {
                for (; ; ) {
                  var W = E(R, N);
                  if (W === 256)
                    return d;
                  if (W < 256)
                    R.dest[R.destLen++] = W;
                  else {
                    var J, ht, K, nt;
                    for (W -= 257, J = I(R, f[W], l[W]), ht = E(R, U), K = R.destLen - I(R, u[ht], h[ht]), nt = K; nt < K + J; ++nt)
                      R.dest[R.destLen++] = R.dest[nt];
                  }
                }
              }
              function F(R) {
                for (var N, U, W; R.bitcount > 8; )
                  R.sourceIndex--, R.bitcount -= 8;
                if (N = R.source[R.sourceIndex + 1], N = 256 * N + R.source[R.sourceIndex], U = R.source[R.sourceIndex + 3], U = 256 * U + R.source[R.sourceIndex + 2], N !== (~U & 65535))
                  return t;
                for (R.sourceIndex += 4, W = N; W; --W)
                  R.dest[R.destLen++] = R.source[R.sourceIndex++];
                return R.bitcount = 0, d;
              }
              function b(R, N) {
                var U = new r(R, N), W, J, ht;
                do {
                  switch (W = D(U), J = I(U, 2, 0), J) {
                    case 0:
                      ht = F(U);
                      break;
                    case 1:
                      ht = A(U, n, i);
                      break;
                    case 2:
                      T(U, U.ltree, U.dtree), ht = A(U, U.ltree, U.dtree);
                      break;
                    default:
                      ht = t;
                  }
                  if (ht !== d)
                    throw new Error("Data error");
                } while (!W);
                return U.destLen < U.dest.length ? typeof U.dest.slice == "function" ? U.dest.slice(0, U.destLen) : U.dest.subarray(0, U.destLen) : U.dest;
              }
              e(n, i), p(f, l, 4, 3), p(u, h, 2, 1), f[28] = 0, l[28] = 258, c.exports = b;
            }
          ),
          /***/
          29440: (
            /***/
            function(c, d, t) {
              c.exports = o;
              function o(n, i) {
                if (r("noDeprecation"))
                  return n;
                var f = !1;
                function l() {
                  if (!f) {
                    if (r("throwDeprecation"))
                      throw new Error(i);
                    r("traceDeprecation") ? console.trace(i) : console.warn(i), f = !0;
                  }
                  return n.apply(this, arguments);
                }
                return l;
              }
              function r(n) {
                try {
                  if (!t.g.localStorage)
                    return !1;
                } catch {
                  return !1;
                }
                var i = t.g.localStorage[n];
                return i == null ? !1 : String(i).toLowerCase() === "true";
              }
            }
          ),
          /***/
          79397: (
            /***/
            function(c) {
              c.exports = function(t) {
                return t && typeof t == "object" && typeof t.copy == "function" && typeof t.fill == "function" && typeof t.readUInt8 == "function";
              };
            }
          ),
          /***/
          64489: (
            /***/
            function(c, d, t) {
              var o = t(77092), r = t(97427), n = t(54010), i = t(82527);
              function f(Dt) {
                return Dt.call.bind(Dt);
              }
              var l = typeof BigInt < "u", u = typeof Symbol < "u", h = f(Object.prototype.toString), a = f(Number.prototype.valueOf), v = f(String.prototype.valueOf), y = f(Boolean.prototype.valueOf);
              if (l)
                var p = f(BigInt.prototype.valueOf);
              if (u)
                var e = f(Symbol.prototype.valueOf);
              function m(Dt, ae) {
                if (typeof Dt != "object")
                  return !1;
                try {
                  return ae(Dt), !0;
                } catch {
                  return !1;
                }
              }
              d.isArgumentsObject = o, d.isGeneratorFunction = r, d.isTypedArray = i;
              function w(Dt) {
                return typeof Promise < "u" && Dt instanceof Promise || Dt !== null && typeof Dt == "object" && typeof Dt.then == "function" && typeof Dt.catch == "function";
              }
              d.isPromise = w;
              function D(Dt) {
                return typeof ArrayBuffer < "u" && ArrayBuffer.isView ? ArrayBuffer.isView(Dt) : i(Dt) || ut(Dt);
              }
              d.isArrayBufferView = D;
              function I(Dt) {
                return n(Dt) === "Uint8Array";
              }
              d.isUint8Array = I;
              function E(Dt) {
                return n(Dt) === "Uint8ClampedArray";
              }
              d.isUint8ClampedArray = E;
              function T(Dt) {
                return n(Dt) === "Uint16Array";
              }
              d.isUint16Array = T;
              function A(Dt) {
                return n(Dt) === "Uint32Array";
              }
              d.isUint32Array = A;
              function F(Dt) {
                return n(Dt) === "Int8Array";
              }
              d.isInt8Array = F;
              function b(Dt) {
                return n(Dt) === "Int16Array";
              }
              d.isInt16Array = b;
              function R(Dt) {
                return n(Dt) === "Int32Array";
              }
              d.isInt32Array = R;
              function N(Dt) {
                return n(Dt) === "Float32Array";
              }
              d.isFloat32Array = N;
              function U(Dt) {
                return n(Dt) === "Float64Array";
              }
              d.isFloat64Array = U;
              function W(Dt) {
                return n(Dt) === "BigInt64Array";
              }
              d.isBigInt64Array = W;
              function J(Dt) {
                return n(Dt) === "BigUint64Array";
              }
              d.isBigUint64Array = J;
              function ht(Dt) {
                return h(Dt) === "[object Map]";
              }
              ht.working = typeof Map < "u" && ht(/* @__PURE__ */ new Map());
              function K(Dt) {
                return typeof Map > "u" ? !1 : ht.working ? ht(Dt) : Dt instanceof Map;
              }
              d.isMap = K;
              function nt(Dt) {
                return h(Dt) === "[object Set]";
              }
              nt.working = typeof Set < "u" && nt(/* @__PURE__ */ new Set());
              function xt(Dt) {
                return typeof Set > "u" ? !1 : nt.working ? nt(Dt) : Dt instanceof Set;
              }
              d.isSet = xt;
              function bt(Dt) {
                return h(Dt) === "[object WeakMap]";
              }
              bt.working = typeof WeakMap < "u" && bt(/* @__PURE__ */ new WeakMap());
              function Tt(Dt) {
                return typeof WeakMap > "u" ? !1 : bt.working ? bt(Dt) : Dt instanceof WeakMap;
              }
              d.isWeakMap = Tt;
              function It(Dt) {
                return h(Dt) === "[object WeakSet]";
              }
              It.working = typeof WeakSet < "u" && It(/* @__PURE__ */ new WeakSet());
              function Lt(Dt) {
                return It(Dt);
              }
              d.isWeakSet = Lt;
              function Ut(Dt) {
                return h(Dt) === "[object ArrayBuffer]";
              }
              Ut.working = typeof ArrayBuffer < "u" && Ut(new ArrayBuffer());
              function $(Dt) {
                return typeof ArrayBuffer > "u" ? !1 : Ut.working ? Ut(Dt) : Dt instanceof ArrayBuffer;
              }
              d.isArrayBuffer = $;
              function gt(Dt) {
                return h(Dt) === "[object DataView]";
              }
              gt.working = typeof ArrayBuffer < "u" && typeof DataView < "u" && gt(new DataView(new ArrayBuffer(1), 0, 1));
              function ut(Dt) {
                return typeof DataView > "u" ? !1 : gt.working ? gt(Dt) : Dt instanceof DataView;
              }
              d.isDataView = ut;
              var st = typeof SharedArrayBuffer < "u" ? SharedArrayBuffer : void 0;
              function yt(Dt) {
                return h(Dt) === "[object SharedArrayBuffer]";
              }
              function G(Dt) {
                return typeof st > "u" ? !1 : (typeof yt.working > "u" && (yt.working = yt(new st())), yt.working ? yt(Dt) : Dt instanceof st);
              }
              d.isSharedArrayBuffer = G;
              function Et(Dt) {
                return h(Dt) === "[object AsyncFunction]";
              }
              d.isAsyncFunction = Et;
              function k(Dt) {
                return h(Dt) === "[object Map Iterator]";
              }
              d.isMapIterator = k;
              function S(Dt) {
                return h(Dt) === "[object Set Iterator]";
              }
              d.isSetIterator = S;
              function L(Dt) {
                return h(Dt) === "[object Generator]";
              }
              d.isGeneratorObject = L;
              function V(Dt) {
                return h(Dt) === "[object WebAssembly.Module]";
              }
              d.isWebAssemblyCompiledModule = V;
              function it(Dt) {
                return m(Dt, a);
              }
              d.isNumberObject = it;
              function tt(Dt) {
                return m(Dt, v);
              }
              d.isStringObject = tt;
              function _(Dt) {
                return m(Dt, y);
              }
              d.isBooleanObject = _;
              function At(Dt) {
                return l && m(Dt, p);
              }
              d.isBigIntObject = At;
              function Rt(Dt) {
                return u && m(Dt, e);
              }
              d.isSymbolObject = Rt;
              function Yt(Dt) {
                return it(Dt) || tt(Dt) || _(Dt) || At(Dt) || Rt(Dt);
              }
              d.isBoxedPrimitive = Yt;
              function Gt(Dt) {
                return typeof Uint8Array < "u" && ($(Dt) || G(Dt));
              }
              d.isAnyArrayBuffer = Gt, ["isProxy", "isExternal", "isModuleNamespaceObject"].forEach(function(Dt) {
                Object.defineProperty(d, Dt, {
                  enumerable: !1,
                  value: function() {
                    throw new Error(Dt + " is not supported in userland");
                  }
                });
              });
            }
          ),
          /***/
          85663: (
            /***/
            function(c, d, t) {
              var o = t(82530), r = Object.getOwnPropertyDescriptors || function(st) {
                for (var yt = Object.keys(st), G = {}, Et = 0; Et < yt.length; Et++)
                  G[yt[Et]] = Object.getOwnPropertyDescriptor(st, yt[Et]);
                return G;
              }, n = /%[sdj%]/g;
              d.format = function(ut) {
                if (!b(ut)) {
                  for (var st = [], yt = 0; yt < arguments.length; yt++)
                    st.push(u(arguments[yt]));
                  return st.join(" ");
                }
                for (var yt = 1, G = arguments, Et = G.length, k = String(ut).replace(n, function(L) {
                  if (L === "%%")
                    return "%";
                  if (yt >= Et)
                    return L;
                  switch (L) {
                    case "%s":
                      return String(G[yt++]);
                    case "%d":
                      return Number(G[yt++]);
                    case "%j":
                      try {
                        return JSON.stringify(G[yt++]);
                      } catch {
                        return "[Circular]";
                      }
                    default:
                      return L;
                  }
                }), S = G[yt]; yt < Et; S = G[++yt])
                  T(S) || !W(S) ? k += " " + S : k += " " + u(S);
                return k;
              }, d.deprecate = function(ut, st) {
                if (typeof o < "u" && o.noDeprecation === !0)
                  return ut;
                if (typeof o > "u")
                  return function() {
                    return d.deprecate(ut, st).apply(this, arguments);
                  };
                var yt = !1;
                function G() {
                  if (!yt) {
                    if (o.throwDeprecation)
                      throw new Error(st);
                    o.traceDeprecation ? console.trace(st) : console.error(st), yt = !0;
                  }
                  return ut.apply(this, arguments);
                }
                return G;
              };
              var i = {}, f = /^$/;
              if (o.env.NODE_DEBUG) {
                var l = o.env.NODE_DEBUG;
                l = l.replace(/[|\\{}()[\]^$+?.]/g, "\\$&").replace(/\*/g, ".*").replace(/,/g, "$|^").toUpperCase(), f = new RegExp("^" + l + "$", "i");
              }
              d.debuglog = function(ut) {
                if (ut = ut.toUpperCase(), !i[ut])
                  if (f.test(ut)) {
                    var st = o.pid;
                    i[ut] = function() {
                      var yt = d.format.apply(d, arguments);
                      console.error("%s %d: %s", ut, st, yt);
                    };
                  } else
                    i[ut] = function() {
                    };
                return i[ut];
              };
              function u(ut, st) {
                var yt = {
                  seen: [],
                  stylize: a
                };
                return arguments.length >= 3 && (yt.depth = arguments[2]), arguments.length >= 4 && (yt.colors = arguments[3]), E(st) ? yt.showHidden = st : st && d._extend(yt, st), N(yt.showHidden) && (yt.showHidden = !1), N(yt.depth) && (yt.depth = 2), N(yt.colors) && (yt.colors = !1), N(yt.customInspect) && (yt.customInspect = !0), yt.colors && (yt.stylize = h), y(yt, ut, yt.depth);
              }
              d.inspect = u, u.colors = {
                bold: [1, 22],
                italic: [3, 23],
                underline: [4, 24],
                inverse: [7, 27],
                white: [37, 39],
                grey: [90, 39],
                black: [30, 39],
                blue: [34, 39],
                cyan: [36, 39],
                green: [32, 39],
                magenta: [35, 39],
                red: [31, 39],
                yellow: [33, 39]
              }, u.styles = {
                special: "cyan",
                number: "yellow",
                boolean: "yellow",
                undefined: "grey",
                null: "bold",
                string: "green",
                date: "magenta",
                // "name": intentionally not styling
                regexp: "red"
              };
              function h(ut, st) {
                var yt = u.styles[st];
                return yt ? "\x1B[" + u.colors[yt][0] + "m" + ut + "\x1B[" + u.colors[yt][1] + "m" : ut;
              }
              function a(ut, st) {
                return ut;
              }
              function v(ut) {
                var st = {};
                return ut.forEach(function(yt, G) {
                  st[yt] = !0;
                }), st;
              }
              function y(ut, st, yt) {
                if (ut.customInspect && st && K(st.inspect) && // Filter out the util module, it's inspect function is special
                st.inspect !== d.inspect && // Also filter out any prototype objects using the circular check.
                !(st.constructor && st.constructor.prototype === st)) {
                  var G = st.inspect(yt, ut);
                  return b(G) || (G = y(ut, G, yt)), G;
                }
                var Et = p(ut, st);
                if (Et)
                  return Et;
                var k = Object.keys(st), S = v(k);
                if (ut.showHidden && (k = Object.getOwnPropertyNames(st)), ht(st) && (k.indexOf("message") >= 0 || k.indexOf("description") >= 0))
                  return e(st);
                if (k.length === 0) {
                  if (K(st)) {
                    var L = st.name ? ": " + st.name : "";
                    return ut.stylize("[Function" + L + "]", "special");
                  }
                  if (U(st))
                    return ut.stylize(RegExp.prototype.toString.call(st), "regexp");
                  if (J(st))
                    return ut.stylize(Date.prototype.toString.call(st), "date");
                  if (ht(st))
                    return e(st);
                }
                var V = "", it = !1, tt = ["{", "}"];
                if (I(st) && (it = !0, tt = ["[", "]"]), K(st)) {
                  var _ = st.name ? ": " + st.name : "";
                  V = " [Function" + _ + "]";
                }
                if (U(st) && (V = " " + RegExp.prototype.toString.call(st)), J(st) && (V = " " + Date.prototype.toUTCString.call(st)), ht(st) && (V = " " + e(st)), k.length === 0 && (!it || st.length == 0))
                  return tt[0] + V + tt[1];
                if (yt < 0)
                  return U(st) ? ut.stylize(RegExp.prototype.toString.call(st), "regexp") : ut.stylize("[Object]", "special");
                ut.seen.push(st);
                var At;
                return it ? At = m(ut, st, yt, S, k) : At = k.map(function(Rt) {
                  return w(ut, st, yt, S, Rt, it);
                }), ut.seen.pop(), D(At, V, tt);
              }
              function p(ut, st) {
                if (N(st))
                  return ut.stylize("undefined", "undefined");
                if (b(st)) {
                  var yt = "'" + JSON.stringify(st).replace(/^"|"$/g, "").replace(/'/g, "\\'").replace(/\\"/g, '"') + "'";
                  return ut.stylize(yt, "string");
                }
                if (F(st))
                  return ut.stylize("" + st, "number");
                if (E(st))
                  return ut.stylize("" + st, "boolean");
                if (T(st))
                  return ut.stylize("null", "null");
              }
              function e(ut) {
                return "[" + Error.prototype.toString.call(ut) + "]";
              }
              function m(ut, st, yt, G, Et) {
                for (var k = [], S = 0, L = st.length; S < L; ++S)
                  Lt(st, String(S)) ? k.push(w(
                    ut,
                    st,
                    yt,
                    G,
                    String(S),
                    !0
                  )) : k.push("");
                return Et.forEach(function(V) {
                  V.match(/^\d+$/) || k.push(w(
                    ut,
                    st,
                    yt,
                    G,
                    V,
                    !0
                  ));
                }), k;
              }
              function w(ut, st, yt, G, Et, k) {
                var S, L, V;
                if (V = Object.getOwnPropertyDescriptor(st, Et) || { value: st[Et] }, V.get ? V.set ? L = ut.stylize("[Getter/Setter]", "special") : L = ut.stylize("[Getter]", "special") : V.set && (L = ut.stylize("[Setter]", "special")), Lt(G, Et) || (S = "[" + Et + "]"), L || (ut.seen.indexOf(V.value) < 0 ? (T(yt) ? L = y(ut, V.value, null) : L = y(ut, V.value, yt - 1), L.indexOf(`
`) > -1 && (k ? L = L.split(`
`).map(function(it) {
                  return "  " + it;
                }).join(`
`).slice(2) : L = `
` + L.split(`
`).map(function(it) {
                  return "   " + it;
                }).join(`
`))) : L = ut.stylize("[Circular]", "special")), N(S)) {
                  if (k && Et.match(/^\d+$/))
                    return L;
                  S = JSON.stringify("" + Et), S.match(/^"([a-zA-Z_][a-zA-Z_0-9]*)"$/) ? (S = S.slice(1, -1), S = ut.stylize(S, "name")) : (S = S.replace(/'/g, "\\'").replace(/\\"/g, '"').replace(/(^"|"$)/g, "'"), S = ut.stylize(S, "string"));
                }
                return S + ": " + L;
              }
              function D(ut, st, yt) {
                var G = ut.reduce(function(Et, k) {
                  return k.indexOf(`
`) >= 0, Et + k.replace(/\u001b\[\d\d?m/g, "").length + 1;
                }, 0);
                return G > 60 ? yt[0] + (st === "" ? "" : st + `
 `) + " " + ut.join(`,
  `) + " " + yt[1] : yt[0] + st + " " + ut.join(", ") + " " + yt[1];
              }
              d.types = t(64489);
              function I(ut) {
                return Array.isArray(ut);
              }
              d.isArray = I;
              function E(ut) {
                return typeof ut == "boolean";
              }
              d.isBoolean = E;
              function T(ut) {
                return ut === null;
              }
              d.isNull = T;
              function A(ut) {
                return ut == null;
              }
              d.isNullOrUndefined = A;
              function F(ut) {
                return typeof ut == "number";
              }
              d.isNumber = F;
              function b(ut) {
                return typeof ut == "string";
              }
              d.isString = b;
              function R(ut) {
                return typeof ut == "symbol";
              }
              d.isSymbol = R;
              function N(ut) {
                return ut === void 0;
              }
              d.isUndefined = N;
              function U(ut) {
                return W(ut) && xt(ut) === "[object RegExp]";
              }
              d.isRegExp = U, d.types.isRegExp = U;
              function W(ut) {
                return typeof ut == "object" && ut !== null;
              }
              d.isObject = W;
              function J(ut) {
                return W(ut) && xt(ut) === "[object Date]";
              }
              d.isDate = J, d.types.isDate = J;
              function ht(ut) {
                return W(ut) && (xt(ut) === "[object Error]" || ut instanceof Error);
              }
              d.isError = ht, d.types.isNativeError = ht;
              function K(ut) {
                return typeof ut == "function";
              }
              d.isFunction = K;
              function nt(ut) {
                return ut === null || typeof ut == "boolean" || typeof ut == "number" || typeof ut == "string" || typeof ut == "symbol" || // ES6 symbol
                typeof ut > "u";
              }
              d.isPrimitive = nt, d.isBuffer = t(79397);
              function xt(ut) {
                return Object.prototype.toString.call(ut);
              }
              function bt(ut) {
                return ut < 10 ? "0" + ut.toString(10) : ut.toString(10);
              }
              var Tt = [
                "Jan",
                "Feb",
                "Mar",
                "Apr",
                "May",
                "Jun",
                "Jul",
                "Aug",
                "Sep",
                "Oct",
                "Nov",
                "Dec"
              ];
              function It() {
                var ut = /* @__PURE__ */ new Date(), st = [
                  bt(ut.getHours()),
                  bt(ut.getMinutes()),
                  bt(ut.getSeconds())
                ].join(":");
                return [ut.getDate(), Tt[ut.getMonth()], st].join(" ");
              }
              d.log = function() {
                console.log("%s - %s", It(), d.format.apply(d, arguments));
              }, d.inherits = t(48575), d._extend = function(ut, st) {
                if (!st || !W(st))
                  return ut;
                for (var yt = Object.keys(st), G = yt.length; G--; )
                  ut[yt[G]] = st[yt[G]];
                return ut;
              };
              function Lt(ut, st) {
                return Object.prototype.hasOwnProperty.call(ut, st);
              }
              var Ut = typeof Symbol < "u" ? Symbol("util.promisify.custom") : void 0;
              d.promisify = function(st) {
                if (typeof st != "function")
                  throw new TypeError('The "original" argument must be of type Function');
                if (Ut && st[Ut]) {
                  var yt = st[Ut];
                  if (typeof yt != "function")
                    throw new TypeError('The "util.promisify.custom" argument must be of type Function');
                  return Object.defineProperty(yt, Ut, {
                    value: yt,
                    enumerable: !1,
                    writable: !1,
                    configurable: !0
                  }), yt;
                }
                function yt() {
                  for (var G, Et, k = new Promise(function(V, it) {
                    G = V, Et = it;
                  }), S = [], L = 0; L < arguments.length; L++)
                    S.push(arguments[L]);
                  S.push(function(V, it) {
                    V ? Et(V) : G(it);
                  });
                  try {
                    st.apply(this, S);
                  } catch (V) {
                    Et(V);
                  }
                  return k;
                }
                return Object.setPrototypeOf(yt, Object.getPrototypeOf(st)), Ut && Object.defineProperty(yt, Ut, {
                  value: yt,
                  enumerable: !1,
                  writable: !1,
                  configurable: !0
                }), Object.defineProperties(
                  yt,
                  r(st)
                );
              }, d.promisify.custom = Ut;
              function $(ut, st) {
                if (!ut) {
                  var yt = new Error("Promise was rejected with a falsy value");
                  yt.reason = ut, ut = yt;
                }
                return st(ut);
              }
              function gt(ut) {
                if (typeof ut != "function")
                  throw new TypeError('The "original" argument must be of type Function');
                function st() {
                  for (var yt = [], G = 0; G < arguments.length; G++)
                    yt.push(arguments[G]);
                  var Et = yt.pop();
                  if (typeof Et != "function")
                    throw new TypeError("The last argument must be of type Function");
                  var k = this, S = function() {
                    return Et.apply(k, arguments);
                  };
                  ut.apply(this, yt).then(
                    function(L) {
                      o.nextTick(S.bind(null, null, L));
                    },
                    function(L) {
                      o.nextTick($.bind(null, L, S));
                    }
                  );
                }
                return Object.setPrototypeOf(st, Object.getPrototypeOf(ut)), Object.defineProperties(
                  st,
                  r(ut)
                ), st;
              }
              d.callbackify = gt;
            }
          ),
          /***/
          54010: (
            /***/
            function(c, d, t) {
              var o = t(94843), r = t(14343), n = t(12550), i = t(97615), f = t(93828), l = i("Object.prototype.toString"), u = t(44111)(), h = typeof globalThis > "u" ? t.g : globalThis, a = r(), v = i("String.prototype.slice"), y = Object.getPrototypeOf, p = i("Array.prototype.indexOf", !0) || function(I, E) {
                for (var T = 0; T < I.length; T += 1)
                  if (I[T] === E)
                    return T;
                return -1;
              }, e = { __proto__: null };
              u && f && y ? o(a, function(D) {
                var I = new h[D]();
                if (Symbol.toStringTag in I) {
                  var E = y(I), T = f(E, Symbol.toStringTag);
                  if (!T) {
                    var A = y(E);
                    T = f(A, Symbol.toStringTag);
                  }
                  e["$" + D] = n(T.get);
                }
              }) : o(a, function(D) {
                var I = new h[D](), E = I.slice || I.set;
                E && (e["$" + D] = n(E));
              });
              var m = function(I) {
                var E = !1;
                return o(e, function(T, A) {
                  if (!E)
                    try {
                      "$" + T(I) === A && (E = v(A, 1));
                    } catch {
                    }
                }), E;
              }, w = function(I) {
                var E = !1;
                return o(e, function(T, A) {
                  if (!E)
                    try {
                      T(I), E = v(A, 1);
                    } catch {
                    }
                }), E;
              };
              c.exports = function(I) {
                if (!I || typeof I != "object")
                  return !1;
                if (!u) {
                  var E = v(l(I), 8, -1);
                  return p(a, E) > -1 ? E : E !== "Object" ? !1 : w(I);
                }
                return f ? m(I) : null;
              };
            }
          ),
          /***/
          26651: (
            /***/
            function(c, d, t) {
              c.exports = t(91117);
            }
          ),
          /***/
          91117: (
            /***/
            function(c, d, t) {
              (function() {
                var o;
                if (c.exports && !t.g.xmldocAssumeBrowser)
                  o = t(53407);
                else if (o = this.sax, !o)
                  throw new Error(
                    "Expected sax to be defined. Make sure you're including sax.js before this file."
                  );
                function r(T, A) {
                  if (!A) {
                    var F = u[u.length - 1];
                    F.parser && (A = F.parser);
                  }
                  this.name = T.name, this.attr = T.attributes, this.val = "", this.children = [], this.firstChild = null, this.lastChild = null, this.line = A ? A.line : null, this.column = A ? A.column : null, this.position = A ? A.position : null, this.startTagPosition = A ? A.startTagPosition : null;
                }
                r.prototype._addChild = function(T) {
                  this.children.push(T), this.firstChild || (this.firstChild = T), this.lastChild = T;
                }, r.prototype._opentag = function(T) {
                  var A = new r(T);
                  this._addChild(A), u.unshift(A);
                }, r.prototype._closetag = function() {
                  u.shift();
                }, r.prototype._text = function(T) {
                  typeof this.children > "u" || (this.val += T, this._addChild(new n(T)));
                }, r.prototype._cdata = function(T) {
                  this.val += T, this._addChild(new i(T));
                }, r.prototype._comment = function(T) {
                  typeof this.children > "u" || this._addChild(new f(T));
                }, r.prototype._error = function(T) {
                  throw T;
                }, r.prototype.eachChild = function(T, A) {
                  for (var F = 0, b = this.children.length; F < b; F++)
                    if (this.children[F].type === "element" && T.call(A, this.children[F], F, this.children) === !1)
                      return;
                }, r.prototype.childNamed = function(T) {
                  for (var A = 0, F = this.children.length; A < F; A++) {
                    var b = this.children[A];
                    if (b.name === T)
                      return b;
                  }
                }, r.prototype.childrenNamed = function(T) {
                  for (var A = [], F = 0, b = this.children.length; F < b; F++)
                    this.children[F].name === T && A.push(this.children[F]);
                  return A;
                }, r.prototype.childWithAttribute = function(T, A) {
                  for (var F = 0, b = this.children.length; F < b; F++) {
                    var R = this.children[F];
                    if (R.type === "element" && (A && R.attr[T] === A || !A && R.attr[T]))
                      return R;
                  }
                }, r.prototype.descendantsNamed = function(T) {
                  for (var A = [], F = 0, b = this.children.length; F < b; F++) {
                    var R = this.children[F];
                    R.type === "element" && (R.name === T && A.push(R), A = A.concat(R.descendantsNamed(T)));
                  }
                  return A;
                }, r.prototype.descendantWithPath = function(T) {
                  for (var A = this, F = T.split("."), b = 0, R = F.length; b < R; b++)
                    if (A && A.type === "element")
                      A = A.childNamed(F[b]);
                    else
                      return;
                  return A;
                }, r.prototype.valueWithPath = function(T) {
                  var A = T.split("@"), F = this.descendantWithPath(A[0]);
                  if (F)
                    return A.length > 1 ? F.attr[A[1]] : F.val;
                }, r.prototype.toString = function(T) {
                  return this.toStringWithIndent("", T);
                }, r.prototype.toStringWithIndent = function(T, A) {
                  var F = T + "<" + this.name, b = A && A.compressed ? "" : `
`;
                  A && A.preserveWhitespace;
                  for (var R in this.attr)
                    Object.prototype.hasOwnProperty.call(this.attr, R) && (F += " " + R + '="' + I(this.attr[R]) + '"');
                  if (this.children.length === 1 && this.children[0].type !== "element")
                    F += ">" + this.children[0].toString(A) + "</" + this.name + ">";
                  else if (this.children.length) {
                    F += ">" + b;
                    for (var N = T + (A && A.compressed ? "" : "  "), U = 0, W = this.children.length; U < W; U++)
                      F += this.children[U].toStringWithIndent(N, A) + b;
                    F += T + "</" + this.name + ">";
                  } else if (A && A.html) {
                    var J = [
                      "area",
                      "base",
                      "br",
                      "col",
                      "embed",
                      "frame",
                      "hr",
                      "img",
                      "input",
                      "keygen",
                      "link",
                      "menuitem",
                      "meta",
                      "param",
                      "source",
                      "track",
                      "wbr"
                    ];
                    J.indexOf(this.name) !== -1 ? F += "/>" : F += "></" + this.name + ">";
                  } else
                    F += "/>";
                  return F;
                };
                function n(T) {
                  this.text = T;
                }
                n.prototype.toString = function(T) {
                  return E(I(this.text), T);
                }, n.prototype.toStringWithIndent = function(T, A) {
                  return T + this.toString(A);
                };
                function i(T) {
                  this.cdata = T;
                }
                i.prototype.toString = function(T) {
                  return "<![CDATA[" + E(this.cdata, T) + "]]>";
                }, i.prototype.toStringWithIndent = function(T, A) {
                  return T + this.toString(A);
                };
                function f(T) {
                  this.comment = T;
                }
                f.prototype.toString = function(T) {
                  return "<!--" + E(I(this.comment), T) + "-->";
                }, f.prototype.toStringWithIndent = function(T, A) {
                  return T + this.toString(A);
                }, r.prototype.type = "element", n.prototype.type = "text", i.prototype.type = "cdata", f.prototype.type = "comment";
                function l(T) {
                  if (T && (T = T.toString().trim()), !T)
                    throw new Error("No XML to parse!");
                  this.doctype = "", this.parser = o.parser(!0), h(this.parser), u = [this];
                  try {
                    this.parser.write(T);
                  } finally {
                    delete this.parser;
                  }
                }
                D(l.prototype, r.prototype), l.prototype._opentag = function(T) {
                  typeof this.children > "u" ? r.call(this, T) : r.prototype._opentag.apply(this, arguments);
                }, l.prototype._doctype = function(T) {
                  this.doctype += T;
                };
                var u = null;
                function h(T) {
                  T.onopentag = a, T.onclosetag = v, T.ontext = y, T.oncdata = p, T.oncomment = e, T.ondoctype = m, T.onerror = w;
                }
                function a() {
                  u[0] && u[0]._opentag.apply(u[0], arguments);
                }
                function v() {
                  u[0] && u[0]._closetag.apply(u[0], arguments);
                }
                function y() {
                  u[0] && u[0]._text.apply(u[0], arguments);
                }
                function p() {
                  u[0] && u[0]._cdata.apply(u[0], arguments);
                }
                function e() {
                  u[0] && u[0]._comment.apply(u[0], arguments);
                }
                function m() {
                  u[0] && u[0]._doctype.apply(u[0], arguments);
                }
                function w() {
                  u[0] && u[0]._error.apply(u[0], arguments);
                }
                function D(T, A) {
                  for (var F in A)
                    A.hasOwnProperty(F) && (T[F] = A[F]);
                }
                function I(T) {
                  return T.toString().replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;").replace(/'/g, "&apos;").replace(/"/g, "&quot;");
                }
                function E(T, A) {
                  var F = T;
                  return A && A.trimmed && T.length > 25 && (F = F.substring(0, 25).trim() + "â¦"), A && A.preserveWhitespace || (F = F.trim()), F;
                }
                c.exports && !t.g.xmldocAssumeBrowser ? (c.exports.XmlDocument = l, c.exports.XmlElement = r, c.exports.XmlTextNode = n, c.exports.XmlCDataNode = i, c.exports.XmlCommentNode = f) : (this.XmlDocument = l, this.XmlElement = r, this.XmlTextNode = n, this.XmlCDataNode = i, this.XmlCommentNode = f);
              })();
            }
          ),
          /***/
          30570: (
            /***/
            function(c, d, t) {
              typeof window < "u" && !window.Promise && t(46121), t(67367);
              var o = function(n, i) {
                return new Promise(function(f, l) {
                  var u = new XMLHttpRequest();
                  u.open("GET", n, !0);
                  for (var h in i)
                    u.setRequestHeader(h, i[h]);
                  u.responseType = "arraybuffer", u.onreadystatechange = function() {
                    if (u.readyState === 4) {
                      var a = u.status >= 200 && u.status < 300;
                      a || setTimeout(function() {
                        l(new TypeError('Failed to fetch (url: "' + n + '")'));
                      }, 0);
                    }
                  }, u.onload = function() {
                    var a = u.status >= 200 && u.status < 300;
                    a && f(u.response);
                  }, u.onerror = function() {
                    setTimeout(function() {
                      l(new TypeError('Network request failed (url: "' + n + '")'));
                    }, 0);
                  }, u.ontimeout = function() {
                    setTimeout(function() {
                      l(new TypeError('Network request failed (url: "' + n + '")'));
                    }, 0);
                  }, u.send();
                });
              };
              function r(n) {
                this.fs = n, this.resolving = {};
              }
              r.prototype.resolve = function(n, i) {
                if (!this.resolving[n]) {
                  var f = this;
                  this.resolving[n] = new Promise(function(l, u) {
                    n.toLowerCase().indexOf("https://") === 0 || n.toLowerCase().indexOf("http://") === 0 ? f.fs.existsSync(n) ? l() : o(n, i).then(function(h) {
                      f.fs.writeFileSync(n, h), l();
                    }, function(h) {
                      u(h);
                    }) : l();
                  });
                }
                return this.resolving[n];
              }, r.prototype.resolved = function() {
                var n = this;
                return new Promise(function(i, f) {
                  Promise.all(Object.values(n.resolving)).then(function() {
                    i();
                  }, function(l) {
                    f(l);
                  });
                });
              }, c.exports = r;
            }
          ),
          /***/
          82669: (
            /***/
            function(c, d, t) {
              var o = t(43060).Buffer, r = t(16920).isFunction, n = t(16920).isUndefined;
              t(16920).isNull;
              var i = t(70457), f = i.saveAs, l = {
                Roboto: {
                  normal: "Roboto-Regular.ttf",
                  bold: "Roboto-Medium.ttf",
                  italics: "Roboto-Italic.ttf",
                  bolditalics: "Roboto-MediumItalic.ttf"
                }
              };
              function u(a, v, y, p) {
                this.docDefinition = a, this.tableLayouts = v || null, this.fonts = y || l, this.vfs = p;
              }
              function h() {
                try {
                  var a = new Uint8Array(1), v = { foo: function() {
                    return 42;
                  } };
                  return Object.setPrototypeOf(v, Uint8Array.prototype), Object.setPrototypeOf(a, v), a.foo() === 42;
                } catch {
                  return !1;
                }
              }
              u.prototype._createDoc = function(a, v) {
                var y = function(F) {
                  return typeof F == "object" ? { url: F.url, headers: F.headers } : { url: F, headers: {} };
                };
                a = a || {}, this.tableLayouts && (a.tableLayouts = this.tableLayouts);
                var p = t(56498), e = new p(this.fonts);
                if (t(52773).bindFS(this.vfs), !r(v)) {
                  var m = e.createPdfKitDocument(this.docDefinition, a);
                  return m;
                }
                var w = t(30570), D = new w(t(52773));
                for (var I in this.fonts)
                  if (this.fonts.hasOwnProperty(I)) {
                    if (this.fonts[I].normal)
                      if (Array.isArray(this.fonts[I].normal)) {
                        var E = y(this.fonts[I].normal[0]);
                        D.resolve(E.url, E.headers), this.fonts[I].normal[0] = E.url;
                      } else {
                        var E = y(this.fonts[I].normal);
                        D.resolve(E.url, E.headers), this.fonts[I].normal = E.url;
                      }
                    if (this.fonts[I].bold)
                      if (Array.isArray(this.fonts[I].bold)) {
                        var E = y(this.fonts[I].bold[0]);
                        D.resolve(E.url, E.headers), this.fonts[I].bold[0] = E.url;
                      } else {
                        var E = y(this.fonts[I].bold);
                        D.resolve(E.url, E.headers), this.fonts[I].bold = E.url;
                      }
                    if (this.fonts[I].italics)
                      if (Array.isArray(this.fonts[I].italics)) {
                        var E = y(this.fonts[I].italics[0]);
                        D.resolve(E.url, E.headers), this.fonts[I].italics[0] = E.url;
                      } else {
                        var E = y(this.fonts[I].italics);
                        D.resolve(E.url, E.headers), this.fonts[I].italics = E.url;
                      }
                    if (this.fonts[I].bolditalics)
                      if (Array.isArray(this.fonts[I].bolditalics)) {
                        var E = y(this.fonts[I].bolditalics[0]);
                        D.resolve(E.url, E.headers), this.fonts[I].bolditalics[0] = E.url;
                      } else {
                        var E = y(this.fonts[I].bolditalics);
                        D.resolve(E.url, E.headers), this.fonts[I].bolditalics = E.url;
                      }
                  }
                if (this.docDefinition.images) {
                  for (var T in this.docDefinition.images)
                    if (this.docDefinition.images.hasOwnProperty(T)) {
                      var E = y(this.docDefinition.images[T]);
                      D.resolve(E.url, E.headers), this.docDefinition.images[T] = E.url;
                    }
                }
                var A = this;
                D.resolved().then(function() {
                  var F = e.createPdfKitDocument(A.docDefinition, a);
                  v(F);
                }, function(F) {
                  throw F;
                });
              }, u.prototype._flushDoc = function(a, v) {
                var y = [], p;
                a.on("readable", function() {
                  for (var e; (e = a.read(9007199254740991)) !== null; )
                    y.push(e);
                }), a.on("end", function() {
                  p = o.concat(y), v(p, a._pdfMakePages);
                }), a.end();
              }, u.prototype._getPages = function(a, v) {
                if (!v)
                  throw "_getPages is an async method and needs a callback argument";
                var y = this;
                this._createDoc(a, function(p) {
                  y._flushDoc(p, function(e, m) {
                    v(m);
                  });
                });
              }, u.prototype._bufferToBlob = function(a) {
                var v;
                try {
                  v = new Blob([a], { type: "application/pdf" });
                } catch (p) {
                  if (p.name === "InvalidStateError") {
                    var y = new Uint8Array(a);
                    v = new Blob([y.buffer], { type: "application/pdf" });
                  }
                }
                if (!v)
                  throw "Could not generate blob";
                return v;
              }, u.prototype._openWindow = function() {
                var a = window.open("", "_blank");
                if (a === null)
                  throw "Open PDF in new window blocked by browser";
                return a;
              }, u.prototype._openPdf = function(a, v) {
                v || (v = this._openWindow());
                try {
                  this.getBlob(function(y) {
                    var p = window.URL || window.webkitURL, e = p.createObjectURL(y);
                    v.location.href = e;
                  }, a);
                } catch (y) {
                  throw v.close(), y;
                }
              }, u.prototype.open = function(a, v) {
                a = a || {}, a.autoPrint = !1, v = v || null, this._openPdf(a, v);
              }, u.prototype.print = function(a, v) {
                a = a || {}, a.autoPrint = !0, v = v || null, this._openPdf(a, v);
              }, u.prototype.download = function(a, v, y) {
                r(a) && (n(v) || (y = v), v = a, a = null), a = a || "file.pdf", this.getBlob(function(p) {
                  f(p, a), r(v) && v();
                }, y);
              }, u.prototype.getBase64 = function(a, v) {
                if (!a)
                  throw "getBase64 is an async method and needs a callback argument";
                this.getBuffer(function(y) {
                  a(y.toString("base64"));
                }, v);
              }, u.prototype.getDataUrl = function(a, v) {
                if (!a)
                  throw "getDataUrl is an async method and needs a callback argument";
                this.getBuffer(function(y) {
                  a("data:application/pdf;base64," + y.toString("base64"));
                }, v);
              }, u.prototype.getBlob = function(a, v) {
                if (!a)
                  throw "getBlob is an async method and needs a callback argument";
                var y = this;
                this.getBuffer(function(p) {
                  var e = y._bufferToBlob(p);
                  a(e);
                }, v);
              }, u.prototype.getBuffer = function(a, v) {
                if (!a)
                  throw "getBuffer is an async method and needs a callback argument";
                var y = this;
                this._createDoc(v, function(p) {
                  y._flushDoc(p, function(e) {
                    a(e);
                  });
                });
              }, u.prototype.getStream = function(a, v) {
                if (!r(v)) {
                  var y = this._createDoc(a);
                  return y;
                }
                this._createDoc(a, function(p) {
                  v(p);
                });
              }, c.exports = {
                createPdf: function(a, v, y, p) {
                  if (!h())
                    throw "Your browser does not provide the level of support needed";
                  return new u(
                    a,
                    v || t.g.pdfMake.tableLayouts,
                    y || t.g.pdfMake.fonts,
                    p || t.g.pdfMake.vfs
                  );
                }
              };
            }
          ),
          /***/
          52773: (
            /***/
            function(c, d, t) {
              var o = "/", r = t(43060).Buffer;
              function n() {
                this.fileSystem = {}, this.dataSystem = {};
              }
              n.prototype.existsSync = function(f) {
                return f = i(f), typeof this.fileSystem[f] < "u" || typeof this.dataSystem[f] < "u";
              }, n.prototype.readFileSync = function(f, l) {
                f = i(f);
                var u = this.dataSystem[f];
                if (typeof u == "string" && l === "utf8")
                  return u;
                if (u)
                  return new r(u, typeof u == "string" ? "base64" : void 0);
                var h = this.fileSystem[f];
                if (h)
                  return h;
                throw "File '" + f + "' not found in virtual file system";
              }, n.prototype.writeFileSync = function(f, l) {
                this.fileSystem[i(f)] = l;
              }, n.prototype.bindFS = function(f) {
                this.dataSystem = f || {};
              };
              function i(f) {
                return f.indexOf(o) === 0 && (f = f.substring(o.length)), f.indexOf("/") === 0 && (f = f.substring(1)), f;
              }
              c.exports = new n();
            }
          ),
          /***/
          65354: (
            /***/
            function(c, d, t) {
              var o = t(16920).isString;
              function r(l, u) {
                var h = [], a = 0, v = 0, y = [], p = 0, e = 0, m = [], w = u;
                l.forEach(function(F) {
                  n(F) ? (h.push(F), a += F._minWidth, v += F._maxWidth) : i(F) ? (y.push(F), p = Math.max(p, F._minWidth), e = Math.max(e, F._maxWidth)) : m.push(F);
                }), m.forEach(function(F) {
                  o(F.width) && /\d+%/.test(F.width) && (F.width = parseFloat(F.width) * w / 100), F.width < F._minWidth && F.elasticWidth ? F._calcWidth = F._minWidth : F._calcWidth = F.width, u -= F._calcWidth;
                });
                var D = a + p * y.length, I = v + e * y.length;
                if (D >= u)
                  h.forEach(function(F) {
                    F._calcWidth = F._minWidth;
                  }), y.forEach(function(F) {
                    F._calcWidth = p;
                  });
                else {
                  if (I < u)
                    h.forEach(function(F) {
                      F._calcWidth = F._maxWidth, u -= F._calcWidth;
                    });
                  else {
                    var E = u - D, T = I - D;
                    h.forEach(function(F) {
                      var b = F._maxWidth - F._minWidth;
                      F._calcWidth = F._minWidth + b * E / T, u -= F._calcWidth;
                    });
                  }
                  if (y.length > 0) {
                    var A = u / y.length;
                    y.forEach(function(F) {
                      F._calcWidth = A;
                    });
                  }
                }
              }
              function n(l) {
                return l.width === "auto";
              }
              function i(l) {
                return l.width === null || l.width === void 0 || l.width === "*" || l.width === "star";
              }
              function f(l) {
                for (var u = { min: 0, max: 0 }, h = { min: 0, max: 0 }, a = 0, v = 0, y = l.length; v < y; v++) {
                  var p = l[v];
                  i(p) ? (h.min = Math.max(h.min, p._minWidth), h.max = Math.max(h.max, p._maxWidth), a++) : n(p) ? (u.min += p._minWidth, u.max += p._maxWidth) : (u.min += p.width !== void 0 && p.width || p._minWidth, u.max += p.width !== void 0 && p.width || p._maxWidth);
                }
                return a && (u.min += a * h.min, u.max += a * h.max), u;
              }
              c.exports = {
                buildColumnWidths: r,
                measureMinMax: f,
                isAutoColumn: n,
                isStarColumn: i
              };
            }
          ),
          /***/
          77077: (
            /***/
            function(c, d, t) {
              var o = t(28045), r = t(28034), n = t(65354), i = t(16920).isString, f = t(16920).isNumber, l = t(16920).isObject, u = t(16920).isArray, h = t(16920).fontStringify, a = t(16920).getNodeId, v = t(16920).pack, y = t(86976);
              function p(e, m, w, D, I, E, T) {
                this.textTools = new o(e), this.styleStack = new r(m, w), this.imageMeasure = D, this.svgMeasure = I, this.tableLayouts = E, this.images = T, this.autoImageIndex = 1;
              }
              p.prototype.measureDocument = function(e) {
                return this.measureNode(e);
              }, p.prototype.measureNode = function(e) {
                var m = this;
                return this.styleStack.auto(e, function() {
                  if (e._margin = D(), e.columns)
                    return w(m.measureColumns(e));
                  if (e.stack)
                    return w(m.measureVerticalContainer(e));
                  if (e.ul)
                    return w(m.measureUnorderedList(e));
                  if (e.ol)
                    return w(m.measureOrderedList(e));
                  if (e.table)
                    return w(m.measureTable(e));
                  if (e.text !== void 0)
                    return w(m.measureLeaf(e));
                  if (e.toc)
                    return w(m.measureToc(e));
                  if (e.image)
                    return w(m.measureImage(e));
                  if (e.svg)
                    return w(m.measureSVG(e));
                  if (e.canvas)
                    return w(m.measureCanvas(e));
                  if (e.qr)
                    return w(m.measureQr(e));
                  throw "Unrecognized document structure: " + JSON.stringify(e, h);
                });
                function w(I) {
                  var E = I._margin;
                  return E && (I._minWidth += E[0] + E[2], I._maxWidth += E[0] + E[2]), I;
                }
                function D() {
                  function I(R, N) {
                    return R.marginLeft || R.marginTop || R.marginRight || R.marginBottom ? [
                      R.marginLeft || N[0] || 0,
                      R.marginTop || N[1] || 0,
                      R.marginRight || N[2] || 0,
                      R.marginBottom || N[3] || 0
                    ] : N;
                  }
                  function E(R) {
                    for (var N = {}, U = R.length - 1; U >= 0; U--) {
                      var W = R[U], J = m.styleStack.styleDictionary[W];
                      for (var ht in J)
                        J.hasOwnProperty(ht) && (N[ht] = J[ht]);
                    }
                    return N;
                  }
                  function T(R) {
                    return f(R) ? R = [R, R, R, R] : u(R) && R.length === 2 && (R = [R[0], R[1], R[0], R[1]]), R;
                  }
                  var A = [void 0, void 0, void 0, void 0];
                  if (e.style) {
                    var F = u(e.style) ? e.style : [e.style], b = E(F);
                    b && (A = I(b, A)), b.margin && (A = T(b.margin));
                  }
                  return A = I(e, A), e.margin && (A = T(e.margin)), A[0] === void 0 && A[1] === void 0 && A[2] === void 0 && A[3] === void 0 ? null : A;
                }
              }, p.prototype.convertIfBase64Image = function(e) {
                if (/^data:image\/(jpeg|jpg|png);base64,/.test(e.image)) {
                  var m = "$$pdfmake$$" + this.autoImageIndex++;
                  this.images[m] = e.image, e.image = m;
                }
              }, p.prototype.measureImageWithDimensions = function(e, m) {
                if (e.fit) {
                  var w = m.width / m.height > e.fit[0] / e.fit[1] ? e.fit[0] / m.width : e.fit[1] / m.height;
                  e._width = e._minWidth = e._maxWidth = m.width * w, e._height = m.height * w;
                } else
                  e.cover ? (e._width = e._minWidth = e._maxWidth = e.cover.width, e._height = e._minHeight = e._maxHeight = e.cover.height) : (e._width = e._minWidth = e._maxWidth = e.width || m.width, e._height = e.height || m.height * e._width / m.width, f(e.maxWidth) && e.maxWidth < e._width && (e._width = e._minWidth = e._maxWidth = e.maxWidth, e._height = e._width * m.height / m.width), f(e.maxHeight) && e.maxHeight < e._height && (e._height = e.maxHeight, e._width = e._minWidth = e._maxWidth = e._height * m.width / m.height), f(e.minWidth) && e.minWidth > e._width && (e._width = e._minWidth = e._maxWidth = e.minWidth, e._height = e._width * m.height / m.width), f(e.minHeight) && e.minHeight > e._height && (e._height = e.minHeight, e._width = e._minWidth = e._maxWidth = e._height * m.width / m.height));
                e._alignment = this.styleStack.getProperty("alignment");
              }, p.prototype.measureImage = function(e) {
                this.images && this.convertIfBase64Image(e);
                var m = this.imageMeasure.measureImage(e.image);
                return this.measureImageWithDimensions(e, m), e;
              }, p.prototype.measureSVG = function(e) {
                var m = this.svgMeasure.measureSVG(e.svg);
                return this.measureImageWithDimensions(e, m), e.font = this.styleStack.getProperty("font"), e.svg = this.svgMeasure.writeDimensions(e.svg, {
                  width: e._width,
                  height: e._height
                }), e;
              }, p.prototype.measureLeaf = function(e) {
                e._textRef && e._textRef._textNodeRef.text && (e.text = e._textRef._textNodeRef.text);
                var m = this.styleStack.clone();
                m.push(e);
                var w = this.textTools.buildInlines(e.text, m);
                return e._inlines = w.items, e._minWidth = w.minWidth, e._maxWidth = w.maxWidth, e;
              }, p.prototype.measureToc = function(e) {
                if (e.toc.title && (e.toc.title = this.measureNode(e.toc.title)), e.toc._items.length > 0) {
                  for (var m = [], w = e.toc.textStyle || {}, D = e.toc.numberStyle || w, I = e.toc.textMargin || [0, 0, 0, 0], E = 0, T = e.toc._items.length; E < T; E++) {
                    var A = e.toc._items[E], F = A._textNodeRef.tocStyle || w, b = A._textNodeRef.tocMargin || I, R = A._textNodeRef.tocNumberStyle || D, N = a(A._nodeRef);
                    m.push([
                      { text: A._textNodeRef.text, linkToDestination: N, alignment: "left", style: F, margin: b },
                      { text: "00000", linkToDestination: N, alignment: "right", _tocItemRef: A._nodeRef, style: R, margin: [0, b[1], 0, b[3]] }
                    ]);
                  }
                  e.toc._table = {
                    table: {
                      dontBreakRows: !0,
                      widths: ["*", "auto"],
                      body: m
                    },
                    layout: "noBorders"
                  }, e.toc._table = this.measureNode(e.toc._table);
                }
                return e;
              }, p.prototype.measureVerticalContainer = function(e) {
                var m = e.stack;
                e._minWidth = 0, e._maxWidth = 0;
                for (var w = 0, D = m.length; w < D; w++)
                  m[w] = this.measureNode(m[w]), e._minWidth = Math.max(e._minWidth, m[w]._minWidth), e._maxWidth = Math.max(e._maxWidth, m[w]._maxWidth);
                return e;
              }, p.prototype.gapSizeForList = function() {
                return this.textTools.sizeOfString("9. ", this.styleStack);
              }, p.prototype.buildUnorderedMarker = function(e, m, w) {
                function D(F, b) {
                  var R = F.fontSize / 6;
                  return {
                    canvas: [{
                      x: R,
                      y: F.height / F.lineHeight + F.descender - F.fontSize / 3,
                      r1: R,
                      r2: R,
                      type: "ellipse",
                      color: b
                    }]
                  };
                }
                function I(F, b) {
                  var R = F.fontSize / 3;
                  return {
                    canvas: [{
                      x: 0,
                      y: F.height / F.lineHeight + F.descender - F.fontSize / 3 - R / 2,
                      h: R,
                      w: R,
                      type: "rect",
                      color: b
                    }]
                  };
                }
                function E(F, b) {
                  var R = F.fontSize / 6;
                  return {
                    canvas: [{
                      x: R,
                      y: F.height / F.lineHeight + F.descender - F.fontSize / 3,
                      r1: R,
                      r2: R,
                      type: "ellipse",
                      lineColor: b
                    }]
                  };
                }
                var T, A = e.getProperty("markerColor") || e.getProperty("color") || "black";
                switch (w) {
                  case "circle":
                    T = E(m, A);
                    break;
                  case "square":
                    T = I(m, A);
                    break;
                  case "none":
                    T = {};
                    break;
                  case "disc":
                  default:
                    T = D(m, A);
                    break;
                }
                return T._minWidth = T._maxWidth = m.width, T._minHeight = T._maxHeight = m.height, T;
              }, p.prototype.buildOrderedMarker = function(e, m, w, D) {
                function I(R) {
                  function N(U) {
                    return (U >= 26 ? N((U / 26 >> 0) - 1) : "") + "abcdefghijklmnopqrstuvwxyz"[U % 26 >> 0];
                  }
                  return R < 1 ? R.toString() : N(R - 1);
                }
                function E(R) {
                  if (R < 1 || R > 4999)
                    return R.toString();
                  var N = R, U = { M: 1e3, CM: 900, D: 500, CD: 400, C: 100, XC: 90, L: 50, XL: 40, X: 10, IX: 9, V: 5, IV: 4, I: 1 }, W = "", J;
                  for (J in U)
                    for (; N >= U[J]; )
                      W += J, N -= U[J];
                  return W;
                }
                function T(R) {
                  return R.toString();
                }
                var A;
                switch (w) {
                  case "none":
                    A = null;
                    break;
                  case "upper-alpha":
                    A = I(e).toUpperCase();
                    break;
                  case "lower-alpha":
                    A = I(e);
                    break;
                  case "upper-roman":
                    A = E(e);
                    break;
                  case "lower-roman":
                    A = E(e).toLowerCase();
                    break;
                  case "decimal":
                  default:
                    A = T(e);
                    break;
                }
                if (A === null)
                  return {};
                D && (u(D) ? (D[0] && (A = D[0] + A), D[1] && (A += D[1]), A += " ") : A += D + " ");
                var F = { text: A }, b = m.getProperty("markerColor");
                return b && (F.color = b), { _inlines: this.textTools.buildInlines(F, m).items };
              }, p.prototype.measureUnorderedList = function(e) {
                var m = this.styleStack.clone(), w = e.ul;
                e.type = e.type || "disc", e._gapSize = this.gapSizeForList(), e._minWidth = 0, e._maxWidth = 0;
                for (var D = 0, I = w.length; D < I; D++) {
                  var E = w[D] = this.measureNode(w[D]);
                  !E.ol && !E.ul && (E.listMarker = this.buildUnorderedMarker(m, e._gapSize, E.listType || e.type)), e._minWidth = Math.max(e._minWidth, w[D]._minWidth + e._gapSize.width), e._maxWidth = Math.max(e._maxWidth, w[D]._maxWidth + e._gapSize.width);
                }
                return e;
              }, p.prototype.measureOrderedList = function(e) {
                var m = this.styleStack.clone(), w = e.ol;
                e.type = e.type || "decimal", e.separator = e.separator || ".", e.reversed = e.reversed || !1, f(e.start) || (e.start = e.reversed ? w.length : 1), e._gapSize = this.gapSizeForList(), e._minWidth = 0, e._maxWidth = 0;
                for (var D = e.start, I = 0, E = w.length; I < E; I++) {
                  var T = w[I] = this.measureNode(w[I]);
                  if (!T.ol && !T.ul) {
                    var A = f(T.counter) ? T.counter : D;
                    T.listMarker = this.buildOrderedMarker(A, m, T.listType || e.type, e.separator), T.listMarker._inlines && (e._gapSize.width = Math.max(e._gapSize.width, T.listMarker._inlines[0].width));
                  }
                  e._minWidth = Math.max(e._minWidth, w[I]._minWidth), e._maxWidth = Math.max(e._maxWidth, w[I]._maxWidth), e.reversed ? D-- : D++;
                }
                e._minWidth += e._gapSize.width, e._maxWidth += e._gapSize.width;
                for (var I = 0, E = w.length; I < E; I++) {
                  var T = w[I];
                  !T.ol && !T.ul && (T.listMarker._minWidth = T.listMarker._maxWidth = e._gapSize.width);
                }
                return e;
              }, p.prototype.measureColumns = function(e) {
                var m = e.columns;
                e._gap = this.styleStack.getProperty("columnGap") || 0;
                for (var w = 0, D = m.length; w < D; w++)
                  m[w] = this.measureNode(m[w]);
                var I = n.measureMinMax(m), E = m.length > 0 ? m.length - 1 : 0;
                return e._minWidth = I.min + e._gap * E, e._maxWidth = I.max + e._gap * E, e;
              }, p.prototype.measureTable = function(e) {
                nt(e), e._layout = N(this.tableLayouts), e._offsets = U(e._layout);
                var m = [], w, D, I, E;
                for (w = 0, I = e.table.body[0].length; w < I; w++) {
                  var T = e.table.widths[w];
                  for (T._minWidth = 0, T._maxWidth = 0, D = 0, E = e.table.body.length; D < E; D++) {
                    var A = e.table.body[D], F = A[w];
                    if (F === void 0)
                      throw console.error("Malformed table row ", A, "in node ", e), "Malformed table row, a cell is undefined.";
                    F === null && (F = ""), F._span || (F = A[w] = this.styleStack.auto(F, R(this, F)), F.colSpan && F.colSpan > 1 ? (ht(A, w, F.colSpan), m.push({ col: w, span: F.colSpan, minWidth: F._minWidth, maxWidth: F._maxWidth })) : (T._minWidth = Math.max(T._minWidth, F._minWidth), T._maxWidth = Math.max(T._maxWidth, F._maxWidth))), F.rowSpan && F.rowSpan > 1 && K(e.table, D, w, F.rowSpan);
                  }
                }
                W();
                var b = n.measureMinMax(e.table.widths);
                return e._minWidth = b.min + e._offsets.total, e._maxWidth = b.max + e._offsets.total, e;
                function R(xt, bt) {
                  return function() {
                    return l(bt) && (bt.fillColor = xt.styleStack.getProperty("fillColor"), bt.fillOpacity = xt.styleStack.getProperty("fillOpacity")), xt.measureNode(bt);
                  };
                }
                function N(xt) {
                  var bt = e.layout;
                  i(bt) && (bt = xt[bt]);
                  var Tt = {
                    hLineWidth: function(It, Lt) {
                      return 1;
                    },
                    vLineWidth: function(It, Lt) {
                      return 1;
                    },
                    hLineColor: function(It, Lt) {
                      return "black";
                    },
                    vLineColor: function(It, Lt) {
                      return "black";
                    },
                    hLineStyle: function(It, Lt) {
                      return null;
                    },
                    vLineStyle: function(It, Lt) {
                      return null;
                    },
                    paddingLeft: function(It, Lt) {
                      return 4;
                    },
                    paddingRight: function(It, Lt) {
                      return 4;
                    },
                    paddingTop: function(It, Lt) {
                      return 2;
                    },
                    paddingBottom: function(It, Lt) {
                      return 2;
                    },
                    fillColor: function(It, Lt) {
                      return null;
                    },
                    fillOpacity: function(It, Lt) {
                      return 1;
                    },
                    defaultBorder: !0
                  };
                  return v(Tt, bt);
                }
                function U(xt) {
                  for (var bt = [], Tt = 0, It = 0, Lt = 0, Ut = e.table.widths.length; Lt < Ut; Lt++) {
                    var $ = It + xt.vLineWidth(Lt, e) + xt.paddingLeft(Lt, e);
                    bt.push($), Tt += $, It = xt.paddingRight(Lt, e);
                  }
                  return Tt += It + xt.vLineWidth(e.table.widths.length, e), {
                    total: Tt,
                    offsets: bt
                  };
                }
                function W() {
                  for (var xt, bt, Tt = 0, It = m.length; Tt < It; Tt++) {
                    var Lt = m[Tt], Ut = J(Lt.col, Lt.span, e._offsets), $ = Lt.minWidth - Ut.minWidth, gt = Lt.maxWidth - Ut.maxWidth;
                    if ($ > 0)
                      for (xt = $ / Lt.span, bt = 0; bt < Lt.span; bt++)
                        e.table.widths[Lt.col + bt]._minWidth += xt;
                    if (gt > 0)
                      for (xt = gt / Lt.span, bt = 0; bt < Lt.span; bt++)
                        e.table.widths[Lt.col + bt]._maxWidth += xt;
                  }
                }
                function J(xt, bt, Tt) {
                  for (var It = { minWidth: 0, maxWidth: 0 }, Lt = 0; Lt < bt; Lt++)
                    It.minWidth += e.table.widths[xt + Lt]._minWidth + (Lt ? Tt.offsets[xt + Lt] : 0), It.maxWidth += e.table.widths[xt + Lt]._maxWidth + (Lt ? Tt.offsets[xt + Lt] : 0);
                  return It;
                }
                function ht(xt, bt, Tt) {
                  for (var It = 1; It < Tt; It++)
                    xt[bt + It] = {
                      _span: !0,
                      _minWidth: 0,
                      _maxWidth: 0,
                      rowSpan: xt[bt].rowSpan
                    };
                }
                function K(xt, bt, Tt, It) {
                  for (var Lt = 1; Lt < It; Lt++)
                    xt.body[bt + Lt][Tt] = {
                      _span: !0,
                      _minWidth: 0,
                      _maxWidth: 0,
                      fillColor: xt.body[bt][Tt].fillColor,
                      fillOpacity: xt.body[bt][Tt].fillOpacity
                    };
                }
                function nt(xt) {
                  if (xt.table.widths || (xt.table.widths = "auto"), i(xt.table.widths))
                    for (xt.table.widths = [xt.table.widths]; xt.table.widths.length < xt.table.body[0].length; )
                      xt.table.widths.push(xt.table.widths[xt.table.widths.length - 1]);
                  for (var bt = 0, Tt = xt.table.widths.length; bt < Tt; bt++) {
                    var It = xt.table.widths[bt];
                    (f(It) || i(It)) && (xt.table.widths[bt] = { width: It });
                  }
                }
              }, p.prototype.measureCanvas = function(e) {
                for (var m = 0, w = 0, D = 0, I = e.canvas.length; D < I; D++) {
                  var E = e.canvas[D];
                  switch (E.type) {
                    case "ellipse":
                      m = Math.max(m, E.x + E.r1), w = Math.max(w, E.y + E.r2);
                      break;
                    case "rect":
                      m = Math.max(m, E.x + E.w), w = Math.max(w, E.y + E.h);
                      break;
                    case "line":
                      m = Math.max(m, E.x1, E.x2), w = Math.max(w, E.y1, E.y2);
                      break;
                    case "polyline":
                      for (var T = 0, A = E.points.length; T < A; T++)
                        m = Math.max(m, E.points[T].x), w = Math.max(w, E.points[T].y);
                      break;
                  }
                }
                return e._minWidth = e._maxWidth = m, e._minHeight = e._maxHeight = w, e._alignment = this.styleStack.getProperty("alignment"), e;
              }, p.prototype.measureQr = function(e) {
                return e = y.measure(e), e._alignment = this.styleStack.getProperty("alignment"), e;
              }, c.exports = p;
            }
          ),
          /***/
          78702: (
            /***/
            function(c, d, t) {
              var o = t(43060).Buffer, r = t(16920).isString, n = t(16920).isNumber, i = t(16920).isBoolean, f = t(16920).isArray, l = t(16920).isUndefined, u = t(16920).fontStringify;
              function h() {
              }
              h.prototype.preprocessDocument = function(a) {
                return this.parentNode = null, this.tocs = [], this.nodeReferences = [], this.preprocessNode(a);
              }, h.prototype.preprocessNode = function(a) {
                if (f(a) ? a = { stack: a } : r(a) ? a = { text: a } : n(a) || i(a) ? a = { text: a.toString() } : a == null ? a = { text: "" } : Object.keys(a).length === 0 ? a = { text: "" } : "text" in a && (a.text === void 0 || a.text === null) && (a.text = ""), a.columns)
                  return this.preprocessColumns(a);
                if (a.stack)
                  return this.preprocessVerticalContainer(a);
                if (a.ul)
                  return this.preprocessList(a);
                if (a.ol)
                  return this.preprocessList(a);
                if (a.table)
                  return this.preprocessTable(a);
                if (a.text !== void 0)
                  return this.preprocessText(a);
                if (a.toc)
                  return this.preprocessToc(a);
                if (a.image)
                  return this.preprocessImage(a);
                if (a.svg)
                  return this.preprocessSVG(a);
                if (a.canvas)
                  return this.preprocessCanvas(a);
                if (a.qr)
                  return this.preprocessQr(a);
                if (a.pageReference || a.textReference)
                  return this.preprocessText(a);
                throw "Unrecognized document structure: " + JSON.stringify(a, u);
              }, h.prototype.preprocessColumns = function(a) {
                for (var v = a.columns, y = 0, p = v.length; y < p; y++)
                  v[y] = this.preprocessNode(v[y]);
                return a;
              }, h.prototype.preprocessVerticalContainer = function(a) {
                for (var v = a.stack, y = 0, p = v.length; y < p; y++)
                  v[y] = this.preprocessNode(v[y]);
                return a;
              }, h.prototype.preprocessList = function(a) {
                for (var v = a.ul || a.ol, y = 0, p = v.length; y < p; y++)
                  v[y] = this.preprocessNode(v[y]);
                return a;
              }, h.prototype.preprocessTable = function(a) {
                var v, y, p, e;
                for (v = 0, p = a.table.body[0].length; v < p; v++)
                  for (y = 0, e = a.table.body.length; y < e; y++) {
                    var m = a.table.body[y], w = m[v];
                    w !== void 0 && (w === null && (w = ""), w._span || (m[v] = this.preprocessNode(w)));
                  }
                return a;
              }, h.prototype.preprocessText = function(a) {
                if (a.tocItem) {
                  f(a.tocItem) || (a.tocItem = [a.tocItem]);
                  for (var v = 0, y = a.tocItem.length; v < y; v++) {
                    r(a.tocItem[v]) || (a.tocItem[v] = "_default_");
                    var p = a.tocItem[v];
                    this.tocs[p] || (this.tocs[p] = { toc: { _items: [], _pseudo: !0 } }), a.id || (a.id = "toc-" + p + "-" + this.tocs[p].toc._items.length);
                    var e = {
                      _nodeRef: this._getNodeForNodeRef(a),
                      _textNodeRef: a
                    };
                    this.tocs[p].toc._items.push(e);
                  }
                }
                if (a.id)
                  if (this.nodeReferences[a.id]) {
                    if (!this.nodeReferences[a.id]._pseudo)
                      throw "Node id '" + a.id + "' already exists";
                    this.nodeReferences[a.id]._nodeRef = this._getNodeForNodeRef(a), this.nodeReferences[a.id]._textNodeRef = a, this.nodeReferences[a.id]._pseudo = !1;
                  } else
                    this.nodeReferences[a.id] = {
                      _nodeRef: this._getNodeForNodeRef(a),
                      _textNodeRef: a
                    };
                if (a.pageReference && (this.nodeReferences[a.pageReference] || (this.nodeReferences[a.pageReference] = {
                  _nodeRef: {},
                  _textNodeRef: {},
                  _pseudo: !0
                }), a.text = "00000", a.linkToDestination = a.pageReference, a._pageRef = this.nodeReferences[a.pageReference]), a.textReference && (this.nodeReferences[a.textReference] || (this.nodeReferences[a.textReference] = { _nodeRef: {}, _pseudo: !0 }), a.text = "", a.linkToDestination = a.textReference, a._textRef = this.nodeReferences[a.textReference]), a.text && a.text.text)
                  a.text = [this.preprocessNode(a.text)];
                else if (f(a.text)) {
                  var m = !1;
                  this.parentNode === null && (this.parentNode = a, m = !0);
                  for (var v = 0, y = a.text.length; v < y; v++)
                    a.text[v] = this.preprocessNode(a.text[v]);
                  m && (this.parentNode = null);
                }
                return a;
              }, h.prototype.preprocessToc = function(a) {
                if (a.toc.id || (a.toc.id = "_default_"), a.toc.title = a.toc.title ? this.preprocessNode(a.toc.title) : null, a.toc._items = [], this.tocs[a.toc.id]) {
                  if (!this.tocs[a.toc.id].toc._pseudo)
                    throw "TOC '" + a.toc.id + "' already exists";
                  a.toc._items = this.tocs[a.toc.id].toc._items;
                }
                return this.tocs[a.toc.id] = a, a;
              }, h.prototype.preprocessImage = function(a) {
                return !l(a.image.type) && !l(a.image.data) && a.image.type === "Buffer" && f(a.image.data) && (a.image = o.from(a.image.data)), a;
              }, h.prototype.preprocessSVG = function(a) {
                return a;
              }, h.prototype.preprocessCanvas = function(a) {
                return a;
              }, h.prototype.preprocessQr = function(a) {
                return a;
              }, h.prototype._getNodeForNodeRef = function(a) {
                return this.parentNode ? this.parentNode : a;
              }, c.exports = h;
            }
          ),
          /***/
          79833: (
            /***/
            function(c, d, t) {
              var o = t(73602), r = t(16920).isString;
              function n(u, h) {
                this.pages = [], this.pageMargins = h, this.x = h.left, this.availableWidth = u.width - h.left - h.right, this.availableHeight = 0, this.page = -1, this.snapshots = [], this.endingCell = null, this.tracker = new o(), this.backgroundLength = [], this.addPage(u);
              }
              n.prototype.beginColumnGroup = function() {
                this.snapshots.push({
                  x: this.x,
                  y: this.y,
                  availableHeight: this.availableHeight,
                  availableWidth: this.availableWidth,
                  page: this.page,
                  bottomMost: {
                    x: this.x,
                    y: this.y,
                    availableHeight: this.availableHeight,
                    availableWidth: this.availableWidth,
                    page: this.page
                  },
                  endingCell: this.endingCell,
                  lastColumnWidth: this.lastColumnWidth
                }), this.lastColumnWidth = 0;
              }, n.prototype.beginColumn = function(u, h, a) {
                var v = this.snapshots[this.snapshots.length - 1];
                this.calculateBottomMost(v), this.endingCell = a, this.page = v.page, this.x = this.x + this.lastColumnWidth + (h || 0), this.y = v.y, this.availableWidth = u, this.availableHeight = v.availableHeight, this.lastColumnWidth = u;
              }, n.prototype.calculateBottomMost = function(u) {
                this.endingCell ? (this.saveContextInEndingCell(this.endingCell), this.endingCell = null) : u.bottomMost = l(this, u.bottomMost);
              }, n.prototype.markEnding = function(u) {
                this.page = u._columnEndingContext.page, this.x = u._columnEndingContext.x, this.y = u._columnEndingContext.y, this.availableWidth = u._columnEndingContext.availableWidth, this.availableHeight = u._columnEndingContext.availableHeight, this.lastColumnWidth = u._columnEndingContext.lastColumnWidth;
              }, n.prototype.saveContextInEndingCell = function(u) {
                u._columnEndingContext = {
                  page: this.page,
                  x: this.x,
                  y: this.y,
                  availableHeight: this.availableHeight,
                  availableWidth: this.availableWidth,
                  lastColumnWidth: this.lastColumnWidth
                };
              }, n.prototype.completeColumnGroup = function(u) {
                var h = this.snapshots.pop();
                this.calculateBottomMost(h), this.endingCell = null, this.x = h.x;
                var a = h.bottomMost.y;
                u && (h.page === h.bottomMost.page ? h.y + u > a && (a = h.y + u) : a += u), this.y = a, this.page = h.bottomMost.page, this.availableWidth = h.availableWidth, this.availableHeight = h.bottomMost.availableHeight, u && (this.availableHeight -= a - h.bottomMost.y), this.lastColumnWidth = h.lastColumnWidth;
              }, n.prototype.addMargin = function(u, h) {
                this.x += u, this.availableWidth -= u + (h || 0);
              }, n.prototype.moveDown = function(u) {
                return this.y += u, this.availableHeight -= u, this.availableHeight > 0;
              }, n.prototype.initializePage = function() {
                this.y = this.pageMargins.top, this.availableHeight = this.getCurrentPage().pageSize.height - this.pageMargins.top - this.pageMargins.bottom, this.pageSnapshot().availableWidth = this.getCurrentPage().pageSize.width - this.pageMargins.left - this.pageMargins.right;
              }, n.prototype.pageSnapshot = function() {
                return this.snapshots[0] ? this.snapshots[0] : this;
              }, n.prototype.moveTo = function(u, h) {
                u != null && (this.x = u, this.availableWidth = this.getCurrentPage().pageSize.width - this.x - this.pageMargins.right), h != null && (this.y = h, this.availableHeight = this.getCurrentPage().pageSize.height - this.y - this.pageMargins.bottom);
              }, n.prototype.moveToRelative = function(u, h) {
                u != null && (this.x = this.x + u), h != null && (this.y = this.y + h);
              }, n.prototype.beginDetachedBlock = function() {
                this.snapshots.push({
                  x: this.x,
                  y: this.y,
                  availableHeight: this.availableHeight,
                  availableWidth: this.availableWidth,
                  page: this.page,
                  endingCell: this.endingCell,
                  lastColumnWidth: this.lastColumnWidth
                });
              }, n.prototype.endDetachedBlock = function() {
                var u = this.snapshots.pop();
                this.x = u.x, this.y = u.y, this.availableWidth = u.availableWidth, this.availableHeight = u.availableHeight, this.page = u.page, this.endingCell = u.endingCell, this.lastColumnWidth = u.lastColumnWidth;
              };
              function i(u, h) {
                return u === void 0 ? h : r(u) && u.toLowerCase() === "landscape" ? "landscape" : "portrait";
              }
              var f = function(u, h) {
                return h = i(h, u.pageSize.orientation), h !== u.pageSize.orientation ? {
                  orientation: h,
                  width: u.pageSize.height,
                  height: u.pageSize.width
                } : {
                  orientation: u.pageSize.orientation,
                  width: u.pageSize.width,
                  height: u.pageSize.height
                };
              };
              n.prototype.moveToNextPage = function(u) {
                var h = this.page + 1, a = this.page, v = this.y, y = h >= this.pages.length;
                if (y) {
                  var p = this.availableWidth, e = this.getCurrentPage().pageSize.orientation, m = f(this.getCurrentPage(), u);
                  this.addPage(m), e === m.orientation && (this.availableWidth = p);
                } else
                  this.page = h, this.initializePage();
                return {
                  newPageCreated: y,
                  prevPage: a,
                  prevY: v,
                  y: this.y
                };
              }, n.prototype.addPage = function(u) {
                var h = { items: [], pageSize: u };
                return this.pages.push(h), this.backgroundLength.push(0), this.page = this.pages.length - 1, this.initializePage(), this.tracker.emit("pageAdded"), h;
              }, n.prototype.getCurrentPage = function() {
                return this.page < 0 || this.page >= this.pages.length ? null : this.pages[this.page];
              }, n.prototype.getCurrentPosition = function() {
                var u = this.getCurrentPage().pageSize, h = u.height - this.pageMargins.top - this.pageMargins.bottom, a = u.width - this.pageMargins.left - this.pageMargins.right;
                return {
                  pageNumber: this.page + 1,
                  pageOrientation: u.orientation,
                  pageInnerHeight: h,
                  pageInnerWidth: a,
                  left: this.x,
                  top: this.y,
                  verticalRatio: (this.y - this.pageMargins.top) / h,
                  horizontalRatio: (this.x - this.pageMargins.left) / a
                };
              };
              function l(u, h) {
                var a;
                return u.page > h.page ? a = u : h.page > u.page ? a = h : a = u.y > h.y ? u : h, {
                  page: a.page,
                  x: a.x,
                  y: a.y,
                  availableHeight: a.availableHeight,
                  availableWidth: a.availableWidth
                };
              }
              c.exports = n;
            }
          ),
          /***/
          84786: (
            /***/
            function(c, d, t) {
              var o = t(79547), r = t(16920).isNumber, n = t(16920).pack, i = t(16920).offsetVector, f = t(79833);
              function l(a, v) {
                this.context = a, this.contextStack = [], this.tracker = v;
              }
              function u(a, v, y) {
                y == null || y < 0 || y > a.items.length ? a.items.push(v) : a.items.splice(y, 0, v);
              }
              l.prototype.addLine = function(a, v, y) {
                var p = a.getHeight(), e = this.context, m = e.getCurrentPage(), w = this.getCurrentPositionOnPage();
                return e.availableHeight < p || !m ? !1 : (a.x = e.x + (a.x || 0), a.y = e.y + (a.y || 0), this.alignLine(a), u(m, {
                  type: "line",
                  item: a
                }, y), this.tracker.emit("lineAdded", a), v || e.moveDown(p), w);
              }, l.prototype.alignLine = function(a) {
                var v = this.context.availableWidth, y = a.getWidth(), p = a.inlines && a.inlines.length > 0 && a.inlines[0].alignment, e = 0;
                switch (p) {
                  case "right":
                    e = v - y;
                    break;
                  case "center":
                    e = (v - y) / 2;
                    break;
                }
                if (e && (a.x = (a.x || 0) + e), p === "justify" && !a.newLineForced && !a.lastLineInParagraph && a.inlines.length > 1)
                  for (var m = (v - y) / (a.inlines.length - 1), w = 1, D = a.inlines.length; w < D; w++)
                    e = w * m, a.inlines[w].x += e, a.inlines[w].justifyShift = m;
              }, l.prototype.addImage = function(a, v, y) {
                var p = this.context, e = p.getCurrentPage(), m = this.getCurrentPositionOnPage();
                return !e || a.absolutePosition === void 0 && p.availableHeight < a._height && e.items.length > 0 ? !1 : (a._x === void 0 && (a._x = a.x || 0), a.x = p.x + a._x, a.y = p.y, this.alignImage(a), u(e, {
                  type: y || "image",
                  item: a
                }, v), p.moveDown(a._height), m);
              }, l.prototype.addSVG = function(a, v) {
                return this.addImage(a, v, "svg");
              }, l.prototype.addQr = function(a, v) {
                var y = this.context, p = y.getCurrentPage(), e = this.getCurrentPositionOnPage();
                if (!p || a.absolutePosition === void 0 && y.availableHeight < a._height)
                  return !1;
                a._x === void 0 && (a._x = a.x || 0), a.x = y.x + a._x, a.y = y.y, this.alignImage(a);
                for (var m = 0, w = a._canvas.length; m < w; m++) {
                  var D = a._canvas[m];
                  D.x += a.x, D.y += a.y, this.addVector(D, !0, !0, v);
                }
                return y.moveDown(a._height), e;
              }, l.prototype.alignImage = function(a) {
                var v = this.context.availableWidth, y = a._minWidth, p = 0;
                switch (a._alignment) {
                  case "right":
                    p = v - y;
                    break;
                  case "center":
                    p = (v - y) / 2;
                    break;
                }
                p && (a.x = (a.x || 0) + p);
              }, l.prototype.alignCanvas = function(a) {
                var v = this.context.availableWidth, y = a._minWidth, p = 0;
                switch (a._alignment) {
                  case "right":
                    p = v - y;
                    break;
                  case "center":
                    p = (v - y) / 2;
                    break;
                }
                p && a.canvas.forEach(function(e) {
                  i(e, p, 0);
                });
              }, l.prototype.addVector = function(a, v, y, p) {
                var e = this.context, m = e.getCurrentPage(), w = this.getCurrentPositionOnPage();
                if (m)
                  return i(a, v ? 0 : e.x, y ? 0 : e.y), u(m, {
                    type: "vector",
                    item: a
                  }, p), w;
              }, l.prototype.beginClip = function(a, v) {
                var y = this.context, p = y.getCurrentPage();
                return p.items.push({
                  type: "beginClip",
                  item: { x: y.x, y: y.y, width: a, height: v }
                }), !0;
              }, l.prototype.endClip = function() {
                var a = this.context, v = a.getCurrentPage();
                return v.items.push({
                  type: "endClip"
                }), !0;
              };
              function h(a) {
                var v = new o(a.maxWidth);
                for (var y in a)
                  a.hasOwnProperty(y) && (v[y] = a[y]);
                return v;
              }
              l.prototype.addFragment = function(a, v, y, p) {
                var e = this.context, m = e.getCurrentPage();
                return !v && a.height > e.availableHeight ? !1 : (a.items.forEach(function(w) {
                  switch (w.type) {
                    case "line":
                      var D = h(w.item);
                      D._node && (D._node.positions[0].pageNumber = e.page + 1), D.x = (D.x || 0) + (v ? a.xOffset || 0 : e.x), D.y = (D.y || 0) + (y ? a.yOffset || 0 : e.y), m.items.push({
                        type: "line",
                        item: D
                      });
                      break;
                    case "vector":
                      var I = n(w.item);
                      i(I, v ? a.xOffset || 0 : e.x, y ? a.yOffset || 0 : e.y), m.items.push({
                        type: "vector",
                        item: I
                      });
                      break;
                    case "image":
                    case "svg":
                      var E = n(w.item);
                      E.x = (E.x || 0) + (v ? a.xOffset || 0 : e.x), E.y = (E.y || 0) + (y ? a.yOffset || 0 : e.y), m.items.push({
                        type: w.type,
                        item: E
                      });
                      break;
                  }
                }), p || e.moveDown(a.height), !0);
              }, l.prototype.pushContext = function(a, v) {
                a === void 0 && (v = this.context.getCurrentPage().height - this.context.pageMargins.top - this.context.pageMargins.bottom, a = this.context.availableWidth), r(a) && (a = new f({ width: a, height: v }, { left: 0, right: 0, top: 0, bottom: 0 })), this.contextStack.push(this.context), this.context = a;
              }, l.prototype.popContext = function() {
                this.context = this.contextStack.pop();
              }, l.prototype.getCurrentPositionOnPage = function() {
                return (this.contextStack[0] || this.context).getCurrentPosition();
              }, c.exports = l;
            }
          ),
          /***/
          98875: (
            /***/
            function(c, d, t) {
              var o = t(16920).isArray;
              function r(i, f) {
                var l = "normal";
                return i && f ? l = "bolditalics" : i ? l = "bold" : f && (l = "italics"), l;
              }
              function n(i, f) {
                this.fonts = {}, this.pdfKitDoc = f, this.fontCache = {};
                for (var l in i)
                  if (i.hasOwnProperty(l)) {
                    var u = i[l];
                    this.fonts[l] = {
                      normal: u.normal,
                      bold: u.bold,
                      italics: u.italics,
                      bolditalics: u.bolditalics
                    };
                  }
              }
              n.prototype.getFontType = function(i, f) {
                return r(i, f);
              }, n.prototype.getFontFile = function(i, f, l) {
                var u = this.getFontType(f, l);
                return !this.fonts[i] || !this.fonts[i][u] ? null : this.fonts[i][u];
              }, n.prototype.provideFont = function(i, f, l) {
                var u = this.getFontType(f, l);
                if (this.getFontFile(i, f, l) === null)
                  throw new Error("Font '" + i + "' in style '" + u + "' is not defined in the font section of the document definition.");
                if (this.fontCache[i] = this.fontCache[i] || {}, !this.fontCache[i][u]) {
                  var h = this.fonts[i][u];
                  o(h) || (h = [h]), this.fontCache[i][u] = this.pdfKitDoc.font.apply(this.pdfKitDoc, h)._font;
                }
                return this.fontCache[i][u];
              }, c.exports = n;
            }
          ),
          /***/
          16920: (
            /***/
            function(c) {
              function d(e) {
                return typeof e == "string" || e instanceof String;
              }
              function t(e) {
                return typeof e == "number" || e instanceof Number;
              }
              function o(e) {
                return typeof e == "boolean";
              }
              function r(e) {
                return Array.isArray(e);
              }
              function n(e) {
                return typeof e == "function";
              }
              function i(e) {
                return e !== null && typeof e == "object";
              }
              function f(e) {
                return e === null;
              }
              function l(e) {
                return e === void 0;
              }
              function u() {
                for (var e = {}, m = 0, w = arguments.length; m < w; m++) {
                  var D = arguments[m];
                  if (D)
                    for (var I in D)
                      D.hasOwnProperty(I) && (e[I] = D[I]);
                }
                return e;
              }
              function h(e, m, w) {
                switch (e.type) {
                  case "ellipse":
                  case "rect":
                    e.x += m, e.y += w;
                    break;
                  case "line":
                    e.x1 += m, e.x2 += m, e.y1 += w, e.y2 += w;
                    break;
                  case "polyline":
                    for (var D = 0, I = e.points.length; D < I; D++)
                      e.points[D].x += m, e.points[D].y += w;
                    break;
                }
              }
              function a(e, m) {
                return e === "font" ? "font" : m;
              }
              function v(e) {
                if (e.id)
                  return e.id;
                if (r(e.text))
                  for (var m = 0, w = e.text.length; m < w; m++) {
                    var D = e.text[m], I = v(D);
                    if (I)
                      return I;
                  }
                return null;
              }
              function y(e) {
                return r(e) && e.length === 2;
              }
              function p(e, m) {
                return [m[e[0]], e[1]];
              }
              c.exports = {
                isString: d,
                isNumber: t,
                isBoolean: o,
                isArray: r,
                isFunction: n,
                isObject: i,
                isNull: f,
                isUndefined: l,
                pack: u,
                fontStringify: a,
                offsetVector: h,
                getNodeId: v,
                isPattern: y,
                getPattern: p
              };
            }
          ),
          /***/
          41125: (
            /***/
            function(c, d, t) {
              var o = t(43060).Buffer, r = t(52773);
              function n(i, f) {
                this.pdfKitDoc = i, this.imageDictionary = f || {};
              }
              n.prototype.measureImage = function(i) {
                var f, l = this;
                if (this.pdfKitDoc._imageRegistry[i])
                  f = this.pdfKitDoc._imageRegistry[i];
                else {
                  try {
                    if (f = this.pdfKitDoc.openImage(u(i)), !f)
                      throw "No image";
                  } catch (h) {
                    throw "Invalid image: " + h.toString() + `
Images dictionary should contain dataURL entries (or local file paths in node.js)`;
                  }
                  f.embed(this.pdfKitDoc), this.pdfKitDoc._imageRegistry[i] = f;
                }
                return { width: f.width, height: f.height };
                function u(h) {
                  var a = l.imageDictionary[h];
                  if (!a)
                    return h;
                  if (r.existsSync(a))
                    return r.readFileSync(a);
                  var v = a.indexOf("base64,");
                  return v < 0 ? l.imageDictionary[h] : o.from(a.substring(v + 7), "base64");
                }
              }, c.exports = n;
            }
          ),
          /***/
          47626: (
            /***/
            function(c, d, t) {
              var o = t(73602), r = t(78702), n = t(77077), i = t(79833), f = t(52183), l = t(65354), u = t(41729), h = t(79547), a = t(16920).isString, v = t(16920).isArray, y = t(16920).isUndefined, p = t(16920).isNull, e = t(16920).pack, m = t(16920).offsetVector, w = t(16920).fontStringify, D = t(16920).getNodeId, I = t(16920).isFunction, E = t(28045), T = t(28034), A = t(16920).isNumber;
              function F(N, U) {
                U.forEach(function(W) {
                  N.push(W);
                });
              }
              function b(N, U, W, J) {
                this.pageSize = N, this.pageMargins = U, this.tracker = new o(), this.imageMeasure = W, this.svgMeasure = J, this.tableLayouts = {};
              }
              b.prototype.registerTableLayouts = function(N) {
                this.tableLayouts = e(this.tableLayouts, N);
              }, b.prototype.layoutDocument = function(N, U, W, J, ht, K, nt, xt, bt, Tt) {
                function It($, gt) {
                  if (!I(Tt))
                    return !1;
                  $ = $.filter(function(V) {
                    return V.positions.length > 0;
                  }), $.forEach(function(V) {
                    var it = {};
                    [
                      "id",
                      "text",
                      "ul",
                      "ol",
                      "table",
                      "image",
                      "qr",
                      "canvas",
                      "svg",
                      "columns",
                      "headlineLevel",
                      "style",
                      "pageBreak",
                      "pageOrientation",
                      "width",
                      "height"
                    ].forEach(function(tt) {
                      V[tt] !== void 0 && (it[tt] = V[tt]);
                    }), it.startPosition = V.positions[0], it.pageNumbers = Array.from(new Set(V.positions.map(function(tt) {
                      return tt.pageNumber;
                    }))), it.pages = gt.length, it.stack = v(V.stack), V.nodeInfo = it;
                  });
                  for (var ut = 0; ut < $.length; ut++) {
                    var st = $[ut];
                    if (st.pageBreak !== "before" && !st.pageBreakCalculated) {
                      st.pageBreakCalculated = !0;
                      var yt = st.nodeInfo.pageNumbers[0], G = [], Et = [], k = [];
                      if (Tt.length > 1)
                        for (var S = ut + 1, L = $.length; S < L; S++)
                          $[S].nodeInfo.pageNumbers.indexOf(yt) > -1 && G.push($[S].nodeInfo), Tt.length > 2 && $[S].nodeInfo.pageNumbers.indexOf(yt + 1) > -1 && Et.push($[S].nodeInfo);
                      if (Tt.length > 3)
                        for (var S = 0; S < ut; S++)
                          $[S].nodeInfo.pageNumbers.indexOf(yt) > -1 && k.push($[S].nodeInfo);
                      if (Tt(st.nodeInfo, G, Et, k))
                        return st.pageBreak = "before", !0;
                    }
                  }
                  return !1;
                }
                this.docPreprocessor = new r(), this.docMeasure = new n(U, W, J, this.imageMeasure, this.svgMeasure, this.tableLayouts, xt);
                function Lt($) {
                  $.linearNodeList.forEach(function(gt) {
                    gt.resetXY();
                  });
                }
                for (var Ut = this.tryLayoutDocument(N, U, W, J, ht, K, nt, xt, bt); It(Ut.linearNodeList, Ut.pages); )
                  Lt(Ut), Ut = this.tryLayoutDocument(N, U, W, J, ht, K, nt, xt, bt);
                return Ut.pages;
              }, b.prototype.tryLayoutDocument = function(N, U, W, J, ht, K, nt, xt, bt, Tt) {
                this.linearNodeList = [], N = this.docPreprocessor.preprocessDocument(N), N = this.docMeasure.measureDocument(N), this.writer = new f(
                  new i(this.pageSize, this.pageMargins),
                  this.tracker
                );
                var It = this;
                return this.writer.context().tracker.startTracking("pageAdded", function() {
                  It.addBackground(ht);
                }), this.addBackground(ht), this.processNode(N), this.addHeadersAndFooters(K, nt), bt != null && this.addWatermark(bt, U, J), { pages: this.writer.context().pages, linearNodeList: this.linearNodeList };
              }, b.prototype.addBackground = function(N) {
                var U = I(N) ? N : function() {
                  return N;
                }, W = this.writer.context(), J = W.getCurrentPage().pageSize, ht = U(W.page + 1, J);
                ht && (this.writer.beginUnbreakableBlock(J.width, J.height), ht = this.docPreprocessor.preprocessDocument(ht), this.processNode(this.docMeasure.measureDocument(ht)), this.writer.commitUnbreakableBlock(0, 0), W.backgroundLength[W.page] += ht.positions.length);
              }, b.prototype.addStaticRepeatable = function(N, U) {
                this.addDynamicRepeatable(function() {
                  return JSON.parse(JSON.stringify(N));
                }, U);
              }, b.prototype.addDynamicRepeatable = function(N, U) {
                for (var W = this.writer.context().pages, J = 0, ht = W.length; J < ht; J++) {
                  this.writer.context().page = J;
                  var K = N(J + 1, ht, this.writer.context().pages[J].pageSize);
                  if (K) {
                    var nt = U(this.writer.context().getCurrentPage().pageSize, this.pageMargins);
                    this.writer.beginUnbreakableBlock(nt.width, nt.height), K = this.docPreprocessor.preprocessDocument(K), this.processNode(this.docMeasure.measureDocument(K)), this.writer.commitUnbreakableBlock(nt.x, nt.y);
                  }
                }
              }, b.prototype.addHeadersAndFooters = function(N, U) {
                var W = function(ht, K) {
                  return {
                    x: 0,
                    y: 0,
                    width: ht.width,
                    height: K.top
                  };
                }, J = function(ht, K) {
                  return {
                    x: 0,
                    y: ht.height - K.bottom,
                    width: ht.width,
                    height: K.bottom
                  };
                };
                I(N) ? this.addDynamicRepeatable(N, W) : N && this.addStaticRepeatable(N, W), I(U) ? this.addDynamicRepeatable(U, J) : U && this.addStaticRepeatable(U, J);
              }, b.prototype.addWatermark = function(N, U, W) {
                if (a(N) && (N = { text: N }), !N.text)
                  return;
                N.font = N.font || W.font || "Roboto", N.fontSize = N.fontSize || "auto", N.color = N.color || "black", N.opacity = A(N.opacity) ? N.opacity : 0.6, N.bold = N.bold || !1, N.italics = N.italics || !1, N.angle = !y(N.angle) && !p(N.angle) ? N.angle : null, N.angle === null && (N.angle = Math.atan2(this.pageSize.height, this.pageSize.width) * -180 / Math.PI), N.fontSize === "auto" && (N.fontSize = bt(this.pageSize, N, U));
                var J = {
                  text: N.text,
                  font: U.provideFont(N.font, N.bold, N.italics),
                  fontSize: N.fontSize,
                  color: N.color,
                  opacity: N.opacity,
                  angle: N.angle
                };
                J._size = xt(N, U);
                for (var ht = this.writer.context().pages, K = 0, nt = ht.length; K < nt; K++)
                  ht[K].watermark = J;
                function xt(Tt, It) {
                  var Lt = new E(It), Ut = new T(null, { font: Tt.font, bold: Tt.bold, italics: Tt.italics });
                  Ut.push({
                    fontSize: Tt.fontSize
                  });
                  var $ = Lt.sizeOfString(Tt.text, Ut), gt = Lt.sizeOfRotatedText(Tt.text, Tt.angle, Ut);
                  return { size: $, rotatedSize: gt };
                }
                function bt(Tt, It, Lt) {
                  for (var Ut = new E(Lt), $ = new T(null, { font: It.font, bold: It.bold, italics: It.italics }), gt, ut = 0, st = 1e3, yt = (ut + st) / 2; Math.abs(ut - st) > 1; )
                    $.push({
                      fontSize: yt
                    }), gt = Ut.sizeOfRotatedText(It.text, It.angle, $), gt.width > Tt.width ? (st = yt, yt = (ut + st) / 2) : gt.width < Tt.width && (gt.height > Tt.height ? (st = yt, yt = (ut + st) / 2) : (ut = yt, yt = (ut + st) / 2)), $.pop();
                  return yt;
                }
              };
              function R(N) {
                var U = N.x, W = N.y;
                N.positions = [], v(N.canvas) && N.canvas.forEach(function(J) {
                  var ht = J.x, K = J.y, nt = J.x1, xt = J.y1, bt = J.x2, Tt = J.y2;
                  J.resetXY = function() {
                    J.x = ht, J.y = K, J.x1 = nt, J.y1 = xt, J.x2 = bt, J.y2 = Tt;
                  };
                }), N.resetXY = function() {
                  N.x = U, N.y = W, v(N.canvas) && N.canvas.forEach(function(J) {
                    J.resetXY();
                  });
                };
              }
              b.prototype.processNode = function(N) {
                var U = this;
                this.linearNodeList.push(N), R(N), W(function() {
                  var J = N.unbreakable;
                  J && U.writer.beginUnbreakableBlock();
                  var ht = N.absolutePosition;
                  ht && (U.writer.context().beginDetachedBlock(), U.writer.context().moveTo(ht.x || 0, ht.y || 0));
                  var K = N.relativePosition;
                  if (K && (U.writer.context().beginDetachedBlock(), U.writer.context().moveToRelative(K.x || 0, K.y || 0)), N.stack)
                    U.processVerticalContainer(N);
                  else if (N.columns)
                    U.processColumns(N);
                  else if (N.ul)
                    U.processList(!1, N);
                  else if (N.ol)
                    U.processList(!0, N);
                  else if (N.table)
                    U.processTable(N);
                  else if (N.text !== void 0)
                    U.processLeaf(N);
                  else if (N.toc)
                    U.processToc(N);
                  else if (N.image)
                    U.processImage(N);
                  else if (N.svg)
                    U.processSVG(N);
                  else if (N.canvas)
                    U.processCanvas(N);
                  else if (N.qr)
                    U.processQr(N);
                  else if (!N._span)
                    throw "Unrecognized document structure: " + JSON.stringify(N, w);
                  (ht || K) && U.writer.context().endDetachedBlock(), J && U.writer.commitUnbreakableBlock();
                });
                function W(J) {
                  var ht = N._margin;
                  N.pageBreak === "before" ? U.writer.moveToNextPage(N.pageOrientation) : N.pageBreak === "beforeOdd" ? (U.writer.moveToNextPage(N.pageOrientation), (U.writer.context().page + 1) % 2 === 1 && U.writer.moveToNextPage(N.pageOrientation)) : N.pageBreak === "beforeEven" && (U.writer.moveToNextPage(N.pageOrientation), (U.writer.context().page + 1) % 2 === 0 && U.writer.moveToNextPage(N.pageOrientation)), ht && (U.writer.context().moveDown(ht[1]), U.writer.context().addMargin(ht[0], ht[2])), J(), ht && (U.writer.context().addMargin(-ht[0], -ht[2]), U.writer.context().moveDown(ht[3])), N.pageBreak === "after" ? U.writer.moveToNextPage(N.pageOrientation) : N.pageBreak === "afterOdd" ? (U.writer.moveToNextPage(N.pageOrientation), (U.writer.context().page + 1) % 2 === 1 && U.writer.moveToNextPage(N.pageOrientation)) : N.pageBreak === "afterEven" && (U.writer.moveToNextPage(N.pageOrientation), (U.writer.context().page + 1) % 2 === 0 && U.writer.moveToNextPage(N.pageOrientation));
                }
              }, b.prototype.processVerticalContainer = function(N) {
                var U = this;
                N.stack.forEach(function(W) {
                  U.processNode(W), F(N.positions, W.positions);
                });
              }, b.prototype.processColumns = function(N) {
                var U = N.columns, W = this.writer.context().availableWidth, J = K(N._gap);
                J && (W -= (J.length - 1) * N._gap), l.buildColumnWidths(U, W);
                var ht = this.processRow(U, U, J);
                F(N.positions, ht.positions);
                function K(nt) {
                  if (!nt)
                    return null;
                  var xt = [];
                  xt.push(0);
                  for (var bt = U.length - 1; bt > 0; bt--)
                    xt.push(nt);
                  return xt;
                }
              }, b.prototype.processRow = function(N, U, W, J, ht, K) {
                var nt = this, xt = [], bt = [];
                return this.tracker.auto("pageChanged", Tt, function() {
                  U = U || N, nt.writer.context().beginColumnGroup();
                  for (var Ut = 0, $ = N.length; Ut < $; Ut++) {
                    var gt = N[Ut], ut = U[Ut]._calcWidth, st = It(Ut);
                    if (gt.colSpan && gt.colSpan > 1)
                      for (var yt = 1; yt < gt.colSpan; yt++)
                        ut += U[++Ut]._calcWidth + W[Ut];
                    nt.writer.context().beginColumn(ut, st, Lt(gt, Ut)), gt._span ? gt._columnEndingContext && nt.writer.context().markEnding(gt) : (nt.processNode(gt), F(bt, gt.positions));
                  }
                  nt.writer.context().completeColumnGroup(K);
                }), { pageBreaks: xt, positions: bt };
                function Tt(Ut) {
                  for (var $, gt = 0, ut = xt.length; gt < ut; gt++) {
                    var st = xt[gt];
                    if (st.prevPage === Ut.prevPage) {
                      $ = st;
                      break;
                    }
                  }
                  $ || ($ = Ut, xt.push($)), $.prevY = Math.max($.prevY, Ut.prevY), $.y = Math.min($.y, Ut.y);
                }
                function It(Ut) {
                  return W && W.length > Ut ? W[Ut] : 0;
                }
                function Lt(Ut, $) {
                  if (Ut.rowSpan && Ut.rowSpan > 1) {
                    var gt = ht + Ut.rowSpan - 1;
                    if (gt >= J.length)
                      throw "Row span for column " + $ + " (with indexes starting from 0) exceeded row count";
                    return J[gt][$];
                  }
                  return null;
                }
              }, b.prototype.processList = function(N, U) {
                var W = this, J = N ? U.ol : U.ul, ht = U._gapSize;
                this.writer.context().addMargin(ht.width);
                var K;
                this.tracker.auto("lineAdded", nt, function() {
                  J.forEach(function(xt) {
                    K = xt.listMarker, W.processNode(xt), F(U.positions, xt.positions);
                  });
                }), this.writer.context().addMargin(-ht.width);
                function nt(xt) {
                  if (K) {
                    var bt = K;
                    if (K = null, bt.canvas) {
                      var Tt = bt.canvas[0];
                      m(Tt, -bt._minWidth, 0), W.writer.addVector(Tt);
                    } else if (bt._inlines) {
                      var It = new h(W.pageSize.width);
                      It.addInline(bt._inlines[0]), It.x = -bt._minWidth, It.y = xt.getAscenderHeight() - It.getAscenderHeight(), W.writer.addLine(It, !0);
                    }
                  }
                }
              }, b.prototype.processTable = function(N) {
                var U = new u(N);
                U.beginTable(this.writer);
                for (var W = N.table.heights, J = 0, ht = N.table.body.length; J < ht; J++) {
                  U.beginRow(J, this.writer);
                  var K;
                  I(W) ? K = W(J) : v(W) ? K = W[J] : K = W, K === "auto" && (K = void 0);
                  var nt = this.processRow(N.table.body[J], N.table.widths, N._offsets.offsets, N.table.body, J, K);
                  F(N.positions, nt.positions), U.endRow(J, this.writer, nt.pageBreaks);
                }
                U.endTable(this.writer);
              }, b.prototype.processLeaf = function(N) {
                var U = this.buildNextLine(N);
                U && (N.tocItem || N.id) && (U._node = N);
                var W = U ? U.getHeight() : 0, J = N.maxHeight || -1;
                if (U) {
                  var ht = D(N);
                  ht && (U.id = ht);
                }
                if (N._tocItemRef && (U._pageNodeRef = N._tocItemRef), N._pageRef && (U._pageNodeRef = N._pageRef._nodeRef), U && U.inlines && v(U.inlines))
                  for (var K = 0, nt = U.inlines.length; K < nt; K++)
                    U.inlines[K]._tocItemRef && (U.inlines[K]._pageNodeRef = U.inlines[K]._tocItemRef), U.inlines[K]._pageRef && (U.inlines[K]._pageNodeRef = U.inlines[K]._pageRef._nodeRef);
                for (; U && (J === -1 || W < J); ) {
                  var xt = this.writer.addLine(U);
                  N.positions.push(xt), U = this.buildNextLine(N), U && (W += U.getHeight());
                }
              }, b.prototype.processToc = function(N) {
                N.toc.title && this.processNode(N.toc.title), N.toc._table && this.processNode(N.toc._table);
              }, b.prototype.buildNextLine = function(N) {
                function U(It) {
                  var Lt = It.constructor();
                  for (var Ut in It)
                    Lt[Ut] = It[Ut];
                  return Lt;
                }
                if (!N._inlines || N._inlines.length === 0)
                  return null;
                for (var W = new h(this.writer.context().availableWidth), J = new E(null), ht = !1; N._inlines && N._inlines.length > 0 && (W.hasEnoughSpaceForInline(N._inlines[0], N._inlines.slice(1)) || ht); ) {
                  var K = !1, nt = N._inlines.shift();
                  if (ht = !1, !nt.noWrap && nt.text.length > 1 && nt.width > W.getAvailableWidth()) {
                    var xt = nt.width / nt.text.length, bt = Math.floor(W.getAvailableWidth() / xt);
                    if (bt < 1 && (bt = 1), bt < nt.text.length) {
                      var Tt = U(nt);
                      Tt.text = nt.text.substr(bt), nt.text = nt.text.substr(0, bt), Tt.width = J.widthOfString(Tt.text, Tt.font, Tt.fontSize, Tt.characterSpacing, Tt.fontFeatures), nt.width = J.widthOfString(nt.text, nt.font, nt.fontSize, nt.characterSpacing, nt.fontFeatures), N._inlines.unshift(Tt), K = !0;
                    }
                  }
                  W.addInline(nt), ht = nt.noNewLine && !K;
                }
                return W.lastLineInParagraph = N._inlines.length === 0, W;
              }, b.prototype.processImage = function(N) {
                var U = this.writer.addImage(N);
                N.positions.push(U);
              }, b.prototype.processSVG = function(N) {
                var U = this.writer.addSVG(N);
                N.positions.push(U);
              }, b.prototype.processCanvas = function(N) {
                var U = N._minHeight;
                N.absolutePosition === void 0 && this.writer.context().availableHeight < U && this.writer.moveToNextPage(), this.writer.alignCanvas(N), N.canvas.forEach(function(W) {
                  var J = this.writer.addVector(W);
                  N.positions.push(J);
                }, this), this.writer.context().moveDown(U);
              }, b.prototype.processQr = function(N) {
                var U = this.writer.addQr(N);
                N.positions.push(U);
              }, c.exports = b;
            }
          ),
          /***/
          79547: (
            /***/
            function(c) {
              function d(t) {
                this.maxWidth = t, this.leadingCut = 0, this.trailingCut = 0, this.inlineWidths = 0, this.inlines = [];
              }
              d.prototype.getAscenderHeight = function() {
                var t = 0;
                return this.inlines.forEach(function(o) {
                  t = Math.max(t, o.font.ascender / 1e3 * o.fontSize);
                }), t;
              }, d.prototype.hasEnoughSpaceForInline = function(t, o) {
                if (o = o || [], this.inlines.length === 0)
                  return !0;
                if (this.newLineForced)
                  return !1;
                var r = t.width, n = t.trailingCut || 0;
                if (t.noNewLine)
                  for (var i = 0, f = o.length; i < f; i++) {
                    var l = o[i];
                    if (r += l.width, n += l.trailingCut || 0, !l.noNewLine)
                      break;
                  }
                return this.inlineWidths + r - this.leadingCut - n <= this.maxWidth;
              }, d.prototype.addInline = function(t) {
                this.inlines.length === 0 && (this.leadingCut = t.leadingCut || 0), this.trailingCut = t.trailingCut || 0, t.x = this.inlineWidths - this.leadingCut, this.inlines.push(t), this.inlineWidths += t.width, t.lineEnd && (this.newLineForced = !0);
              }, d.prototype.getWidth = function() {
                return this.inlineWidths - this.leadingCut - this.trailingCut;
              }, d.prototype.getAvailableWidth = function() {
                return this.maxWidth - this.getWidth();
              }, d.prototype.getHeight = function() {
                var t = 0;
                return this.inlines.forEach(function(o) {
                  t = Math.max(t, o.height || 0);
                }), t;
              }, c.exports = d;
            }
          ),
          /***/
          52183: (
            /***/
            function(c, d, t) {
              var o = t(16920).isUndefined, r = t(84786);
              function n(f, l) {
                this.transactionLevel = 0, this.repeatables = [], this.tracker = l, this.writer = new r(f, l);
              }
              function i(f, l) {
                var u = l(f);
                return u || (f.moveToNextPage(), u = l(f)), u;
              }
              n.prototype.addLine = function(f, l, u) {
                return i(this, function(h) {
                  return h.writer.addLine(f, l, u);
                });
              }, n.prototype.addImage = function(f, l) {
                return i(this, function(u) {
                  return u.writer.addImage(f, l);
                });
              }, n.prototype.addSVG = function(f, l) {
                return i(this, function(u) {
                  return u.writer.addSVG(f, l);
                });
              }, n.prototype.addQr = function(f, l) {
                return i(this, function(u) {
                  return u.writer.addQr(f, l);
                });
              }, n.prototype.addVector = function(f, l, u, h) {
                return this.writer.addVector(f, l, u, h);
              }, n.prototype.beginClip = function(f, l) {
                return this.writer.beginClip(f, l);
              }, n.prototype.endClip = function() {
                return this.writer.endClip();
              }, n.prototype.alignCanvas = function(f) {
                this.writer.alignCanvas(f);
              }, n.prototype.addFragment = function(f, l, u, h) {
                this.writer.addFragment(f, l, u, h) || (this.moveToNextPage(), this.writer.addFragment(f, l, u, h));
              }, n.prototype.moveToNextPage = function(f) {
                var l = this.writer.context.moveToNextPage(f);
                this.repeatables.forEach(function(u) {
                  o(u.insertedOnPages[this.writer.context.page]) ? (u.insertedOnPages[this.writer.context.page] = !0, this.writer.addFragment(u, !0)) : this.writer.context.moveDown(u.height);
                }, this), this.writer.tracker.emit("pageChanged", {
                  prevPage: l.prevPage,
                  prevY: l.prevY,
                  y: this.writer.context.y
                });
              }, n.prototype.beginUnbreakableBlock = function(f, l) {
                this.transactionLevel++ === 0 && (this.originalX = this.writer.context.x, this.writer.pushContext(f, l));
              }, n.prototype.commitUnbreakableBlock = function(f, l) {
                if (--this.transactionLevel === 0) {
                  var u = this.writer.context;
                  this.writer.popContext();
                  var h = u.pages.length;
                  if (h > 0) {
                    var a = u.pages[0];
                    if (a.xOffset = f, a.yOffset = l, h > 1)
                      if (f !== void 0 || l !== void 0)
                        a.height = u.getCurrentPage().pageSize.height - u.pageMargins.top - u.pageMargins.bottom;
                      else {
                        a.height = this.writer.context.getCurrentPage().pageSize.height - this.writer.context.pageMargins.top - this.writer.context.pageMargins.bottom;
                        for (var v = 0, y = this.repeatables.length; v < y; v++)
                          a.height -= this.repeatables[v].height;
                      }
                    else
                      a.height = u.y;
                    f !== void 0 || l !== void 0 ? this.writer.addFragment(a, !0, !0, !0) : this.addFragment(a);
                  }
                }
              }, n.prototype.currentBlockToRepeatable = function() {
                var f = this.writer.context, l = { items: [] };
                return f.pages[0].items.forEach(function(u) {
                  l.items.push(u);
                }), l.xOffset = this.originalX, l.height = f.y, l.insertedOnPages = [], l;
              }, n.prototype.pushToRepeatables = function(f) {
                this.repeatables.push(f);
              }, n.prototype.popFromRepeatables = function() {
                this.repeatables.pop();
              }, n.prototype.context = function() {
                return this.writer.context;
              }, c.exports = n;
            }
          ),
          /***/
          85822: (
            /***/
            function(c, d, t) {
              function o(f) {
                return f && typeof f == "object" && "default" in f ? f.default : f;
              }
              var r = o(t(83036));
              function n() {
                return r;
              }
              function i(f) {
                return f = f || {}, new r(f);
              }
              c.exports = {
                getEngineInstance: n,
                createPdfDocument: i
              };
            }
          ),
          /***/
          56498: (
            /***/
            function(c, d, t) {
              var o = t(85822), r = t(98875), n = t(47626), i = t(58050), f = t(41125), l = t(48730), u = t(4986), h = t(28045), a = t(16920).isFunction, v = t(16920).isString, y = t(16920).isNumber, p = t(16920).isBoolean, e = t(16920).isArray, m = t(16920).isUndefined, w = t(16920).isPattern, D = t(16920).getPattern, I = t(31589), E = function($, gt, ut) {
                for (var st = 0; st < gt.length; st++) {
                  var yt = gt[st].toLowerCase();
                  for (var G in $)
                    if (G.toLowerCase() === yt)
                      return G;
                }
                return ut;
              };
              function T($) {
                this.fontDescriptors = $;
              }
              T.prototype.createPdfKitDocument = function($, gt) {
                gt = gt || {}, $.version = $.version || "1.3", $.compress = p($.compress) ? $.compress : !0, $.images = $.images || {}, $.pageMargins = $.pageMargins !== void 0 && $.pageMargins !== null ? $.pageMargins : 40;
                var ut = b($.pageSize, $.pageOrientation), st = {
                  size: [ut.width, ut.height],
                  pdfVersion: $.version,
                  compress: $.compress,
                  userPassword: $.userPassword,
                  ownerPassword: $.ownerPassword,
                  permissions: $.permissions,
                  lang: $.language,
                  fontLayoutCache: p(gt.fontLayoutCache) ? gt.fontLayoutCache : !0,
                  bufferPages: gt.bufferPages || !1,
                  autoFirstPage: !1,
                  info: A($),
                  font: null
                };
                this.pdfKitDoc = o.createPdfDocument(st), this.fontProvider = new r(this.fontDescriptors, this.pdfKitDoc);
                var yt = new n(ut, R($.pageMargins), new f(this.pdfKitDoc, $.images), new l());
                N(yt), gt.tableLayouts && yt.registerTableLayouts(gt.tableLayouts);
                var G = yt.layoutDocument($.content, this.fontProvider, $.styles || {}, $.defaultStyle || {
                  fontSize: 12,
                  font: "Roboto"
                }, $.background, $.header, $.footer, $.images, $.watermark, $.pageBreakBefore), Et = $.maxPagesNumber || -1;
                if (y(Et) && Et > -1 && (G = G.slice(0, Et)), ut.height === 1 / 0) {
                  var k = F(G, $.pageMargins);
                  this.pdfKitDoc.options.size = [ut.width, k];
                }
                var S = Ut($.patterns || {}, this.pdfKitDoc);
                if (J(G, this.fontProvider, this.pdfKitDoc, S, gt.progressCallback), gt.autoPrint) {
                  var L = this.pdfKitDoc.ref({
                    Type: "Action",
                    S: "Named",
                    N: "Print"
                  });
                  this.pdfKitDoc._root.data.OpenAction = L, L.end();
                }
                return this.pdfKitDoc;
              };
              function A($) {
                function gt(G) {
                  var Et = [
                    "Title",
                    "Author",
                    "Subject",
                    "Keywords",
                    "Creator",
                    "Producer",
                    "CreationDate",
                    "ModDate",
                    "Trapped"
                  ], k = G.charAt(0).toUpperCase() + G.slice(1);
                  return Et.indexOf(k) !== -1 ? k : G.replace(/\s+/g, "");
                }
                var ut = {
                  Producer: "pdfmake",
                  Creator: "pdfmake"
                };
                if ($.info)
                  for (var st in $.info) {
                    var yt = $.info[st];
                    yt && (st = gt(st), ut[st] = yt);
                  }
                return ut;
              }
              function F($, gt) {
                function ut(Et) {
                  return a(Et.item.getHeight) ? Et.item.getHeight() : Et.item._height ? Et.item._height : Et.type === "vector" ? typeof Et.item.y1 < "u" ? Et.item.y1 > Et.item.y2 ? Et.item.y1 : Et.item.y2 : Et.item.h : 0;
                }
                function st(Et) {
                  var k = Et.item.y || 0, S = ut(Et);
                  return k + S;
                }
                var yt = R(gt || 40), G = yt.top;
                return $.forEach(function(Et) {
                  Et.items.forEach(function(k) {
                    var S = st(k);
                    S > G && (G = S);
                  });
                }), G += yt.bottom, G;
              }
              function b($, gt) {
                function ut(yt) {
                  return v(yt) ? (yt = yt.toLowerCase(), yt === "portrait" && st.width > st.height || yt === "landscape" && st.width < st.height) : !1;
                }
                $ && $.height === "auto" && ($.height = 1 / 0);
                var st = U($ || "A4");
                return ut(gt) && (st = { width: st.height, height: st.width }), st.orientation = st.width > st.height ? "landscape" : "portrait", st;
              }
              function R($) {
                if (y($))
                  $ = { left: $, right: $, top: $, bottom: $ };
                else if (e($))
                  if ($.length === 2)
                    $ = { left: $[0], top: $[1], right: $[0], bottom: $[1] };
                  else if ($.length === 4)
                    $ = { left: $[0], top: $[1], right: $[2], bottom: $[3] };
                  else
                    throw "Invalid pageMargins definition";
                return $;
              }
              function N($) {
                $.registerTableLayouts({
                  noBorders: {
                    hLineWidth: function(gt) {
                      return 0;
                    },
                    vLineWidth: function(gt) {
                      return 0;
                    },
                    paddingLeft: function(gt) {
                      return gt && 4 || 0;
                    },
                    paddingRight: function(gt, ut) {
                      return gt < ut.table.widths.length - 1 ? 4 : 0;
                    }
                  },
                  headerLineOnly: {
                    hLineWidth: function(gt, ut) {
                      return gt === 0 || gt === ut.table.body.length ? 0 : gt === ut.table.headerRows ? 2 : 0;
                    },
                    vLineWidth: function(gt) {
                      return 0;
                    },
                    paddingLeft: function(gt) {
                      return gt === 0 ? 0 : 8;
                    },
                    paddingRight: function(gt, ut) {
                      return gt === ut.table.widths.length - 1 ? 0 : 8;
                    }
                  },
                  lightHorizontalLines: {
                    hLineWidth: function(gt, ut) {
                      return gt === 0 || gt === ut.table.body.length ? 0 : gt === ut.table.headerRows ? 2 : 1;
                    },
                    vLineWidth: function(gt) {
                      return 0;
                    },
                    hLineColor: function(gt) {
                      return gt === 1 ? "black" : "#aaa";
                    },
                    paddingLeft: function(gt) {
                      return gt === 0 ? 0 : 8;
                    },
                    paddingRight: function(gt, ut) {
                      return gt === ut.table.widths.length - 1 ? 0 : 8;
                    }
                  }
                });
              }
              function U($) {
                if (v($)) {
                  var gt = i[$.toUpperCase()];
                  if (!gt)
                    throw "Page size " + $ + " not recognized";
                  return { width: gt[0], height: gt[1] };
                }
                return $;
              }
              function W($, gt) {
                var ut = gt.options.size[0] > gt.options.size[1] ? "landscape" : "portrait";
                if ($.pageSize.orientation !== ut) {
                  var st = gt.options.size[0], yt = gt.options.size[1];
                  gt.options.size = [yt, st];
                }
              }
              function J($, gt, ut, st, yt) {
                ut._pdfMakePages = $, ut.addPage();
                var G = 0;
                yt && $.forEach(function(tt) {
                  G += tt.items.length;
                });
                var Et = 0;
                yt = yt || function() {
                };
                for (var k = 0; k < $.length; k++) {
                  k > 0 && (W($[k], ut), ut.addPage(ut.options));
                  for (var S = $[k], L = 0, V = S.items.length; L < V; L++) {
                    var it = S.items[L];
                    switch (it.type) {
                      case "vector":
                        xt(it.item, st, ut);
                        break;
                      case "line":
                        K(it.item, it.item.x, it.item.y, st, ut);
                        break;
                      case "image":
                        bt(it.item, it.item.x, it.item.y, ut);
                        break;
                      case "svg":
                        Tt(it.item, it.item.x, it.item.y, ut, gt);
                        break;
                      case "beginClip":
                        It(it.item, ut);
                        break;
                      case "endClip":
                        Lt(ut);
                        break;
                    }
                    Et++, yt(Et / G);
                  }
                  S.watermark && nt(S, ut);
                }
              }
              function ht($, gt) {
                var ut = $;
                return gt.sup && (ut -= gt.fontSize * 0.75), gt.sub && (ut += gt.fontSize * 0.35), ut;
              }
              function K($, gt, ut, st, yt) {
                function G(Yt, Gt) {
                  var Dt, ae, Ae = new h(null);
                  if (m(Yt.positions))
                    throw "Page reference id not found";
                  var xe = Yt.positions[0].pageNumber.toString();
                  switch (Gt.text = xe, Dt = Ae.widthOfString(Gt.text, Gt.font, Gt.fontSize, Gt.characterSpacing, Gt.fontFeatures), ae = Gt.width - Dt, Gt.width = Dt, Gt.alignment) {
                    case "right":
                      Gt.x += ae;
                      break;
                    case "center":
                      Gt.x += ae / 2;
                      break;
                  }
                }
                $._pageNodeRef && G($._pageNodeRef, $.inlines[0]), gt = gt || 0, ut = ut || 0;
                var Et = $.getHeight(), k = $.getAscenderHeight(), S = Et - k;
                u.drawBackground($, gt, ut, st, yt);
                for (var L = 0, V = $.inlines.length; L < V; L++) {
                  var it = $.inlines[L], tt = Et - it.font.ascender / 1e3 * it.fontSize - S;
                  it._pageNodeRef && G(it._pageNodeRef, it);
                  var _ = {
                    lineBreak: !1,
                    textWidth: it.width,
                    characterSpacing: it.characterSpacing,
                    wordCount: 1,
                    link: it.link
                  };
                  it.linkToDestination && (_.goTo = it.linkToDestination), $.id && L === 0 && (_.destination = $.id), it.fontFeatures && (_.features = it.fontFeatures);
                  var At = y(it.opacity) ? it.opacity : 1;
                  yt.opacity(At), yt.fill(it.color || "black"), yt._font = it.font, yt.fontSize(it.fontSize);
                  var Rt = ht(ut + tt, it);
                  yt.text(it.text, gt + it.x, Rt, _), it.linkToPage && (yt.ref({ Type: "Action", S: "GoTo", D: [it.linkToPage, 0, 0] }).end(), yt.annotate(gt + it.x, Rt, it.width, it.height, {
                    Subtype: "Link",
                    Dest: [it.linkToPage - 1, "XYZ", null, null, null]
                  }));
                }
                u.drawDecorations($, gt, ut, yt);
              }
              function nt($, gt) {
                var ut = $.watermark;
                gt.fill(ut.color), gt.opacity(ut.opacity), gt.save(), gt.rotate(ut.angle, { origin: [gt.page.width / 2, gt.page.height / 2] });
                var st = gt.page.width / 2 - ut._size.size.width / 2, yt = gt.page.height / 2 - ut._size.size.height / 2;
                gt._font = ut.font, gt.fontSize(ut.fontSize), gt.text(ut.text, st, yt, { lineBreak: !1 }), gt.restore();
              }
              function xt($, gt, ut) {
                ut.lineWidth($.lineWidth || 1), $.dash ? ut.dash($.dash.length, { space: $.dash.space || $.dash.length, phase: $.dash.phase || 0 }) : ut.undash(), ut.lineJoin($.lineJoin || "miter"), ut.lineCap($.lineCap || "butt");
                var st = null;
                switch ($.type) {
                  case "ellipse":
                    ut.ellipse($.x, $.y, $.r1, $.r2), $.linearGradient && (st = ut.linearGradient($.x - $.r1, $.y, $.x + $.r1, $.y));
                    break;
                  case "rect":
                    $.r ? ut.roundedRect($.x, $.y, $.w, $.h, $.r) : ut.rect($.x, $.y, $.w, $.h), $.linearGradient && (st = ut.linearGradient($.x, $.y, $.x + $.w, $.y));
                    break;
                  case "line":
                    ut.moveTo($.x1, $.y1), ut.lineTo($.x2, $.y2);
                    break;
                  case "polyline":
                    if ($.points.length === 0)
                      break;
                    ut.moveTo($.points[0].x, $.points[0].y);
                    for (var yt = 1, G = $.points.length; yt < G; yt++)
                      ut.lineTo($.points[yt].x, $.points[yt].y);
                    if ($.points.length > 1) {
                      var Et = $.points[0], k = $.points[$.points.length - 1];
                      ($.closePath || Et.x === k.x && Et.y === k.y) && ut.closePath();
                    }
                    break;
                  case "path":
                    ut.path($.d);
                    break;
                }
                if ($.linearGradient && st) {
                  for (var S = 1 / ($.linearGradient.length - 1), yt = 0; yt < $.linearGradient.length; yt++)
                    st.stop(yt * S, $.linearGradient[yt]);
                  $.color = st;
                }
                w($.color) && ($.color = D($.color, gt));
                var L = y($.fillOpacity) ? $.fillOpacity : 1, V = y($.strokeOpacity) ? $.strokeOpacity : 1;
                $.color && $.lineColor ? (ut.fillColor($.color, L), ut.strokeColor($.lineColor, V), ut.fillAndStroke()) : $.color ? (ut.fillColor($.color, L), ut.fill()) : (ut.strokeColor($.lineColor || "black", V), ut.stroke());
              }
              function bt($, gt, ut, st) {
                var yt = y($.opacity) ? $.opacity : 1;
                if (st.opacity(yt), $.cover) {
                  var G = $.cover.align || "center", Et = $.cover.valign || "center", k = $.cover.width ? $.cover.width : $.width, S = $.cover.height ? $.cover.height : $.height;
                  st.save(), st.rect($.x, $.y, k, S).clip(), st.image($.image, $.x, $.y, { cover: [k, S], align: G, valign: Et }), st.restore();
                } else
                  st.image($.image, $.x, $.y, { width: $._width, height: $._height });
                $.link && st.link($.x, $.y, $._width, $._height, $.link), $.linkToPage && (st.ref({ Type: "Action", S: "GoTo", D: [$.linkToPage, 0, 0] }).end(), st.annotate($.x, $.y, $._width, $._height, { Subtype: "Link", Dest: [$.linkToPage - 1, "XYZ", null, null, null] })), $.linkToDestination && st.goTo($.x, $.y, $._width, $._height, $.linkToDestination);
              }
              function Tt($, gt, ut, st, yt) {
                var G = Object.assign({ width: $._width, height: $._height, assumePt: !0 }, $.options);
                G.fontCallback = function(Et, k, S) {
                  var L = Et.split(",").map(function(_) {
                    return _.trim().replace(/('|")/g, "");
                  }), V = E(yt.fonts, L, $.font || "Roboto"), it = yt.getFontFile(V, k, S);
                  if (it === null) {
                    var tt = yt.getFontType(k, S);
                    throw new Error("Font '" + V + "' in style '" + tt + "' is not defined in the font section of the document definition.");
                  }
                  return it;
                }, I(st, $.svg, $.x, $.y, G);
              }
              function It($, gt) {
                gt.save(), gt.addContent("" + $.x + " " + $.y + " " + $.width + " " + $.height + " re"), gt.clip();
              }
              function Lt($) {
                $.restore();
              }
              function Ut($, gt) {
                var ut = {};
                return Object.keys($).forEach(function(st) {
                  var yt = $[st];
                  ut[st] = gt.pattern(yt.boundingBox, yt.xStep, yt.yStep, yt.pattern, yt.colored);
                }), ut;
              }
              c.exports = T;
            }
          ),
          /***/
          86976: (
            /***/
            function(c) {
              for (var d = [
                null,
                [[10, 7, 17, 13], [1, 1, 1, 1], []],
                [[16, 10, 28, 22], [1, 1, 1, 1], [4, 16]],
                [[26, 15, 22, 18], [1, 1, 2, 2], [4, 20]],
                [[18, 20, 16, 26], [2, 1, 4, 2], [4, 24]],
                [[24, 26, 22, 18], [2, 1, 4, 4], [4, 28]],
                [[16, 18, 28, 24], [4, 2, 4, 4], [4, 32]],
                [[18, 20, 26, 18], [4, 2, 5, 6], [4, 20, 36]],
                [[22, 24, 26, 22], [4, 2, 6, 6], [4, 22, 40]],
                [[22, 30, 24, 20], [5, 2, 8, 8], [4, 24, 44]],
                [[26, 18, 28, 24], [5, 4, 8, 8], [4, 26, 48]],
                [[30, 20, 24, 28], [5, 4, 11, 8], [4, 28, 52]],
                [[22, 24, 28, 26], [8, 4, 11, 10], [4, 30, 56]],
                [[22, 26, 22, 24], [9, 4, 16, 12], [4, 32, 60]],
                [[24, 30, 24, 20], [9, 4, 16, 16], [4, 24, 44, 64]],
                [[24, 22, 24, 30], [10, 6, 18, 12], [4, 24, 46, 68]],
                [[28, 24, 30, 24], [10, 6, 16, 17], [4, 24, 48, 72]],
                [[28, 28, 28, 28], [11, 6, 19, 16], [4, 28, 52, 76]],
                [[26, 30, 28, 28], [13, 6, 21, 18], [4, 28, 54, 80]],
                [[26, 28, 26, 26], [14, 7, 25, 21], [4, 28, 56, 84]],
                [[26, 28, 28, 30], [16, 8, 25, 20], [4, 32, 60, 88]],
                [[26, 28, 30, 28], [17, 8, 25, 23], [4, 26, 48, 70, 92]],
                [[28, 28, 24, 30], [17, 9, 34, 23], [4, 24, 48, 72, 96]],
                [[28, 30, 30, 30], [18, 9, 30, 25], [4, 28, 52, 76, 100]],
                [[28, 30, 30, 30], [20, 10, 32, 27], [4, 26, 52, 78, 104]],
                [[28, 26, 30, 30], [21, 12, 35, 29], [4, 30, 56, 82, 108]],
                [[28, 28, 30, 28], [23, 12, 37, 34], [4, 28, 56, 84, 112]],
                [[28, 30, 30, 30], [25, 12, 40, 34], [4, 32, 60, 88, 116]],
                [[28, 30, 30, 30], [26, 13, 42, 35], [4, 24, 48, 72, 96, 120]],
                [[28, 30, 30, 30], [28, 14, 45, 38], [4, 28, 52, 76, 100, 124]],
                [[28, 30, 30, 30], [29, 15, 48, 40], [4, 24, 50, 76, 102, 128]],
                [[28, 30, 30, 30], [31, 16, 51, 43], [4, 28, 54, 80, 106, 132]],
                [[28, 30, 30, 30], [33, 17, 54, 45], [4, 32, 58, 84, 110, 136]],
                [[28, 30, 30, 30], [35, 18, 57, 48], [4, 28, 56, 84, 112, 140]],
                [[28, 30, 30, 30], [37, 19, 60, 51], [4, 32, 60, 88, 116, 144]],
                [[28, 30, 30, 30], [38, 19, 63, 53], [4, 28, 52, 76, 100, 124, 148]],
                [[28, 30, 30, 30], [40, 20, 66, 56], [4, 22, 48, 74, 100, 126, 152]],
                [[28, 30, 30, 30], [43, 21, 70, 59], [4, 26, 52, 78, 104, 130, 156]],
                [[28, 30, 30, 30], [45, 22, 74, 62], [4, 30, 56, 82, 108, 134, 160]],
                [[28, 30, 30, 30], [47, 24, 77, 65], [4, 24, 52, 80, 108, 136, 164]],
                [[28, 30, 30, 30], [49, 25, 81, 68], [4, 28, 56, 84, 112, 140, 168]]
              ], t = 0, o = 1, r = 2, n = 4, i = 8, f = /^\d*$/, l = /^[A-Za-z0-9 $%*+\-./:]*$/, u = /^[A-Z0-9 $%*+\-./:]*$/, h = 1, a = 0, v = 3, y = 2, p = [], e = [-1], m = 0, w = 1; m < 255; ++m)
                p.push(w), e[w] = m, w = w * 2 ^ (w >= 128 ? 285 : 0);
              for (var D = [[]], m = 0; m < 30; ++m) {
                for (var I = D[m], E = [], T = 0; T <= m; ++T) {
                  var A = T < m ? p[I[T]] : 0, F = p[(m + (I[T - 1] || 0)) % 255];
                  E.push(e[A ^ F]);
                }
                D.push(E);
              }
              for (var b = {}, m = 0; m < 45; ++m)
                b["0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ $%*+-./:".charAt(m)] = m;
              var R = [
                function(k, S) {
                  return (k + S) % 2 === 0;
                },
                function(k, S) {
                  return k % 2 === 0;
                },
                function(k, S) {
                  return S % 3 === 0;
                },
                function(k, S) {
                  return (k + S) % 3 === 0;
                },
                function(k, S) {
                  return ((k / 2 | 0) + (S / 3 | 0)) % 2 === 0;
                },
                function(k, S) {
                  return k * S % 2 + k * S % 3 === 0;
                },
                function(k, S) {
                  return (k * S % 2 + k * S % 3) % 2 === 0;
                },
                function(k, S) {
                  return ((k + S) % 2 + k * S % 3) % 2 === 0;
                }
              ], N = function(k) {
                return k > 6;
              }, U = function(k) {
                return 4 * k + 17;
              }, W = function(k) {
                var S = d[k], L = 16 * k * k + 128 * k + 64;
                return N(k) && (L -= 36), S[2].length && (L -= 25 * S[2].length * S[2].length - 10 * S[2].length - 55), L;
              }, J = function(k, S) {
                var L = W(k) & -8, V = d[k];
                return L -= 8 * V[0][S] * V[1][S], L;
              }, ht = function(k, S) {
                switch (S) {
                  case o:
                    return k < 10 ? 10 : k < 27 ? 12 : 14;
                  case r:
                    return k < 10 ? 9 : k < 27 ? 11 : 13;
                  case n:
                    return k < 10 ? 8 : 16;
                  case i:
                    return k < 10 ? 8 : k < 27 ? 10 : 12;
                }
              }, K = function(k, S, L) {
                var V = J(k, L) - 4 - ht(k, S);
                switch (S) {
                  case o:
                    return (V / 10 | 0) * 3 + (V % 10 < 4 ? 0 : V % 10 < 7 ? 1 : 2);
                  case r:
                    return (V / 11 | 0) * 2 + (V % 11 < 6 ? 0 : 1);
                  case n:
                    return V / 8 | 0;
                  case i:
                    return V / 13 | 0;
                }
              }, nt = function(k, S) {
                switch (k) {
                  case o:
                    return S.match(f) ? S : null;
                  case r:
                    return S.match(l) ? S.toUpperCase() : null;
                  case n:
                    if (typeof S == "string") {
                      for (var L = [], V = 0; V < S.length; ++V) {
                        var it = S.charCodeAt(V);
                        it < 128 ? L.push(it) : it < 2048 ? L.push(
                          192 | it >> 6,
                          128 | it & 63
                        ) : it < 65536 ? L.push(
                          224 | it >> 12,
                          128 | it >> 6 & 63,
                          128 | it & 63
                        ) : L.push(
                          240 | it >> 18,
                          128 | it >> 12 & 63,
                          128 | it >> 6 & 63,
                          128 | it & 63
                        );
                      }
                      return L;
                    } else
                      return S;
                }
              }, xt = function(k, S, L, V) {
                var it = [], tt = 0, _ = 8, At = L.length, Rt = function(Dt, ae) {
                  if (ae >= _) {
                    for (it.push(tt | Dt >> (ae -= _)); ae >= 8; )
                      it.push(Dt >> (ae -= 8) & 255);
                    tt = 0, _ = 8;
                  }
                  ae > 0 && (tt |= (Dt & (1 << ae) - 1) << (_ -= ae));
                }, Yt = ht(k, S);
                switch (Rt(S, 4), Rt(At, Yt), S) {
                  case o:
                    for (var Gt = 2; Gt < At; Gt += 3)
                      Rt(parseInt(L.substring(Gt - 2, Gt + 1), 10), 10);
                    Rt(parseInt(L.substring(Gt - 2), 10), [0, 4, 7][At % 3]);
                    break;
                  case r:
                    for (var Gt = 1; Gt < At; Gt += 2)
                      Rt(b[L.charAt(Gt - 1)] * 45 + b[L.charAt(Gt)], 11);
                    At % 2 == 1 && Rt(b[L.charAt(Gt - 1)], 6);
                    break;
                  case n:
                    for (var Gt = 0; Gt < At; ++Gt)
                      Rt(L[Gt], 8);
                    break;
                }
                for (Rt(t, 4), _ < 8 && it.push(tt); it.length + 1 < V; )
                  it.push(236, 17);
                return it.length < V && it.push(236), it;
              }, bt = function(k, S) {
                for (var L = k.slice(0), V = k.length, it = S.length, tt = 0; tt < it; ++tt)
                  L.push(0);
                for (var tt = 0; tt < V; ) {
                  var _ = e[L[tt++]];
                  if (_ >= 0)
                    for (var At = 0; At < it; ++At)
                      L[tt + At] ^= p[(_ + S[At]) % 255];
                }
                return L.slice(V);
              }, Tt = function(k, S, L) {
                for (var V = [], it = k.length / S | 0, tt = 0, _ = S - k.length % S, At = 0; At < _; ++At)
                  V.push(tt), tt += it;
                for (var At = _; At < S; ++At)
                  V.push(tt), tt += it + 1;
                V.push(tt);
                for (var Rt = [], At = 0; At < S; ++At)
                  Rt.push(bt(k.slice(V[At], V[At + 1]), L));
                for (var Yt = [], Gt = k.length / S | 0, At = 0; At < Gt; ++At)
                  for (var Dt = 0; Dt < S; ++Dt)
                    Yt.push(k[V[Dt] + At]);
                for (var Dt = _; Dt < S; ++Dt)
                  Yt.push(k[V[Dt + 1] - 1]);
                for (var At = 0; At < L.length; ++At)
                  for (var Dt = 0; Dt < S; ++Dt)
                    Yt.push(Rt[Dt][At]);
                return Yt;
              }, It = function(k, S, L, V) {
                for (var it = k << V, tt = S - 1; tt >= 0; --tt)
                  it >> V + tt & 1 && (it ^= L << tt);
                return k << V | it;
              }, Lt = function(k) {
                for (var S = d[k], L = U(k), V = [], it = [], tt = 0; tt < L; ++tt)
                  V.push([]), it.push([]);
                var _ = function(xe, ce, we, zt, Qt) {
                  for (var le = 0; le < we; ++le)
                    for (var de = 0; de < zt; ++de)
                      V[xe + le][ce + de] = Qt[le] >> de & 1, it[xe + le][ce + de] = 1;
                };
                _(0, 0, 9, 9, [127, 65, 93, 93, 93, 65, 383, 0, 64]), _(L - 8, 0, 8, 9, [256, 127, 65, 93, 93, 93, 65, 127]), _(0, L - 8, 9, 8, [254, 130, 186, 186, 186, 130, 254, 0, 0]);
                for (var tt = 9; tt < L - 8; ++tt)
                  V[6][tt] = V[tt][6] = ~tt & 1, it[6][tt] = it[tt][6] = 1;
                for (var At = S[2], Rt = At.length, tt = 0; tt < Rt; ++tt)
                  for (var Yt = tt === 0 || tt === Rt - 1 ? 1 : 0, Gt = tt === 0 ? Rt - 1 : Rt, Dt = Yt; Dt < Gt; ++Dt)
                    _(At[tt], At[Dt], 5, 5, [31, 17, 21, 17, 31]);
                if (N(k))
                  for (var ae = It(k, 6, 7973, 12), Ae = 0, tt = 0; tt < 6; ++tt)
                    for (var Dt = 0; Dt < 3; ++Dt)
                      V[tt][L - 11 + Dt] = V[L - 11 + Dt][tt] = ae >> Ae++ & 1, it[tt][L - 11 + Dt] = it[L - 11 + Dt][tt] = 1;
                return { matrix: V, reserved: it };
              }, Ut = function(k, S, L) {
                for (var V = k.length, it = 0, tt = -1, _ = V - 1; _ >= 0; _ -= 2) {
                  _ == 6 && --_;
                  for (var At = tt < 0 ? V - 1 : 0, Rt = 0; Rt < V; ++Rt) {
                    for (var Yt = _; Yt > _ - 2; --Yt)
                      S[At][Yt] || (k[At][Yt] = L[it >> 3] >> (~it & 7) & 1, ++it);
                    At += tt;
                  }
                  tt = -tt;
                }
                return k;
              }, $ = function(k, S, L) {
                for (var V = R[L], it = k.length, tt = 0; tt < it; ++tt)
                  for (var _ = 0; _ < it; ++_)
                    S[tt][_] || (k[tt][_] ^= V(tt, _));
                return k;
              }, gt = function(k, S, L, V) {
                for (var it = k.length, tt = It(L << 3 | V, 5, 1335, 10) ^ 21522, _ = 0; _ < 15; ++_) {
                  var At = [0, 1, 2, 3, 4, 5, 7, 8, it - 7, it - 6, it - 5, it - 4, it - 3, it - 2, it - 1][_], Rt = [it - 1, it - 2, it - 3, it - 4, it - 5, it - 6, it - 7, it - 8, 7, 5, 4, 3, 2, 1, 0][_];
                  k[At][8] = k[8][Rt] = tt >> _ & 1;
                }
                return k;
              }, ut = function(k) {
                for (var S = 3, L = 3, V = 40, it = 10, tt = function(we) {
                  for (var zt = 0, Qt = 0; Qt < we.length; ++Qt)
                    we[Qt] >= 5 && (zt += S + (we[Qt] - 5));
                  for (var Qt = 5; Qt < we.length; Qt += 2) {
                    var le = we[Qt];
                    we[Qt - 1] == le && we[Qt - 2] == 3 * le && we[Qt - 3] == le && we[Qt - 4] == le && (we[Qt - 5] >= 4 * le || we[Qt + 1] >= 4 * le) && (zt += V);
                  }
                  return zt;
                }, _ = k.length, At = 0, Rt = 0, Yt = 0; Yt < _; ++Yt) {
                  var Gt = k[Yt], Dt;
                  Dt = [0];
                  for (var ae = 0; ae < _; ) {
                    var Ae;
                    for (Ae = 0; ae < _ && Gt[ae]; ++Ae)
                      ++ae;
                    for (Dt.push(Ae), Ae = 0; ae < _ && !Gt[ae]; ++Ae)
                      ++ae;
                    Dt.push(Ae);
                  }
                  At += tt(Dt), Dt = [0];
                  for (var ae = 0; ae < _; ) {
                    var Ae;
                    for (Ae = 0; ae < _ && k[ae][Yt]; ++Ae)
                      ++ae;
                    for (Dt.push(Ae), Ae = 0; ae < _ && !k[ae][Yt]; ++Ae)
                      ++ae;
                    Dt.push(Ae);
                  }
                  At += tt(Dt);
                  var xe = k[Yt + 1] || [];
                  Rt += Gt[0];
                  for (var ae = 1; ae < _; ++ae) {
                    var ce = Gt[ae];
                    Rt += ce, Gt[ae - 1] == ce && xe[ae] === ce && xe[ae - 1] === ce && (At += L);
                  }
                }
                return At += it * (Math.abs(Rt / _ / _ - 0.5) / 0.05 | 0), At;
              }, st = function(k, S, L, V, it) {
                var tt = d[S], _ = xt(S, L, k, J(S, V) >> 3);
                _ = Tt(_, tt[1][V], D[tt[0][V]]);
                var At = Lt(S), Rt = At.matrix, Yt = At.reserved;
                if (Ut(Rt, Yt, _), it < 0) {
                  $(Rt, Yt, 0), gt(Rt, Yt, V, 0);
                  var Gt = 0, Dt = ut(Rt);
                  for ($(Rt, Yt, 0), it = 1; it < 8; ++it) {
                    $(Rt, Yt, it), gt(Rt, Yt, V, it);
                    var ae = ut(Rt);
                    Dt > ae && (Dt = ae, Gt = it), $(Rt, Yt, it);
                  }
                  it = Gt;
                }
                return $(Rt, Yt, it), gt(Rt, Yt, V, it), Rt;
              };
              function yt(k, S) {
                var L = {
                  numeric: o,
                  alphanumeric: r,
                  octet: n
                }, V = {
                  L: h,
                  M: a,
                  Q: v,
                  H: y
                };
                S = S || {};
                var it = S.version || -1, tt = V[(S.eccLevel || "L").toUpperCase()], _ = S.mode ? L[S.mode.toLowerCase()] : -1, At = "mask" in S ? S.mask : -1;
                if (_ < 0)
                  typeof k == "string" ? k.match(f) ? _ = o : k.match(u) ? _ = r : _ = n : _ = n;
                else if (!(_ == o || _ == r || _ == n))
                  throw "invalid or unsupported mode";
                if (k = nt(_, k), k === null)
                  throw "invalid data format";
                if (tt < 0 || tt > 3)
                  throw "invalid ECC level";
                if (it < 0) {
                  for (it = 1; it <= 40 && !(k.length <= K(it, _, tt)); ++it)
                    ;
                  if (it > 40)
                    throw "too large data for the Qr format";
                } else if (it < 1 || it > 40)
                  throw "invalid Qr version! should be between 1 and 40";
                if (At != -1 && (At < 0 || At > 8))
                  throw "invalid mask";
                return st(k, it, _, tt, At);
              }
              function G(k, S) {
                var L = [], V = S.background || "#fff", it = S.foreground || "#000", tt = S.padding || 0, _ = yt(k, S), At = _.length, Rt = Math.floor(S.fit ? S.fit / At : 5), Yt = At * Rt + Rt * tt * 2, Gt = Rt * tt;
                L.push({
                  type: "rect",
                  x: 0,
                  y: 0,
                  w: Yt,
                  h: Yt,
                  lineWidth: 0,
                  color: V
                });
                for (var Dt = 0; Dt < At; ++Dt)
                  for (var ae = 0; ae < At; ++ae)
                    _[Dt][ae] && L.push({
                      type: "rect",
                      x: Rt * ae + Gt,
                      y: Rt * Dt + Gt,
                      w: Rt,
                      h: Rt,
                      lineWidth: 0,
                      color: it
                    });
                return {
                  canvas: L,
                  size: Yt
                };
              }
              function Et(k) {
                var S = G(k.qr, k);
                return k._canvas = S.canvas, k._width = k._height = k._minWidth = k._maxWidth = k._minHeight = k._maxHeight = S.size, k;
              }
              c.exports = {
                measure: Et
              };
            }
          ),
          /***/
          58050: (
            /***/
            function(c) {
              c.exports = {
                "4A0": [4767.87, 6740.79],
                "2A0": [3370.39, 4767.87],
                A0: [2383.94, 3370.39],
                A1: [1683.78, 2383.94],
                A2: [1190.55, 1683.78],
                A3: [841.89, 1190.55],
                A4: [595.28, 841.89],
                A5: [419.53, 595.28],
                A6: [297.64, 419.53],
                A7: [209.76, 297.64],
                A8: [147.4, 209.76],
                A9: [104.88, 147.4],
                A10: [73.7, 104.88],
                B0: [2834.65, 4008.19],
                B1: [2004.09, 2834.65],
                B2: [1417.32, 2004.09],
                B3: [1000.63, 1417.32],
                B4: [708.66, 1000.63],
                B5: [498.9, 708.66],
                B6: [354.33, 498.9],
                B7: [249.45, 354.33],
                B8: [175.75, 249.45],
                B9: [124.72, 175.75],
                B10: [87.87, 124.72],
                C0: [2599.37, 3676.54],
                C1: [1836.85, 2599.37],
                C2: [1298.27, 1836.85],
                C3: [918.43, 1298.27],
                C4: [649.13, 918.43],
                C5: [459.21, 649.13],
                C6: [323.15, 459.21],
                C7: [229.61, 323.15],
                C8: [161.57, 229.61],
                C9: [113.39, 161.57],
                C10: [79.37, 113.39],
                RA0: [2437.8, 3458.27],
                RA1: [1729.13, 2437.8],
                RA2: [1218.9, 1729.13],
                RA3: [864.57, 1218.9],
                RA4: [609.45, 864.57],
                SRA0: [2551.18, 3628.35],
                SRA1: [1814.17, 2551.18],
                SRA2: [1275.59, 1814.17],
                SRA3: [907.09, 1275.59],
                SRA4: [637.8, 907.09],
                EXECUTIVE: [521.86, 756],
                FOLIO: [612, 936],
                LEGAL: [612, 1008],
                LETTER: [612, 792],
                TABLOID: [792, 1224]
              };
            }
          ),
          /***/
          28034: (
            /***/
            function(c, d, t) {
              var o = t(16920).isString, r = t(16920).isArray, n = t(16920).isUndefined, i = t(16920).isNull;
              function f(l, u) {
                this.defaultStyle = u || {}, this.styleDictionary = l, this.styleOverrides = [];
              }
              f.prototype.clone = function() {
                var l = new f(this.styleDictionary, this.defaultStyle);
                return this.styleOverrides.forEach(function(u) {
                  l.styleOverrides.push(u);
                }), l;
              }, f.prototype.push = function(l) {
                this.styleOverrides.push(l);
              }, f.prototype.pop = function(l) {
                for (l = l || 1; l-- > 0; )
                  this.styleOverrides.pop();
              }, f.prototype.autopush = function(l) {
                if (o(l))
                  return 0;
                var u = [];
                l.style && (r(l.style) ? u = l.style : u = [l.style]);
                for (var h = 0, a = u.length; h < a; h++)
                  this.push(u[h]);
                var v = [
                  "font",
                  "fontSize",
                  "fontFeatures",
                  "bold",
                  "italics",
                  "alignment",
                  "color",
                  "columnGap",
                  "fillColor",
                  "fillOpacity",
                  "decoration",
                  "decorationStyle",
                  "decorationColor",
                  "background",
                  "lineHeight",
                  "characterSpacing",
                  "noWrap",
                  "markerColor",
                  "leadingIndent",
                  "sup",
                  "sub"
                  //'tableCellPadding'
                  // 'cellBorder',
                  // 'headerCellBorder',
                  // 'oddRowCellBorder',
                  // 'evenRowCellBorder',
                  // 'tableBorder'
                ], y = {}, p = !1;
                return v.forEach(function(e) {
                  !n(l[e]) && !i(l[e]) && (y[e] = l[e], p = !0);
                }), p && this.push(y), u.length + (p ? 1 : 0);
              }, f.prototype.auto = function(l, u) {
                var h = this.autopush(l), a = u();
                return h > 0 && this.pop(h), a;
              }, f.prototype.getProperty = function(l) {
                if (this.styleOverrides)
                  for (var u = this.styleOverrides.length - 1; u >= 0; u--) {
                    var h = this.styleOverrides[u];
                    if (o(h)) {
                      var a = this.styleDictionary[h];
                      if (a && !n(a[l]) && !i(a[l]))
                        return a[l];
                    } else if (!n(h[l]) && !i(h[l]))
                      return h[l];
                  }
                return this.defaultStyle && this.defaultStyle[l];
              }, c.exports = f;
            }
          ),
          /***/
          48730: (
            /***/
            function(c, d, t) {
              var o = t(26651);
              function r(f) {
                var l = parseFloat(f);
                if (!(typeof l != "number" || isNaN(l)))
                  return l;
              }
              function n(f) {
                var l;
                try {
                  l = new o.XmlDocument(f);
                } catch (u) {
                  throw new Error("SVGMeasure: " + u);
                }
                if (l.name !== "svg")
                  throw new Error("SVGMeasure: expected <svg> document");
                return l;
              }
              function i() {
              }
              i.prototype.measureSVG = function(f) {
                var l = n(f), u = r(l.attr.width), h = r(l.attr.height);
                if ((u == null || h == null) && typeof l.attr.viewBox == "string") {
                  var a = l.attr.viewBox.split(/[,\s]+/);
                  if (a.length !== 4)
                    throw new Error("Unexpected svg viewbox format, should have 4 entries but found: '" + l.attr.viewBox + "'");
                  u == null && (u = r(a[2])), h == null && (h = r(a[3]));
                }
                return {
                  width: u,
                  height: h
                };
              }, i.prototype.writeDimensions = function(f, l) {
                var u = n(f);
                return u.attr.width = "" + l.width, u.attr.height = "" + l.height, u.toString();
              }, c.exports = i;
            }
          ),
          /***/
          41729: (
            /***/
            function(c, d, t) {
              var o = t(65354), r = t(16920).isFunction, n = t(16920).isNumber;
              function i(f) {
                this.tableNode = f;
              }
              i.prototype.beginTable = function(f) {
                var l, u, h = this;
                if (l = this.tableNode, this.offsets = l._offsets, this.layout = l._layout, u = f.context().availableWidth - this.offsets.total, o.buildColumnWidths(l.table.widths, u), this.tableWidth = l._offsets.total + a(), this.rowSpanData = v(), this.cleanUpRepeatables = !1, this.headerRows = l.table.headerRows || 0, this.headerRows > l.table.body.length)
                  throw new Error(`Too few rows in the table. Property headerRows requires at least ${this.headerRows}, contains only ${l.table.body.length}`);
                this.rowsWithoutPageBreak = this.headerRows + (l.table.keepWithHeaderRows || 0), this.dontBreakRows = l.table.dontBreakRows || !1, this.rowsWithoutPageBreak && f.beginUnbreakableBlock(), y(this.tableNode.table.body), this.drawHorizontalLine(0, f);
                function a() {
                  var p = 0;
                  return l.table.widths.forEach(function(e) {
                    p += e._calcWidth;
                  }), p;
                }
                function v() {
                  var p = [], e = 0, m = 0;
                  p.push({ left: 0, rowSpan: 0 });
                  for (var w = 0, D = h.tableNode.table.body[0].length; w < D; w++) {
                    var I = h.layout.paddingLeft(w, h.tableNode) + h.layout.paddingRight(w, h.tableNode), E = h.layout.vLineWidth(w, h.tableNode);
                    m = I + E + h.tableNode.table.widths[w]._calcWidth, p[p.length - 1].width = m, e += m, p.push({ left: e, rowSpan: 0, width: 0 });
                  }
                  return p;
                }
                function y(p) {
                  for (var e = 0; e < p.length; e++)
                    for (var m = p[e], w = 0; w < m.length; w++) {
                      var D = m[w];
                      if (D.border) {
                        for (var I = D.rowSpan || 1, E = D.colSpan || 1, T = 0; T < I; T++)
                          D.border[0] !== void 0 && T > 0 && F(e + T, w, 0, D.border[0]), D.border[2] !== void 0 && F(e + T, w + E - 1, 2, D.border[2]);
                        for (var A = 0; A < E; A++)
                          D.border[1] !== void 0 && A > 0 && F(e, w + A, 1, D.border[1]), D.border[3] !== void 0 && F(e + I - 1, w + A, 3, D.border[3]);
                      }
                    }
                  function F(b, R, N, U) {
                    var W = p[b][R];
                    W.border = W.border || {}, W.border[N] = U;
                  }
                }
              }, i.prototype.onRowBreak = function(f, l) {
                var u = this;
                return function() {
                  var h = u.rowPaddingTop + (u.headerRows ? 0 : u.topLineWidth);
                  l.context().availableHeight -= u.reservedAtBottom, l.context().moveDown(h);
                };
              }, i.prototype.beginRow = function(f, l) {
                this.topLineWidth = this.layout.hLineWidth(f, this.tableNode), this.rowPaddingTop = this.layout.paddingTop(f, this.tableNode), this.bottomLineWidth = this.layout.hLineWidth(f + 1, this.tableNode), this.rowPaddingBottom = this.layout.paddingBottom(f, this.tableNode), this.rowCallback = this.onRowBreak(f, l), l.tracker.startTracking("pageChanged", this.rowCallback), this.dontBreakRows && l.beginUnbreakableBlock(), this.rowTopY = l.context().y, this.reservedAtBottom = this.bottomLineWidth + this.rowPaddingBottom, l.context().availableHeight -= this.reservedAtBottom, l.context().moveDown(this.rowPaddingTop);
              }, i.prototype.drawHorizontalLine = function(f, l, u) {
                var h = this.layout.hLineWidth(f, this.tableNode);
                if (h) {
                  var a = this.layout.hLineStyle(f, this.tableNode), v;
                  a && a.dash && (v = a.dash);
                  for (var y = h / 2, p = null, e = this.tableNode.table.body, m, w, D, I = 0, E = this.rowSpanData.length; I < E; I++) {
                    var T = this.rowSpanData[I], A = !T.rowSpan, F = null;
                    if (A && I < E - 1) {
                      var b = !1, R = !1, N = !1;
                      f > 0 && (m = e[f - 1][I], R = m.border ? m.border[3] : this.layout.defaultBorder, R && m.borderColor && (F = m.borderColor[3])), f < e.length && (w = e[f][I], b = w.border ? w.border[1] : this.layout.defaultBorder, b && F == null && w.borderColor && (F = w.borderColor[1])), A = b || R;
                    }
                    if (m && m._rowSpanCurrentOffset && (D = e[f - 1 - m._rowSpanCurrentOffset][I], N = D && D.border ? D.border[3] : this.layout.defaultBorder, N && D && D.borderColor && (F = D.borderColor[3])), F == null && (F = r(this.layout.hLineColor) ? this.layout.hLineColor(f, this.tableNode, I) : this.layout.hLineColor), !p && A && (p = { left: T.left, width: 0 }), A) {
                      var U = 0;
                      if (D && D.colSpan && N) {
                        for (; D.colSpan > U; )
                          p.width += this.rowSpanData[I + U++].width || 0;
                        I += U - 1;
                      } else if (m && m.colSpan && R) {
                        for (; m.colSpan > U; )
                          p.width += this.rowSpanData[I + U++].width || 0;
                        I += U - 1;
                      } else if (w && w.colSpan && b) {
                        for (; w.colSpan > U; )
                          p.width += this.rowSpanData[I + U++].width || 0;
                        I += U - 1;
                      } else
                        p.width += this.rowSpanData[I].width || 0;
                    }
                    var W = (u || 0) + y;
                    A && p && p.width && (l.addVector({
                      type: "line",
                      x1: p.left,
                      x2: p.left + p.width,
                      y1: W,
                      y2: W,
                      lineWidth: h,
                      dash: v,
                      lineColor: F
                    }, !1, u), p = null, F = null, m = null, w = null, D = null);
                  }
                  l.context().moveDown(h);
                }
              }, i.prototype.drawVerticalLine = function(f, l, u, h, a, v, y) {
                var p = this.layout.vLineWidth(h, this.tableNode);
                if (p !== 0) {
                  var e = this.layout.vLineStyle(h, this.tableNode), m;
                  e && e.dash && (m = e.dash);
                  var w = this.tableNode.table.body, D, I, E;
                  if (h > 0 && (D = w[v][y], D && D.borderColor && (D.border ? D.border[2] : this.layout.defaultBorder) && (E = D.borderColor[2])), E == null && h < w.length && (I = w[v][h], I && I.borderColor && (I.border ? I.border[0] : this.layout.defaultBorder) && (E = I.borderColor[0])), E == null && D && D._rowSpanCurrentOffset) {
                    var T = w[v - D._rowSpanCurrentOffset][y];
                    T.borderColor && (T.border ? T.border[2] : this.layout.defaultBorder) && (E = T.borderColor[2]);
                  }
                  if (E == null && I && I._rowSpanCurrentOffset) {
                    var A = w[v - I._rowSpanCurrentOffset][h];
                    A.borderColor && (A.border ? A.border[2] : this.layout.defaultBorder) && (E = A.borderColor[2]);
                  }
                  E == null && (E = r(this.layout.vLineColor) ? this.layout.vLineColor(h, this.tableNode, v) : this.layout.vLineColor), a.addVector({
                    type: "line",
                    x1: f + p / 2,
                    x2: f + p / 2,
                    y1: l,
                    y2: u,
                    lineWidth: p,
                    dash: m,
                    lineColor: E
                  }, !1, !0), D = null, I = null, E = null;
                }
              }, i.prototype.endTable = function(f) {
                this.cleanUpRepeatables && f.popFromRepeatables();
              }, i.prototype.endRow = function(f, l, u) {
                var h, a, v = this;
                l.tracker.stopTracking("pageChanged", this.rowCallback), l.context().moveDown(this.layout.paddingBottom(f, this.tableNode)), l.context().availableHeight += this.reservedAtBottom;
                var y = l.context().page, p = l.context().y, e = k(), m = [], w = u && u.length > 0, D = this.tableNode.table.body;
                if (m.push({
                  y0: this.rowTopY,
                  page: w ? u[0].prevPage : y
                }), w)
                  for (a = 0, h = u.length; a < h; a++) {
                    var I = u[a];
                    m[m.length - 1].y1 = I.prevY, m.push({ y0: I.y, page: I.prevPage + 1 });
                  }
                m[m.length - 1].y1 = p;
                for (var E = m[0].y1 - m[0].y0 === this.rowPaddingTop, T = E ? 1 : 0, A = m.length; T < A; T++) {
                  var F = T < m.length - 1, b = T > 0 && !this.headerRows, R = b ? 0 : this.topLineWidth, N = m[T].y0, U = m[T].y1;
                  for (F && (U = U + this.rowPaddingBottom), l.context().page != m[T].page && (l.context().page = m[T].page, this.reservedAtBottom = 0), a = 0, h = e.length; a < h; a++) {
                    var W = !1, J = !1, ht = e[a].index;
                    if (ht < D[f].length) {
                      var K = D[f][ht];
                      W = K.border ? K.border[0] : this.layout.defaultBorder, J = K.border ? K.border[2] : this.layout.defaultBorder;
                    }
                    if (ht > 0 && !W) {
                      var K = D[f][ht - 1];
                      W = K.border ? K.border[2] : this.layout.defaultBorder;
                    }
                    if (ht + 1 < D[f].length && !J) {
                      var K = D[f][ht + 1];
                      J = K.border ? K.border[0] : this.layout.defaultBorder;
                    }
                    if (W && this.drawVerticalLine(e[a].x, N - R, U + this.bottomLineWidth, e[a].index, l, f, e[a - 1] ? e[a - 1].index : null), a < h - 1) {
                      var nt = D[f][ht].fillColor, xt = D[f][ht].fillOpacity;
                      nt || (nt = r(this.layout.fillColor) ? this.layout.fillColor(f, this.tableNode, ht) : this.layout.fillColor), n(xt) || (xt = r(this.layout.fillOpacity) ? this.layout.fillOpacity(f, this.tableNode, ht) : this.layout.fillOpacity);
                      var bt = D[f][ht].overlayPattern, Tt = D[f][ht].overlayOpacity;
                      if (nt || bt) {
                        var It = W ? this.layout.vLineWidth(ht, this.tableNode) : 0, Lt;
                        (ht === 0 || ht + 1 == D[f].length) && !J ? Lt = this.layout.vLineWidth(ht + 1, this.tableNode) : J ? Lt = this.layout.vLineWidth(ht + 1, this.tableNode) / 2 : Lt = 0;
                        var Ut = this.dontBreakRows ? e[a].x + It : e[a].x + It / 2, $ = this.dontBreakRows ? N : N - R / 2, gt = e[a + 1].x + Lt, ut = this.dontBreakRows ? U + this.bottomLineWidth : U + this.bottomLineWidth / 2, st = gt - Ut, yt = ut - $;
                        nt && l.addVector({
                          type: "rect",
                          x: Ut,
                          y: $,
                          w: st,
                          h: yt,
                          lineWidth: 0,
                          color: nt,
                          fillOpacity: xt
                        }, !1, !0, l.context().backgroundLength[l.context().page]), bt && l.addVector({
                          type: "rect",
                          x: Ut,
                          y: $,
                          w: st,
                          h: yt,
                          lineWidth: 0,
                          color: bt,
                          fillOpacity: Tt
                        }, !1, !0);
                      }
                    }
                  }
                  F && this.layout.hLineWhenBroken !== !1 && this.drawHorizontalLine(f + 1, l, U), b && this.layout.hLineWhenBroken !== !1 && this.drawHorizontalLine(f, l, N);
                }
                l.context().page = y, l.context().y = p;
                var G = this.tableNode.table.body[f];
                for (a = 0, h = G.length; a < h; a++) {
                  if (G[a].rowSpan) {
                    if (this.rowSpanData[a].rowSpan = G[a].rowSpan, G[a].colSpan && G[a].colSpan > 1)
                      for (var Et = 1; Et < G[a].rowSpan; Et++)
                        this.tableNode.table.body[f + Et][a]._colSpan = G[a].colSpan;
                    if (G[a].rowSpan && G[a].rowSpan > 1)
                      for (var Et = 1; Et < G[a].rowSpan; Et++)
                        this.tableNode.table.body[f + Et][a]._rowSpanCurrentOffset = Et;
                  }
                  this.rowSpanData[a].rowSpan > 0 && this.rowSpanData[a].rowSpan--;
                }
                this.drawHorizontalLine(f + 1, l), this.headerRows && f === this.headerRows - 1 && (this.headerRepeatable = l.currentBlockToRepeatable()), this.dontBreakRows && l.tracker.auto(
                  "pageChanged",
                  function() {
                    !v.headerRows && v.layout.hLineWhenBroken !== !1 && v.drawHorizontalLine(f, l);
                  },
                  function() {
                    l.commitUnbreakableBlock();
                  }
                ), this.headerRepeatable && (f === this.rowsWithoutPageBreak - 1 || f === this.tableNode.table.body.length - 1) && (l.commitUnbreakableBlock(), l.pushToRepeatables(this.headerRepeatable), this.cleanUpRepeatables = !0, this.headerRepeatable = null);
                function k() {
                  for (var S = [], L = 0, V = 0, it = v.tableNode.table.body[f].length; V < it; V++) {
                    if (!L) {
                      S.push({ x: v.rowSpanData[V].left, index: V });
                      var tt = v.tableNode.table.body[f][V];
                      L = tt._colSpan || tt.colSpan || 0;
                    }
                    L > 0 && L--;
                  }
                  return S.push({ x: v.rowSpanData[v.rowSpanData.length - 1].left, index: v.rowSpanData.length - 1 }), S;
                }
              }, c.exports = i;
            }
          ),
          /***/
          4986: (
            /***/
            function(c, d, t) {
              var o = t(16920).isArray, r = t(16920).isPattern, n = t(16920).getPattern;
              function i(h) {
                for (var a = [], v = null, y = 0, p = h.inlines.length; y < p; y++) {
                  var e = h.inlines[y], m = e.decoration;
                  if (!m) {
                    v = null;
                    continue;
                  }
                  o(m) || (m = [m]);
                  for (var w = e.decorationColor || e.color || "black", D = e.decorationStyle || "solid", I = 0, E = m.length; I < E; I++) {
                    var T = m[I];
                    !v || T !== v.decoration || D !== v.decorationStyle || w !== v.decorationColor ? (v = {
                      line: h,
                      decoration: T,
                      decorationColor: w,
                      decorationStyle: D,
                      inlines: [e]
                    }, a.push(v)) : v.inlines.push(e);
                  }
                }
                return a;
              }
              function f(h, a, v, y) {
                function p() {
                  for (var It = 0, Lt = 0, Ut = h.inlines.length; Lt < Ut; Lt++) {
                    var $ = h.inlines[Lt];
                    It = $.fontSize > It ? Lt : It;
                  }
                  return h.inlines[It];
                }
                function e() {
                  for (var It = 0, Lt = 0, Ut = h.inlines.length; Lt < Ut; Lt++) {
                    var $ = h.inlines[Lt].justifyShift || 0;
                    It += h.inlines[Lt].width + $;
                  }
                  return It;
                }
                var m = h.inlines[0], w = p(), D = e(), I = h.line.getAscenderHeight(), E = w.font.ascender / 1e3 * w.fontSize, T = w.height, A = T - E, F = 0.5 + Math.floor(Math.max(w.fontSize - 8, 0) / 2) * 0.12;
                switch (h.decoration) {
                  case "underline":
                    v += I + A * 0.45;
                    break;
                  case "overline":
                    v += I - E * 0.85;
                    break;
                  case "lineThrough":
                    v += I - E * 0.25;
                    break;
                  default:
                    throw "Unknown decoration : " + h.decoration;
                }
                if (y.save(), h.decorationStyle === "double") {
                  var b = Math.max(0.5, F * 2);
                  y.fillColor(h.decorationColor).rect(a + m.x, v - F / 2, D, F / 2).fill().rect(a + m.x, v + b - F / 2, D, F / 2).fill();
                } else if (h.decorationStyle === "dashed") {
                  var R = Math.ceil(D / 6.8), N = a + m.x;
                  y.rect(N, v, D, F).clip(), y.fillColor(h.decorationColor);
                  for (var U = 0; U < R; U++)
                    y.rect(N, v - F / 2, 3.96, F).fill(), N += 6.8;
                } else if (h.decorationStyle === "dotted") {
                  var W = Math.ceil(D / (F * 3)), J = a + m.x;
                  y.rect(J, v, D, F).clip(), y.fillColor(h.decorationColor);
                  for (var ht = 0; ht < W; ht++)
                    y.rect(J, v - F / 2, F, F).fill(), J += F * 3;
                } else if (h.decorationStyle === "wavy") {
                  var K = 0.7, nt = 1, xt = Math.ceil(D / (K * 2)) + 1, bt = a + m.x - 1;
                  y.rect(a + m.x, v - nt, D, v + nt).clip(), y.lineWidth(0.24), y.moveTo(bt, v);
                  for (var Tt = 0; Tt < xt; Tt++)
                    y.bezierCurveTo(bt + K, v - nt, bt + K * 2, v - nt, bt + K * 3, v).bezierCurveTo(bt + K * 4, v + nt, bt + K * 5, v + nt, bt + K * 6, v), bt += K * 6;
                  y.stroke(h.decorationColor);
                } else
                  y.fillColor(h.decorationColor).rect(a + m.x, v - F / 2, D, F).fill();
                y.restore();
              }
              function l(h, a, v, y) {
                for (var p = i(h), e = 0, m = p.length; e < m; e++)
                  f(p[e], a, v, y);
              }
              function u(h, a, v, y, p) {
                for (var e = h.getHeight(), m = 0, w = h.inlines.length; m < w; m++) {
                  var D = h.inlines[m];
                  if (D.background) {
                    var I = D.background;
                    r(D.background) && (I = n(D.background, y));
                    var E = D.justifyShift || 0;
                    p.fillColor(I).rect(a + D.x - E, v, D.width + E, e).fill();
                  }
                }
              }
              c.exports = {
                drawBackground: u,
                drawDecorations: l
              };
            }
          ),
          /***/
          28045: (
            /***/
            function(c, d, t) {
              var o = t(16920).isString, r = t(16920).isNumber, n = t(16920).isObject, i = t(16920).isArray, f = t(16920).isUndefined, l = t(46982), u = /^(\s)+/g, h = /(\s)+$/g;
              function a(I) {
                this.fontProvider = I;
              }
              a.prototype.buildInlines = function(I, E) {
                var T = w(this.fontProvider, I, E), A = 0, F = 0, b;
                return T.forEach(function(N) {
                  A = Math.max(A, N.width - N.leadingCut - N.trailingCut), b || (b = { width: 0, leadingCut: N.leadingCut, trailingCut: 0 }), b.width += N.width, b.trailingCut = N.trailingCut, F = Math.max(F, R(b)), N.lineEnd && (b = null);
                }), m({}, E, "noWrap", !1) && (A = F), {
                  items: T,
                  minWidth: A,
                  maxWidth: F
                };
                function R(N) {
                  return Math.max(0, N.width - N.leadingCut - N.trailingCut);
                }
              }, a.prototype.sizeOfString = function(I, E) {
                I = I ? I.toString().replace(/\t/g, "    ") : "";
                var T = m({}, E, "font", "Roboto"), A = m({}, E, "fontSize", 12), F = m({}, E, "fontFeatures", null), b = m({}, E, "bold", !1), R = m({}, E, "italics", !1), N = m({}, E, "lineHeight", 1), U = m({}, E, "characterSpacing", 0), W = this.fontProvider.provideFont(T, b, R);
                return {
                  width: D(I, W, A, U, F),
                  height: W.lineHeight(A) * N,
                  fontSize: A,
                  lineHeight: N,
                  ascender: W.ascender / 1e3 * A,
                  descender: W.descender / 1e3 * A
                };
              }, a.prototype.sizeOfRotatedText = function(I, E, T) {
                var A = E * Math.PI / -180, F = this.sizeOfString(I, T);
                return {
                  width: Math.abs(F.height * Math.sin(A)) + Math.abs(F.width * Math.cos(A)),
                  height: Math.abs(F.width * Math.sin(A)) + Math.abs(F.height * Math.cos(A))
                };
              }, a.prototype.widthOfString = function(I, E, T, A, F) {
                return D(I, E, T, A, F);
              };
              function v(I, E) {
                var T = [];
                if (I = I.replace(/\t/g, "    "), E)
                  return T.push({ text: I }), T;
                for (var A = new l(I), F = 0, b; b = A.nextBreak(); ) {
                  var R = I.slice(F, b.position);
                  b.required || R.match(/\r?\n$|\r$/) ? (R = R.replace(/\r?\n$|\r$/, ""), T.push({ text: R, lineEnd: !0 })) : T.push({ text: R }), F = b.position;
                }
                return T;
              }
              function y(I, E) {
                E = E || {}, I = I || {};
                for (var T in I)
                  T != "text" && I.hasOwnProperty(T) && (E[T] = I[T]);
                return E;
              }
              function p(I, E) {
                function T(It) {
                  return It.reduce(function(Lt, Ut) {
                    var $ = i(Ut.text) ? T(Ut.text) : Ut, gt = [].concat($).some(Array.isArray);
                    return Lt.concat(gt ? T($) : $);
                  }, []);
                }
                function A(It, Lt, Ut) {
                  if (f(Lt[It]) || Lt[It].lineEnd)
                    return null;
                  var $ = Lt[It].text;
                  if (Ut) {
                    var gt = v(e($), !1);
                    if (f(gt[gt.length - 1]))
                      return null;
                    $ = gt[gt.length - 1].text;
                  }
                  return $;
                }
                var F = [];
                i(I) || (I = [I]), I = T(I);
                for (var b = null, R = 0, N = I.length; R < N; R++) {
                  var U = I[R], W = null, J, ht = m(U || {}, E, "noWrap", !1);
                  if (n(U) ? (U._textRef && U._textRef._textNodeRef.text && (U.text = U._textRef._textNodeRef.text), J = v(e(U.text), ht), W = y(U)) : J = v(e(U), ht), b && J.length) {
                    var K = A(0, J, ht), nt = v(e(b + K), !1);
                    nt.length === 1 && (F[F.length - 1].noNewLine = !0);
                  }
                  for (var xt = 0, bt = J.length; xt < bt; xt++) {
                    var Tt = {
                      text: J[xt].text
                    };
                    J[xt].lineEnd && (Tt.lineEnd = !0), y(W, Tt), F.push(Tt);
                  }
                  b = null, R + 1 < N && (b = A(J.length - 1, J, ht));
                }
                return F;
              }
              function e(I) {
                return I == null ? "" : r(I) ? I.toString() : o(I) ? I : I.toString();
              }
              function m(I, E, T, A) {
                var F;
                return I[T] !== void 0 && I[T] !== null ? I[T] : E ? (E.auto(I, function() {
                  F = E.getProperty(T);
                }), F ?? A) : A;
              }
              function w(I, E, T) {
                var A = p(E, T);
                if (A.length) {
                  var F = m(A[0], T, "leadingIndent", 0);
                  F && (A[0].leadingCut = -F, A[0].leadingIndent = F);
                }
                return A.forEach(function(b) {
                  var R = m(b, T, "font", "Roboto"), N = m(b, T, "fontSize", 12), U = m(b, T, "fontFeatures", null), W = m(b, T, "bold", !1), J = m(b, T, "italics", !1), ht = m(b, T, "color", "black"), K = m(b, T, "decoration", null), nt = m(b, T, "decorationColor", null), xt = m(b, T, "decorationStyle", null), bt = m(b, T, "background", null), Tt = m(b, T, "lineHeight", 1), It = m(b, T, "characterSpacing", 0), Lt = m(b, T, "link", null), Ut = m(b, T, "linkToPage", null), $ = m(b, T, "linkToDestination", null), gt = m(b, T, "noWrap", null), ut = m(b, T, "preserveLeadingSpaces", !1), st = m(b, T, "preserveTrailingSpaces", !1), yt = m(b, T, "opacity", 1), G = m(b, T, "sup", !1), Et = m(b, T, "sub", !1);
                  (G || Et) && b.fontSize === void 0 && (N *= 0.58);
                  var k = I.provideFont(R, W, J);
                  b.width = D(b.text, k, N, It, U), b.height = k.lineHeight(N) * Tt, b.leadingCut || (b.leadingCut = 0);
                  var S;
                  !ut && (S = b.text.match(u)) && (b.leadingCut += D(S[0], k, N, It, U));
                  var L;
                  !st && (L = b.text.match(h)) ? b.trailingCut = D(L[0], k, N, It, U) : b.trailingCut = 0, b.alignment = m(b, T, "alignment", "left"), b.font = k, b.fontSize = N, b.fontFeatures = U, b.characterSpacing = It, b.color = ht, b.decoration = K, b.decorationColor = nt, b.decorationStyle = xt, b.background = bt, b.link = Lt, b.linkToPage = Ut, b.linkToDestination = $, b.noWrap = gt, b.opacity = yt, b.sup = G, b.sub = Et;
                }), A;
              }
              function D(I, E, T, A, F) {
                return E.widthOfString(I, T, F) + (A || 0) * (I.length - 1);
              }
              c.exports = a;
            }
          ),
          /***/
          73602: (
            /***/
            function(c) {
              function d() {
                this.events = {};
              }
              d.prototype.startTracking = function(t, o) {
                var r = this.events[t] || (this.events[t] = []);
                r.indexOf(o) < 0 && r.push(o);
              }, d.prototype.stopTracking = function(t, o) {
                var r = this.events[t];
                if (r) {
                  var n = r.indexOf(o);
                  n >= 0 && r.splice(n, 1);
                }
              }, d.prototype.emit = function(t) {
                var o = Array.prototype.slice.call(arguments, 1), r = this.events[t];
                r && r.forEach(function(n) {
                  n.apply(this, o);
                });
              }, d.prototype.auto = function(t, o, r) {
                this.startTracking(t, o), r(), this.stopTracking(t, o);
              }, c.exports = d;
            }
          ),
          /***/
          70457: (
            /***/
            function(c, d, t) {
              var o, r, n;
              (function(i, f) {
                r = [], o = f, n = typeof o == "function" ? o.apply(d, r) : o, n !== void 0 && (c.exports = n);
              })(this, function() {
                function i(y, p) {
                  return typeof p > "u" ? p = { autoBom: !1 } : typeof p != "object" && (console.warn("Deprecated: Expected third argument to be a object"), p = { autoBom: !p }), p.autoBom && /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(y.type) ? new Blob(["\uFEFF", y], { type: y.type }) : y;
                }
                function f(y, p, e) {
                  var m = new XMLHttpRequest();
                  m.open("GET", y), m.responseType = "blob", m.onload = function() {
                    v(m.response, p, e);
                  }, m.onerror = function() {
                    console.error("could not download file");
                  }, m.send();
                }
                function l(y) {
                  var p = new XMLHttpRequest();
                  p.open("HEAD", y, !1);
                  try {
                    p.send();
                  } catch {
                  }
                  return 200 <= p.status && 299 >= p.status;
                }
                function u(y) {
                  try {
                    y.dispatchEvent(new MouseEvent("click"));
                  } catch {
                    var p = document.createEvent("MouseEvents");
                    p.initMouseEvent("click", !0, !0, window, 0, 0, 0, 80, 20, !1, !1, !1, !1, 0, null), y.dispatchEvent(p);
                  }
                }
                var h = typeof window == "object" && window.window === window ? window : typeof self == "object" && self.self === self ? self : typeof t.g == "object" && t.g.global === t.g ? t.g : void 0, a = h.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent), v = h.saveAs || (typeof window != "object" || window !== h ? function() {
                } : typeof HTMLAnchorElement < "u" && "download" in HTMLAnchorElement.prototype && !a ? function(y, p, e) {
                  var m = h.URL || h.webkitURL, w = document.createElement("a");
                  p = p || y.name || "download", w.download = p, w.rel = "noopener", typeof y == "string" ? (w.href = y, w.origin === location.origin ? u(w) : l(w.href) ? f(y, p, e) : u(w, w.target = "_blank")) : (w.href = m.createObjectURL(y), setTimeout(function() {
                    m.revokeObjectURL(w.href);
                  }, 4e4), setTimeout(function() {
                    u(w);
                  }, 0));
                } : "msSaveOrOpenBlob" in navigator ? function(y, p, e) {
                  if (p = p || y.name || "download", typeof y != "string")
                    navigator.msSaveOrOpenBlob(i(y, e), p);
                  else if (l(y))
                    f(y, p, e);
                  else {
                    var m = document.createElement("a");
                    m.href = y, m.target = "_blank", setTimeout(function() {
                      u(m);
                    });
                  }
                } : function(y, p, e, m) {
                  if (m = m || open("", "_blank"), m && (m.document.title = m.document.body.innerText = "downloading..."), typeof y == "string")
                    return f(y, p, e);
                  var w = y.type === "application/octet-stream", D = /constructor/i.test(h.HTMLElement) || h.safari, I = /CriOS\/[\d]+/.test(navigator.userAgent);
                  if ((I || w && D || a) && typeof FileReader < "u") {
                    var E = new FileReader();
                    E.onloadend = function() {
                      var F = E.result;
                      F = I ? F : F.replace(/^data:[^;]*;/, "data:attachment/file;"), m ? m.location.href = F : location = F, m = null;
                    }, E.readAsDataURL(y);
                  } else {
                    var T = h.URL || h.webkitURL, A = T.createObjectURL(y);
                    m ? m.location = A : location.href = A, m = null, setTimeout(function() {
                      T.revokeObjectURL(A);
                    }, 4e4);
                  }
                });
                h.saveAs = v.saveAs = v, c.exports = v;
              });
            }
          ),
          /***/
          89233: (
            /***/
            function(c, d, t) {
              var o = t(43060).Buffer;
              t(26364), t(86632), t(61928), t(16543), t(33142), t(10853), t(6208), t(80044), t(18821), t(54883), t(30644), t(45007), t(68995), t(55862), t(80174), t(73214), t(15158), t(54994), t(33130), t(66923), t(35054), t(80238), t(99041), t(45550), t(84750), t(55281), t(39275), t(75668), t(4845), t(85005), t(63815), t(83382), t(27013), t(51360), t(21358), t(66887), t(77353), t(6366), t(52372), t(65056), t(53677), t(77355), t(28784), t(98554), t(72403), t(14312), t(63444), t(40070), t(36798), t(58036), t(27578), t(99641), t(12298), t(97306), t(25480), t(14314), t(10572), t(100), t(33290), t(29897);
              var r;
              function n(ft, X) {
                for (var et = 0; et < X.length; et++) {
                  var P = X[et];
                  P.enumerable = P.enumerable || !1, P.configurable = !0, "value" in P && (P.writable = !0), Object.defineProperty(ft, f(P.key), P);
                }
              }
              function i(ft, X, et) {
                return X && n(ft.prototype, X), et && n(ft, et), Object.defineProperty(ft, "prototype", { writable: !1 }), ft;
              }
              function f(ft) {
                var X = l(ft, "string");
                return typeof X == "symbol" ? X : String(X);
              }
              function l(ft, X) {
                if (typeof ft != "object" || !ft)
                  return ft;
                var et = ft[Symbol.toPrimitive];
                if (et !== void 0) {
                  var P = et.call(ft, X || "default");
                  if (typeof P != "object")
                    return P;
                  throw new TypeError("@@toPrimitive must return a primitive value.");
                }
                return (X === "string" ? String : Number)(ft);
              }
              function u(ft, X) {
                ft.prototype = Object.create(X.prototype), ft.prototype.constructor = ft, h(ft, X);
              }
              function h(ft, X) {
                return h = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function(P, M) {
                  return P.__proto__ = M, P;
                }, h(ft, X);
              }
              function a(ft, X) {
                var et = typeof Symbol < "u" && ft[Symbol.iterator] || ft["@@iterator"];
                if (et)
                  return (et = et.call(ft)).next.bind(et);
                if (Array.isArray(ft) || (et = v(ft)) || X && ft && typeof ft.length == "number") {
                  et && (ft = et);
                  var P = 0;
                  return function() {
                    return P >= ft.length ? { done: !0 } : { done: !1, value: ft[P++] };
                  };
                }
                throw new TypeError(`Invalid attempt to iterate non-iterable instance.
In order to be iterable, non-array objects must have a [Symbol.iterator]() method.`);
              }
              function v(ft, X) {
                if (ft) {
                  if (typeof ft == "string")
                    return y(ft, X);
                  var et = Object.prototype.toString.call(ft).slice(8, -1);
                  if (et === "Object" && ft.constructor && (et = ft.constructor.name), et === "Map" || et === "Set")
                    return Array.from(ft);
                  if (et === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(et))
                    return y(ft, X);
                }
              }
              function y(ft, X) {
                (X == null || X > ft.length) && (X = ft.length);
                for (var et = 0, P = new Array(X); et < X; et++)
                  P[et] = ft[et];
                return P;
              }
              function p(ft) {
                return ft && typeof ft == "object" && "default" in ft ? ft.default : ft;
              }
              var e = p(t(27398)), m = t(76959), w = p(t(27074)), D = p(t(51348)), I = p(t(67827)), E = p(t(41966)), T = p(t(72986)), A = p(t(84346)), F = p(t(49435)), b = t(52773), R = {};
              R.logErrors = !1;
              var N = [];
              R.registerFormat = function(ft) {
                N.push(ft);
              }, R.openSync = function(ft, X) {
                var et = b.readFileSync(ft);
                return R.create(et, X);
              }, R.open = function(ft, X, et) {
                typeof X == "function" && (et = X, X = null), b.readFile(ft, function(P, M) {
                  if (P)
                    return et(P);
                  try {
                    var H = R.create(M, X);
                  } catch (lt) {
                    return et(lt);
                  }
                  return et(null, H);
                });
              }, R.create = function(ft, X) {
                for (var et = 0; et < N.length; et++) {
                  var P = N[et];
                  if (P.probe(ft)) {
                    var M = new P(new e.DecodeStream(ft));
                    return X ? M.getFont(X) : M;
                  }
                }
                throw new Error("Unknown font format");
              }, R.defaultLanguage = "en", R.setDefaultLanguage = function(ft) {
                ft === void 0 && (ft = "en"), R.defaultLanguage = ft;
              };
              function U(ft, X, et) {
                return X in ft ? Object.defineProperty(ft, X, {
                  value: et,
                  enumerable: !0,
                  configurable: !0,
                  writable: !0
                }) : ft[X] = et, ft;
              }
              function W(ft, X, et, P, M) {
                var H = {};
                return Object.keys(P).forEach(function(lt) {
                  H[lt] = P[lt];
                }), H.enumerable = !!H.enumerable, H.configurable = !!H.configurable, ("value" in H || H.initializer) && (H.writable = !0), H = et.slice().reverse().reduce(function(lt, vt) {
                  return vt(ft, X, lt) || lt;
                }, H), M && H.initializer !== void 0 && (H.value = H.initializer ? H.initializer.call(M) : void 0, H.initializer = void 0), H.initializer === void 0 && (Object.defineProperty(ft, X, H), H = null), H;
              }
              function J(ft, X, et) {
                if (et.get) {
                  var P = et.get;
                  et.get = function() {
                    var H = P.call(this);
                    return Object.defineProperty(this, X, {
                      value: H
                    }), H;
                  };
                } else if (typeof et.value == "function") {
                  var M = et.value;
                  return {
                    get: function() {
                      var lt = /* @__PURE__ */ new Map();
                      function vt() {
                        for (var dt = arguments.length, ct = new Array(dt), Ot = 0; Ot < dt; Ot++)
                          ct[Ot] = arguments[Ot];
                        var Vt = ct.length > 0 ? ct[0] : "value";
                        if (lt.has(Vt))
                          return lt.get(Vt);
                        var se = M.apply(this, ct);
                        return lt.set(Vt, se), se;
                      }
                      return Object.defineProperty(this, X, {
                        value: vt
                      }), vt;
                    }
                  };
                }
              }
              var ht = new e.Struct({
                firstCode: e.uint16,
                entryCount: e.uint16,
                idDelta: e.int16,
                idRangeOffset: e.uint16
              }), K = new e.Struct({
                startCharCode: e.uint32,
                endCharCode: e.uint32,
                glyphID: e.uint32
              }), nt = new e.Struct({
                startUnicodeValue: e.uint24,
                additionalCount: e.uint8
              }), xt = new e.Struct({
                unicodeValue: e.uint24,
                glyphID: e.uint16
              }), bt = new e.Array(nt, e.uint32), Tt = new e.Array(xt, e.uint32), It = new e.Struct({
                varSelector: e.uint24,
                defaultUVS: new e.Pointer(e.uint32, bt, {
                  type: "parent"
                }),
                nonDefaultUVS: new e.Pointer(e.uint32, Tt, {
                  type: "parent"
                })
              }), Lt = new e.VersionedStruct(e.uint16, {
                0: {
                  // Byte encoding
                  length: e.uint16,
                  // Total table length in bytes (set to 262 for format 0)
                  language: e.uint16,
                  // Language code for this encoding subtable, or zero if language-independent
                  codeMap: new e.LazyArray(e.uint8, 256)
                },
                2: {
                  // High-byte mapping (CJK)
                  length: e.uint16,
                  language: e.uint16,
                  subHeaderKeys: new e.Array(e.uint16, 256),
                  subHeaderCount: function(X) {
                    return Math.max.apply(Math, X.subHeaderKeys);
                  },
                  subHeaders: new e.LazyArray(ht, "subHeaderCount"),
                  glyphIndexArray: new e.LazyArray(e.uint16, "subHeaderCount")
                },
                4: {
                  // Segment mapping to delta values
                  length: e.uint16,
                  // Total table length in bytes
                  language: e.uint16,
                  // Language code
                  segCountX2: e.uint16,
                  segCount: function(X) {
                    return X.segCountX2 >> 1;
                  },
                  searchRange: e.uint16,
                  entrySelector: e.uint16,
                  rangeShift: e.uint16,
                  endCode: new e.LazyArray(e.uint16, "segCount"),
                  reservedPad: new e.Reserved(e.uint16),
                  // This value should be zero
                  startCode: new e.LazyArray(e.uint16, "segCount"),
                  idDelta: new e.LazyArray(e.int16, "segCount"),
                  idRangeOffset: new e.LazyArray(e.uint16, "segCount"),
                  glyphIndexArray: new e.LazyArray(e.uint16, function(ft) {
                    return (ft.length - ft._currentOffset) / 2;
                  })
                },
                6: {
                  // Trimmed table
                  length: e.uint16,
                  language: e.uint16,
                  firstCode: e.uint16,
                  entryCount: e.uint16,
                  glyphIndices: new e.LazyArray(e.uint16, "entryCount")
                },
                8: {
                  // mixed 16-bit and 32-bit coverage
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint16,
                  is32: new e.LazyArray(e.uint8, 8192),
                  nGroups: e.uint32,
                  groups: new e.LazyArray(K, "nGroups")
                },
                10: {
                  // Trimmed Array
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint32,
                  firstCode: e.uint32,
                  entryCount: e.uint32,
                  glyphIndices: new e.LazyArray(e.uint16, "numChars")
                },
                12: {
                  // Segmented coverage
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint32,
                  nGroups: e.uint32,
                  groups: new e.LazyArray(K, "nGroups")
                },
                13: {
                  // Many-to-one range mappings (same as 12 except for group.startGlyphID)
                  reserved: new e.Reserved(e.uint16),
                  length: e.uint32,
                  language: e.uint32,
                  nGroups: e.uint32,
                  groups: new e.LazyArray(K, "nGroups")
                },
                14: {
                  // Unicode Variation Sequences
                  length: e.uint32,
                  numRecords: e.uint32,
                  varSelectors: new e.LazyArray(It, "numRecords")
                }
              }), Ut = new e.Struct({
                platformID: e.uint16,
                // Platform identifier
                encodingID: e.uint16,
                // Platform-specific encoding identifier
                table: new e.Pointer(e.uint32, Lt, {
                  type: "parent",
                  lazy: !0
                })
              }), $ = new e.Struct({
                version: e.uint16,
                numSubtables: e.uint16,
                tables: new e.Array(Ut, "numSubtables")
              }), gt = new e.Struct({
                version: e.int32,
                // 0x00010000 (version 1.0)
                revision: e.int32,
                // set by font manufacturer
                checkSumAdjustment: e.uint32,
                magicNumber: e.uint32,
                // set to 0x5F0F3CF5
                flags: e.uint16,
                unitsPerEm: e.uint16,
                // range from 64 to 16384
                created: new e.Array(e.int32, 2),
                modified: new e.Array(e.int32, 2),
                xMin: e.int16,
                // for all glyph bounding boxes
                yMin: e.int16,
                // for all glyph bounding boxes
                xMax: e.int16,
                // for all glyph bounding boxes
                yMax: e.int16,
                // for all glyph bounding boxes
                macStyle: new e.Bitfield(e.uint16, ["bold", "italic", "underline", "outline", "shadow", "condensed", "extended"]),
                lowestRecPPEM: e.uint16,
                // smallest readable size in pixels
                fontDirectionHint: e.int16,
                indexToLocFormat: e.int16,
                // 0 for short offsets, 1 for long
                glyphDataFormat: e.int16
                // 0 for current format
              }), ut = new e.Struct({
                version: e.int32,
                ascent: e.int16,
                // Distance from baseline of highest ascender
                descent: e.int16,
                // Distance from baseline of lowest descender
                lineGap: e.int16,
                // Typographic line gap
                advanceWidthMax: e.uint16,
                // Maximum advance width value in 'hmtx' table
                minLeftSideBearing: e.int16,
                // Maximum advance width value in 'hmtx' table
                minRightSideBearing: e.int16,
                // Minimum right sidebearing value
                xMaxExtent: e.int16,
                caretSlopeRise: e.int16,
                // Used to calculate the slope of the cursor (rise/run); 1 for vertical
                caretSlopeRun: e.int16,
                // 0 for vertical
                caretOffset: e.int16,
                // Set to 0 for non-slanted fonts
                reserved: new e.Reserved(e.int16, 4),
                metricDataFormat: e.int16,
                // 0 for current format
                numberOfMetrics: e.uint16
                // Number of advance widths in 'hmtx' table
              }), st = new e.Struct({
                advance: e.uint16,
                bearing: e.int16
              }), yt = new e.Struct({
                metrics: new e.LazyArray(st, function(ft) {
                  return ft.parent.hhea.numberOfMetrics;
                }),
                bearings: new e.LazyArray(e.int16, function(ft) {
                  return ft.parent.maxp.numGlyphs - ft.parent.hhea.numberOfMetrics;
                })
              }), G = new e.Struct({
                version: e.int32,
                numGlyphs: e.uint16,
                // The number of glyphs in the font
                maxPoints: e.uint16,
                // Maximum points in a non-composite glyph
                maxContours: e.uint16,
                // Maximum contours in a non-composite glyph
                maxComponentPoints: e.uint16,
                // Maximum points in a composite glyph
                maxComponentContours: e.uint16,
                // Maximum contours in a composite glyph
                maxZones: e.uint16,
                // 1 if instructions do not use the twilight zone, 2 otherwise
                maxTwilightPoints: e.uint16,
                // Maximum points used in Z0
                maxStorage: e.uint16,
                // Number of Storage Area locations
                maxFunctionDefs: e.uint16,
                // Number of FDEFs
                maxInstructionDefs: e.uint16,
                // Number of IDEFs
                maxStackElements: e.uint16,
                // Maximum stack depth
                maxSizeOfInstructions: e.uint16,
                // Maximum byte count for glyph instructions
                maxComponentElements: e.uint16,
                // Maximum number of components referenced at âtop levelâ for any composite glyph
                maxComponentDepth: e.uint16
                // Maximum levels of recursion; 1 for simple components
              });
              function Et(ft, X, et) {
                return et === void 0 && (et = 0), ft === 1 && S[et] ? S[et] : k[ft][X];
              }
              var k = [
                // unicode
                ["utf16be", "utf16be", "utf16be", "utf16be", "utf16be", "utf16be"],
                // macintosh
                // Mappings available at http://unicode.org/Public/MAPPINGS/VENDORS/APPLE/
                // 0	Roman                 17	Malayalam
                // 1	Japanese	            18	Sinhalese
                // 2	Traditional Chinese	  19	Burmese
                // 3	Korean	              20	Khmer
                // 4	Arabic	              21	Thai
                // 5	Hebrew	              22	Laotian
                // 6	Greek	                23	Georgian
                // 7	Russian	              24	Armenian
                // 8	RSymbol	              25	Simplified Chinese
                // 9	Devanagari	          26	Tibetan
                // 10	Gurmukhi	            27	Mongolian
                // 11	Gujarati	            28	Geez
                // 12	Oriya	                29	Slavic
                // 13	Bengali	              30	Vietnamese
                // 14	Tamil	                31	Sindhi
                // 15	Telugu	              32	(Uninterpreted)
                // 16	Kannada
                ["macroman", "shift-jis", "big5", "euc-kr", "iso-8859-6", "iso-8859-8", "macgreek", "maccyrillic", "symbol", "Devanagari", "Gurmukhi", "Gujarati", "Oriya", "Bengali", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhalese", "Burmese", "Khmer", "macthai", "Laotian", "Georgian", "Armenian", "gb-2312-80", "Tibetan", "Mongolian", "Geez", "maccenteuro", "Vietnamese", "Sindhi"],
                // ISO (deprecated)
                ["ascii"],
                // windows
                // Docs here: http://msdn.microsoft.com/en-us/library/system.text.encoding(v=vs.110).aspx
                ["symbol", "utf16be", "shift-jis", "gb18030", "big5", "wansung", "johab", null, null, null, "utf16be"]
              ], S = {
                15: "maciceland",
                17: "macturkish",
                18: "maccroatian",
                24: "maccenteuro",
                25: "maccenteuro",
                26: "maccenteuro",
                27: "maccenteuro",
                28: "maccenteuro",
                30: "maciceland",
                37: "macromania",
                38: "maccenteuro",
                39: "maccenteuro",
                40: "maccenteuro",
                143: "macinuit",
                // Unsupported by iconv-lite
                146: "macgaelic"
                // Unsupported by iconv-lite
              }, L = [
                // unicode
                [],
                {
                  // macintosh
                  0: "en",
                  30: "fo",
                  60: "ks",
                  90: "rw",
                  1: "fr",
                  31: "fa",
                  61: "ku",
                  91: "rn",
                  2: "de",
                  32: "ru",
                  62: "sd",
                  92: "ny",
                  3: "it",
                  33: "zh",
                  63: "bo",
                  93: "mg",
                  4: "nl",
                  34: "nl-BE",
                  64: "ne",
                  94: "eo",
                  5: "sv",
                  35: "ga",
                  65: "sa",
                  128: "cy",
                  6: "es",
                  36: "sq",
                  66: "mr",
                  129: "eu",
                  7: "da",
                  37: "ro",
                  67: "bn",
                  130: "ca",
                  8: "pt",
                  38: "cz",
                  68: "as",
                  131: "la",
                  9: "no",
                  39: "sk",
                  69: "gu",
                  132: "qu",
                  10: "he",
                  40: "si",
                  70: "pa",
                  133: "gn",
                  11: "ja",
                  41: "yi",
                  71: "or",
                  134: "ay",
                  12: "ar",
                  42: "sr",
                  72: "ml",
                  135: "tt",
                  13: "fi",
                  43: "mk",
                  73: "kn",
                  136: "ug",
                  14: "el",
                  44: "bg",
                  74: "ta",
                  137: "dz",
                  15: "is",
                  45: "uk",
                  75: "te",
                  138: "jv",
                  16: "mt",
                  46: "be",
                  76: "si",
                  139: "su",
                  17: "tr",
                  47: "uz",
                  77: "my",
                  140: "gl",
                  18: "hr",
                  48: "kk",
                  78: "km",
                  141: "af",
                  19: "zh-Hant",
                  49: "az-Cyrl",
                  79: "lo",
                  142: "br",
                  20: "ur",
                  50: "az-Arab",
                  80: "vi",
                  143: "iu",
                  21: "hi",
                  51: "hy",
                  81: "id",
                  144: "gd",
                  22: "th",
                  52: "ka",
                  82: "tl",
                  145: "gv",
                  23: "ko",
                  53: "mo",
                  83: "ms",
                  146: "ga",
                  24: "lt",
                  54: "ky",
                  84: "ms-Arab",
                  147: "to",
                  25: "pl",
                  55: "tg",
                  85: "am",
                  148: "el-polyton",
                  26: "hu",
                  56: "tk",
                  86: "ti",
                  149: "kl",
                  27: "es",
                  57: "mn-CN",
                  87: "om",
                  150: "az",
                  28: "lv",
                  58: "mn",
                  88: "so",
                  151: "nn",
                  29: "se",
                  59: "ps",
                  89: "sw"
                },
                // ISO (deprecated)
                [],
                {
                  // windows                                        
                  1078: "af",
                  16393: "en-IN",
                  1159: "rw",
                  1074: "tn",
                  1052: "sq",
                  6153: "en-IE",
                  1089: "sw",
                  1115: "si",
                  1156: "gsw",
                  8201: "en-JM",
                  1111: "kok",
                  1051: "sk",
                  1118: "am",
                  17417: "en-MY",
                  1042: "ko",
                  1060: "sl",
                  5121: "ar-DZ",
                  5129: "en-NZ",
                  1088: "ky",
                  11274: "es-AR",
                  15361: "ar-BH",
                  13321: "en-PH",
                  1108: "lo",
                  16394: "es-BO",
                  3073: "ar",
                  18441: "en-SG",
                  1062: "lv",
                  13322: "es-CL",
                  2049: "ar-IQ",
                  7177: "en-ZA",
                  1063: "lt",
                  9226: "es-CO",
                  11265: "ar-JO",
                  11273: "en-TT",
                  2094: "dsb",
                  5130: "es-CR",
                  13313: "ar-KW",
                  2057: "en-GB",
                  1134: "lb",
                  7178: "es-DO",
                  12289: "ar-LB",
                  1033: "en",
                  1071: "mk",
                  12298: "es-EC",
                  4097: "ar-LY",
                  12297: "en-ZW",
                  2110: "ms-BN",
                  17418: "es-SV",
                  6145: "ary",
                  1061: "et",
                  1086: "ms",
                  4106: "es-GT",
                  8193: "ar-OM",
                  1080: "fo",
                  1100: "ml",
                  18442: "es-HN",
                  16385: "ar-QA",
                  1124: "fil",
                  1082: "mt",
                  2058: "es-MX",
                  1025: "ar-SA",
                  1035: "fi",
                  1153: "mi",
                  19466: "es-NI",
                  10241: "ar-SY",
                  2060: "fr-BE",
                  1146: "arn",
                  6154: "es-PA",
                  7169: "aeb",
                  3084: "fr-CA",
                  1102: "mr",
                  15370: "es-PY",
                  14337: "ar-AE",
                  1036: "fr",
                  1148: "moh",
                  10250: "es-PE",
                  9217: "ar-YE",
                  5132: "fr-LU",
                  1104: "mn",
                  20490: "es-PR",
                  1067: "hy",
                  6156: "fr-MC",
                  2128: "mn-CN",
                  3082: "es",
                  1101: "as",
                  4108: "fr-CH",
                  1121: "ne",
                  1034: "es",
                  2092: "az-Cyrl",
                  1122: "fy",
                  1044: "nb",
                  21514: "es-US",
                  1068: "az",
                  1110: "gl",
                  2068: "nn",
                  14346: "es-UY",
                  1133: "ba",
                  1079: "ka",
                  1154: "oc",
                  8202: "es-VE",
                  1069: "eu",
                  3079: "de-AT",
                  1096: "or",
                  2077: "sv-FI",
                  1059: "be",
                  1031: "de",
                  1123: "ps",
                  1053: "sv",
                  2117: "bn",
                  5127: "de-LI",
                  1045: "pl",
                  1114: "syr",
                  1093: "bn-IN",
                  4103: "de-LU",
                  1046: "pt",
                  1064: "tg",
                  8218: "bs-Cyrl",
                  2055: "de-CH",
                  2070: "pt-PT",
                  2143: "tzm",
                  5146: "bs",
                  1032: "el",
                  1094: "pa",
                  1097: "ta",
                  1150: "br",
                  1135: "kl",
                  1131: "qu-BO",
                  1092: "tt",
                  1026: "bg",
                  1095: "gu",
                  2155: "qu-EC",
                  1098: "te",
                  1027: "ca",
                  1128: "ha",
                  3179: "qu",
                  1054: "th",
                  3076: "zh-HK",
                  1037: "he",
                  1048: "ro",
                  1105: "bo",
                  5124: "zh-MO",
                  1081: "hi",
                  1047: "rm",
                  1055: "tr",
                  2052: "zh",
                  1038: "hu",
                  1049: "ru",
                  1090: "tk",
                  4100: "zh-SG",
                  1039: "is",
                  9275: "smn",
                  1152: "ug",
                  1028: "zh-TW",
                  1136: "ig",
                  4155: "smj-NO",
                  1058: "uk",
                  1155: "co",
                  1057: "id",
                  5179: "smj",
                  1070: "hsb",
                  1050: "hr",
                  1117: "iu",
                  3131: "se-FI",
                  1056: "ur",
                  4122: "hr-BA",
                  2141: "iu-Latn",
                  1083: "se",
                  2115: "uz-Cyrl",
                  1029: "cs",
                  2108: "ga",
                  2107: "se-SE",
                  1091: "uz",
                  1030: "da",
                  1076: "xh",
                  8251: "sms",
                  1066: "vi",
                  1164: "prs",
                  1077: "zu",
                  6203: "sma-NO",
                  1106: "cy",
                  1125: "dv",
                  1040: "it",
                  7227: "sms",
                  1160: "wo",
                  2067: "nl-BE",
                  2064: "it-CH",
                  1103: "sa",
                  1157: "sah",
                  1043: "nl",
                  1041: "ja",
                  7194: "sr-Cyrl-BA",
                  1144: "ii",
                  3081: "en-AU",
                  1099: "kn",
                  3098: "sr",
                  1130: "yo",
                  10249: "en-BZ",
                  1087: "kk",
                  6170: "sr-Latn-BA",
                  4105: "en-CA",
                  1107: "km",
                  2074: "sr-Latn",
                  9225: "en-029",
                  1158: "quc",
                  1132: "nso"
                }
              ], V = new e.Struct({
                platformID: e.uint16,
                encodingID: e.uint16,
                languageID: e.uint16,
                nameID: e.uint16,
                length: e.uint16,
                string: new e.Pointer(e.uint16, new e.String("length", function(ft) {
                  return Et(ft.platformID, ft.encodingID, ft.languageID);
                }), {
                  type: "parent",
                  relativeTo: function(X) {
                    return X.parent.stringOffset;
                  },
                  allowNull: !1
                })
              }), it = new e.Struct({
                length: e.uint16,
                tag: new e.Pointer(e.uint16, new e.String("length", "utf16be"), {
                  type: "parent",
                  relativeTo: function(X) {
                    return X.stringOffset;
                  }
                })
              }), tt = new e.VersionedStruct(e.uint16, {
                0: {
                  count: e.uint16,
                  stringOffset: e.uint16,
                  records: new e.Array(V, "count")
                },
                1: {
                  count: e.uint16,
                  stringOffset: e.uint16,
                  records: new e.Array(V, "count"),
                  langTagCount: e.uint16,
                  langTags: new e.Array(it, "langTagCount")
                }
              }), _ = [
                "copyright",
                "fontFamily",
                "fontSubfamily",
                "uniqueSubfamily",
                "fullName",
                "version",
                "postscriptName",
                // Note: A font may have only one PostScript name and that name must be ASCII.
                "trademark",
                "manufacturer",
                "designer",
                "description",
                "vendorURL",
                "designerURL",
                "license",
                "licenseURL",
                null,
                // reserved
                "preferredFamily",
                "preferredSubfamily",
                "compatibleFull",
                "sampleText",
                "postscriptCIDFontName",
                "wwsFamilyName",
                "wwsSubfamilyName"
              ];
              tt.process = function(ft) {
                for (var X = {}, et = a(this.records), P; !(P = et()).done; ) {
                  var M = P.value, H = L[M.platformID][M.languageID];
                  H == null && this.langTags != null && M.languageID >= 32768 && (H = this.langTags[M.languageID - 32768].tag), H == null && (H = M.platformID + "-" + M.languageID);
                  var lt = M.nameID >= 256 ? "fontFeatures" : _[M.nameID] || M.nameID;
                  X[lt] == null && (X[lt] = {});
                  var vt = X[lt];
                  M.nameID >= 256 && (vt = vt[M.nameID] || (vt[M.nameID] = {})), (typeof M.string == "string" || typeof vt[H] != "string") && (vt[H] = M.string);
                }
                this.records = X;
              }, tt.preEncode = function() {
                if (!Array.isArray(this.records)) {
                  this.version = 0;
                  var ft = [];
                  for (var X in this.records) {
                    var et = this.records[X];
                    X !== "fontFeatures" && (ft.push({
                      platformID: 3,
                      encodingID: 1,
                      languageID: 1033,
                      nameID: _.indexOf(X),
                      length: o.byteLength(et.en, "utf16le"),
                      string: et.en
                    }), X === "postscriptName" && ft.push({
                      platformID: 1,
                      encodingID: 0,
                      languageID: 0,
                      nameID: _.indexOf(X),
                      length: et.en.length,
                      string: et.en
                    }));
                  }
                  this.records = ft, this.count = ft.length, this.stringOffset = tt.size(this, null, !1);
                }
              };
              var At = new e.VersionedStruct(e.uint16, {
                header: {
                  xAvgCharWidth: e.int16,
                  // average weighted advance width of lower case letters and space
                  usWeightClass: e.uint16,
                  // visual weight of stroke in glyphs
                  usWidthClass: e.uint16,
                  // relative change from the normal aspect ratio (width to height ratio)
                  fsType: new e.Bitfield(e.uint16, [
                    // Indicates font embedding licensing rights
                    null,
                    "noEmbedding",
                    "viewOnly",
                    "editable",
                    null,
                    null,
                    null,
                    null,
                    "noSubsetting",
                    "bitmapOnly"
                  ]),
                  ySubscriptXSize: e.int16,
                  // recommended horizontal size in pixels for subscripts
                  ySubscriptYSize: e.int16,
                  // recommended vertical size in pixels for subscripts
                  ySubscriptXOffset: e.int16,
                  // recommended horizontal offset for subscripts
                  ySubscriptYOffset: e.int16,
                  // recommended vertical offset form the baseline for subscripts
                  ySuperscriptXSize: e.int16,
                  // recommended horizontal size in pixels for superscripts
                  ySuperscriptYSize: e.int16,
                  // recommended vertical size in pixels for superscripts
                  ySuperscriptXOffset: e.int16,
                  // recommended horizontal offset for superscripts
                  ySuperscriptYOffset: e.int16,
                  // recommended vertical offset from the baseline for superscripts
                  yStrikeoutSize: e.int16,
                  // width of the strikeout stroke
                  yStrikeoutPosition: e.int16,
                  // position of the strikeout stroke relative to the baseline
                  sFamilyClass: e.int16,
                  // classification of font-family design
                  panose: new e.Array(e.uint8, 10),
                  // describe the visual characteristics of a given typeface
                  ulCharRange: new e.Array(e.uint32, 4),
                  vendorID: new e.String(4),
                  // four character identifier for the font vendor
                  fsSelection: new e.Bitfield(e.uint16, [
                    // bit field containing information about the font
                    "italic",
                    "underscore",
                    "negative",
                    "outlined",
                    "strikeout",
                    "bold",
                    "regular",
                    "useTypoMetrics",
                    "wws",
                    "oblique"
                  ]),
                  usFirstCharIndex: e.uint16,
                  // The minimum Unicode index in this font
                  usLastCharIndex: e.uint16
                  // The maximum Unicode index in this font
                },
                // The Apple version of this table ends here, but the Microsoft one continues on...
                0: {},
                1: {
                  typoAscender: e.int16,
                  typoDescender: e.int16,
                  typoLineGap: e.int16,
                  winAscent: e.uint16,
                  winDescent: e.uint16,
                  codePageRange: new e.Array(e.uint32, 2)
                },
                2: {
                  // these should be common with version 1 somehow
                  typoAscender: e.int16,
                  typoDescender: e.int16,
                  typoLineGap: e.int16,
                  winAscent: e.uint16,
                  winDescent: e.uint16,
                  codePageRange: new e.Array(e.uint32, 2),
                  xHeight: e.int16,
                  capHeight: e.int16,
                  defaultChar: e.uint16,
                  breakChar: e.uint16,
                  maxContent: e.uint16
                },
                5: {
                  typoAscender: e.int16,
                  typoDescender: e.int16,
                  typoLineGap: e.int16,
                  winAscent: e.uint16,
                  winDescent: e.uint16,
                  codePageRange: new e.Array(e.uint32, 2),
                  xHeight: e.int16,
                  capHeight: e.int16,
                  defaultChar: e.uint16,
                  breakChar: e.uint16,
                  maxContent: e.uint16,
                  usLowerOpticalPointSize: e.uint16,
                  usUpperOpticalPointSize: e.uint16
                }
              }), Rt = At.versions;
              Rt[3] = Rt[4] = Rt[2];
              var Yt = new e.VersionedStruct(e.fixed32, {
                header: {
                  // these fields exist at the top of all versions
                  italicAngle: e.fixed32,
                  // Italic angle in counter-clockwise degrees from the vertical.
                  underlinePosition: e.int16,
                  // Suggested distance of the top of the underline from the baseline
                  underlineThickness: e.int16,
                  // Suggested values for the underline thickness
                  isFixedPitch: e.uint32,
                  // Whether the font is monospaced
                  minMemType42: e.uint32,
                  // Minimum memory usage when a TrueType font is downloaded as a Type 42 font
                  maxMemType42: e.uint32,
                  // Maximum memory usage when a TrueType font is downloaded as a Type 42 font
                  minMemType1: e.uint32,
                  // Minimum memory usage when a TrueType font is downloaded as a Type 1 font
                  maxMemType1: e.uint32
                  // Maximum memory usage when a TrueType font is downloaded as a Type 1 font
                },
                1: {},
                // version 1 has no additional fields
                2: {
                  numberOfGlyphs: e.uint16,
                  glyphNameIndex: new e.Array(e.uint16, "numberOfGlyphs"),
                  names: new e.Array(new e.String(e.uint8))
                },
                2.5: {
                  numberOfGlyphs: e.uint16,
                  offsets: new e.Array(e.uint8, "numberOfGlyphs")
                },
                3: {},
                // version 3 has no additional fields
                4: {
                  map: new e.Array(e.uint32, function(ft) {
                    return ft.parent.maxp.numGlyphs;
                  })
                }
              }), Gt = new e.Struct({
                controlValues: new e.Array(e.int16)
              }), Dt = new e.Struct({
                instructions: new e.Array(e.uint8)
              }), ae = new e.VersionedStruct("head.indexToLocFormat", {
                0: {
                  offsets: new e.Array(e.uint16)
                },
                1: {
                  offsets: new e.Array(e.uint32)
                }
              });
              ae.process = function() {
                if (this.version === 0)
                  for (var ft = 0; ft < this.offsets.length; ft++)
                    this.offsets[ft] <<= 1;
              }, ae.preEncode = function() {
                if (this.version === 0)
                  for (var ft = 0; ft < this.offsets.length; ft++)
                    this.offsets[ft] >>>= 1;
              };
              var Ae = new e.Struct({
                controlValueProgram: new e.Array(e.uint8)
              }), xe = new e.Array(new e.Buffer()), ce = /* @__PURE__ */ function() {
                function ft(et) {
                  this.type = et;
                }
                var X = ft.prototype;
                return X.getCFFVersion = function(P) {
                  for (; P && !P.hdrSize; )
                    P = P.parent;
                  return P ? P.version : -1;
                }, X.decode = function(P, M) {
                  var H = this.getCFFVersion(M), lt = H >= 2 ? P.readUInt32BE() : P.readUInt16BE();
                  if (lt === 0)
                    return [];
                  var vt = P.readUInt8(), dt;
                  if (vt === 1)
                    dt = e.uint8;
                  else if (vt === 2)
                    dt = e.uint16;
                  else if (vt === 3)
                    dt = e.uint24;
                  else if (vt === 4)
                    dt = e.uint32;
                  else
                    throw new Error("Bad offset size in CFFIndex: ".concat(vt, " ").concat(P.pos));
                  for (var ct = [], Ot = P.pos + (lt + 1) * vt - 1, Vt = dt.decode(P), se = 0; se < lt; se++) {
                    var $t = dt.decode(P);
                    if (this.type != null) {
                      var ue = P.pos;
                      P.pos = Ot + Vt, M.length = $t - Vt, ct.push(this.type.decode(P, M)), P.pos = ue;
                    } else
                      ct.push({
                        offset: Ot + Vt,
                        length: $t - Vt
                      });
                    Vt = $t;
                  }
                  return P.pos = Ot + Vt, ct;
                }, X.size = function(P, M) {
                  var H = 2;
                  if (P.length === 0)
                    return H;
                  for (var lt = this.type || new e.Buffer(), vt = 1, dt = 0; dt < P.length; dt++) {
                    var ct = P[dt];
                    vt += lt.size(ct, M);
                  }
                  var Ot;
                  if (vt <= 255)
                    Ot = e.uint8;
                  else if (vt <= 65535)
                    Ot = e.uint16;
                  else if (vt <= 16777215)
                    Ot = e.uint24;
                  else if (vt <= 4294967295)
                    Ot = e.uint32;
                  else
                    throw new Error("Bad offset in CFFIndex");
                  return H += 1 + Ot.size() * (P.length + 1), H += vt - 1, H;
                }, X.encode = function(P, M, H) {
                  if (P.writeUInt16BE(M.length), M.length !== 0) {
                    for (var lt = this.type || new e.Buffer(), vt = [], dt = 1, ct = a(M), Ot; !(Ot = ct()).done; ) {
                      var Vt = Ot.value, se = lt.size(Vt, H);
                      vt.push(se), dt += se;
                    }
                    var $t;
                    if (dt <= 255)
                      $t = e.uint8;
                    else if (dt <= 65535)
                      $t = e.uint16;
                    else if (dt <= 16777215)
                      $t = e.uint24;
                    else if (dt <= 4294967295)
                      $t = e.uint32;
                    else
                      throw new Error("Bad offset in CFFIndex");
                    P.writeUInt8($t.size()), dt = 1, $t.encode(P, dt);
                    for (var ue = 0, pe = vt; ue < pe.length; ue++) {
                      var Te = pe[ue];
                      dt += Te, $t.encode(P, dt);
                    }
                    for (var He = a(M), _e; !(_e = He()).done; ) {
                      var Xe = _e.value;
                      lt.encode(P, Xe, H);
                    }
                  }
                }, ft;
              }(), we = 15, zt = ["0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ".", "E", "E-", null, "-"], Qt = {
                ".": 10,
                E: 11,
                "E-": 12,
                "-": 14
              }, le = /* @__PURE__ */ function() {
                function ft() {
                }
                return ft.decode = function(et, P) {
                  if (32 <= P && P <= 246)
                    return P - 139;
                  if (247 <= P && P <= 250)
                    return (P - 247) * 256 + et.readUInt8() + 108;
                  if (251 <= P && P <= 254)
                    return -(P - 251) * 256 - et.readUInt8() - 108;
                  if (P === 28)
                    return et.readInt16BE();
                  if (P === 29)
                    return et.readInt32BE();
                  if (P === 30) {
                    for (var M = ""; ; ) {
                      var H = et.readUInt8(), lt = H >> 4;
                      if (lt === we)
                        break;
                      M += zt[lt];
                      var vt = H & 15;
                      if (vt === we)
                        break;
                      M += zt[vt];
                    }
                    return parseFloat(M);
                  }
                  return null;
                }, ft.size = function(et) {
                  if (et.forceLarge && (et = 32768), (et | 0) !== et) {
                    var P = "" + et;
                    return 1 + Math.ceil((P.length + 1) / 2);
                  } else
                    return -107 <= et && et <= 107 ? 1 : 108 <= et && et <= 1131 || -1131 <= et && et <= -108 ? 2 : -32768 <= et && et <= 32767 ? 3 : 5;
                }, ft.encode = function(et, P) {
                  var M = Number(P);
                  if (P.forceLarge)
                    return et.writeUInt8(29), et.writeInt32BE(M);
                  if ((M | 0) !== M) {
                    et.writeUInt8(30);
                    for (var H = "" + M, lt = 0; lt < H.length; lt += 2) {
                      var vt = H[lt], dt = Qt[vt] || +vt;
                      if (lt === H.length - 1)
                        var ct = we;
                      else
                        var Ot = H[lt + 1], ct = Qt[Ot] || +Ot;
                      et.writeUInt8(dt << 4 | ct & 15);
                    }
                    if (ct !== we)
                      return et.writeUInt8(we << 4);
                  } else
                    return -107 <= M && M <= 107 ? et.writeUInt8(M + 139) : 108 <= M && M <= 1131 ? (M -= 108, et.writeUInt8((M >> 8) + 247), et.writeUInt8(M & 255)) : -1131 <= M && M <= -108 ? (M = -M - 108, et.writeUInt8((M >> 8) + 251), et.writeUInt8(M & 255)) : -32768 <= M && M <= 32767 ? (et.writeUInt8(28), et.writeInt16BE(M)) : (et.writeUInt8(29), et.writeInt32BE(M));
                }, ft;
              }(), de = /* @__PURE__ */ function() {
                function ft(et) {
                  et === void 0 && (et = []), this.ops = et, this.fields = {};
                  for (var P = a(et), M; !(M = P()).done; ) {
                    var H = M.value, lt = Array.isArray(H[0]) ? H[0][0] << 8 | H[0][1] : H[0];
                    this.fields[lt] = H;
                  }
                }
                var X = ft.prototype;
                return X.decodeOperands = function(P, M, H, lt) {
                  var vt = this;
                  if (Array.isArray(P))
                    return lt.map(function(dt, ct) {
                      return vt.decodeOperands(P[ct], M, H, [dt]);
                    });
                  if (P.decode != null)
                    return P.decode(M, H, lt);
                  switch (P) {
                    case "number":
                    case "offset":
                    case "sid":
                      return lt[0];
                    case "boolean":
                      return !!lt[0];
                    default:
                      return lt;
                  }
                }, X.encodeOperands = function(P, M, H, lt) {
                  var vt = this;
                  return Array.isArray(P) ? lt.map(function(dt, ct) {
                    return vt.encodeOperands(P[ct], M, H, dt)[0];
                  }) : P.encode != null ? P.encode(M, lt, H) : typeof lt == "number" ? [lt] : typeof lt == "boolean" ? [+lt] : Array.isArray(lt) ? lt : [lt];
                }, X.decode = function(P, M) {
                  var H = P.pos + M.length, lt = {}, vt = [];
                  Object.defineProperties(lt, {
                    parent: {
                      value: M
                    },
                    _startOffset: {
                      value: P.pos
                    }
                  });
                  for (var dt in this.fields) {
                    var ct = this.fields[dt];
                    lt[ct[1]] = ct[3];
                  }
                  for (; P.pos < H; ) {
                    var Ot = P.readUInt8();
                    if (Ot < 28) {
                      Ot === 12 && (Ot = Ot << 8 | P.readUInt8());
                      var Vt = this.fields[Ot];
                      if (!Vt)
                        throw new Error("Unknown operator ".concat(Ot));
                      var se = this.decodeOperands(Vt[2], P, lt, vt);
                      se != null && (se instanceof m.PropertyDescriptor ? Object.defineProperty(lt, Vt[1], se) : lt[Vt[1]] = se), vt = [];
                    } else
                      vt.push(le.decode(P, Ot));
                  }
                  return lt;
                }, X.size = function(P, M, H) {
                  H === void 0 && (H = !0);
                  var lt = {
                    parent: M,
                    val: P,
                    pointerSize: 0,
                    startOffset: M.startOffset || 0
                  }, vt = 0;
                  for (var dt in this.fields) {
                    var ct = this.fields[dt], Ot = P[ct[1]];
                    if (!(Ot == null || w(Ot, ct[3]))) {
                      for (var Vt = this.encodeOperands(ct[2], null, lt, Ot), se = a(Vt), $t; !($t = se()).done; ) {
                        var ue = $t.value;
                        vt += le.size(ue);
                      }
                      var pe = Array.isArray(ct[0]) ? ct[0] : [ct[0]];
                      vt += pe.length;
                    }
                  }
                  return H && (vt += lt.pointerSize), vt;
                }, X.encode = function(P, M, H) {
                  var lt = {
                    pointers: [],
                    startOffset: P.pos,
                    parent: H,
                    val: M,
                    pointerSize: 0
                  };
                  lt.pointerOffset = P.pos + this.size(M, lt, !1);
                  for (var vt = a(this.ops), dt; !(dt = vt()).done; ) {
                    var ct = dt.value, Ot = M[ct[1]];
                    if (!(Ot == null || w(Ot, ct[3]))) {
                      for (var Vt = this.encodeOperands(ct[2], P, lt, Ot), se = a(Vt), $t; !($t = se()).done; ) {
                        var ue = $t.value;
                        le.encode(P, ue);
                      }
                      for (var pe = Array.isArray(ct[0]) ? ct[0] : [ct[0]], Te = a(pe), He; !(He = Te()).done; ) {
                        var _e = He.value;
                        P.writeUInt8(_e);
                      }
                    }
                  }
                  for (var Xe = 0; Xe < lt.pointers.length; ) {
                    var hr = lt.pointers[Xe++];
                    hr.type.encode(P, hr.val, hr.parent);
                  }
                }, ft;
              }(), be = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X(P, M) {
                  return M === void 0 && (M = {}), M.type == null && (M.type = "global"), ft.call(this, null, P, M) || this;
                }
                var et = X.prototype;
                return et.decode = function(M, H, lt) {
                  return this.offsetType = {
                    decode: function() {
                      return lt[0];
                    }
                  }, ft.prototype.decode.call(this, M, H, lt);
                }, et.encode = function(M, H, lt) {
                  if (!M)
                    return this.offsetType = {
                      size: function() {
                        return 0;
                      }
                    }, this.size(H, lt), [new Oe(0)];
                  var vt = null;
                  return this.offsetType = {
                    encode: function(ct, Ot) {
                      return vt = Ot;
                    }
                  }, ft.prototype.encode.call(this, M, H, lt), [new Oe(vt)];
                }, X;
              }(e.Pointer), Oe = /* @__PURE__ */ function() {
                function ft(et) {
                  this.val = et, this.forceLarge = !0;
                }
                var X = ft.prototype;
                return X.valueOf = function() {
                  return this.val;
                }, ft;
              }(), Fe = /* @__PURE__ */ function() {
                function ft() {
                }
                return ft.decode = function(et, P, M) {
                  for (var H = M.pop(); M.length > H; )
                    M.pop();
                }, ft;
              }(), Ft = new de([
                // key       name                    type                                          default
                [6, "BlueValues", "delta", null],
                [7, "OtherBlues", "delta", null],
                [8, "FamilyBlues", "delta", null],
                [9, "FamilyOtherBlues", "delta", null],
                [[12, 9], "BlueScale", "number", 0.039625],
                [[12, 10], "BlueShift", "number", 7],
                [[12, 11], "BlueFuzz", "number", 1],
                [10, "StdHW", "number", null],
                [11, "StdVW", "number", null],
                [[12, 12], "StemSnapH", "delta", null],
                [[12, 13], "StemSnapV", "delta", null],
                [[12, 14], "ForceBold", "boolean", !1],
                [[12, 17], "LanguageGroup", "number", 0],
                [[12, 18], "ExpansionFactor", "number", 0.06],
                [[12, 19], "initialRandomSeed", "number", 0],
                [20, "defaultWidthX", "number", 0],
                [21, "nominalWidthX", "number", 0],
                [22, "vsindex", "number", 0],
                [23, "blend", Fe, null],
                [19, "Subrs", new be(new ce(), {
                  type: "local"
                }), null]
              ]), fe = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall", "001.000", "001.001", "001.002", "001.003", "Black", "Bold", "Book", "Light", "Medium", "Regular", "Roman", "Semibold"], ot = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "", "endash", "dagger", "daggerdbl", "periodcentered", "", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "", "questiondown", "", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "", "ring", "cedilla", "", "hungarumlaut", "ogonek", "caron", "emdash", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "AE", "", "ordfeminine", "", "", "", "", "Lslash", "Oslash", "OE", "ordmasculine", "", "", "", "", "", "ae", "", "", "", "dotlessi", "", "", "lslash", "oslash", "oe", "germandbls"], Y = ["", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "space", "exclamsmall", "Hungarumlautsmall", "", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "", "", "isuperior", "", "", "lsuperior", "msuperior", "nsuperior", "osuperior", "", "", "rsuperior", "ssuperior", "tsuperior", "", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "", "exclamdownsmall", "centoldstyle", "Lslashsmall", "", "", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "", "Dotaccentsmall", "", "", "Macronsmall", "", "", "figuredash", "hypheninferior", "", "", "Ogoneksmall", "Ringsmall", "Cedillasmall", "", "", "", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "", "", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], j = [".notdef", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quoteright", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "quoteleft", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "exclamdown", "cent", "sterling", "fraction", "yen", "florin", "section", "currency", "quotesingle", "quotedblleft", "guillemotleft", "guilsinglleft", "guilsinglright", "fi", "fl", "endash", "dagger", "daggerdbl", "periodcentered", "paragraph", "bullet", "quotesinglbase", "quotedblbase", "quotedblright", "guillemotright", "ellipsis", "perthousand", "questiondown", "grave", "acute", "circumflex", "tilde", "macron", "breve", "dotaccent", "dieresis", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "emdash", "AE", "ordfeminine", "Lslash", "Oslash", "OE", "ordmasculine", "ae", "dotlessi", "lslash", "oslash", "oe", "germandbls", "onesuperior", "logicalnot", "mu", "trademark", "Eth", "onehalf", "plusminus", "Thorn", "onequarter", "divide", "brokenbar", "degree", "thorn", "threequarters", "twosuperior", "registered", "minus", "eth", "multiply", "threesuperior", "copyright", "Aacute", "Acircumflex", "Adieresis", "Agrave", "Aring", "Atilde", "Ccedilla", "Eacute", "Ecircumflex", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Ntilde", "Oacute", "Ocircumflex", "Odieresis", "Ograve", "Otilde", "Scaron", "Uacute", "Ucircumflex", "Udieresis", "Ugrave", "Yacute", "Ydieresis", "Zcaron", "aacute", "acircumflex", "adieresis", "agrave", "aring", "atilde", "ccedilla", "eacute", "ecircumflex", "edieresis", "egrave", "iacute", "icircumflex", "idieresis", "igrave", "ntilde", "oacute", "ocircumflex", "odieresis", "ograve", "otilde", "scaron", "uacute", "ucircumflex", "udieresis", "ugrave", "yacute", "ydieresis", "zcaron"], mt = [".notdef", "space", "exclamsmall", "Hungarumlautsmall", "dollaroldstyle", "dollarsuperior", "ampersandsmall", "Acutesmall", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "questionsmall", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "Circumflexsmall", "hyphensuperior", "Gravesmall", "Asmall", "Bsmall", "Csmall", "Dsmall", "Esmall", "Fsmall", "Gsmall", "Hsmall", "Ismall", "Jsmall", "Ksmall", "Lsmall", "Msmall", "Nsmall", "Osmall", "Psmall", "Qsmall", "Rsmall", "Ssmall", "Tsmall", "Usmall", "Vsmall", "Wsmall", "Xsmall", "Ysmall", "Zsmall", "colonmonetary", "onefitted", "rupiah", "Tildesmall", "exclamdownsmall", "centoldstyle", "Lslashsmall", "Scaronsmall", "Zcaronsmall", "Dieresissmall", "Brevesmall", "Caronsmall", "Dotaccentsmall", "Macronsmall", "figuredash", "hypheninferior", "Ogoneksmall", "Ringsmall", "Cedillasmall", "onequarter", "onehalf", "threequarters", "questiondownsmall", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior", "Agravesmall", "Aacutesmall", "Acircumflexsmall", "Atildesmall", "Adieresissmall", "Aringsmall", "AEsmall", "Ccedillasmall", "Egravesmall", "Eacutesmall", "Ecircumflexsmall", "Edieresissmall", "Igravesmall", "Iacutesmall", "Icircumflexsmall", "Idieresissmall", "Ethsmall", "Ntildesmall", "Ogravesmall", "Oacutesmall", "Ocircumflexsmall", "Otildesmall", "Odieresissmall", "OEsmall", "Oslashsmall", "Ugravesmall", "Uacutesmall", "Ucircumflexsmall", "Udieresissmall", "Yacutesmall", "Thornsmall", "Ydieresissmall"], at = [".notdef", "space", "dollaroldstyle", "dollarsuperior", "parenleftsuperior", "parenrightsuperior", "twodotenleader", "onedotenleader", "comma", "hyphen", "period", "fraction", "zerooldstyle", "oneoldstyle", "twooldstyle", "threeoldstyle", "fouroldstyle", "fiveoldstyle", "sixoldstyle", "sevenoldstyle", "eightoldstyle", "nineoldstyle", "colon", "semicolon", "commasuperior", "threequartersemdash", "periodsuperior", "asuperior", "bsuperior", "centsuperior", "dsuperior", "esuperior", "isuperior", "lsuperior", "msuperior", "nsuperior", "osuperior", "rsuperior", "ssuperior", "tsuperior", "ff", "fi", "fl", "ffi", "ffl", "parenleftinferior", "parenrightinferior", "hyphensuperior", "colonmonetary", "onefitted", "rupiah", "centoldstyle", "figuredash", "hypheninferior", "onequarter", "onehalf", "threequarters", "oneeighth", "threeeighths", "fiveeighths", "seveneighths", "onethird", "twothirds", "zerosuperior", "onesuperior", "twosuperior", "threesuperior", "foursuperior", "fivesuperior", "sixsuperior", "sevensuperior", "eightsuperior", "ninesuperior", "zeroinferior", "oneinferior", "twoinferior", "threeinferior", "fourinferior", "fiveinferior", "sixinferior", "seveninferior", "eightinferior", "nineinferior", "centinferior", "dollarinferior", "periodinferior", "commainferior"], Wt = new e.Struct({
                reserved: new e.Reserved(e.uint16),
                reqFeatureIndex: e.uint16,
                featureCount: e.uint16,
                featureIndexes: new e.Array(e.uint16, "featureCount")
              }), _t = new e.Struct({
                tag: new e.String(4),
                langSys: new e.Pointer(e.uint16, Wt, {
                  type: "parent"
                })
              }), Q = new e.Struct({
                defaultLangSys: new e.Pointer(e.uint16, Wt),
                count: e.uint16,
                langSysRecords: new e.Array(_t, "count")
              }), Jt = new e.Struct({
                tag: new e.String(4),
                script: new e.Pointer(e.uint16, Q, {
                  type: "parent"
                })
              }), te = new e.Array(Jt, e.uint16), Ct = new e.Struct({
                featureParams: e.uint16,
                // pointer
                lookupCount: e.uint16,
                lookupListIndexes: new e.Array(e.uint16, "lookupCount")
              }), Ht = new e.Struct({
                tag: new e.String(4),
                feature: new e.Pointer(e.uint16, Ct, {
                  type: "parent"
                })
              }), oe = new e.Array(Ht, e.uint16), Le = new e.Struct({
                markAttachmentType: e.uint8,
                flags: new e.Bitfield(e.uint8, ["rightToLeft", "ignoreBaseGlyphs", "ignoreLigatures", "ignoreMarks", "useMarkFilteringSet"])
              });
              function De(ft) {
                var X = new e.Struct({
                  lookupType: e.uint16,
                  flags: Le,
                  subTableCount: e.uint16,
                  subTables: new e.Array(new e.Pointer(e.uint16, ft), "subTableCount"),
                  markFilteringSet: new e.Optional(e.uint16, function(et) {
                    return et.flags.flags.useMarkFilteringSet;
                  })
                });
                return new e.LazyArray(new e.Pointer(e.uint16, X), e.uint16);
              }
              var ke = new e.Struct({
                start: e.uint16,
                end: e.uint16,
                startCoverageIndex: e.uint16
              }), Ne = new e.VersionedStruct(e.uint16, {
                1: {
                  glyphCount: e.uint16,
                  glyphs: new e.Array(e.uint16, "glyphCount")
                },
                2: {
                  rangeCount: e.uint16,
                  rangeRecords: new e.Array(ke, "rangeCount")
                }
              }), rn = new e.Struct({
                start: e.uint16,
                end: e.uint16,
                class: e.uint16
              }), tr = new e.VersionedStruct(e.uint16, {
                1: {
                  // Class array
                  startGlyph: e.uint16,
                  glyphCount: e.uint16,
                  classValueArray: new e.Array(e.uint16, "glyphCount")
                },
                2: {
                  // Class ranges
                  classRangeCount: e.uint16,
                  classRangeRecord: new e.Array(rn, "classRangeCount")
                }
              }), Ze = new e.Struct({
                a: e.uint16,
                // startSize for hinting Device, outerIndex for VariationIndex
                b: e.uint16,
                // endSize for Device, innerIndex for VariationIndex
                deltaFormat: e.uint16
              }), br = new e.Struct({
                sequenceIndex: e.uint16,
                lookupListIndex: e.uint16
              }), Ir = new e.Struct({
                glyphCount: e.uint16,
                lookupCount: e.uint16,
                input: new e.Array(e.uint16, function(ft) {
                  return ft.glyphCount - 1;
                }),
                lookupRecords: new e.Array(br, "lookupCount")
              }), Zr = new e.Array(new e.Pointer(e.uint16, Ir), e.uint16), Cn = new e.Struct({
                glyphCount: e.uint16,
                lookupCount: e.uint16,
                classes: new e.Array(e.uint16, function(ft) {
                  return ft.glyphCount - 1;
                }),
                lookupRecords: new e.Array(br, "lookupCount")
              }), Mn = new e.Array(new e.Pointer(e.uint16, Cn), e.uint16), rr = new e.VersionedStruct(e.uint16, {
                1: {
                  // Simple context
                  coverage: new e.Pointer(e.uint16, Ne),
                  ruleSetCount: e.uint16,
                  ruleSets: new e.Array(new e.Pointer(e.uint16, Zr), "ruleSetCount")
                },
                2: {
                  // Class-based context
                  coverage: new e.Pointer(e.uint16, Ne),
                  classDef: new e.Pointer(e.uint16, tr),
                  classSetCnt: e.uint16,
                  classSet: new e.Array(new e.Pointer(e.uint16, Mn), "classSetCnt")
                },
                3: {
                  glyphCount: e.uint16,
                  lookupCount: e.uint16,
                  coverages: new e.Array(new e.Pointer(e.uint16, Ne), "glyphCount"),
                  lookupRecords: new e.Array(br, "lookupCount")
                }
              }), nn = new e.Struct({
                backtrackGlyphCount: e.uint16,
                backtrack: new e.Array(e.uint16, "backtrackGlyphCount"),
                inputGlyphCount: e.uint16,
                input: new e.Array(e.uint16, function(ft) {
                  return ft.inputGlyphCount - 1;
                }),
                lookaheadGlyphCount: e.uint16,
                lookahead: new e.Array(e.uint16, "lookaheadGlyphCount"),
                lookupCount: e.uint16,
                lookupRecords: new e.Array(br, "lookupCount")
              }), Mr = new e.Array(new e.Pointer(e.uint16, nn), e.uint16), $r = new e.VersionedStruct(e.uint16, {
                1: {
                  // Simple context glyph substitution
                  coverage: new e.Pointer(e.uint16, Ne),
                  chainCount: e.uint16,
                  chainRuleSets: new e.Array(new e.Pointer(e.uint16, Mr), "chainCount")
                },
                2: {
                  // Class-based chaining context
                  coverage: new e.Pointer(e.uint16, Ne),
                  backtrackClassDef: new e.Pointer(e.uint16, tr),
                  inputClassDef: new e.Pointer(e.uint16, tr),
                  lookaheadClassDef: new e.Pointer(e.uint16, tr),
                  chainCount: e.uint16,
                  chainClassSet: new e.Array(new e.Pointer(e.uint16, Mr), "chainCount")
                },
                3: {
                  // Coverage-based chaining context
                  backtrackGlyphCount: e.uint16,
                  backtrackCoverage: new e.Array(new e.Pointer(e.uint16, Ne), "backtrackGlyphCount"),
                  inputGlyphCount: e.uint16,
                  inputCoverage: new e.Array(new e.Pointer(e.uint16, Ne), "inputGlyphCount"),
                  lookaheadGlyphCount: e.uint16,
                  lookaheadCoverage: new e.Array(new e.Pointer(e.uint16, Ne), "lookaheadGlyphCount"),
                  lookupCount: e.uint16,
                  lookupRecords: new e.Array(br, "lookupCount")
                }
              }), Wr = new e.Fixed(16, "BE", 14), Hn = new e.Struct({
                startCoord: Wr,
                peakCoord: Wr,
                endCoord: Wr
              }), jn = new e.Struct({
                axisCount: e.uint16,
                regionCount: e.uint16,
                variationRegions: new e.Array(new e.Array(Hn, "axisCount"), "regionCount")
              }), Ue = new e.Struct({
                shortDeltas: new e.Array(e.int16, function(ft) {
                  return ft.parent.shortDeltaCount;
                }),
                regionDeltas: new e.Array(e.int8, function(ft) {
                  return ft.parent.regionIndexCount - ft.parent.shortDeltaCount;
                }),
                deltas: function(X) {
                  return X.shortDeltas.concat(X.regionDeltas);
                }
              }), ze = new e.Struct({
                itemCount: e.uint16,
                shortDeltaCount: e.uint16,
                regionIndexCount: e.uint16,
                regionIndexes: new e.Array(e.uint16, "regionIndexCount"),
                deltaSets: new e.Array(Ue, "itemCount")
              }), Qe = new e.Struct({
                format: e.uint16,
                variationRegionList: new e.Pointer(e.uint32, jn),
                variationDataCount: e.uint16,
                itemVariationData: new e.Array(new e.Pointer(e.uint32, ze), "variationDataCount")
              }), ur = new e.VersionedStruct(e.uint16, {
                1: (r = {
                  axisIndex: e.uint16
                }, r.axisIndex = e.uint16, r.filterRangeMinValue = Wr, r.filterRangeMaxValue = Wr, r)
              }), xn = new e.Struct({
                conditionCount: e.uint16,
                conditionTable: new e.Array(new e.Pointer(e.uint32, ur), "conditionCount")
              }), wn = new e.Struct({
                featureIndex: e.uint16,
                alternateFeatureTable: new e.Pointer(e.uint32, Ct, {
                  type: "parent"
                })
              }), Yn = new e.Struct({
                version: e.fixed32,
                substitutionCount: e.uint16,
                substitutions: new e.Array(wn, "substitutionCount")
              }), va = new e.Struct({
                conditionSet: new e.Pointer(e.uint32, xn, {
                  type: "parent"
                }),
                featureTableSubstitution: new e.Pointer(e.uint32, Yn, {
                  type: "parent"
                })
              }), Kn = new e.Struct({
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                featureVariationRecordCount: e.uint32,
                featureVariationRecords: new e.Array(va, "featureVariationRecordCount")
              }), Jn = /* @__PURE__ */ function() {
                function ft(et, P) {
                  this.predefinedOps = et, this.type = P;
                }
                var X = ft.prototype;
                return X.decode = function(P, M, H) {
                  return this.predefinedOps[H[0]] ? this.predefinedOps[H[0]] : this.type.decode(P, M, H);
                }, X.size = function(P, M) {
                  return this.type.size(P, M);
                }, X.encode = function(P, M, H) {
                  var lt = this.predefinedOps.indexOf(M);
                  return lt !== -1 ? lt : this.type.encode(P, M, H);
                }, ft;
              }(), Kt = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X() {
                  return ft.call(this, "UInt8") || this;
                }
                var et = X.prototype;
                return et.decode = function(M) {
                  return e.uint8.decode(M) & 127;
                }, X;
              }(e.Number), Pt = new e.Struct({
                first: e.uint16,
                nLeft: e.uint8
              }), re = new e.Struct({
                first: e.uint16,
                nLeft: e.uint16
              }), Bt = new e.VersionedStruct(new Kt(), {
                0: {
                  nCodes: e.uint8,
                  codes: new e.Array(e.uint8, "nCodes")
                },
                1: {
                  nRanges: e.uint8,
                  ranges: new e.Array(Pt, "nRanges")
                }
                // TODO: supplement?
              }), Nt = new Jn([ot, Y], new be(Bt, {
                lazy: !0
              })), Mt = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et.decode = function(M, H) {
                  for (var lt = m.resolveLength(this.length, M, H), vt = 0, dt = []; vt < lt; ) {
                    var ct = this.type.decode(M, H);
                    ct.offset = vt, vt += ct.nLeft + 1, dt.push(ct);
                  }
                  return dt;
                }, X;
              }(e.Array), jt = new e.VersionedStruct(e.uint8, {
                0: {
                  glyphs: new e.Array(e.uint16, function(ft) {
                    return ft.parent.CharStrings.length - 1;
                  })
                },
                1: {
                  ranges: new Mt(Pt, function(ft) {
                    return ft.parent.CharStrings.length - 1;
                  })
                },
                2: {
                  ranges: new Mt(re, function(ft) {
                    return ft.parent.CharStrings.length - 1;
                  })
                }
              }), ee = new Jn([j, mt, at], new be(jt, {
                lazy: !0
              })), kt = new e.Struct({
                first: e.uint16,
                fd: e.uint8
              }), ie = new e.Struct({
                first: e.uint32,
                fd: e.uint16
              }), Zt = new e.VersionedStruct(e.uint8, {
                0: {
                  fds: new e.Array(e.uint8, function(ft) {
                    return ft.parent.CharStrings.length;
                  })
                },
                3: {
                  nRanges: e.uint16,
                  ranges: new e.Array(kt, "nRanges"),
                  sentinel: e.uint16
                },
                4: {
                  nRanges: e.uint32,
                  ranges: new e.Array(ie, "nRanges"),
                  sentinel: e.uint32
                }
              }), me = new be(Ft), Pe = /* @__PURE__ */ function() {
                function ft() {
                }
                var X = ft.prototype;
                return X.decode = function(P, M, H) {
                  return M.length = H[0], me.decode(P, M, [H[1]]);
                }, X.size = function(P, M) {
                  return [Ft.size(P, M, !1), me.size(P, M)[0]];
                }, X.encode = function(P, M, H) {
                  return [Ft.size(M, H, !1), me.encode(P, M, H)[0]];
                }, ft;
              }(), Be = new de([
                // key       name                   type(s)                                 default
                [18, "Private", new Pe(), null],
                [[12, 38], "FontName", "sid", null],
                [[12, 7], "FontMatrix", "array", [1e-3, 0, 0, 1e-3, 0, 0]],
                [[12, 5], "PaintType", "number", 0]
              ]), je = new de([
                // key       name                   type(s)                                 default
                [[12, 30], "ROS", ["sid", "sid", "number"], null],
                [0, "version", "sid", null],
                [1, "Notice", "sid", null],
                [[12, 0], "Copyright", "sid", null],
                [2, "FullName", "sid", null],
                [3, "FamilyName", "sid", null],
                [4, "Weight", "sid", null],
                [[12, 1], "isFixedPitch", "boolean", !1],
                [[12, 2], "ItalicAngle", "number", 0],
                [[12, 3], "UnderlinePosition", "number", -100],
                [[12, 4], "UnderlineThickness", "number", 50],
                [[12, 5], "PaintType", "number", 0],
                [[12, 6], "CharstringType", "number", 2],
                [[12, 7], "FontMatrix", "array", [1e-3, 0, 0, 1e-3, 0, 0]],
                [13, "UniqueID", "number", null],
                [5, "FontBBox", "array", [0, 0, 0, 0]],
                [[12, 8], "StrokeWidth", "number", 0],
                [14, "XUID", "array", null],
                [15, "charset", ee, j],
                [16, "Encoding", Nt, ot],
                [17, "CharStrings", new be(new ce()), null],
                [18, "Private", new Pe(), null],
                [[12, 20], "SyntheticBase", "number", null],
                [[12, 21], "PostScript", "sid", null],
                [[12, 22], "BaseFontName", "sid", null],
                [[12, 23], "BaseFontBlend", "delta", null],
                // CID font specific
                [[12, 31], "CIDFontVersion", "number", 0],
                [[12, 32], "CIDFontRevision", "number", 0],
                [[12, 33], "CIDFontType", "number", 0],
                [[12, 34], "CIDCount", "number", 8720],
                [[12, 35], "UIDBase", "number", null],
                [[12, 37], "FDSelect", new be(Zt), null],
                [[12, 36], "FDArray", new be(new ce(Be)), null],
                [[12, 38], "FontName", "sid", null]
              ]), Je = new e.Struct({
                length: e.uint16,
                itemVariationStore: Qe
              }), nr = new de([[[12, 7], "FontMatrix", "array", [1e-3, 0, 0, 1e-3, 0, 0]], [17, "CharStrings", new be(new ce()), null], [[12, 37], "FDSelect", new be(Zt), null], [[12, 36], "FDArray", new be(new ce(Be)), null], [24, "vstore", new be(Je), null], [25, "maxstack", "number", 193]]), ve = new e.VersionedStruct(e.fixed16, {
                1: {
                  hdrSize: e.uint8,
                  offSize: e.uint8,
                  nameIndex: new ce(new e.String("length")),
                  topDictIndex: new ce(je),
                  stringIndex: new ce(new e.String("length")),
                  globalSubrIndex: new ce()
                },
                2: {
                  hdrSize: e.uint8,
                  length: e.uint16,
                  topDict: nr,
                  globalSubrIndex: new ce()
                }
              }), Re = /* @__PURE__ */ function() {
                function ft(et) {
                  this.stream = et, this.decode();
                }
                ft.decode = function(P) {
                  return new ft(P);
                };
                var X = ft.prototype;
                return X.decode = function() {
                  this.stream.pos;
                  var P = ve.decode(this.stream);
                  for (var M in P) {
                    var H = P[M];
                    this[M] = H;
                  }
                  if (this.version < 2) {
                    if (this.topDictIndex.length !== 1)
                      throw new Error("Only a single font is allowed in CFF");
                    this.topDict = this.topDictIndex[0];
                  }
                  return this.isCIDFont = this.topDict.ROS != null, this;
                }, X.string = function(P) {
                  return this.version >= 2 ? null : P < fe.length ? fe[P] : this.stringIndex[P - fe.length];
                }, X.getCharString = function(P) {
                  return this.stream.pos = this.topDict.CharStrings[P].offset, this.stream.readBuffer(this.topDict.CharStrings[P].length);
                }, X.getGlyphName = function(P) {
                  if (this.version >= 2 || this.isCIDFont)
                    return null;
                  var M = this.topDict.charset;
                  if (Array.isArray(M))
                    return M[P];
                  if (P === 0)
                    return ".notdef";
                  switch (P -= 1, M.version) {
                    case 0:
                      return this.string(M.glyphs[P]);
                    case 1:
                    case 2:
                      for (var H = 0; H < M.ranges.length; H++) {
                        var lt = M.ranges[H];
                        if (lt.offset <= P && P <= lt.offset + lt.nLeft)
                          return this.string(lt.first + (P - lt.offset));
                      }
                      break;
                  }
                  return null;
                }, X.fdForGlyph = function(P) {
                  if (!this.topDict.FDSelect)
                    return null;
                  switch (this.topDict.FDSelect.version) {
                    case 0:
                      return this.topDict.FDSelect.fds[P];
                    case 3:
                    case 4:
                      for (var M = this.topDict.FDSelect.ranges, H = 0, lt = M.length - 1; H <= lt; ) {
                        var vt = H + lt >> 1;
                        if (P < M[vt].first)
                          lt = vt - 1;
                        else if (vt < lt && P >= M[vt + 1].first)
                          H = vt + 1;
                        else
                          return M[vt].fd;
                      }
                    default:
                      throw new Error("Unknown FDSelect version: ".concat(this.topDict.FDSelect.version));
                  }
                }, X.privateDictForGlyph = function(P) {
                  if (this.topDict.FDSelect) {
                    var M = this.fdForGlyph(P);
                    return this.topDict.FDArray[M] ? this.topDict.FDArray[M].Private : null;
                  }
                  return this.version < 2 ? this.topDict.Private : this.topDict.FDArray[0].Private;
                }, i(ft, [{
                  key: "postscriptName",
                  get: function() {
                    return this.version < 2 ? this.nameIndex[0] : null;
                  }
                }, {
                  key: "fullName",
                  get: function() {
                    return this.string(this.topDict.FullName);
                  }
                }, {
                  key: "familyName",
                  get: function() {
                    return this.string(this.topDict.FamilyName);
                  }
                }]), ft;
              }(), $e = new e.Struct({
                glyphIndex: e.uint16,
                vertOriginY: e.int16
              }), We = new e.Struct({
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                defaultVertOriginY: e.int16,
                numVertOriginYMetrics: e.uint16,
                metrics: new e.Array($e, "numVertOriginYMetrics")
              }), ar = new e.Struct({
                height: e.uint8,
                width: e.uint8,
                horiBearingX: e.int8,
                horiBearingY: e.int8,
                horiAdvance: e.uint8,
                vertBearingX: e.int8,
                vertBearingY: e.int8,
                vertAdvance: e.uint8
              }), Ye = new e.Struct({
                height: e.uint8,
                width: e.uint8,
                bearingX: e.int8,
                bearingY: e.int8,
                advance: e.uint8
              }), cr = new e.Struct({
                glyph: e.uint16,
                xOffset: e.int8,
                yOffset: e.int8
              }), ir = function() {
              }, Ar = function() {
              };
              new e.VersionedStruct("version", {
                1: {
                  metrics: Ye,
                  data: ir
                },
                2: {
                  metrics: Ye,
                  data: Ar
                },
                // format 3 is deprecated
                // format 4 is not supported by Microsoft
                5: {
                  data: Ar
                },
                6: {
                  metrics: ar,
                  data: ir
                },
                7: {
                  metrics: ar,
                  data: Ar
                },
                8: {
                  metrics: Ye,
                  pad: new e.Reserved(e.uint8),
                  numComponents: e.uint16,
                  components: new e.Array(cr, "numComponents")
                },
                9: {
                  metrics: ar,
                  pad: new e.Reserved(e.uint8),
                  numComponents: e.uint16,
                  components: new e.Array(cr, "numComponents")
                },
                17: {
                  metrics: Ye,
                  dataLen: e.uint32,
                  data: new e.Buffer("dataLen")
                },
                18: {
                  metrics: ar,
                  dataLen: e.uint32,
                  data: new e.Buffer("dataLen")
                },
                19: {
                  dataLen: e.uint32,
                  data: new e.Buffer("dataLen")
                }
              });
              var kr = new e.Struct({
                ascender: e.int8,
                descender: e.int8,
                widthMax: e.uint8,
                caretSlopeNumerator: e.int8,
                caretSlopeDenominator: e.int8,
                caretOffset: e.int8,
                minOriginSB: e.int8,
                minAdvanceSB: e.int8,
                maxBeforeBL: e.int8,
                minAfterBL: e.int8,
                pad: new e.Reserved(e.int8, 2)
              }), Dr = new e.Struct({
                glyphCode: e.uint16,
                offset: e.uint16
              }), Tr = new e.VersionedStruct(e.uint16, {
                header: {
                  imageFormat: e.uint16,
                  imageDataOffset: e.uint32
                },
                1: {
                  offsetArray: new e.Array(e.uint32, function(ft) {
                    return ft.parent.lastGlyphIndex - ft.parent.firstGlyphIndex + 1;
                  })
                },
                2: {
                  imageSize: e.uint32,
                  bigMetrics: ar
                },
                3: {
                  offsetArray: new e.Array(e.uint16, function(ft) {
                    return ft.parent.lastGlyphIndex - ft.parent.firstGlyphIndex + 1;
                  })
                },
                4: {
                  numGlyphs: e.uint32,
                  glyphArray: new e.Array(Dr, function(ft) {
                    return ft.numGlyphs + 1;
                  })
                },
                5: {
                  imageSize: e.uint32,
                  bigMetrics: ar,
                  numGlyphs: e.uint32,
                  glyphCodeArray: new e.Array(e.uint16, "numGlyphs")
                }
              }), Pr = new e.Struct({
                firstGlyphIndex: e.uint16,
                lastGlyphIndex: e.uint16,
                subtable: new e.Pointer(e.uint32, Tr)
              }), _r = new e.Struct({
                indexSubTableArray: new e.Pointer(e.uint32, new e.Array(Pr, 1), {
                  type: "parent"
                }),
                indexTablesSize: e.uint32,
                numberOfIndexSubTables: e.uint32,
                colorRef: e.uint32,
                hori: kr,
                vert: kr,
                startGlyphIndex: e.uint16,
                endGlyphIndex: e.uint16,
                ppemX: e.uint8,
                ppemY: e.uint8,
                bitDepth: e.uint8,
                flags: new e.Bitfield(e.uint8, ["horizontal", "vertical"])
              }), En = new e.Struct({
                version: e.uint32,
                // 0x00020000
                numSizes: e.uint32,
                sizes: new e.Array(_r, "numSizes")
              }), an = new e.Struct({
                ppem: e.uint16,
                resolution: e.uint16,
                imageOffsets: new e.Array(new e.Pointer(e.uint32, "void"), function(ft) {
                  return ft.parent.parent.maxp.numGlyphs + 1;
                })
              }), bn = new e.Struct({
                version: e.uint16,
                flags: new e.Bitfield(e.uint16, ["renderOutlines"]),
                numImgTables: e.uint32,
                imageTables: new e.Array(new e.Pointer(e.uint32, an), "numImgTables")
              }), Dn = new e.Struct({
                gid: e.uint16,
                // Glyph ID of layer glyph (must be in z-order from bottom to top).
                paletteIndex: e.uint16
                // Index value to use in the appropriate palette. This value must
              }), on = new e.Struct({
                gid: e.uint16,
                // Glyph ID of reference glyph. This glyph is for reference only
                // and is not rendered for color.
                firstLayerIndex: e.uint16,
                // Index (from beginning of the Layer Records) to the layer record.
                // There will be numLayers consecutive entries for this base glyph.
                numLayers: e.uint16
              }), cn = new e.Struct({
                version: e.uint16,
                numBaseGlyphRecords: e.uint16,
                baseGlyphRecord: new e.Pointer(e.uint32, new e.Array(on, "numBaseGlyphRecords")),
                layerRecords: new e.Pointer(e.uint32, new e.Array(Dn, "numLayerRecords"), {
                  lazy: !0
                }),
                numLayerRecords: e.uint16
              }), ln = new e.Struct({
                blue: e.uint8,
                green: e.uint8,
                red: e.uint8,
                alpha: e.uint8
              }), Ya = new e.VersionedStruct(e.uint16, {
                header: {
                  numPaletteEntries: e.uint16,
                  numPalettes: e.uint16,
                  numColorRecords: e.uint16,
                  colorRecords: new e.Pointer(e.uint32, new e.Array(ln, "numColorRecords")),
                  colorRecordIndices: new e.Array(e.uint16, "numPalettes")
                },
                0: {},
                1: {
                  offsetPaletteTypeArray: new e.Pointer(e.uint32, new e.Array(e.uint32, "numPalettes")),
                  offsetPaletteLabelArray: new e.Pointer(e.uint32, new e.Array(e.uint16, "numPalettes")),
                  offsetPaletteEntryLabelArray: new e.Pointer(e.uint32, new e.Array(e.uint16, "numPaletteEntries"))
                }
              }), oa = new e.VersionedStruct(e.uint16, {
                1: {
                  // Design units only
                  coordinate: e.int16
                  // X or Y value, in design units
                },
                2: {
                  // Design units plus contour point
                  coordinate: e.int16,
                  // X or Y value, in design units
                  referenceGlyph: e.uint16,
                  // GlyphID of control glyph
                  baseCoordPoint: e.uint16
                  // Index of contour point on the referenceGlyph
                },
                3: {
                  // Design units plus Device table
                  coordinate: e.int16,
                  // X or Y value, in design units
                  deviceTable: new e.Pointer(e.uint16, Ze)
                  // Device table for X or Y value
                }
              }), Ka = new e.Struct({
                defaultIndex: e.uint16,
                // Index of default baseline for this script-same index in the BaseTagList
                baseCoordCount: e.uint16,
                baseCoords: new e.Array(new e.Pointer(e.uint16, oa), "baseCoordCount")
              }), Ja = new e.Struct({
                tag: new e.String(4),
                // 4-byte feature identification tag-must match FeatureTag in FeatureList
                minCoord: new e.Pointer(e.uint16, oa, {
                  type: "parent"
                }),
                // May be NULL
                maxCoord: new e.Pointer(e.uint16, oa, {
                  type: "parent"
                })
                // May be NULL
              }), Na = new e.Struct({
                minCoord: new e.Pointer(e.uint16, oa),
                // May be NULL
                maxCoord: new e.Pointer(e.uint16, oa),
                // May be NULL
                featMinMaxCount: e.uint16,
                // May be 0
                featMinMaxRecords: new e.Array(Ja, "featMinMaxCount")
                // In alphabetical order
              }), sa = new e.Struct({
                tag: new e.String(4),
                // 4-byte language system identification tag
                minMax: new e.Pointer(e.uint16, Na, {
                  type: "parent"
                })
              }), Ma = new e.Struct({
                baseValues: new e.Pointer(e.uint16, Ka),
                // May be NULL
                defaultMinMax: new e.Pointer(e.uint16, Na),
                // May be NULL
                baseLangSysCount: e.uint16,
                // May be 0
                baseLangSysRecords: new e.Array(sa, "baseLangSysCount")
                // in alphabetical order by BaseLangSysTag
              }), pa = new e.Struct({
                tag: new e.String(4),
                // 4-byte script identification tag
                script: new e.Pointer(e.uint16, Ma, {
                  type: "parent"
                })
              }), Pn = new e.Array(pa, e.uint16), wt = new e.Array(new e.String(4), e.uint16), Z = new e.Struct({
                baseTagList: new e.Pointer(e.uint16, wt),
                // May be NULL
                baseScriptList: new e.Pointer(e.uint16, Pn)
              }), z = new e.VersionedStruct(e.uint32, {
                header: {
                  horizAxis: new e.Pointer(e.uint16, Z),
                  // May be NULL
                  vertAxis: new e.Pointer(e.uint16, Z)
                  // May be NULL
                },
                65536: {},
                65537: {
                  itemVariationStore: new e.Pointer(e.uint32, Qe)
                }
              }), rt = new e.Array(e.uint16, e.uint16), q = new e.Struct({
                coverage: new e.Pointer(e.uint16, Ne),
                glyphCount: e.uint16,
                attachPoints: new e.Array(new e.Pointer(e.uint16, rt), "glyphCount")
              }), pt = new e.VersionedStruct(e.uint16, {
                1: {
                  // Design units only
                  coordinate: e.int16
                },
                2: {
                  // Contour point
                  caretValuePoint: e.uint16
                },
                3: {
                  // Design units plus Device table
                  coordinate: e.int16,
                  deviceTable: new e.Pointer(e.uint16, Ze)
                }
              }), St = new e.Array(new e.Pointer(e.uint16, pt), e.uint16), qt = new e.Struct({
                coverage: new e.Pointer(e.uint16, Ne),
                ligGlyphCount: e.uint16,
                ligGlyphs: new e.Array(new e.Pointer(e.uint16, St), "ligGlyphCount")
              }), ne = new e.Struct({
                markSetTableFormat: e.uint16,
                markSetCount: e.uint16,
                coverage: new e.Array(new e.Pointer(e.uint32, Ne), "markSetCount")
              }), he = new e.VersionedStruct(e.uint32, {
                header: {
                  glyphClassDef: new e.Pointer(e.uint16, tr),
                  attachList: new e.Pointer(e.uint16, q),
                  ligCaretList: new e.Pointer(e.uint16, qt),
                  markAttachClassDef: new e.Pointer(e.uint16, tr)
                },
                65536: {},
                65538: {
                  markGlyphSetsDef: new e.Pointer(e.uint16, ne)
                },
                65539: {
                  markGlyphSetsDef: new e.Pointer(e.uint16, ne),
                  itemVariationStore: new e.Pointer(e.uint32, Qe)
                }
              }), ye = new e.Bitfield(e.uint16, ["xPlacement", "yPlacement", "xAdvance", "yAdvance", "xPlaDevice", "yPlaDevice", "xAdvDevice", "yAdvDevice"]), Se = {
                xPlacement: e.int16,
                yPlacement: e.int16,
                xAdvance: e.int16,
                yAdvance: e.int16,
                xPlaDevice: new e.Pointer(e.uint16, Ze, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                }),
                yPlaDevice: new e.Pointer(e.uint16, Ze, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                }),
                xAdvDevice: new e.Pointer(e.uint16, Ze, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                }),
                yAdvDevice: new e.Pointer(e.uint16, Ze, {
                  type: "global",
                  relativeTo: function(X) {
                    return X.rel;
                  }
                })
              }, Ce = /* @__PURE__ */ function() {
                function ft(et) {
                  et === void 0 && (et = "valueFormat"), this.key = et;
                }
                var X = ft.prototype;
                return X.buildStruct = function(P) {
                  for (var M = P; !M[this.key] && M.parent; )
                    M = M.parent;
                  if (M[this.key]) {
                    var H = {};
                    H.rel = function() {
                      return M._startOffset;
                    };
                    var lt = M[this.key];
                    for (var vt in lt)
                      lt[vt] && (H[vt] = Se[vt]);
                    return new e.Struct(H);
                  }
                }, X.size = function(P, M) {
                  return this.buildStruct(M).size(P, M);
                }, X.decode = function(P, M) {
                  var H = this.buildStruct(M).decode(P, M);
                  return delete H.rel, H;
                }, ft;
              }(), Ie = new e.Struct({
                secondGlyph: e.uint16,
                value1: new Ce("valueFormat1"),
                value2: new Ce("valueFormat2")
              }), Ge = new e.Array(Ie, e.uint16), Ve = new e.Struct({
                value1: new Ce("valueFormat1"),
                value2: new Ce("valueFormat2")
              }), qe = new e.VersionedStruct(e.uint16, {
                1: {
                  // Design units only
                  xCoordinate: e.int16,
                  yCoordinate: e.int16
                },
                2: {
                  // Design units plus contour point
                  xCoordinate: e.int16,
                  yCoordinate: e.int16,
                  anchorPoint: e.uint16
                },
                3: {
                  // Design units plus Device tables
                  xCoordinate: e.int16,
                  yCoordinate: e.int16,
                  xDeviceTable: new e.Pointer(e.uint16, Ze),
                  yDeviceTable: new e.Pointer(e.uint16, Ze)
                }
              }), lr = new e.Struct({
                entryAnchor: new e.Pointer(e.uint16, qe, {
                  type: "parent"
                }),
                exitAnchor: new e.Pointer(e.uint16, qe, {
                  type: "parent"
                })
              }), Fr = new e.Struct({
                class: e.uint16,
                markAnchor: new e.Pointer(e.uint16, qe, {
                  type: "parent"
                })
              }), qr = new e.Array(Fr, e.uint16), yr = new e.Array(new e.Pointer(e.uint16, qe), function(ft) {
                return ft.parent.classCount;
              }), Yr = new e.Array(yr, e.uint16), gn = new e.Array(new e.Pointer(e.uint16, qe), function(ft) {
                return ft.parent.parent.classCount;
              }), Kr = new e.Array(gn, e.uint16), yn = new e.Array(new e.Pointer(e.uint16, Kr), e.uint16), Tn = new e.VersionedStruct("lookupType", {
                1: new e.VersionedStruct(e.uint16, {
                  // Single Adjustment
                  1: {
                    // Single positioning value
                    coverage: new e.Pointer(e.uint16, Ne),
                    valueFormat: ye,
                    value: new Ce()
                  },
                  2: {
                    coverage: new e.Pointer(e.uint16, Ne),
                    valueFormat: ye,
                    valueCount: e.uint16,
                    values: new e.LazyArray(new Ce(), "valueCount")
                  }
                }),
                2: new e.VersionedStruct(e.uint16, {
                  // Pair Adjustment Positioning
                  1: {
                    // Adjustments for glyph pairs
                    coverage: new e.Pointer(e.uint16, Ne),
                    valueFormat1: ye,
                    valueFormat2: ye,
                    pairSetCount: e.uint16,
                    pairSets: new e.LazyArray(new e.Pointer(e.uint16, Ge), "pairSetCount")
                  },
                  2: {
                    // Class pair adjustment
                    coverage: new e.Pointer(e.uint16, Ne),
                    valueFormat1: ye,
                    valueFormat2: ye,
                    classDef1: new e.Pointer(e.uint16, tr),
                    classDef2: new e.Pointer(e.uint16, tr),
                    class1Count: e.uint16,
                    class2Count: e.uint16,
                    classRecords: new e.LazyArray(new e.LazyArray(Ve, "class2Count"), "class1Count")
                  }
                }),
                3: {
                  // Cursive Attachment Positioning
                  format: e.uint16,
                  coverage: new e.Pointer(e.uint16, Ne),
                  entryExitCount: e.uint16,
                  entryExitRecords: new e.Array(lr, "entryExitCount")
                },
                4: {
                  // MarkToBase Attachment Positioning
                  format: e.uint16,
                  markCoverage: new e.Pointer(e.uint16, Ne),
                  baseCoverage: new e.Pointer(e.uint16, Ne),
                  classCount: e.uint16,
                  markArray: new e.Pointer(e.uint16, qr),
                  baseArray: new e.Pointer(e.uint16, Yr)
                },
                5: {
                  // MarkToLigature Attachment Positioning
                  format: e.uint16,
                  markCoverage: new e.Pointer(e.uint16, Ne),
                  ligatureCoverage: new e.Pointer(e.uint16, Ne),
                  classCount: e.uint16,
                  markArray: new e.Pointer(e.uint16, qr),
                  ligatureArray: new e.Pointer(e.uint16, yn)
                },
                6: {
                  // MarkToMark Attachment Positioning
                  format: e.uint16,
                  mark1Coverage: new e.Pointer(e.uint16, Ne),
                  mark2Coverage: new e.Pointer(e.uint16, Ne),
                  classCount: e.uint16,
                  mark1Array: new e.Pointer(e.uint16, qr),
                  mark2Array: new e.Pointer(e.uint16, Yr)
                },
                7: rr,
                // Contextual positioning
                8: $r,
                // Chaining contextual positioning
                9: {
                  // Extension Positioning
                  posFormat: e.uint16,
                  lookupType: e.uint16,
                  // cannot also be 9
                  extension: new e.Pointer(e.uint32, Tn)
                }
              });
              Tn.versions[9].extension.type = Tn;
              var fa = new e.VersionedStruct(e.uint32, {
                header: {
                  scriptList: new e.Pointer(e.uint16, te),
                  featureList: new e.Pointer(e.uint16, oe),
                  lookupList: new e.Pointer(e.uint16, new De(Tn))
                },
                65536: {},
                65537: {
                  featureVariations: new e.Pointer(e.uint32, Kn)
                }
              }), ea = new e.Array(e.uint16, e.uint16), hi = ea, ra = new e.Struct({
                glyph: e.uint16,
                compCount: e.uint16,
                components: new e.Array(e.uint16, function(ft) {
                  return ft.compCount - 1;
                })
              }), ga = new e.Array(new e.Pointer(e.uint16, ra), e.uint16), la = new e.VersionedStruct("lookupType", {
                1: new e.VersionedStruct(e.uint16, {
                  // Single Substitution
                  1: {
                    coverage: new e.Pointer(e.uint16, Ne),
                    deltaGlyphID: e.int16
                  },
                  2: {
                    coverage: new e.Pointer(e.uint16, Ne),
                    glyphCount: e.uint16,
                    substitute: new e.LazyArray(e.uint16, "glyphCount")
                  }
                }),
                2: {
                  // Multiple Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, Ne),
                  count: e.uint16,
                  sequences: new e.LazyArray(new e.Pointer(e.uint16, ea), "count")
                },
                3: {
                  // Alternate Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, Ne),
                  count: e.uint16,
                  alternateSet: new e.LazyArray(new e.Pointer(e.uint16, hi), "count")
                },
                4: {
                  // Ligature Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, Ne),
                  count: e.uint16,
                  ligatureSets: new e.LazyArray(new e.Pointer(e.uint16, ga), "count")
                },
                5: rr,
                // Contextual Substitution
                6: $r,
                // Chaining Contextual Substitution
                7: {
                  // Extension Substitution
                  substFormat: e.uint16,
                  lookupType: e.uint16,
                  // cannot also be 7
                  extension: new e.Pointer(e.uint32, la)
                },
                8: {
                  // Reverse Chaining Contextual Single Substitution
                  substFormat: e.uint16,
                  coverage: new e.Pointer(e.uint16, Ne),
                  backtrackCoverage: new e.Array(new e.Pointer(e.uint16, Ne), "backtrackGlyphCount"),
                  lookaheadGlyphCount: e.uint16,
                  lookaheadCoverage: new e.Array(new e.Pointer(e.uint16, Ne), "lookaheadGlyphCount"),
                  glyphCount: e.uint16,
                  substitutes: new e.Array(e.uint16, "glyphCount")
                }
              });
              la.versions[7].extension.type = la;
              var ua = new e.VersionedStruct(e.uint32, {
                header: {
                  scriptList: new e.Pointer(e.uint16, te),
                  featureList: new e.Pointer(e.uint16, oe),
                  lookupList: new e.Pointer(e.uint16, new De(la))
                },
                65536: {},
                65537: {
                  featureVariations: new e.Pointer(e.uint32, Kn)
                }
              }), Qn = new e.Array(e.uint16, e.uint16), di = new e.Struct({
                shrinkageEnableGSUB: new e.Pointer(e.uint16, Qn),
                shrinkageDisableGSUB: new e.Pointer(e.uint16, Qn),
                shrinkageEnableGPOS: new e.Pointer(e.uint16, Qn),
                shrinkageDisableGPOS: new e.Pointer(e.uint16, Qn),
                shrinkageJstfMax: new e.Pointer(e.uint16, new De(Tn)),
                extensionEnableGSUB: new e.Pointer(e.uint16, Qn),
                extensionDisableGSUB: new e.Pointer(e.uint16, Qn),
                extensionEnableGPOS: new e.Pointer(e.uint16, Qn),
                extensionDisableGPOS: new e.Pointer(e.uint16, Qn),
                extensionJstfMax: new e.Pointer(e.uint16, new De(Tn))
              }), vi = new e.Array(new e.Pointer(e.uint16, di), e.uint16), pi = new e.Struct({
                tag: new e.String(4),
                jstfLangSys: new e.Pointer(e.uint16, vi)
              }), Qa = new e.Struct({
                extenderGlyphs: new e.Pointer(e.uint16, new e.Array(e.uint16, e.uint16)),
                // array of glyphs to extend line length
                defaultLangSys: new e.Pointer(e.uint16, vi),
                langSysCount: e.uint16,
                langSysRecords: new e.Array(pi, "langSysCount")
              }), gi = new e.Struct({
                tag: new e.String(4),
                script: new e.Pointer(e.uint16, Qa, {
                  type: "parent"
                })
              }), yi = new e.Struct({
                version: e.uint32,
                // should be 0x00010000
                scriptCount: e.uint16,
                scriptList: new e.Array(gi, "scriptCount")
              }), Zi = /* @__PURE__ */ function() {
                function ft(et) {
                  this._size = et;
                }
                var X = ft.prototype;
                return X.decode = function(P, M) {
                  switch (this.size(0, M)) {
                    case 1:
                      return P.readUInt8();
                    case 2:
                      return P.readUInt16BE();
                    case 3:
                      return P.readUInt24BE();
                    case 4:
                      return P.readUInt32BE();
                  }
                }, X.size = function(P, M) {
                  return m.resolveLength(this._size, null, M);
                }, ft;
              }(), mi = new e.Struct({
                entry: new Zi(function(ft) {
                  return ((ft.parent.entryFormat & 48) >> 4) + 1;
                }),
                outerIndex: function(X) {
                  return X.entry >> (X.parent.entryFormat & 15) + 1;
                },
                innerIndex: function(X) {
                  return X.entry & (1 << (X.parent.entryFormat & 15) + 1) - 1;
                }
              }), na = new e.Struct({
                entryFormat: e.uint16,
                mapCount: e.uint16,
                mapData: new e.Array(mi, "mapCount")
              }), xi = new e.Struct({
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                itemVariationStore: new e.Pointer(e.uint32, Qe),
                advanceWidthMapping: new e.Pointer(e.uint32, na),
                LSBMapping: new e.Pointer(e.uint32, na),
                RSBMapping: new e.Pointer(e.uint32, na)
              }), ya = new e.Struct({
                format: e.uint32,
                length: e.uint32,
                offset: e.uint32
              }), Vo = new e.Struct({
                reserved: new e.Reserved(e.uint16, 2),
                cbSignature: e.uint32,
                // Length (in bytes) of the PKCS#7 packet in pbSignature
                signature: new e.Buffer("cbSignature")
              }), Xo = new e.Struct({
                ulVersion: e.uint32,
                // Version number of the DSIG table (0x00000001)
                usNumSigs: e.uint16,
                // Number of signatures in the table
                usFlag: e.uint16,
                // Permission flags
                signatures: new e.Array(ya, "usNumSigs"),
                signatureBlocks: new e.Array(Vo, "usNumSigs")
              }), Zf = new e.Struct({
                rangeMaxPPEM: e.uint16,
                // Upper limit of range, in ppem
                rangeGaspBehavior: new e.Bitfield(e.uint16, [
                  // Flags describing desired rasterizer behavior
                  "grayscale",
                  "gridfit",
                  "symmetricSmoothing",
                  "symmetricGridfit"
                  // only in version 1, for ClearType
                ])
              }), Yf = new e.Struct({
                version: e.uint16,
                // set to 0
                numRanges: e.uint16,
                gaspRanges: new e.Array(Zf, "numRanges")
                // Sorted by ppem
              }), Kf = new e.Struct({
                pixelSize: e.uint8,
                maximumWidth: e.uint8,
                widths: new e.Array(e.uint8, function(ft) {
                  return ft.parent.parent.maxp.numGlyphs;
                })
              }), Jf = new e.Struct({
                version: e.uint16,
                numRecords: e.int16,
                sizeDeviceRecord: e.int32,
                records: new e.Array(Kf, "numRecords")
              }), Qf = new e.Struct({
                left: e.uint16,
                right: e.uint16,
                value: e.int16
              }), Y0 = new e.Struct({
                firstGlyph: e.uint16,
                nGlyphs: e.uint16,
                offsets: new e.Array(e.uint16, "nGlyphs"),
                max: function(X) {
                  return X.offsets.length && Math.max.apply(Math, X.offsets);
                }
              }), $f = new e.Struct({
                off: function(X) {
                  return X._startOffset - X.parent.parent._startOffset;
                },
                len: function(X) {
                  return ((X.parent.leftTable.max - X.off) / X.parent.rowWidth + 1) * (X.parent.rowWidth / 2);
                },
                values: new e.LazyArray(e.int16, "len")
              }), K0 = new e.VersionedStruct("format", {
                0: {
                  nPairs: e.uint16,
                  searchRange: e.uint16,
                  entrySelector: e.uint16,
                  rangeShift: e.uint16,
                  pairs: new e.Array(Qf, "nPairs")
                },
                2: {
                  rowWidth: e.uint16,
                  leftTable: new e.Pointer(e.uint16, Y0, {
                    type: "parent"
                  }),
                  rightTable: new e.Pointer(e.uint16, Y0, {
                    type: "parent"
                  }),
                  array: new e.Pointer(e.uint16, $f, {
                    type: "parent"
                  })
                },
                3: {
                  glyphCount: e.uint16,
                  kernValueCount: e.uint8,
                  leftClassCount: e.uint8,
                  rightClassCount: e.uint8,
                  flags: e.uint8,
                  kernValue: new e.Array(e.int16, "kernValueCount"),
                  leftClass: new e.Array(e.uint8, "glyphCount"),
                  rightClass: new e.Array(e.uint8, "glyphCount"),
                  kernIndex: new e.Array(e.uint8, function(ft) {
                    return ft.leftClassCount * ft.rightClassCount;
                  })
                }
              }), J0 = new e.VersionedStruct("version", {
                0: {
                  // Microsoft uses this format
                  subVersion: e.uint16,
                  // Microsoft has an extra sub-table version number
                  length: e.uint16,
                  // Length of the subtable, in bytes
                  format: e.uint8,
                  // Format of subtable
                  coverage: new e.Bitfield(e.uint8, [
                    "horizontal",
                    // 1 if table has horizontal data, 0 if vertical
                    "minimum",
                    // If set to 1, the table has minimum values. If set to 0, the table has kerning values.
                    "crossStream",
                    // If set to 1, kerning is perpendicular to the flow of the text
                    "override"
                    // If set to 1 the value in this table replaces the accumulated value
                  ]),
                  subtable: K0,
                  padding: new e.Reserved(e.uint8, function(ft) {
                    return ft.length - ft._currentOffset;
                  })
                },
                1: {
                  // Apple uses this format
                  length: e.uint32,
                  coverage: new e.Bitfield(e.uint8, [
                    null,
                    null,
                    null,
                    null,
                    null,
                    "variation",
                    // Set if table has variation kerning values
                    "crossStream",
                    // Set if table has cross-stream kerning values
                    "vertical"
                    // Set if table has vertical kerning values
                  ]),
                  format: e.uint8,
                  tupleIndex: e.uint16,
                  subtable: K0,
                  padding: new e.Reserved(e.uint8, function(ft) {
                    return ft.length - ft._currentOffset;
                  })
                }
              }), qf = new e.VersionedStruct(e.uint16, {
                0: {
                  // Microsoft Version
                  nTables: e.uint16,
                  tables: new e.Array(J0, "nTables")
                },
                1: {
                  // Apple Version
                  reserved: new e.Reserved(e.uint16),
                  // the other half of the version number
                  nTables: e.uint32,
                  tables: new e.Array(J0, "nTables")
                }
              }), _f = new e.Struct({
                version: e.uint16,
                numGlyphs: e.uint16,
                yPels: new e.Array(e.uint8, "numGlyphs")
              }), tl = new e.Struct({
                version: e.uint16,
                fontNumber: e.uint32,
                pitch: e.uint16,
                xHeight: e.uint16,
                style: e.uint16,
                typeFamily: e.uint16,
                capHeight: e.uint16,
                symbolSet: e.uint16,
                typeface: new e.String(16),
                characterComplement: new e.String(8),
                fileName: new e.String(6),
                strokeWeight: new e.String(1),
                widthType: new e.String(1),
                serifStyle: e.uint8,
                reserved: new e.Reserved(e.uint8)
              }), el = new e.Struct({
                bCharSet: e.uint8,
                // Character set
                xRatio: e.uint8,
                // Value to use for x-Ratio
                yStartRatio: e.uint8,
                // Starting y-Ratio value
                yEndRatio: e.uint8
                // Ending y-Ratio value
              }), rl = new e.Struct({
                yPelHeight: e.uint16,
                // yPelHeight to which values apply
                yMax: e.int16,
                // Maximum value (in pels) for this yPelHeight
                yMin: e.int16
                // Minimum value (in pels) for this yPelHeight
              }), nl = new e.Struct({
                recs: e.uint16,
                // Number of height records in this group
                startsz: e.uint8,
                // Starting yPelHeight
                endsz: e.uint8,
                // Ending yPelHeight
                entries: new e.Array(rl, "recs")
                // The VDMX records
              }), al = new e.Struct({
                version: e.uint16,
                // Version number (0 or 1)
                numRecs: e.uint16,
                // Number of VDMX groups present
                numRatios: e.uint16,
                // Number of aspect ratio groupings
                ratioRanges: new e.Array(el, "numRatios"),
                // Ratio ranges
                offsets: new e.Array(e.uint16, "numRatios"),
                // Offset to the VDMX group for this ratio range
                groups: new e.Array(nl, "numRecs")
                // The actual VDMX groupings
              }), il = new e.Struct({
                version: e.uint16,
                // Version number of the Vertical Header Table
                ascent: e.int16,
                // The vertical typographic ascender for this font
                descent: e.int16,
                // The vertical typographic descender for this font
                lineGap: e.int16,
                // The vertical typographic line gap for this font
                advanceHeightMax: e.int16,
                // The maximum advance height measurement found in the font
                minTopSideBearing: e.int16,
                // The minimum top side bearing measurement found in the font
                minBottomSideBearing: e.int16,
                // The minimum bottom side bearing measurement found in the font
                yMaxExtent: e.int16,
                caretSlopeRise: e.int16,
                // Caret slope (rise/run)
                caretSlopeRun: e.int16,
                caretOffset: e.int16,
                // Set value equal to 0 for nonslanted fonts
                reserved: new e.Reserved(e.int16, 4),
                metricDataFormat: e.int16,
                // Set to 0
                numberOfMetrics: e.uint16
                // Number of advance heights in the Vertical Metrics table
              }), ol = new e.Struct({
                advance: e.uint16,
                // The advance height of the glyph
                bearing: e.int16
                // The top sidebearing of the glyph
              }), sl = new e.Struct({
                metrics: new e.LazyArray(ol, function(ft) {
                  return ft.parent.vhea.numberOfMetrics;
                }),
                bearings: new e.LazyArray(e.int16, function(ft) {
                  return ft.parent.maxp.numGlyphs - ft.parent.vhea.numberOfMetrics;
                })
              }), Q0 = new e.Fixed(16, "BE", 14), fl = new e.Struct({
                fromCoord: Q0,
                toCoord: Q0
              }), ll = new e.Struct({
                pairCount: e.uint16,
                correspondence: new e.Array(fl, "pairCount")
              }), ul = new e.Struct({
                version: e.fixed32,
                axisCount: e.uint32,
                segment: new e.Array(ll, "axisCount")
              }), cl = /* @__PURE__ */ function() {
                function ft(et, P, M) {
                  this.type = et, this.stream = P, this.parent = M, this.base = this.stream.pos, this._items = [];
                }
                var X = ft.prototype;
                return X.getItem = function(P) {
                  if (this._items[P] == null) {
                    var M = this.stream.pos;
                    this.stream.pos = this.base + this.type.size(null, this.parent) * P, this._items[P] = this.type.decode(this.stream, this.parent), this.stream.pos = M;
                  }
                  return this._items[P];
                }, X.inspect = function() {
                  return "[UnboundedArray ".concat(this.type.constructor.name, "]");
                }, ft;
              }(), ca = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X(P) {
                  return ft.call(this, P, 0) || this;
                }
                var et = X.prototype;
                return et.decode = function(M, H) {
                  return new cl(this.type, M, H);
                }, X;
              }(e.Array), Ca = function(X) {
                X === void 0 && (X = e.uint16);
                var et = /* @__PURE__ */ function() {
                  function vt(ct) {
                    this.type = ct;
                  }
                  var dt = vt.prototype;
                  return dt.decode = function(Ot, Vt) {
                    return Vt = Vt.parent.parent, this.type.decode(Ot, Vt);
                  }, dt.size = function(Ot, Vt) {
                    return Vt = Vt.parent.parent, this.type.size(Ot, Vt);
                  }, dt.encode = function(Ot, Vt, se) {
                    return se = se.parent.parent, this.type.encode(Ot, Vt, se);
                  }, vt;
                }();
                X = new et(X);
                var P = new e.Struct({
                  unitSize: e.uint16,
                  nUnits: e.uint16,
                  searchRange: e.uint16,
                  entrySelector: e.uint16,
                  rangeShift: e.uint16
                }), M = new e.Struct({
                  lastGlyph: e.uint16,
                  firstGlyph: e.uint16,
                  value: X
                }), H = new e.Struct({
                  lastGlyph: e.uint16,
                  firstGlyph: e.uint16,
                  values: new e.Pointer(e.uint16, new e.Array(X, function(vt) {
                    return vt.lastGlyph - vt.firstGlyph + 1;
                  }), {
                    type: "parent"
                  })
                }), lt = new e.Struct({
                  glyph: e.uint16,
                  value: X
                });
                return new e.VersionedStruct(e.uint16, {
                  0: {
                    values: new ca(X)
                    // length == number of glyphs maybe?
                  },
                  2: {
                    binarySearchHeader: P,
                    segments: new e.Array(M, function(vt) {
                      return vt.binarySearchHeader.nUnits;
                    })
                  },
                  4: {
                    binarySearchHeader: P,
                    segments: new e.Array(H, function(vt) {
                      return vt.binarySearchHeader.nUnits;
                    })
                  },
                  6: {
                    binarySearchHeader: P,
                    segments: new e.Array(lt, function(vt) {
                      return vt.binarySearchHeader.nUnits;
                    })
                  },
                  8: {
                    firstGlyph: e.uint16,
                    count: e.uint16,
                    values: new e.Array(X, "count")
                  }
                });
              };
              function Yi(ft, X) {
                ft === void 0 && (ft = {}), X === void 0 && (X = e.uint16);
                var et = Object.assign({
                  newState: e.uint16,
                  flags: e.uint16
                }, ft), P = new e.Struct(et), M = new ca(new e.Array(e.uint16, function(lt) {
                  return lt.nClasses;
                })), H = new e.Struct({
                  nClasses: e.uint32,
                  classTable: new e.Pointer(e.uint32, new Ca(X)),
                  stateArray: new e.Pointer(e.uint32, M),
                  entryTable: new e.Pointer(e.uint32, new ca(P))
                });
                return H;
              }
              function hl(ft, X) {
                ft === void 0 && (ft = {}), X === void 0 && (X = e.uint16);
                var et = new e.Struct({
                  version: function() {
                    return 8;
                  },
                  // simulate LookupTable
                  firstGlyph: e.uint16,
                  values: new e.Array(e.uint8, e.uint16)
                }), P = Object.assign({
                  newStateOffset: e.uint16,
                  // convert offset to stateArray index
                  newState: function(dt) {
                    return (dt.newStateOffset - (dt.parent.stateArray.base - dt.parent._startOffset)) / dt.parent.nClasses;
                  },
                  flags: e.uint16
                }, ft), M = new e.Struct(P), H = new ca(new e.Array(e.uint8, function(vt) {
                  return vt.nClasses;
                })), lt = new e.Struct({
                  nClasses: e.uint16,
                  classTable: new e.Pointer(e.uint16, et),
                  stateArray: new e.Pointer(e.uint16, H),
                  entryTable: new e.Pointer(e.uint16, new ca(M))
                });
                return lt;
              }
              var dl = new e.VersionedStruct("format", {
                0: {
                  // Distance-based, no mapping
                  deltas: new e.Array(e.int16, 32)
                },
                1: {
                  // Distance-based, with mapping
                  deltas: new e.Array(e.int16, 32),
                  mappingData: new Ca(e.uint16)
                },
                2: {
                  // Control point-based, no mapping
                  standardGlyph: e.uint16,
                  controlPoints: new e.Array(e.uint16, 32)
                },
                3: {
                  // Control point-based, with mapping
                  standardGlyph: e.uint16,
                  controlPoints: new e.Array(e.uint16, 32),
                  mappingData: new Ca(e.uint16)
                }
              }), vl = new e.Struct({
                version: e.fixed32,
                format: e.uint16,
                defaultBaseline: e.uint16,
                subtable: dl
              }), pl = new e.Struct({
                setting: e.uint16,
                nameIndex: e.int16,
                name: function(X) {
                  return X.parent.parent.parent.name.records.fontFeatures[X.nameIndex];
                }
              }), gl = new e.Struct({
                feature: e.uint16,
                nSettings: e.uint16,
                settingTable: new e.Pointer(e.uint32, new e.Array(pl, "nSettings"), {
                  type: "parent"
                }),
                featureFlags: new e.Bitfield(e.uint8, [null, null, null, null, null, null, "hasDefault", "exclusive"]),
                defaultSetting: e.uint8,
                nameIndex: e.int16,
                name: function(X) {
                  return X.parent.parent.name.records.fontFeatures[X.nameIndex];
                }
              }), yl = new e.Struct({
                version: e.fixed32,
                featureNameCount: e.uint16,
                reserved1: new e.Reserved(e.uint16),
                reserved2: new e.Reserved(e.uint32),
                featureNames: new e.Array(gl, "featureNameCount")
              }), ml = new e.Struct({
                axisTag: new e.String(4),
                minValue: e.fixed32,
                defaultValue: e.fixed32,
                maxValue: e.fixed32,
                flags: e.uint16,
                nameID: e.uint16,
                name: function(X) {
                  return X.parent.parent.name.records.fontFeatures[X.nameID];
                }
              }), xl = new e.Struct({
                nameID: e.uint16,
                name: function(X) {
                  return X.parent.parent.name.records.fontFeatures[X.nameID];
                },
                flags: e.uint16,
                coord: new e.Array(e.fixed32, function(ft) {
                  return ft.parent.axisCount;
                }),
                postscriptNameID: new e.Optional(e.uint16, function(ft) {
                  return ft.parent.instanceSize - ft._currentOffset > 0;
                })
              }), bl = new e.Struct({
                version: e.fixed32,
                offsetToData: e.uint16,
                countSizePairs: e.uint16,
                axisCount: e.uint16,
                axisSize: e.uint16,
                instanceCount: e.uint16,
                instanceSize: e.uint16,
                axis: new e.Array(ml, "axisCount"),
                instance: new e.Array(xl, "instanceCount")
              }), wl = new e.Fixed(16, "BE", 14), Sl = /* @__PURE__ */ function() {
                function ft() {
                }
                return ft.decode = function(et, P) {
                  return P.flags ? et.readUInt32BE() : et.readUInt16BE() * 2;
                }, ft;
              }(), Al = new e.Struct({
                version: e.uint16,
                reserved: new e.Reserved(e.uint16),
                axisCount: e.uint16,
                globalCoordCount: e.uint16,
                globalCoords: new e.Pointer(e.uint32, new e.Array(new e.Array(wl, "axisCount"), "globalCoordCount")),
                glyphCount: e.uint16,
                flags: e.uint16,
                offsetToData: e.uint32,
                offsets: new e.Array(new e.Pointer(Sl, "void", {
                  relativeTo: function(X) {
                    return X.offsetToData;
                  },
                  allowNull: !1
                }), function(ft) {
                  return ft.glyphCount + 1;
                })
              }), Cl = new e.Struct({
                length: e.uint16,
                coverage: e.uint16,
                subFeatureFlags: e.uint32,
                stateTable: new hl()
              }), El = new e.Struct({
                justClass: e.uint32,
                beforeGrowLimit: e.fixed32,
                beforeShrinkLimit: e.fixed32,
                afterGrowLimit: e.fixed32,
                afterShrinkLimit: e.fixed32,
                growFlags: e.uint16,
                shrinkFlags: e.uint16
              }), Tl = new e.Array(El, e.uint32), Fl = new e.VersionedStruct("actionType", {
                0: {
                  // Decomposition action
                  lowerLimit: e.fixed32,
                  upperLimit: e.fixed32,
                  order: e.uint16,
                  glyphs: new e.Array(e.uint16, e.uint16)
                },
                1: {
                  // Unconditional add glyph action
                  addGlyph: e.uint16
                },
                2: {
                  // Conditional add glyph action
                  substThreshold: e.fixed32,
                  addGlyph: e.uint16,
                  substGlyph: e.uint16
                },
                3: {},
                // Stretch glyph action (no data, not supported by CoreText)
                4: {
                  // Ductile glyph action (not supported by CoreText)
                  variationAxis: e.uint32,
                  minimumLimit: e.fixed32,
                  noStretchValue: e.fixed32,
                  maximumLimit: e.fixed32
                },
                5: {
                  // Repeated add glyph action
                  flags: e.uint16,
                  glyph: e.uint16
                }
              }), Il = new e.Struct({
                actionClass: e.uint16,
                actionType: e.uint16,
                actionLength: e.uint32,
                actionData: Fl,
                padding: new e.Reserved(e.uint8, function(ft) {
                  return ft.actionLength - ft._currentOffset;
                })
              }), Dl = new e.Array(Il, e.uint32), Pl = new e.Struct({
                lookupTable: new Ca(new e.Pointer(e.uint16, Dl))
              }), $0 = new e.Struct({
                classTable: new e.Pointer(e.uint16, Cl, {
                  type: "parent"
                }),
                wdcOffset: e.uint16,
                postCompensationTable: new e.Pointer(e.uint16, Pl, {
                  type: "parent"
                }),
                widthDeltaClusters: new Ca(new e.Pointer(e.uint16, Tl, {
                  type: "parent",
                  relativeTo: function(X) {
                    return X.wdcOffset;
                  }
                }))
              }), Ol = new e.Struct({
                version: e.uint32,
                format: e.uint16,
                horizontal: new e.Pointer(e.uint16, $0),
                vertical: new e.Pointer(e.uint16, $0)
              }), Bl = {
                action: e.uint16
              }, Rl = {
                markIndex: e.uint16,
                currentIndex: e.uint16
              }, Ll = {
                currentInsertIndex: e.uint16,
                markedInsertIndex: e.uint16
              }, Nl = new e.Struct({
                items: new ca(new e.Pointer(e.uint32, new Ca()))
              }), Ml = new e.VersionedStruct("type", {
                0: {
                  // Indic Rearrangement Subtable
                  stateTable: new Yi()
                },
                1: {
                  // Contextual Glyph Substitution Subtable
                  stateTable: new Yi(Rl),
                  substitutionTable: new e.Pointer(e.uint32, Nl)
                },
                2: {
                  // Ligature subtable
                  stateTable: new Yi(Bl),
                  ligatureActions: new e.Pointer(e.uint32, new ca(e.uint32)),
                  components: new e.Pointer(e.uint32, new ca(e.uint16)),
                  ligatureList: new e.Pointer(e.uint32, new ca(e.uint16))
                },
                4: {
                  // Non-contextual Glyph Substitution Subtable
                  lookupTable: new Ca()
                },
                5: {
                  // Glyph Insertion Subtable
                  stateTable: new Yi(Ll),
                  insertionActions: new e.Pointer(e.uint32, new ca(e.uint16))
                }
              }), kl = new e.Struct({
                length: e.uint32,
                coverage: e.uint24,
                type: e.uint8,
                subFeatureFlags: e.uint32,
                table: Ml,
                padding: new e.Reserved(e.uint8, function(ft) {
                  return ft.length - ft._currentOffset;
                })
              }), Ul = new e.Struct({
                featureType: e.uint16,
                featureSetting: e.uint16,
                enableFlags: e.uint32,
                disableFlags: e.uint32
              }), zl = new e.Struct({
                defaultFlags: e.uint32,
                chainLength: e.uint32,
                nFeatureEntries: e.uint32,
                nSubtables: e.uint32,
                features: new e.Array(Ul, "nFeatureEntries"),
                subtables: new e.Array(kl, "nSubtables")
              }), Wl = new e.Struct({
                version: e.uint16,
                unused: new e.Reserved(e.uint16),
                nChains: e.uint32,
                chains: new e.Array(zl, "nChains")
              }), Hl = new e.Struct({
                left: e.int16,
                top: e.int16,
                right: e.int16,
                bottom: e.int16
              }), jl = new e.Struct({
                version: e.fixed32,
                format: e.uint16,
                lookupTable: new Ca(Hl)
              }), or = {};
              or.cmap = $, or.head = gt, or.hhea = ut, or.hmtx = yt, or.maxp = G, or.name = tt, or["OS/2"] = At, or.post = Yt, or.fpgm = Dt, or.loca = ae, or.prep = Ae, or["cvt "] = Gt, or.glyf = xe, or["CFF "] = Re, or.CFF2 = Re, or.VORG = We, or.EBLC = En, or.CBLC = or.EBLC, or.sbix = bn, or.COLR = cn, or.CPAL = Ya, or.BASE = z, or.GDEF = he, or.GPOS = fa, or.GSUB = ua, or.JSTF = yi, or.HVAR = xi, or.DSIG = Xo, or.gasp = Yf, or.hdmx = Jf, or.kern = qf, or.LTSH = _f, or.PCLT = tl, or.VDMX = al, or.vhea = il, or.vmtx = sl, or.avar = ul, or.bsln = vl, or.feat = yl, or.fvar = bl, or.gvar = Al, or.just = Ol, or.morx = Wl, or.opbd = jl;
              var Gl = new e.Struct({
                tag: new e.String(4),
                checkSum: e.uint32,
                offset: new e.Pointer(e.uint32, "void", {
                  type: "global"
                }),
                length: e.uint32
              }), Ki = new e.Struct({
                tag: new e.String(4),
                numTables: e.uint16,
                searchRange: e.uint16,
                entrySelector: e.uint16,
                rangeShift: e.uint16,
                tables: new e.Array(Gl, "numTables")
              });
              Ki.process = function() {
                for (var ft = {}, X = a(this.tables), et; !(et = X()).done; ) {
                  var P = et.value;
                  ft[P.tag] = P;
                }
                this.tables = ft;
              }, Ki.preEncode = function(ft) {
                var X = [];
                for (var et in this.tables) {
                  var P = this.tables[et];
                  P && X.push({
                    tag: et,
                    checkSum: 0,
                    offset: new e.VoidPointer(or[et], P),
                    length: or[et].size(P)
                  });
                }
                this.tag = "true", this.numTables = X.length, this.tables = X;
                var M = Math.floor(Math.log(this.numTables) / Math.LN2), H = Math.pow(2, M);
                this.searchRange = H * 16, this.entrySelector = Math.log(H) / Math.LN2, this.rangeShift = this.numTables * 16 - this.searchRange;
              };
              function Ji(ft, X) {
                for (var et = 0, P = ft.length - 1; et <= P; ) {
                  var M = et + P >> 1, H = X(ft[M]);
                  if (H < 0)
                    P = M - 1;
                  else if (H > 0)
                    et = M + 1;
                  else
                    return M;
                }
                return -1;
              }
              function $a(ft, X) {
                for (var et = []; ft < X; )
                  et.push(ft++);
                return et;
              }
              var Ea;
              try {
                var Zo = t(32766);
              } catch {
              }
              var Vl = (Ea = /* @__PURE__ */ function() {
                function ft(et) {
                  if (this.encoding = null, this.cmap = this.findSubtable(et, [
                    // 32-bit subtables
                    [3, 10],
                    [0, 6],
                    [0, 4],
                    // 16-bit subtables
                    [3, 1],
                    [0, 3],
                    [0, 2],
                    [0, 1],
                    [0, 0]
                  ]), !this.cmap && Zo)
                    for (var P = a(et.tables), M; !(M = P()).done; ) {
                      var H = M.value, lt = Et(H.platformID, H.encodingID, H.table.language - 1);
                      Zo.encodingExists(lt) && (this.cmap = H.table, this.encoding = lt);
                    }
                  if (!this.cmap)
                    throw new Error("Could not find a supported cmap table");
                  this.uvs = this.findSubtable(et, [[0, 5]]), this.uvs && this.uvs.version !== 14 && (this.uvs = null);
                }
                var X = ft.prototype;
                return X.findSubtable = function(P, M) {
                  for (var H = a(M), lt; !(lt = H()).done; )
                    for (var vt = lt.value, dt = vt[0], ct = vt[1], Ot = a(P.tables), Vt; !(Vt = Ot()).done; ) {
                      var se = Vt.value;
                      if (se.platformID === dt && se.encodingID === ct)
                        return se.table;
                    }
                  return null;
                }, X.lookup = function(P, M) {
                  if (this.encoding) {
                    var H = Zo.encode(String.fromCodePoint(P), this.encoding);
                    P = 0;
                    for (var lt = 0; lt < H.length; lt++)
                      P = P << 8 | H[lt];
                  } else if (M) {
                    var vt = this.getVariationSelector(P, M);
                    if (vt)
                      return vt;
                  }
                  var dt = this.cmap;
                  switch (dt.version) {
                    case 0:
                      return dt.codeMap.get(P) || 0;
                    case 4: {
                      for (var ct = 0, Ot = dt.segCount - 1; ct <= Ot; ) {
                        var Vt = ct + Ot >> 1;
                        if (P < dt.startCode.get(Vt))
                          Ot = Vt - 1;
                        else if (P > dt.endCode.get(Vt))
                          ct = Vt + 1;
                        else {
                          var se = dt.idRangeOffset.get(Vt), $t = void 0;
                          if (se === 0)
                            $t = P + dt.idDelta.get(Vt);
                          else {
                            var ue = se / 2 + (P - dt.startCode.get(Vt)) - (dt.segCount - Vt);
                            $t = dt.glyphIndexArray.get(ue) || 0, $t !== 0 && ($t += dt.idDelta.get(Vt));
                          }
                          return $t & 65535;
                        }
                      }
                      return 0;
                    }
                    case 8:
                      throw new Error("TODO: cmap format 8");
                    case 6:
                    case 10:
                      return dt.glyphIndices.get(P - dt.firstCode) || 0;
                    case 12:
                    case 13: {
                      for (var pe = 0, Te = dt.nGroups - 1; pe <= Te; ) {
                        var He = pe + Te >> 1, _e = dt.groups.get(He);
                        if (P < _e.startCharCode)
                          Te = He - 1;
                        else if (P > _e.endCharCode)
                          pe = He + 1;
                        else
                          return dt.version === 12 ? _e.glyphID + (P - _e.startCharCode) : _e.glyphID;
                      }
                      return 0;
                    }
                    case 14:
                      throw new Error("TODO: cmap format 14");
                    default:
                      throw new Error("Unknown cmap format ".concat(dt.version));
                  }
                }, X.getVariationSelector = function(P, M) {
                  if (!this.uvs)
                    return 0;
                  var H = this.uvs.varSelectors.toArray(), lt = Ji(H, function(dt) {
                    return M - dt.varSelector;
                  }), vt = H[lt];
                  return lt !== -1 && vt.defaultUVS && (lt = Ji(vt.defaultUVS, function(dt) {
                    return P < dt.startUnicodeValue ? -1 : P > dt.startUnicodeValue + dt.additionalCount ? 1 : 0;
                  })), lt !== -1 && vt.nonDefaultUVS && (lt = Ji(vt.nonDefaultUVS, function(dt) {
                    return P - dt.unicodeValue;
                  }), lt !== -1) ? vt.nonDefaultUVS[lt].glyphID : 0;
                }, X.getCharacterSet = function() {
                  var P = this.cmap;
                  switch (P.version) {
                    case 0:
                      return $a(0, P.codeMap.length);
                    case 4: {
                      for (var M = [], H = P.endCode.toArray(), lt = 0; lt < H.length; lt++) {
                        var vt = H[lt] + 1, dt = P.startCode.get(lt);
                        M.push.apply(M, $a(dt, vt));
                      }
                      return M;
                    }
                    case 8:
                      throw new Error("TODO: cmap format 8");
                    case 6:
                    case 10:
                      return $a(P.firstCode, P.firstCode + P.glyphIndices.length);
                    case 12:
                    case 13: {
                      for (var ct = [], Ot = a(P.groups.toArray()), Vt; !(Vt = Ot()).done; ) {
                        var se = Vt.value;
                        ct.push.apply(ct, $a(se.startCharCode, se.endCharCode + 1));
                      }
                      return ct;
                    }
                    case 14:
                      throw new Error("TODO: cmap format 14");
                    default:
                      throw new Error("Unknown cmap format ".concat(P.version));
                  }
                }, X.codePointsForGlyph = function(P) {
                  var M = this.cmap;
                  switch (M.version) {
                    case 0: {
                      for (var H = [], lt = 0; lt < 256; lt++)
                        M.codeMap.get(lt) === P && H.push(lt);
                      return H;
                    }
                    case 4: {
                      for (var vt = [], dt = 0; dt < M.segCount; dt++)
                        for (var ct = M.endCode.get(dt), Ot = M.startCode.get(dt), Vt = M.idRangeOffset.get(dt), se = M.idDelta.get(dt), $t = Ot; $t <= ct; $t++) {
                          var ue = 0;
                          if (Vt === 0)
                            ue = $t + se;
                          else {
                            var pe = Vt / 2 + ($t - Ot) - (M.segCount - dt);
                            ue = M.glyphIndexArray.get(pe) || 0, ue !== 0 && (ue += se);
                          }
                          ue === P && vt.push($t);
                        }
                      return vt;
                    }
                    case 12: {
                      for (var Te = [], He = a(M.groups.toArray()), _e; !(_e = He()).done; ) {
                        var Xe = _e.value;
                        P >= Xe.glyphID && P <= Xe.glyphID + (Xe.endCharCode - Xe.startCharCode) && Te.push(Xe.startCharCode + (P - Xe.glyphID));
                      }
                      return Te;
                    }
                    case 13: {
                      for (var hr = [], sr = a(M.groups.toArray()), dr; !(dr = sr()).done; ) {
                        var mr = dr.value;
                        P === mr.glyphID && hr.push.apply(hr, $a(mr.startCharCode, mr.endCharCode + 1));
                      }
                      return hr;
                    }
                    default:
                      throw new Error("Unknown cmap format ".concat(M.version));
                  }
                }, ft;
              }(), W(Ea.prototype, "getCharacterSet", [J], Object.getOwnPropertyDescriptor(Ea.prototype, "getCharacterSet"), Ea.prototype), W(Ea.prototype, "codePointsForGlyph", [J], Object.getOwnPropertyDescriptor(Ea.prototype, "codePointsForGlyph"), Ea.prototype), Ea), Xl = /* @__PURE__ */ function() {
                function ft(et) {
                  this.kern = et.kern;
                }
                var X = ft.prototype;
                return X.process = function(P, M) {
                  for (var H = 0; H < P.length - 1; H++) {
                    var lt = P[H].id, vt = P[H + 1].id;
                    M[H].xAdvance += this.getKerning(lt, vt);
                  }
                }, X.getKerning = function(P, M) {
                  for (var H = 0, lt = a(this.kern.tables), vt; !(vt = lt()).done; ) {
                    var dt = vt.value;
                    if (!dt.coverage.crossStream) {
                      switch (dt.version) {
                        case 0:
                          if (!dt.coverage.horizontal)
                            continue;
                          break;
                        case 1:
                          if (dt.coverage.vertical || dt.coverage.variation)
                            continue;
                          break;
                        default:
                          throw new Error("Unsupported kerning table version ".concat(dt.version));
                      }
                      var ct = 0, Ot = dt.subtable;
                      switch (dt.format) {
                        case 0:
                          var Vt = Ji(Ot.pairs, function(pe) {
                            return P - pe.left || M - pe.right;
                          });
                          Vt >= 0 && (ct = Ot.pairs[Vt].value);
                          break;
                        case 2:
                          var se = 0, $t = 0;
                          P >= Ot.leftTable.firstGlyph && P < Ot.leftTable.firstGlyph + Ot.leftTable.nGlyphs ? se = Ot.leftTable.offsets[P - Ot.leftTable.firstGlyph] : se = Ot.array.off, M >= Ot.rightTable.firstGlyph && M < Ot.rightTable.firstGlyph + Ot.rightTable.nGlyphs && ($t = Ot.rightTable.offsets[M - Ot.rightTable.firstGlyph]);
                          var ue = (se + $t - Ot.array.off) / 2;
                          ct = Ot.array.values.get(ue);
                          break;
                        case 3:
                          if (P >= Ot.glyphCount || M >= Ot.glyphCount)
                            return 0;
                          ct = Ot.kernValue[Ot.kernIndex[Ot.leftClass[P] * Ot.rightClassCount + Ot.rightClass[M]]];
                          break;
                        default:
                          throw new Error("Unsupported kerning sub-table format ".concat(dt.format));
                      }
                      dt.coverage.override ? H = ct : H += ct;
                    }
                  }
                  return H;
                }, ft;
              }(), Zl = /* @__PURE__ */ function() {
                function ft(et) {
                  this.font = et;
                }
                var X = ft.prototype;
                return X.positionGlyphs = function(P, M) {
                  for (var H = 0, lt = 0, vt = 0; vt < P.length; vt++) {
                    var dt = P[vt];
                    dt.isMark ? lt = vt : (H !== lt && this.positionCluster(P, M, H, lt), H = lt = vt);
                  }
                  return H !== lt && this.positionCluster(P, M, H, lt), M;
                }, X.positionCluster = function(P, M, H, lt) {
                  var vt = P[H], dt = vt.cbox.copy();
                  vt.codePoints.length > 1 && (dt.minX += (vt.codePoints.length - 1) * dt.width / vt.codePoints.length);
                  for (var ct = -M[H].xAdvance, Ot = 0, Vt = this.font.unitsPerEm / 16, se = H + 1; se <= lt; se++) {
                    var $t = P[se], ue = $t.cbox, pe = M[se], Te = this.getCombiningClass($t.codePoints[0]);
                    if (Te !== "Not_Reordered") {
                      switch (pe.xOffset = pe.yOffset = 0, Te) {
                        case "Double_Above":
                        case "Double_Below":
                          pe.xOffset += dt.minX - ue.width / 2 - ue.minX;
                          break;
                        case "Attached_Below_Left":
                        case "Below_Left":
                        case "Above_Left":
                          pe.xOffset += dt.minX - ue.minX;
                          break;
                        case "Attached_Above_Right":
                        case "Below_Right":
                        case "Above_Right":
                          pe.xOffset += dt.maxX - ue.width - ue.minX;
                          break;
                        default:
                          pe.xOffset += dt.minX + (dt.width - ue.width) / 2 - ue.minX;
                      }
                      switch (Te) {
                        case "Double_Below":
                        case "Below_Left":
                        case "Below":
                        case "Below_Right":
                        case "Attached_Below_Left":
                        case "Attached_Below":
                          (Te === "Attached_Below_Left" || Te === "Attached_Below") && (dt.minY += Vt), pe.yOffset = -dt.minY - ue.maxY, dt.minY += ue.height;
                          break;
                        case "Double_Above":
                        case "Above_Left":
                        case "Above":
                        case "Above_Right":
                        case "Attached_Above":
                        case "Attached_Above_Right":
                          (Te === "Attached_Above" || Te === "Attached_Above_Right") && (dt.maxY += Vt), pe.yOffset = dt.maxY - ue.minY, dt.maxY += ue.height;
                          break;
                      }
                      pe.xAdvance = pe.yAdvance = 0, pe.xOffset += ct, pe.yOffset += Ot;
                    } else
                      ct -= pe.xAdvance, Ot -= pe.yAdvance;
                  }
                }, X.getCombiningClass = function(P) {
                  var M = D.getCombiningClass(P);
                  if ((P & -256) === 3584) {
                    if (M === "Not_Reordered")
                      switch (P) {
                        case 3633:
                        case 3636:
                        case 3637:
                        case 3638:
                        case 3639:
                        case 3655:
                        case 3660:
                        case 3645:
                        case 3662:
                          return "Above_Right";
                        case 3761:
                        case 3764:
                        case 3765:
                        case 3766:
                        case 3767:
                        case 3771:
                        case 3788:
                        case 3789:
                          return "Above";
                        case 3772:
                          return "Below";
                      }
                    else if (P === 3642)
                      return "Below_Right";
                  }
                  switch (M) {
                    case "CCC10":
                    case "CCC11":
                    case "CCC12":
                    case "CCC13":
                    case "CCC14":
                    case "CCC15":
                    case "CCC16":
                    case "CCC17":
                    case "CCC18":
                    case "CCC20":
                    case "CCC22":
                      return "Below";
                    case "CCC23":
                      return "Attached_Above";
                    case "CCC24":
                      return "Above_Right";
                    case "CCC25":
                    case "CCC19":
                      return "Above_Left";
                    case "CCC26":
                      return "Above";
                    case "CCC21":
                      break;
                    case "CCC27":
                    case "CCC28":
                    case "CCC30":
                    case "CCC31":
                    case "CCC33":
                    case "CCC34":
                    case "CCC35":
                    case "CCC36":
                      return "Above";
                    case "CCC29":
                    case "CCC32":
                      return "Below";
                    case "CCC103":
                      return "Below_Right";
                    case "CCC107":
                      return "Above_Right";
                    case "CCC118":
                      return "Below";
                    case "CCC122":
                      return "Above";
                    case "CCC129":
                    case "CCC132":
                      return "Below";
                    case "CCC130":
                      return "Above";
                  }
                  return M;
                }, ft;
              }(), qa = /* @__PURE__ */ function() {
                function ft(et, P, M, H) {
                  et === void 0 && (et = 1 / 0), P === void 0 && (P = 1 / 0), M === void 0 && (M = -1 / 0), H === void 0 && (H = -1 / 0), this.minX = et, this.minY = P, this.maxX = M, this.maxY = H;
                }
                var X = ft.prototype;
                return X.addPoint = function(P, M) {
                  Math.abs(P) !== 1 / 0 && (P < this.minX && (this.minX = P), P > this.maxX && (this.maxX = P)), Math.abs(M) !== 1 / 0 && (M < this.minY && (this.minY = M), M > this.maxY && (this.maxY = M));
                }, X.copy = function() {
                  return new ft(this.minX, this.minY, this.maxX, this.maxY);
                }, i(ft, [{
                  key: "width",
                  get: function() {
                    return this.maxX - this.minX;
                  }
                  /**
                   * The height of the bounding box
                   * @type {number}
                   */
                }, {
                  key: "height",
                  get: function() {
                    return this.maxY - this.minY;
                  }
                }]), ft;
              }(), _a = {
                Caucasian_Albanian: "aghb",
                Arabic: "arab",
                Imperial_Aramaic: "armi",
                Armenian: "armn",
                Avestan: "avst",
                Balinese: "bali",
                Bamum: "bamu",
                Bassa_Vah: "bass",
                Batak: "batk",
                Bengali: ["bng2", "beng"],
                Bopomofo: "bopo",
                Brahmi: "brah",
                Braille: "brai",
                Buginese: "bugi",
                Buhid: "buhd",
                Chakma: "cakm",
                Canadian_Aboriginal: "cans",
                Carian: "cari",
                Cham: "cham",
                Cherokee: "cher",
                Coptic: "copt",
                Cypriot: "cprt",
                Cyrillic: "cyrl",
                Devanagari: ["dev2", "deva"],
                Deseret: "dsrt",
                Duployan: "dupl",
                Egyptian_Hieroglyphs: "egyp",
                Elbasan: "elba",
                Ethiopic: "ethi",
                Georgian: "geor",
                Glagolitic: "glag",
                Gothic: "goth",
                Grantha: "gran",
                Greek: "grek",
                Gujarati: ["gjr2", "gujr"],
                Gurmukhi: ["gur2", "guru"],
                Hangul: "hang",
                Han: "hani",
                Hanunoo: "hano",
                Hebrew: "hebr",
                Hiragana: "hira",
                Pahawh_Hmong: "hmng",
                Katakana_Or_Hiragana: "hrkt",
                Old_Italic: "ital",
                Javanese: "java",
                Kayah_Li: "kali",
                Katakana: "kana",
                Kharoshthi: "khar",
                Khmer: "khmr",
                Khojki: "khoj",
                Kannada: ["knd2", "knda"],
                Kaithi: "kthi",
                Tai_Tham: "lana",
                Lao: "lao ",
                Latin: "latn",
                Lepcha: "lepc",
                Limbu: "limb",
                Linear_A: "lina",
                Linear_B: "linb",
                Lisu: "lisu",
                Lycian: "lyci",
                Lydian: "lydi",
                Mahajani: "mahj",
                Mandaic: "mand",
                Manichaean: "mani",
                Mende_Kikakui: "mend",
                Meroitic_Cursive: "merc",
                Meroitic_Hieroglyphs: "mero",
                Malayalam: ["mlm2", "mlym"],
                Modi: "modi",
                Mongolian: "mong",
                Mro: "mroo",
                Meetei_Mayek: "mtei",
                Myanmar: ["mym2", "mymr"],
                Old_North_Arabian: "narb",
                Nabataean: "nbat",
                Nko: "nko ",
                Ogham: "ogam",
                Ol_Chiki: "olck",
                Old_Turkic: "orkh",
                Oriya: ["ory2", "orya"],
                Osmanya: "osma",
                Palmyrene: "palm",
                Pau_Cin_Hau: "pauc",
                Old_Permic: "perm",
                Phags_Pa: "phag",
                Inscriptional_Pahlavi: "phli",
                Psalter_Pahlavi: "phlp",
                Phoenician: "phnx",
                Miao: "plrd",
                Inscriptional_Parthian: "prti",
                Rejang: "rjng",
                Runic: "runr",
                Samaritan: "samr",
                Old_South_Arabian: "sarb",
                Saurashtra: "saur",
                Shavian: "shaw",
                Sharada: "shrd",
                Siddham: "sidd",
                Khudawadi: "sind",
                Sinhala: "sinh",
                Sora_Sompeng: "sora",
                Sundanese: "sund",
                Syloti_Nagri: "sylo",
                Syriac: "syrc",
                Tagbanwa: "tagb",
                Takri: "takr",
                Tai_Le: "tale",
                New_Tai_Lue: "talu",
                Tamil: ["tml2", "taml"],
                Tai_Viet: "tavt",
                Telugu: ["tel2", "telu"],
                Tifinagh: "tfng",
                Tagalog: "tglg",
                Thaana: "thaa",
                Thai: "thai",
                Tibetan: "tibt",
                Tirhuta: "tirh",
                Ugaritic: "ugar",
                Vai: "vai ",
                Warang_Citi: "wara",
                Old_Persian: "xpeo",
                Cuneiform: "xsux",
                Yi: "yi  ",
                Inherited: "zinh",
                Common: "zyyy",
                Unknown: "zzzz"
              }, Yo = {};
              for (var Ko in _a) {
                var Jo = _a[Ko];
                if (Array.isArray(Jo))
                  for (var Yl = a(Jo), q0; !(q0 = Yl()).done; ) {
                    var Kl = q0.value;
                    Yo[Kl] = Ko;
                  }
                else
                  Yo[Jo] = Ko;
              }
              function Jl(ft) {
                return Yo[ft];
              }
              function Ql(ft) {
                for (var X = ft.length, et = 0; et < X; ) {
                  var P = ft.charCodeAt(et++);
                  if (55296 <= P && P <= 56319 && et < X) {
                    var M = ft.charCodeAt(et);
                    56320 <= M && M <= 57343 && (et++, P = ((P & 1023) << 10) + (M & 1023) + 65536);
                  }
                  var H = D.getScript(P);
                  if (H !== "Common" && H !== "Inherited" && H !== "Unknown")
                    return _a[H];
                }
                return _a.Unknown;
              }
              function $l(ft) {
                for (var X = 0; X < ft.length; X++) {
                  var et = ft[X], P = D.getScript(et);
                  if (P !== "Common" && P !== "Inherited" && P !== "Unknown")
                    return _a[P];
                }
                return _a.Unknown;
              }
              var ql = {
                arab: !0,
                // Arabic
                hebr: !0,
                // Hebrew
                syrc: !0,
                // Syriac
                thaa: !0,
                // Thaana
                cprt: !0,
                // Cypriot Syllabary
                khar: !0,
                // Kharosthi
                phnx: !0,
                // Phoenician
                "nko ": !0,
                // N'Ko
                lydi: !0,
                // Lydian
                avst: !0,
                // Avestan
                armi: !0,
                // Imperial Aramaic
                phli: !0,
                // Inscriptional Pahlavi
                prti: !0,
                // Inscriptional Parthian
                sarb: !0,
                // Old South Arabian
                orkh: !0,
                // Old Turkic, Orkhon Runic
                samr: !0,
                // Samaritan
                mand: !0,
                // Mandaic, Mandaean
                merc: !0,
                // Meroitic Cursive
                mero: !0,
                // Meroitic Hieroglyphs
                // Unicode 7.0 (not listed on http://www.microsoft.com/typography/otspec/scripttags.htm)
                mani: !0,
                // Manichaean
                mend: !0,
                // Mende Kikakui
                nbat: !0,
                // Nabataean
                narb: !0,
                // Old North Arabian
                palm: !0,
                // Palmyrene
                phlp: !0
                // Psalter Pahlavi
              };
              function _0(ft) {
                return ql[ft] ? "rtl" : "ltr";
              }
              for (var _l = /* @__PURE__ */ function() {
                function ft(X, et, P, M, H) {
                  if (this.glyphs = X, this.positions = null, this.script = P, this.language = M || null, this.direction = H || _0(P), this.features = {}, Array.isArray(et))
                    for (var lt = a(et), vt; !(vt = lt()).done; ) {
                      var dt = vt.value;
                      this.features[dt] = !0;
                    }
                  else
                    typeof et == "object" && (this.features = et);
                }
                return i(ft, [{
                  key: "advanceWidth",
                  get: function() {
                    for (var et = 0, P = a(this.positions), M; !(M = P()).done; ) {
                      var H = M.value;
                      et += H.xAdvance;
                    }
                    return et;
                  }
                  /**
                   * The total advance height of the run.
                   * @type {number}
                   */
                }, {
                  key: "advanceHeight",
                  get: function() {
                    for (var et = 0, P = a(this.positions), M; !(M = P()).done; ) {
                      var H = M.value;
                      et += H.yAdvance;
                    }
                    return et;
                  }
                  /**
                   * The bounding box containing all glyphs in the run.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    for (var et = new qa(), P = 0, M = 0, H = 0; H < this.glyphs.length; H++) {
                      var lt = this.glyphs[H], vt = this.positions[H], dt = lt.bbox;
                      et.addPoint(dt.minX + P + vt.xOffset, dt.minY + M + vt.yOffset), et.addPoint(dt.maxX + P + vt.xOffset, dt.maxY + M + vt.yOffset), P += vt.xAdvance, M += vt.yAdvance;
                    }
                    return et;
                  }
                }]), ft;
              }(), tu = function(X, et, P, M) {
                X === void 0 && (X = 0), et === void 0 && (et = 0), P === void 0 && (P = 0), M === void 0 && (M = 0), this.xAdvance = X, this.yAdvance = et, this.xOffset = P, this.yOffset = M;
              }, ka = {
                allTypographicFeatures: {
                  code: 0,
                  exclusive: !1,
                  allTypeFeatures: 0
                },
                ligatures: {
                  code: 1,
                  exclusive: !1,
                  requiredLigatures: 0,
                  commonLigatures: 2,
                  rareLigatures: 4,
                  // logos: 6
                  rebusPictures: 8,
                  diphthongLigatures: 10,
                  squaredLigatures: 12,
                  abbrevSquaredLigatures: 14,
                  symbolLigatures: 16,
                  contextualLigatures: 18,
                  historicalLigatures: 20
                },
                cursiveConnection: {
                  code: 2,
                  exclusive: !0,
                  unconnected: 0,
                  partiallyConnected: 1,
                  cursive: 2
                },
                letterCase: {
                  code: 3,
                  exclusive: !0
                },
                // upperAndLowerCase: 0          # deprecated
                // allCaps: 1                    # deprecated
                // allLowerCase: 2               # deprecated
                // smallCaps: 3                  # deprecated
                // initialCaps: 4                # deprecated
                // initialCapsAndSmallCaps: 5    # deprecated
                verticalSubstitution: {
                  code: 4,
                  exclusive: !1,
                  substituteVerticalForms: 0
                },
                linguisticRearrangement: {
                  code: 5,
                  exclusive: !1,
                  linguisticRearrangement: 0
                },
                numberSpacing: {
                  code: 6,
                  exclusive: !0,
                  monospacedNumbers: 0,
                  proportionalNumbers: 1,
                  thirdWidthNumbers: 2,
                  quarterWidthNumbers: 3
                },
                smartSwash: {
                  code: 8,
                  exclusive: !1,
                  wordInitialSwashes: 0,
                  wordFinalSwashes: 2,
                  // lineInitialSwashes: 4
                  // lineFinalSwashes: 6
                  nonFinalSwashes: 8
                },
                diacritics: {
                  code: 9,
                  exclusive: !0,
                  showDiacritics: 0,
                  hideDiacritics: 1,
                  decomposeDiacritics: 2
                },
                verticalPosition: {
                  code: 10,
                  exclusive: !0,
                  normalPosition: 0,
                  superiors: 1,
                  inferiors: 2,
                  ordinals: 3,
                  scientificInferiors: 4
                },
                fractions: {
                  code: 11,
                  exclusive: !0,
                  noFractions: 0,
                  verticalFractions: 1,
                  diagonalFractions: 2
                },
                overlappingCharacters: {
                  code: 13,
                  exclusive: !1,
                  preventOverlap: 0
                },
                typographicExtras: {
                  code: 14,
                  exclusive: !1,
                  // hyphensToEmDash: 0
                  // hyphenToEnDash: 2
                  slashedZero: 4
                },
                // formInterrobang: 6
                // smartQuotes: 8
                // periodsToEllipsis: 10
                mathematicalExtras: {
                  code: 15,
                  exclusive: !1,
                  // hyphenToMinus: 0
                  // asteristoMultiply: 2
                  // slashToDivide: 4
                  // inequalityLigatures: 6
                  // exponents: 8
                  mathematicalGreek: 10
                },
                ornamentSets: {
                  code: 16,
                  exclusive: !0,
                  noOrnaments: 0,
                  dingbats: 1,
                  piCharacters: 2,
                  fleurons: 3,
                  decorativeBorders: 4,
                  internationalSymbols: 5,
                  mathSymbols: 6
                },
                characterAlternatives: {
                  code: 17,
                  exclusive: !0,
                  noAlternates: 0
                },
                // user defined options
                designComplexity: {
                  code: 18,
                  exclusive: !0,
                  designLevel1: 0,
                  designLevel2: 1,
                  designLevel3: 2,
                  designLevel4: 3,
                  designLevel5: 4
                },
                styleOptions: {
                  code: 19,
                  exclusive: !0,
                  noStyleOptions: 0,
                  displayText: 1,
                  engravedText: 2,
                  illuminatedCaps: 3,
                  titlingCaps: 4,
                  tallCaps: 5
                },
                characterShape: {
                  code: 20,
                  exclusive: !0,
                  traditionalCharacters: 0,
                  simplifiedCharacters: 1,
                  JIS1978Characters: 2,
                  JIS1983Characters: 3,
                  JIS1990Characters: 4,
                  traditionalAltOne: 5,
                  traditionalAltTwo: 6,
                  traditionalAltThree: 7,
                  traditionalAltFour: 8,
                  traditionalAltFive: 9,
                  expertCharacters: 10,
                  JIS2004Characters: 11,
                  hojoCharacters: 12,
                  NLCCharacters: 13,
                  traditionalNamesCharacters: 14
                },
                numberCase: {
                  code: 21,
                  exclusive: !0,
                  lowerCaseNumbers: 0,
                  upperCaseNumbers: 1
                },
                textSpacing: {
                  code: 22,
                  exclusive: !0,
                  proportionalText: 0,
                  monospacedText: 1,
                  halfWidthText: 2,
                  thirdWidthText: 3,
                  quarterWidthText: 4,
                  altProportionalText: 5,
                  altHalfWidthText: 6
                },
                transliteration: {
                  code: 23,
                  exclusive: !0,
                  noTransliteration: 0
                },
                // hanjaToHangul: 1
                // hiraganaToKatakana: 2
                // katakanaToHiragana: 3
                // kanaToRomanization: 4
                // romanizationToHiragana: 5
                // romanizationToKatakana: 6
                // hanjaToHangulAltOne: 7
                // hanjaToHangulAltTwo: 8
                // hanjaToHangulAltThree: 9
                annotation: {
                  code: 24,
                  exclusive: !0,
                  noAnnotation: 0,
                  boxAnnotation: 1,
                  roundedBoxAnnotation: 2,
                  circleAnnotation: 3,
                  invertedCircleAnnotation: 4,
                  parenthesisAnnotation: 5,
                  periodAnnotation: 6,
                  romanNumeralAnnotation: 7,
                  diamondAnnotation: 8,
                  invertedBoxAnnotation: 9,
                  invertedRoundedBoxAnnotation: 10
                },
                kanaSpacing: {
                  code: 25,
                  exclusive: !0,
                  fullWidthKana: 0,
                  proportionalKana: 1
                },
                ideographicSpacing: {
                  code: 26,
                  exclusive: !0,
                  fullWidthIdeographs: 0,
                  proportionalIdeographs: 1,
                  halfWidthIdeographs: 2
                },
                unicodeDecomposition: {
                  code: 27,
                  exclusive: !1,
                  canonicalComposition: 0,
                  compatibilityComposition: 2,
                  transcodingComposition: 4
                },
                rubyKana: {
                  code: 28,
                  exclusive: !1,
                  // noRubyKana: 0     # deprecated - use rubyKanaOff instead
                  // rubyKana: 1     # deprecated - use rubyKanaOn instead
                  rubyKana: 2
                },
                CJKSymbolAlternatives: {
                  code: 29,
                  exclusive: !0,
                  noCJKSymbolAlternatives: 0,
                  CJKSymbolAltOne: 1,
                  CJKSymbolAltTwo: 2,
                  CJKSymbolAltThree: 3,
                  CJKSymbolAltFour: 4,
                  CJKSymbolAltFive: 5
                },
                ideographicAlternatives: {
                  code: 30,
                  exclusive: !0,
                  noIdeographicAlternatives: 0,
                  ideographicAltOne: 1,
                  ideographicAltTwo: 2,
                  ideographicAltThree: 3,
                  ideographicAltFour: 4,
                  ideographicAltFive: 5
                },
                CJKVerticalRomanPlacement: {
                  code: 31,
                  exclusive: !0,
                  CJKVerticalRomanCentered: 0,
                  CJKVerticalRomanHBaseline: 1
                },
                italicCJKRoman: {
                  code: 32,
                  exclusive: !1,
                  // noCJKItalicRoman: 0     # deprecated - use CJKItalicRomanOff instead
                  // CJKItalicRoman: 1     # deprecated - use CJKItalicRomanOn instead
                  CJKItalicRoman: 2
                },
                caseSensitiveLayout: {
                  code: 33,
                  exclusive: !1,
                  caseSensitiveLayout: 0,
                  caseSensitiveSpacing: 2
                },
                alternateKana: {
                  code: 34,
                  exclusive: !1,
                  alternateHorizKana: 0,
                  alternateVertKana: 2
                },
                stylisticAlternatives: {
                  code: 35,
                  exclusive: !1,
                  noStylisticAlternates: 0,
                  stylisticAltOne: 2,
                  stylisticAltTwo: 4,
                  stylisticAltThree: 6,
                  stylisticAltFour: 8,
                  stylisticAltFive: 10,
                  stylisticAltSix: 12,
                  stylisticAltSeven: 14,
                  stylisticAltEight: 16,
                  stylisticAltNine: 18,
                  stylisticAltTen: 20,
                  stylisticAltEleven: 22,
                  stylisticAltTwelve: 24,
                  stylisticAltThirteen: 26,
                  stylisticAltFourteen: 28,
                  stylisticAltFifteen: 30,
                  stylisticAltSixteen: 32,
                  stylisticAltSeventeen: 34,
                  stylisticAltEighteen: 36,
                  stylisticAltNineteen: 38,
                  stylisticAltTwenty: 40
                },
                contextualAlternates: {
                  code: 36,
                  exclusive: !1,
                  contextualAlternates: 0,
                  swashAlternates: 2,
                  contextualSwashAlternates: 4
                },
                lowerCase: {
                  code: 37,
                  exclusive: !0,
                  defaultLowerCase: 0,
                  lowerCaseSmallCaps: 1,
                  lowerCasePetiteCaps: 2
                },
                upperCase: {
                  code: 38,
                  exclusive: !0,
                  defaultUpperCase: 0,
                  upperCaseSmallCaps: 1,
                  upperCasePetiteCaps: 2
                },
                languageTag: {
                  // indices into ltag table
                  code: 39,
                  exclusive: !0
                },
                CJKRomanSpacing: {
                  code: 103,
                  exclusive: !0,
                  halfWidthCJKRoman: 0,
                  proportionalCJKRoman: 1,
                  defaultCJKRoman: 2,
                  fullWidthCJKRoman: 3
                }
              }, Me = function(X, et) {
                return [ka[X].code, ka[X][et]];
              }, Qi = {
                rlig: Me("ligatures", "requiredLigatures"),
                clig: Me("ligatures", "contextualLigatures"),
                dlig: Me("ligatures", "rareLigatures"),
                hlig: Me("ligatures", "historicalLigatures"),
                liga: Me("ligatures", "commonLigatures"),
                hist: Me("ligatures", "historicalLigatures"),
                // ??
                smcp: Me("lowerCase", "lowerCaseSmallCaps"),
                pcap: Me("lowerCase", "lowerCasePetiteCaps"),
                frac: Me("fractions", "diagonalFractions"),
                dnom: Me("fractions", "diagonalFractions"),
                // ??
                numr: Me("fractions", "diagonalFractions"),
                // ??
                afrc: Me("fractions", "verticalFractions"),
                // aalt
                // abvf, abvm, abvs, akhn, blwf, blwm, blws, cfar, cjct, cpsp, falt, isol, jalt, ljmo, mset?
                // ltra, ltrm, nukt, pref, pres, pstf, psts, rand, rkrf, rphf, rtla, rtlm, size, tjmo, tnum?
                // unic, vatu, vhal, vjmo, vpal, vrt2
                // dist -> trak table?
                // kern, vkrn -> kern table
                // lfbd + opbd + rtbd -> opbd table?
                // mark, mkmk -> acnt table?
                // locl -> languageTag + ltag table
                case: Me("caseSensitiveLayout", "caseSensitiveLayout"),
                // also caseSensitiveSpacing
                ccmp: Me("unicodeDecomposition", "canonicalComposition"),
                // compatibilityComposition?
                cpct: Me("CJKVerticalRomanPlacement", "CJKVerticalRomanCentered"),
                // guess..., probably not given below
                valt: Me("CJKVerticalRomanPlacement", "CJKVerticalRomanCentered"),
                swsh: Me("contextualAlternates", "swashAlternates"),
                cswh: Me("contextualAlternates", "contextualSwashAlternates"),
                curs: Me("cursiveConnection", "cursive"),
                // ??
                c2pc: Me("upperCase", "upperCasePetiteCaps"),
                c2sc: Me("upperCase", "upperCaseSmallCaps"),
                init: Me("smartSwash", "wordInitialSwashes"),
                // ??
                fin2: Me("smartSwash", "wordFinalSwashes"),
                // ??
                medi: Me("smartSwash", "nonFinalSwashes"),
                // ??
                med2: Me("smartSwash", "nonFinalSwashes"),
                // ??
                fin3: Me("smartSwash", "wordFinalSwashes"),
                // ??
                fina: Me("smartSwash", "wordFinalSwashes"),
                // ??
                pkna: Me("kanaSpacing", "proportionalKana"),
                half: Me("textSpacing", "halfWidthText"),
                // also HalfWidthCJKRoman, HalfWidthIdeographs?
                halt: Me("textSpacing", "altHalfWidthText"),
                hkna: Me("alternateKana", "alternateHorizKana"),
                vkna: Me("alternateKana", "alternateVertKana"),
                // hngl: feature 'transliteration', 'hanjaToHangulSelector' # deprecated
                ital: Me("italicCJKRoman", "CJKItalicRoman"),
                lnum: Me("numberCase", "upperCaseNumbers"),
                onum: Me("numberCase", "lowerCaseNumbers"),
                mgrk: Me("mathematicalExtras", "mathematicalGreek"),
                // nalt: not enough info. what type of annotation?
                // ornm: ditto, which ornament style?
                calt: Me("contextualAlternates", "contextualAlternates"),
                // or more?
                vrt2: Me("verticalSubstitution", "substituteVerticalForms"),
                // oh... below?
                vert: Me("verticalSubstitution", "substituteVerticalForms"),
                tnum: Me("numberSpacing", "monospacedNumbers"),
                pnum: Me("numberSpacing", "proportionalNumbers"),
                sups: Me("verticalPosition", "superiors"),
                subs: Me("verticalPosition", "inferiors"),
                ordn: Me("verticalPosition", "ordinals"),
                pwid: Me("textSpacing", "proportionalText"),
                hwid: Me("textSpacing", "halfWidthText"),
                qwid: Me("textSpacing", "quarterWidthText"),
                // also QuarterWidthNumbers?
                twid: Me("textSpacing", "thirdWidthText"),
                // also ThirdWidthNumbers?
                fwid: Me("textSpacing", "proportionalText"),
                //??
                palt: Me("textSpacing", "altProportionalText"),
                trad: Me("characterShape", "traditionalCharacters"),
                smpl: Me("characterShape", "simplifiedCharacters"),
                jp78: Me("characterShape", "JIS1978Characters"),
                jp83: Me("characterShape", "JIS1983Characters"),
                jp90: Me("characterShape", "JIS1990Characters"),
                jp04: Me("characterShape", "JIS2004Characters"),
                expt: Me("characterShape", "expertCharacters"),
                hojo: Me("characterShape", "hojoCharacters"),
                nlck: Me("characterShape", "NLCCharacters"),
                tnam: Me("characterShape", "traditionalNamesCharacters"),
                ruby: Me("rubyKana", "rubyKana"),
                titl: Me("styleOptions", "titlingCaps"),
                zero: Me("typographicExtras", "slashedZero"),
                ss01: Me("stylisticAlternatives", "stylisticAltOne"),
                ss02: Me("stylisticAlternatives", "stylisticAltTwo"),
                ss03: Me("stylisticAlternatives", "stylisticAltThree"),
                ss04: Me("stylisticAlternatives", "stylisticAltFour"),
                ss05: Me("stylisticAlternatives", "stylisticAltFive"),
                ss06: Me("stylisticAlternatives", "stylisticAltSix"),
                ss07: Me("stylisticAlternatives", "stylisticAltSeven"),
                ss08: Me("stylisticAlternatives", "stylisticAltEight"),
                ss09: Me("stylisticAlternatives", "stylisticAltNine"),
                ss10: Me("stylisticAlternatives", "stylisticAltTen"),
                ss11: Me("stylisticAlternatives", "stylisticAltEleven"),
                ss12: Me("stylisticAlternatives", "stylisticAltTwelve"),
                ss13: Me("stylisticAlternatives", "stylisticAltThirteen"),
                ss14: Me("stylisticAlternatives", "stylisticAltFourteen"),
                ss15: Me("stylisticAlternatives", "stylisticAltFifteen"),
                ss16: Me("stylisticAlternatives", "stylisticAltSixteen"),
                ss17: Me("stylisticAlternatives", "stylisticAltSeventeen"),
                ss18: Me("stylisticAlternatives", "stylisticAltEighteen"),
                ss19: Me("stylisticAlternatives", "stylisticAltNineteen"),
                ss20: Me("stylisticAlternatives", "stylisticAltTwenty")
              }, $i = 1; $i <= 99; $i++)
                Qi["cv".concat("00".concat($i).slice(-2))] = [ka.characterAlternatives.code, $i];
              var Ua = {};
              for (var ts in Qi) {
                var qi = Qi[ts];
                Ua[qi[0]] == null && (Ua[qi[0]] = {}), Ua[qi[0]][qi[1]] = ts;
              }
              function eu(ft) {
                var X = {};
                for (var et in ft) {
                  var P = void 0;
                  (P = Qi[et]) && (X[P[0]] == null && (X[P[0]] = {}), X[P[0]][P[1]] = ft[et]);
                }
                return X;
              }
              function es(ft) {
                var X = ft[0], et = ft[1];
                if (isNaN(X))
                  var P = ka[X] && ka[X].code;
                else
                  var P = X;
                if (isNaN(et))
                  var M = ka[X] && ka[X][et];
                else
                  var M = et;
                return [P, M];
              }
              function ru(ft) {
                var X = {};
                if (Array.isArray(ft))
                  for (var et = 0; et < ft.length; et++) {
                    var P = void 0, M = es(ft[et]);
                    (P = Ua[M[0]] && Ua[M[0]][M[1]]) && (X[P] = !0);
                  }
                else if (typeof ft == "object")
                  for (var H in ft) {
                    var lt = ft[H];
                    for (var vt in lt) {
                      var dt = void 0, ct = es([H, vt]);
                      lt[vt] && (dt = Ua[ct[0]] && Ua[ct[0]][ct[1]]) && (X[dt] = !0);
                    }
                  }
                return Object.keys(X);
              }
              var bi, _i = (bi = /* @__PURE__ */ function() {
                function ft(et) {
                  this.table = et;
                }
                var X = ft.prototype;
                return X.lookup = function(P) {
                  switch (this.table.version) {
                    case 0:
                      return this.table.values.getItem(P);
                    case 2:
                    case 4: {
                      for (var M = 0, H = this.table.binarySearchHeader.nUnits - 1; M <= H; ) {
                        var lt = M + H >> 1, vt = this.table.segments[lt];
                        if (vt.firstGlyph === 65535)
                          return null;
                        if (P < vt.firstGlyph)
                          H = lt - 1;
                        else if (P > vt.lastGlyph)
                          M = lt + 1;
                        else
                          return this.table.version === 2 ? vt.value : vt.values[P - vt.firstGlyph];
                      }
                      return null;
                    }
                    case 6: {
                      for (var dt = 0, ct = this.table.binarySearchHeader.nUnits - 1; dt <= ct; ) {
                        var lt = dt + ct >> 1, vt = this.table.segments[lt];
                        if (vt.glyph === 65535)
                          return null;
                        if (P < vt.glyph)
                          ct = lt - 1;
                        else if (P > vt.glyph)
                          dt = lt + 1;
                        else
                          return vt.value;
                      }
                      return null;
                    }
                    case 8:
                      return this.table.values[P - this.table.firstGlyph];
                    default:
                      throw new Error("Unknown lookup table format: ".concat(this.table.version));
                  }
                }, X.glyphsForValue = function(P) {
                  var M = [];
                  switch (this.table.version) {
                    case 2:
                    case 4: {
                      for (var H = a(this.table.segments), lt; !(lt = H()).done; ) {
                        var vt = lt.value;
                        if (this.table.version === 2 && vt.value === P)
                          M.push.apply(M, $a(vt.firstGlyph, vt.lastGlyph + 1));
                        else
                          for (var dt = 0; dt < vt.values.length; dt++)
                            vt.values[dt] === P && M.push(vt.firstGlyph + dt);
                      }
                      break;
                    }
                    case 6: {
                      for (var ct = a(this.table.segments), Ot; !(Ot = ct()).done; ) {
                        var Vt = Ot.value;
                        Vt.value === P && M.push(Vt.glyph);
                      }
                      break;
                    }
                    case 8: {
                      for (var se = 0; se < this.table.values.length; se++)
                        this.table.values[se] === P && M.push(this.table.firstGlyph + se);
                      break;
                    }
                    default:
                      throw new Error("Unknown lookup table format: ".concat(this.table.version));
                  }
                  return M;
                }, ft;
              }(), W(bi.prototype, "glyphsForValue", [J], Object.getOwnPropertyDescriptor(bi.prototype, "glyphsForValue"), bi.prototype), bi), nu = 0, rs = 0, ns = 1, as = 2, au = 16384, iu = /* @__PURE__ */ function() {
                function ft(et) {
                  this.stateTable = et, this.lookupTable = new _i(et.classTable);
                }
                var X = ft.prototype;
                return X.process = function(P, M, H) {
                  for (var lt = nu, vt = M ? P.length - 1 : 0, dt = M ? -1 : 1; dt === 1 && vt <= P.length || dt === -1 && vt >= -1; ) {
                    var ct = null, Ot = ns, Vt = !0;
                    vt === P.length || vt === -1 ? Ot = rs : (ct = P[vt], ct.id === 65535 ? Ot = as : (Ot = this.lookupTable.lookup(ct.id), Ot == null && (Ot = ns)));
                    var se = this.stateTable.stateArray.getItem(lt), $t = se[Ot], ue = this.stateTable.entryTable.getItem($t);
                    Ot !== rs && Ot !== as && (H(ct, ue, vt), Vt = !(ue.flags & au)), lt = ue.newState, Vt && (vt += dt);
                  }
                  return P;
                }, X.traverse = function(P, M, H) {
                  if (M === void 0 && (M = 0), H === void 0 && (H = /* @__PURE__ */ new Set()), !H.has(M)) {
                    H.add(M);
                    for (var lt = this.stateTable, vt = lt.nClasses, dt = lt.stateArray, ct = lt.entryTable, Ot = dt.getItem(M), Vt = 4; Vt < vt; Vt++)
                      for (var se = Ot[Vt], $t = ct.getItem(se), ue = a(this.lookupTable.glyphsForValue(Vt)), pe; !(pe = ue()).done; ) {
                        var Te = pe.value;
                        P.enter && P.enter(Te, $t), $t.newState !== 0 && this.traverse(P, $t.newState, H), P.exit && P.exit(Te, $t);
                      }
                  }
                }, ft;
              }(), wi, ou = 32768, su = 8192, fu = 15, is = 32768, lu = 32768, uu = 8192, cu = 2147483648, hu = 1073741824, du = 1073741823, os = 4194304, vu = 2048, pu = 1024, gu = 992, yu = 31, mu = (wi = /* @__PURE__ */ function() {
                function ft(et) {
                  this.processIndicRearragement = this.processIndicRearragement.bind(this), this.processContextualSubstitution = this.processContextualSubstitution.bind(this), this.processLigature = this.processLigature.bind(this), this.processNoncontextualSubstitutions = this.processNoncontextualSubstitutions.bind(this), this.processGlyphInsertion = this.processGlyphInsertion.bind(this), this.font = et, this.morx = et.morx, this.inputCache = null;
                }
                var X = ft.prototype;
                return X.process = function(P, M) {
                  M === void 0 && (M = {});
                  for (var H = a(this.morx.chains), lt; !(lt = H()).done; ) {
                    for (var vt = lt.value, dt = vt.defaultFlags, ct = a(vt.features), Ot; !(Ot = ct()).done; ) {
                      var Vt = Ot.value, se = void 0;
                      (se = M[Vt.featureType]) && (se[Vt.featureSetting] ? (dt &= Vt.disableFlags, dt |= Vt.enableFlags) : se[Vt.featureSetting] === !1 && (dt |= ~Vt.disableFlags, dt &= ~Vt.enableFlags));
                    }
                    for (var $t = a(vt.subtables), ue; !(ue = $t()).done; ) {
                      var pe = ue.value;
                      pe.subFeatureFlags & dt && this.processSubtable(pe, P);
                    }
                  }
                  for (var Te = P.length - 1; Te >= 0; )
                    P[Te].id === 65535 && P.splice(Te, 1), Te--;
                  return P;
                }, X.processSubtable = function(P, M) {
                  if (this.subtable = P, this.glyphs = M, this.subtable.type === 4) {
                    this.processNoncontextualSubstitutions(this.subtable, this.glyphs);
                    return;
                  }
                  this.ligatureStack = [], this.markedGlyph = null, this.firstGlyph = null, this.lastGlyph = null, this.markedIndex = null;
                  var H = this.getStateMachine(P), lt = this.getProcessor(), vt = !!(this.subtable.coverage & os);
                  return H.process(this.glyphs, vt, lt);
                }, X.getStateMachine = function(P) {
                  return new iu(P.table.stateTable);
                }, X.getProcessor = function() {
                  switch (this.subtable.type) {
                    case 0:
                      return this.processIndicRearragement;
                    case 1:
                      return this.processContextualSubstitution;
                    case 2:
                      return this.processLigature;
                    case 4:
                      return this.processNoncontextualSubstitutions;
                    case 5:
                      return this.processGlyphInsertion;
                    default:
                      throw new Error("Invalid morx subtable type: ".concat(this.subtable.type));
                  }
                }, X.processIndicRearragement = function(P, M, H) {
                  M.flags & ou && (this.firstGlyph = H), M.flags & su && (this.lastGlyph = H), xu(this.glyphs, M.flags & fu, this.firstGlyph, this.lastGlyph);
                }, X.processContextualSubstitution = function(P, M, H) {
                  var lt = this.subtable.table.substitutionTable.items;
                  if (M.markIndex !== 65535) {
                    var vt = lt.getItem(M.markIndex), dt = new _i(vt);
                    P = this.glyphs[this.markedGlyph];
                    var ct = dt.lookup(P.id);
                    ct && (this.glyphs[this.markedGlyph] = this.font.getGlyph(ct, P.codePoints));
                  }
                  if (M.currentIndex !== 65535) {
                    var Ot = lt.getItem(M.currentIndex), Vt = new _i(Ot);
                    P = this.glyphs[H];
                    var ct = Vt.lookup(P.id);
                    ct && (this.glyphs[H] = this.font.getGlyph(ct, P.codePoints));
                  }
                  M.flags & is && (this.markedGlyph = H);
                }, X.processLigature = function(P, M, H) {
                  if (M.flags & lu && this.ligatureStack.push(H), M.flags & uu) {
                    for (var lt, vt = this.subtable.table.ligatureActions, dt = this.subtable.table.components, ct = this.subtable.table.ligatureList, Ot = M.action, Vt = !1, se = 0, $t = [], ue = []; !Vt; ) {
                      var pe, Te = this.ligatureStack.pop();
                      (pe = $t).unshift.apply(pe, this.glyphs[Te].codePoints);
                      var He = vt.getItem(Ot++);
                      Vt = !!(He & cu);
                      var _e = !!(He & hu), Xe = (He & du) << 2 >> 2;
                      Xe += this.glyphs[Te].id;
                      var hr = dt.getItem(Xe);
                      if (se += hr, Vt || _e) {
                        var sr = ct.getItem(se);
                        this.glyphs[Te] = this.font.getGlyph(sr, $t), ue.push(Te), se = 0, $t = [];
                      } else
                        this.glyphs[Te] = this.font.getGlyph(65535);
                    }
                    (lt = this.ligatureStack).push.apply(lt, ue);
                  }
                }, X.processNoncontextualSubstitutions = function(P, M, H) {
                  var lt = new _i(P.table.lookupTable);
                  for (H = 0; H < M.length; H++) {
                    var vt = M[H];
                    if (vt.id !== 65535) {
                      var dt = lt.lookup(vt.id);
                      dt && (M[H] = this.font.getGlyph(dt, vt.codePoints));
                    }
                  }
                }, X._insertGlyphs = function(P, M, H, lt) {
                  for (var vt, dt = []; H--; ) {
                    var ct = this.subtable.table.insertionActions.getItem(M++);
                    dt.push(this.font.getGlyph(ct));
                  }
                  lt || P++, (vt = this.glyphs).splice.apply(vt, [P, 0].concat(dt));
                }, X.processGlyphInsertion = function(P, M, H) {
                  if (M.flags & is && (this.markedIndex = H), M.markedInsertIndex !== 65535) {
                    var lt = (M.flags & yu) >>> 5, vt = !!(M.flags & pu);
                    this._insertGlyphs(this.markedIndex, M.markedInsertIndex, lt, vt);
                  }
                  if (M.currentInsertIndex !== 65535) {
                    var dt = (M.flags & gu) >>> 5, ct = !!(M.flags & vu);
                    this._insertGlyphs(H, M.currentInsertIndex, dt, ct);
                  }
                }, X.getSupportedFeatures = function() {
                  for (var P = [], M = a(this.morx.chains), H; !(H = M()).done; )
                    for (var lt = H.value, vt = a(lt.features), dt; !(dt = vt()).done; ) {
                      var ct = dt.value;
                      P.push([ct.featureType, ct.featureSetting]);
                    }
                  return P;
                }, X.generateInputs = function(P) {
                  return this.inputCache || this.generateInputCache(), this.inputCache[P] || [];
                }, X.generateInputCache = function() {
                  this.inputCache = {};
                  for (var P = a(this.morx.chains), M; !(M = P()).done; )
                    for (var H = M.value, lt = H.defaultFlags, vt = a(H.subtables), dt; !(dt = vt()).done; ) {
                      var ct = dt.value;
                      ct.subFeatureFlags & lt && this.generateInputsForSubtable(ct);
                    }
                }, X.generateInputsForSubtable = function(P) {
                  var M = this;
                  if (P.type === 2) {
                    var H = !!(P.coverage & os);
                    if (H)
                      throw new Error("Reverse subtable, not supported.");
                    this.subtable = P, this.ligatureStack = [];
                    var lt = this.getStateMachine(P), vt = this.getProcessor(), dt = [], ct = [];
                    this.glyphs = [], lt.traverse({
                      enter: function(Vt, se) {
                        var $t = M.glyphs;
                        ct.push({
                          glyphs: $t.slice(),
                          ligatureStack: M.ligatureStack.slice()
                        });
                        var ue = M.font.getGlyph(Vt);
                        dt.push(ue), $t.push(dt[dt.length - 1]), vt($t[$t.length - 1], se, $t.length - 1);
                        for (var pe = 0, Te = 0, He = 0; He < $t.length && pe <= 1; He++)
                          $t[He].id !== 65535 && (pe++, Te = $t[He].id);
                        if (pe === 1) {
                          var _e = dt.map(function(hr) {
                            return hr.id;
                          }), Xe = M.inputCache[Te];
                          Xe ? Xe.push(_e) : M.inputCache[Te] = [_e];
                        }
                      },
                      exit: function() {
                        var Vt = ct.pop();
                        M.glyphs = Vt.glyphs, M.ligatureStack = Vt.ligatureStack, dt.pop();
                      }
                    });
                  }
                }, ft;
              }(), W(wi.prototype, "getStateMachine", [J], Object.getOwnPropertyDescriptor(wi.prototype, "getStateMachine"), wi.prototype), wi);
              function On(ft, X, et, P, M) {
                P === void 0 && (P = !1), M === void 0 && (M = !1);
                var H = ft.splice(et[0] - (et[1] - 1), et[1]);
                M && H.reverse();
                var lt = ft.splice.apply(ft, [X[0], X[1]].concat(H));
                return P && lt.reverse(), ft.splice.apply(ft, [et[0] - (X[1] - 1), 0].concat(lt)), ft;
              }
              function xu(ft, X, et, P) {
                switch (X) {
                  case 0:
                    return ft;
                  case 1:
                    return On(ft, [et, 1], [P, 0]);
                  case 2:
                    return On(ft, [et, 0], [P, 1]);
                  case 3:
                    return On(ft, [et, 1], [P, 1]);
                  case 4:
                    return On(ft, [et, 2], [P, 0]);
                  case 5:
                    return On(ft, [et, 2], [P, 0], !0, !1);
                  case 6:
                    return On(ft, [et, 0], [P, 2]);
                  case 7:
                    return On(ft, [et, 0], [P, 2], !1, !0);
                  case 8:
                    return On(ft, [et, 1], [P, 2]);
                  case 9:
                    return On(ft, [et, 1], [P, 2], !1, !0);
                  case 10:
                    return On(ft, [et, 2], [P, 1]);
                  case 11:
                    return On(ft, [et, 2], [P, 1], !0, !1);
                  case 12:
                    return On(ft, [et, 2], [P, 2]);
                  case 13:
                    return On(ft, [et, 2], [P, 2], !0, !1);
                  case 14:
                    return On(ft, [et, 2], [P, 2], !1, !0);
                  case 15:
                    return On(ft, [et, 2], [P, 2], !0, !0);
                  default:
                    throw new Error("Unknown verb: ".concat(X));
                }
              }
              var bu = /* @__PURE__ */ function() {
                function ft(et) {
                  this.font = et, this.morxProcessor = new mu(et), this.fallbackPosition = !1;
                }
                var X = ft.prototype;
                return X.substitute = function(P) {
                  P.direction === "rtl" && P.glyphs.reverse(), this.morxProcessor.process(P.glyphs, eu(P.features));
                }, X.getAvailableFeatures = function(P, M) {
                  return ru(this.morxProcessor.getSupportedFeatures());
                }, X.stringsForGlyph = function(P) {
                  for (var M = this.morxProcessor.generateInputs(P), H = /* @__PURE__ */ new Set(), lt = a(M), vt; !(vt = lt()).done; ) {
                    var dt = vt.value;
                    this._addStrings(dt, 0, H, "");
                  }
                  return H;
                }, X._addStrings = function(P, M, H, lt) {
                  for (var vt = this.font._cmapProcessor.codePointsForGlyph(P[M]), dt = a(vt), ct; !(ct = dt()).done; ) {
                    var Ot = ct.value, Vt = lt + String.fromCodePoint(Ot);
                    M < P.length - 1 ? this._addStrings(P, M + 1, H, Vt) : H.add(Vt);
                  }
                }, ft;
              }(), wu = /* @__PURE__ */ function() {
                function ft(et, P, M) {
                  this.font = et, this.script = P, this.direction = M, this.stages = [], this.globalFeatures = {}, this.allFeatures = {};
                }
                var X = ft.prototype;
                return X._addFeatures = function(P, M) {
                  for (var H = this.stages.length - 1, lt = this.stages[H], vt = a(P), dt; !(dt = vt()).done; ) {
                    var ct = dt.value;
                    this.allFeatures[ct] == null && (lt.push(ct), this.allFeatures[ct] = H, M && (this.globalFeatures[ct] = !0));
                  }
                }, X.add = function(P, M) {
                  if (M === void 0 && (M = !0), this.stages.length === 0 && this.stages.push([]), typeof P == "string" && (P = [P]), Array.isArray(P))
                    this._addFeatures(P, M);
                  else if (typeof P == "object")
                    this._addFeatures(P.global || [], !0), this._addFeatures(P.local || [], !1);
                  else
                    throw new Error("Unsupported argument to ShapingPlan#add");
                }, X.addStage = function(P, M) {
                  typeof P == "function" ? this.stages.push(P, []) : (this.stages.push([]), this.add(P, M));
                }, X.setFeatureOverrides = function(P) {
                  if (Array.isArray(P))
                    this.add(P);
                  else if (typeof P == "object") {
                    for (var M in P)
                      if (P[M])
                        this.add(M);
                      else if (this.allFeatures[M] != null) {
                        var H = this.stages[this.allFeatures[M]];
                        H.splice(H.indexOf(M), 1), delete this.allFeatures[M], delete this.globalFeatures[M];
                      }
                  }
                }, X.assignGlobalFeatures = function(P) {
                  for (var M = a(P), H; !(H = M()).done; ) {
                    var lt = H.value;
                    for (var vt in this.globalFeatures)
                      lt.features[vt] = !0;
                  }
                }, X.process = function(P, M, H) {
                  for (var lt = a(this.stages), vt; !(vt = lt()).done; ) {
                    var dt = vt.value;
                    typeof dt == "function" ? H || dt(this.font, M, this) : dt.length > 0 && P.applyFeatures(dt, M, H);
                  }
                }, ft;
              }(), Su = ["rvrn"], Au = ["ccmp", "locl", "rlig", "mark", "mkmk"], Cu = ["frac", "numr", "dnom"], Eu = ["calt", "clig", "liga", "rclt", "curs", "kern"], Tu = {
                ltr: ["ltra", "ltrm"],
                rtl: ["rtla", "rtlm"]
              }, Ta = /* @__PURE__ */ function() {
                function ft() {
                }
                return ft.plan = function(et, P, M) {
                  this.planPreprocessing(et), this.planFeatures(et), this.planPostprocessing(et, M), et.assignGlobalFeatures(P), this.assignFeatures(et, P);
                }, ft.planPreprocessing = function(et) {
                  et.add({
                    global: [].concat(Su, Tu[et.direction]),
                    local: Cu
                  });
                }, ft.planFeatures = function(et) {
                }, ft.planPostprocessing = function(et, P) {
                  et.add([].concat(Au, Eu)), et.setFeatureOverrides(P);
                }, ft.assignFeatures = function(et, P) {
                  for (var M = 0; M < P.length; M++) {
                    var H = P[M];
                    if (H.codePoints[0] === 8260) {
                      for (var lt = M, vt = M + 1; lt > 0 && D.isDigit(P[lt - 1].codePoints[0]); )
                        P[lt - 1].features.numr = !0, P[lt - 1].features.frac = !0, lt--;
                      for (; vt < P.length && D.isDigit(P[vt].codePoints[0]); )
                        P[vt].features.dnom = !0, P[vt].features.frac = !0, vt++;
                      H.features.frac = !0, M = vt - 1;
                    }
                  }
                }, ft;
              }();
              U(Ta, "zeroMarkWidths", "AFTER_GPOS");
              var Fu = new I(o("APABAAAAAAAAOAAAAf0BAv7tmi1MxDAUx7vtvjhAgcDgkEgEAnmXEBIMCYaEcygEiqBQ4FAkCE4ikUgMiiBJSAgSiUQSDMn9L9eSl6bddddug9t7yS/trevre+3r27pcNxZiG+yCfdCVv/9LeQxOwRm4AJegD27ALbgD9+ABPJF+z+BN/h7yDj5k/VOWX6SdmU5+wLWknggxDxaS8u0qiiX4uiz9XamQ3wzDMAzDMAzDMAzDVI/h959V/v7BMAzDMAzDMLlyNTNiMSdewVxbiA44B4/guz1qW58VYlMI0WsJ0W+N6kXw0spvPtdwhtkwnGM6uLaV4Xyzg3v3PM9DPfQ/sOg4xPWjipy31P8LTqbU304c/cLCUmWJLNB2Uz2U1KTeRKNmKHVMfbJC+/0loTZRH/W5cvEvBJPMbREkWt3FD1NcqXZBSpuE2Ad0PBehPtNrPtIEdYP+hiRt/V1jIiE69X4NT/uVZI3PUHE9bm5M7ePGdZWy951v7Nn6j8v1WWKP3mt6ttnsigx6VN7Vc0VomSSGqW2mGNP1muZPl7LfjNUaKNFtDGVf2fvE9O7VlBS5j333c5p/eeoOqcs1R/hIqDWLJ7TTlksirVT1SI7l8k4Yp+g3jafGcrU1RM6l9th80XOpnlN97bDNY4i4s61B0Si/ipa0uHMl6zqEjlFfCZm/TM8KmzQDjmuTAQ==", "base64")), ss = ["isol", "fina", "fin2", "fin3", "medi", "med2", "init"], Qo = {
                Non_Joining: 0,
                Left_Joining: 1,
                Right_Joining: 2,
                Dual_Joining: 3,
                Join_Causing: 3,
                ALAPH: 4,
                "DALATH RISH": 5,
                Transparent: 6
              }, Jr = "isol", Fa = "fina", $o = "fin2", Iu = "fin3", to = "medi", eo = "med2", ro = "init", Er = null, Du = [
                //   Non_Joining,        Left_Joining,       Right_Joining,     Dual_Joining,           ALAPH,            DALATH RISH
                // State 0: prev was U,  not willing to join.
                [[Er, Er, 0], [Er, Jr, 2], [Er, Jr, 1], [Er, Jr, 2], [Er, Jr, 1], [Er, Jr, 6]],
                // State 1: prev was R or ISOL/ALAPH,  not willing to join.
                [[Er, Er, 0], [Er, Jr, 2], [Er, Jr, 1], [Er, Jr, 2], [Er, $o, 5], [Er, Jr, 6]],
                // State 2: prev was D/L in ISOL form,  willing to join.
                [[Er, Er, 0], [Er, Jr, 2], [ro, Fa, 1], [ro, Fa, 3], [ro, Fa, 4], [ro, Fa, 6]],
                // State 3: prev was D in FINA form,  willing to join.
                [[Er, Er, 0], [Er, Jr, 2], [to, Fa, 1], [to, Fa, 3], [to, Fa, 4], [to, Fa, 6]],
                // State 4: prev was FINA ALAPH,  not willing to join.
                [[Er, Er, 0], [Er, Jr, 2], [eo, Jr, 1], [eo, Jr, 2], [eo, $o, 5], [eo, Jr, 6]],
                // State 5: prev was FIN2/FIN3 ALAPH,  not willing to join.
                [[Er, Er, 0], [Er, Jr, 2], [Jr, Jr, 1], [Jr, Jr, 2], [Jr, $o, 5], [Jr, Jr, 6]],
                // State 6: prev was DALATH/RISH,  not willing to join.
                [[Er, Er, 0], [Er, Jr, 2], [Er, Jr, 1], [Er, Jr, 2], [Er, Iu, 5], [Er, Jr, 6]]
              ], Ia = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                return X.planFeatures = function(P) {
                  P.add(["ccmp", "locl"]);
                  for (var M = 0; M < ss.length; M++) {
                    var H = ss[M];
                    P.addStage(H, !1);
                  }
                  P.addStage("mset");
                }, X.assignFeatures = function(P, M) {
                  ft.assignFeatures.call(this, P, M);
                  for (var H = -1, lt = 0, vt = [], dt = 0; dt < M.length; dt++) {
                    var ct = void 0, Ot = void 0, Vt = M[dt], se = Pu(Vt.codePoints[0]);
                    if (se === Qo.Transparent) {
                      vt[dt] = Er;
                      continue;
                    }
                    var $t = Du[lt][se];
                    Ot = $t[0], ct = $t[1], lt = $t[2], Ot !== Er && H !== -1 && (vt[H] = Ot), vt[dt] = ct, H = dt;
                  }
                  for (var ue = 0; ue < M.length; ue++) {
                    var pe = void 0, Vt = M[ue];
                    (pe = vt[ue]) && (Vt.features[pe] = !0);
                  }
                }, X;
              }(Ta);
              function Pu(ft) {
                var X = Fu.get(ft);
                if (X)
                  return X - 1;
                var et = D.getCategory(ft);
                return et === "Mn" || et === "Me" || et === "Cf" ? Qo.Transparent : Qo.Non_Joining;
              }
              var Ou = /* @__PURE__ */ function() {
                function ft(et, P) {
                  this.glyphs = et, this.reset(P);
                }
                var X = ft.prototype;
                return X.reset = function(P, M) {
                  P === void 0 && (P = {}), M === void 0 && (M = 0), this.options = P, this.flags = P.flags || {}, this.markAttachmentType = P.markAttachmentType || 0, this.index = M;
                }, X.shouldIgnore = function(P) {
                  return this.flags.ignoreMarks && P.isMark || this.flags.ignoreBaseGlyphs && P.isBase || this.flags.ignoreLigatures && P.isLigature || this.markAttachmentType && P.isMark && P.markAttachmentType !== this.markAttachmentType;
                }, X.move = function(P) {
                  for (this.index += P; 0 <= this.index && this.index < this.glyphs.length && this.shouldIgnore(this.glyphs[this.index]); )
                    this.index += P;
                  return 0 > this.index || this.index >= this.glyphs.length ? null : this.glyphs[this.index];
                }, X.next = function() {
                  return this.move(1);
                }, X.prev = function() {
                  return this.move(-1);
                }, X.peek = function(P) {
                  P === void 0 && (P = 1);
                  var M = this.index, H = this.increment(P);
                  return this.index = M, H;
                }, X.peekIndex = function(P) {
                  P === void 0 && (P = 1);
                  var M = this.index;
                  this.increment(P);
                  var H = this.index;
                  return this.index = M, H;
                }, X.increment = function(P) {
                  P === void 0 && (P = 1);
                  var M = P < 0 ? -1 : 1;
                  for (P = Math.abs(P); P--; )
                    this.move(M);
                  return this.glyphs[this.index];
                }, i(ft, [{
                  key: "cur",
                  get: function() {
                    return this.glyphs[this.index] || null;
                  }
                }]), ft;
              }(), Bu = ["DFLT", "dflt", "latn"], no = /* @__PURE__ */ function() {
                function ft(et, P) {
                  this.font = et, this.table = P, this.script = null, this.scriptTag = null, this.language = null, this.languageTag = null, this.features = {}, this.lookups = {}, this.variationsIndex = et._variationProcessor ? this.findVariationsIndex(et._variationProcessor.normalizedCoords) : -1, this.selectScript(), this.glyphs = [], this.positions = [], this.ligatureID = 1, this.currentFeature = null;
                }
                var X = ft.prototype;
                return X.findScript = function(P) {
                  if (this.table.scriptList == null)
                    return null;
                  Array.isArray(P) || (P = [P]);
                  for (var M = a(P), H; !(H = M()).done; )
                    for (var lt = H.value, vt = a(this.table.scriptList), dt; !(dt = vt()).done; ) {
                      var ct = dt.value;
                      if (ct.tag === lt)
                        return ct;
                    }
                  return null;
                }, X.selectScript = function(P, M, H) {
                  var lt = !1, vt;
                  if (!this.script || P !== this.scriptTag) {
                    if (vt = this.findScript(P), vt || (vt = this.findScript(Bu)), !vt)
                      return this.scriptTag;
                    this.scriptTag = vt.tag, this.script = vt.script, this.language = null, this.languageTag = null, lt = !0;
                  }
                  if ((!H || H !== this.direction) && (this.direction = H || _0(P)), M && M.length < 4 && (M += " ".repeat(4 - M.length)), !M || M !== this.languageTag) {
                    this.language = null;
                    for (var dt = a(this.script.langSysRecords), ct; !(ct = dt()).done; ) {
                      var Ot = ct.value;
                      if (Ot.tag === M) {
                        this.language = Ot.langSys, this.languageTag = Ot.tag;
                        break;
                      }
                    }
                    this.language || (this.language = this.script.defaultLangSys, this.languageTag = null), lt = !0;
                  }
                  if (lt && (this.features = {}, this.language))
                    for (var Vt = a(this.language.featureIndexes), se; !(se = Vt()).done; ) {
                      var $t = se.value, ue = this.table.featureList[$t], pe = this.substituteFeatureForVariations($t);
                      this.features[ue.tag] = pe || ue.feature;
                    }
                  return this.scriptTag;
                }, X.lookupsForFeatures = function(P, M) {
                  P === void 0 && (P = []);
                  for (var H = [], lt = a(P), vt; !(vt = lt()).done; ) {
                    var dt = vt.value, ct = this.features[dt];
                    if (ct)
                      for (var Ot = a(ct.lookupListIndexes), Vt; !(Vt = Ot()).done; ) {
                        var se = Vt.value;
                        M && M.indexOf(se) !== -1 || H.push({
                          feature: dt,
                          index: se,
                          lookup: this.table.lookupList.get(se)
                        });
                      }
                  }
                  return H.sort(function($t, ue) {
                    return $t.index - ue.index;
                  }), H;
                }, X.substituteFeatureForVariations = function(P) {
                  if (this.variationsIndex === -1)
                    return null;
                  for (var M = this.table.featureVariations.featureVariationRecords[this.variationsIndex], H = M.featureTableSubstitution.substitutions, lt = a(H), vt; !(vt = lt()).done; ) {
                    var dt = vt.value;
                    if (dt.featureIndex === P)
                      return dt.alternateFeatureTable;
                  }
                  return null;
                }, X.findVariationsIndex = function(P) {
                  var M = this.table.featureVariations;
                  if (!M)
                    return -1;
                  for (var H = M.featureVariationRecords, lt = 0; lt < H.length; lt++) {
                    var vt = H[lt].conditionSet.conditionTable;
                    if (this.variationConditionsMatch(vt, P))
                      return lt;
                  }
                  return -1;
                }, X.variationConditionsMatch = function(P, M) {
                  return P.every(function(H) {
                    var lt = H.axisIndex < M.length ? M[H.axisIndex] : 0;
                    return H.filterRangeMinValue <= lt && lt <= H.filterRangeMaxValue;
                  });
                }, X.applyFeatures = function(P, M, H) {
                  var lt = this.lookupsForFeatures(P);
                  this.applyLookups(lt, M, H);
                }, X.applyLookups = function(P, M, H) {
                  this.glyphs = M, this.positions = H, this.glyphIterator = new Ou(M);
                  for (var lt = a(P), vt; !(vt = lt()).done; ) {
                    var dt = vt.value, ct = dt.feature, Ot = dt.lookup;
                    for (this.currentFeature = ct, this.glyphIterator.reset(Ot.flags); this.glyphIterator.index < M.length; ) {
                      if (!(ct in this.glyphIterator.cur.features)) {
                        this.glyphIterator.next();
                        continue;
                      }
                      for (var Vt = a(Ot.subTables), se; !(se = Vt()).done; ) {
                        var $t = se.value, ue = this.applyLookup(Ot.lookupType, $t);
                        if (ue)
                          break;
                      }
                      this.glyphIterator.next();
                    }
                  }
                }, X.applyLookup = function(P, M) {
                  throw new Error("applyLookup must be implemented by subclasses");
                }, X.applyLookupList = function(P) {
                  for (var M = this.glyphIterator.options, H = this.glyphIterator.index, lt = a(P), vt; !(vt = lt()).done; ) {
                    var dt = vt.value;
                    this.glyphIterator.reset(M, H), this.glyphIterator.increment(dt.sequenceIndex);
                    var ct = this.table.lookupList.get(dt.lookupListIndex);
                    this.glyphIterator.reset(ct.flags, this.glyphIterator.index);
                    for (var Ot = a(ct.subTables), Vt; !(Vt = Ot()).done; ) {
                      var se = Vt.value;
                      if (this.applyLookup(ct.lookupType, se))
                        break;
                    }
                  }
                  return this.glyphIterator.reset(M, H), !0;
                }, X.coverageIndex = function(P, M) {
                  switch (M == null && (M = this.glyphIterator.cur.id), P.version) {
                    case 1:
                      return P.glyphs.indexOf(M);
                    case 2:
                      for (var H = a(P.rangeRecords), lt; !(lt = H()).done; ) {
                        var vt = lt.value;
                        if (vt.start <= M && M <= vt.end)
                          return vt.startCoverageIndex + M - vt.start;
                      }
                      break;
                  }
                  return -1;
                }, X.match = function(P, M, H, lt) {
                  for (var vt = this.glyphIterator.index, dt = this.glyphIterator.increment(P), ct = 0; ct < M.length && dt && H(M[ct], dt); )
                    lt && lt.push(this.glyphIterator.index), ct++, dt = this.glyphIterator.next();
                  return this.glyphIterator.index = vt, ct < M.length ? !1 : lt || !0;
                }, X.sequenceMatches = function(P, M) {
                  return this.match(P, M, function(H, lt) {
                    return H === lt.id;
                  });
                }, X.sequenceMatchIndices = function(P, M) {
                  var H = this;
                  return this.match(P, M, function(lt, vt) {
                    return H.currentFeature in vt.features ? lt === vt.id : !1;
                  }, []);
                }, X.coverageSequenceMatches = function(P, M) {
                  var H = this;
                  return this.match(P, M, function(lt, vt) {
                    return H.coverageIndex(lt, vt.id) >= 0;
                  });
                }, X.getClassID = function(P, M) {
                  switch (M.version) {
                    case 1:
                      var H = P - M.startGlyph;
                      if (H >= 0 && H < M.classValueArray.length)
                        return M.classValueArray[H];
                      break;
                    case 2:
                      for (var lt = a(M.classRangeRecord), vt; !(vt = lt()).done; ) {
                        var dt = vt.value;
                        if (dt.start <= P && P <= dt.end)
                          return dt.class;
                      }
                      break;
                  }
                  return 0;
                }, X.classSequenceMatches = function(P, M, H) {
                  var lt = this;
                  return this.match(P, M, function(vt, dt) {
                    return vt === lt.getClassID(dt.id, H);
                  });
                }, X.applyContext = function(P) {
                  switch (P.version) {
                    case 1:
                      var M = this.coverageIndex(P.coverage);
                      if (M === -1)
                        return !1;
                      for (var H = P.ruleSets[M], lt = a(H), vt; !(vt = lt()).done; ) {
                        var dt = vt.value;
                        if (this.sequenceMatches(1, dt.input))
                          return this.applyLookupList(dt.lookupRecords);
                      }
                      break;
                    case 2:
                      if (this.coverageIndex(P.coverage) === -1 || (M = this.getClassID(this.glyphIterator.cur.id, P.classDef), M === -1))
                        return !1;
                      H = P.classSet[M];
                      for (var ct = a(H), Ot; !(Ot = ct()).done; ) {
                        var Vt = Ot.value;
                        if (this.classSequenceMatches(1, Vt.classes, P.classDef))
                          return this.applyLookupList(Vt.lookupRecords);
                      }
                      break;
                    case 3:
                      if (this.coverageSequenceMatches(0, P.coverages))
                        return this.applyLookupList(P.lookupRecords);
                      break;
                  }
                  return !1;
                }, X.applyChainingContext = function(P) {
                  switch (P.version) {
                    case 1:
                      var M = this.coverageIndex(P.coverage);
                      if (M === -1)
                        return !1;
                      for (var H = P.chainRuleSets[M], lt = a(H), vt; !(vt = lt()).done; ) {
                        var dt = vt.value;
                        if (this.sequenceMatches(-dt.backtrack.length, dt.backtrack) && this.sequenceMatches(1, dt.input) && this.sequenceMatches(1 + dt.input.length, dt.lookahead))
                          return this.applyLookupList(dt.lookupRecords);
                      }
                      break;
                    case 2:
                      if (this.coverageIndex(P.coverage) === -1)
                        return !1;
                      M = this.getClassID(this.glyphIterator.cur.id, P.inputClassDef);
                      var ct = P.chainClassSet[M];
                      if (!ct)
                        return !1;
                      for (var Ot = a(ct), Vt; !(Vt = Ot()).done; ) {
                        var se = Vt.value;
                        if (this.classSequenceMatches(-se.backtrack.length, se.backtrack, P.backtrackClassDef) && this.classSequenceMatches(1, se.input, P.inputClassDef) && this.classSequenceMatches(1 + se.input.length, se.lookahead, P.lookaheadClassDef))
                          return this.applyLookupList(se.lookupRecords);
                      }
                      break;
                    case 3:
                      if (this.coverageSequenceMatches(-P.backtrackGlyphCount, P.backtrackCoverage) && this.coverageSequenceMatches(0, P.inputCoverage) && this.coverageSequenceMatches(P.inputGlyphCount, P.lookaheadCoverage))
                        return this.applyLookupList(P.lookupRecords);
                      break;
                  }
                  return !1;
                }, ft;
              }(), ma = /* @__PURE__ */ function() {
                function ft(et, P, M, H) {
                  if (M === void 0 && (M = []), this._font = et, this.codePoints = M, this.id = P, this.features = {}, Array.isArray(H))
                    for (var lt = 0; lt < H.length; lt++) {
                      var vt = H[lt];
                      this.features[vt] = !0;
                    }
                  else
                    typeof H == "object" && Object.assign(this.features, H);
                  this.ligatureID = null, this.ligatureComponent = null, this.isLigated = !1, this.cursiveAttachment = null, this.markAttachment = null, this.shaperInfo = null, this.substituted = !1, this.isMultiplied = !1;
                }
                var X = ft.prototype;
                return X.copy = function() {
                  return new ft(this._font, this.id, this.codePoints, this.features);
                }, i(ft, [{
                  key: "id",
                  get: function() {
                    return this._id;
                  },
                  set: function(P) {
                    this._id = P, this.substituted = !0;
                    var M = this._font.GDEF;
                    if (M && M.glyphClassDef) {
                      var H = no.prototype.getClassID(P, M.glyphClassDef);
                      this.isBase = H === 1, this.isLigature = H === 2, this.isMark = H === 3, this.markAttachmentType = M.markAttachClassDef ? no.prototype.getClassID(P, M.markAttachClassDef) : 0;
                    } else
                      this.isMark = this.codePoints.length > 0 && this.codePoints.every(D.isMark), this.isBase = !this.isMark, this.isLigature = this.codePoints.length > 1, this.markAttachmentType = 0;
                  }
                }]), ft;
              }(), fs = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                return X.planFeatures = function(P) {
                  P.add(["ljmo", "vjmo", "tjmo"], !1);
                }, X.assignFeatures = function(P, M) {
                  for (var H = 0, lt = 0; lt < M.length; ) {
                    var vt = void 0, dt = M[lt], ct = dt.codePoints[0], Ot = lo(ct), Vt = Qu[H][Ot];
                    switch (vt = Vt[0], H = Vt[1], vt) {
                      case xa:
                        P.font.hasGlyphForCodePoint(ct) || (lt = hs(M, lt, P.font));
                        break;
                      case _o:
                        lt = $u(M, lt, P.font);
                        break;
                      case t0:
                        _u(M, lt, P.font);
                        break;
                      case e0:
                        lt = tc(M, lt, P.font);
                        break;
                    }
                    lt++;
                  }
                }, X;
              }(Ta);
              U(fs, "zeroMarkWidths", "NONE");
              var ti = 44032, ls = 55204, Ru = ls - ti + 1, ao = 4352, io = 4449, za = 4519, Lu = 19, oo = 21, Si = 28, Nu = ao + Lu - 1, Mu = io + oo - 1, ku = za + Si - 1, us = 9676, Uu = function(X) {
                return 4352 <= X && X <= 4447 || 43360 <= X && X <= 43388;
              }, zu = function(X) {
                return 4448 <= X && X <= 4519 || 55216 <= X && X <= 55238;
              }, Wu = function(X) {
                return 4520 <= X && X <= 4607 || 55243 <= X && X <= 55291;
              }, Hu = function(X) {
                return 12334 <= X && X <= 12335;
              }, ju = function(X) {
                return ti <= X && X <= ls;
              }, Gu = function(X) {
                return X - ti < Ru && (X - ti) % Si === 0;
              }, Vu = function(X) {
                return ao <= X && X <= Nu;
              }, Xu = function(X) {
                return io <= X && X <= Mu;
              }, Zu = function(X) {
                return 1 <= X && X <= ku;
              }, Yu = 0, Ku = 1, so = 2, qo = 3, fo = 4, cs = 5, Ju = 6;
              function lo(ft) {
                return Uu(ft) ? Ku : zu(ft) ? so : Wu(ft) ? qo : Gu(ft) ? fo : ju(ft) ? cs : Hu(ft) ? Ju : Yu;
              }
              var kn = 0, xa = 1, _o = 2, t0 = 4, e0 = 5, Qu = [
                //       X                 L                 V                T                  LV                LVT               M
                // State 0: start state
                [[kn, 0], [kn, 1], [kn, 0], [kn, 0], [xa, 2], [xa, 3], [e0, 0]],
                // State 1: <L>
                [[kn, 0], [kn, 1], [_o, 2], [kn, 0], [xa, 2], [xa, 3], [e0, 0]],
                // State 2: <L,V> or <LV>
                [[kn, 0], [kn, 1], [kn, 0], [_o, 3], [xa, 2], [xa, 3], [t0, 0]],
                // State 3: <L,V,T> or <LVT>
                [[kn, 0], [kn, 1], [kn, 0], [kn, 0], [xa, 2], [xa, 3], [t0, 0]]
              ];
              function Ai(ft, X, et) {
                return new ma(ft, ft.glyphForCodePoint(X).id, [X], et);
              }
              function hs(ft, X, et) {
                var P = ft[X], M = P.codePoints[0], H = M - ti, lt = za + H % Si;
                H = H / Si | 0;
                var vt = ao + H / oo | 0, dt = io + H % oo;
                if (!et.hasGlyphForCodePoint(vt) || !et.hasGlyphForCodePoint(dt) || lt !== za && !et.hasGlyphForCodePoint(lt))
                  return X;
                var ct = Ai(et, vt, P.features);
                ct.features.ljmo = !0;
                var Ot = Ai(et, dt, P.features);
                Ot.features.vjmo = !0;
                var Vt = [ct, Ot];
                if (lt > za) {
                  var se = Ai(et, lt, P.features);
                  se.features.tjmo = !0, Vt.push(se);
                }
                return ft.splice.apply(ft, [X, 1].concat(Vt)), X + Vt.length - 1;
              }
              function $u(ft, X, et) {
                var P = ft[X], M = ft[X].codePoints[0], H = lo(M), lt = ft[X - 1].codePoints[0], vt = lo(lt), dt, ct, Ot, Vt;
                if (vt === fo && H === qo)
                  dt = lt, Vt = P;
                else {
                  H === so ? (ct = ft[X - 1], Ot = P) : (ct = ft[X - 2], Ot = ft[X - 1], Vt = P);
                  var se = ct.codePoints[0], $t = Ot.codePoints[0];
                  Vu(se) && Xu($t) && (dt = ti + ((se - ao) * oo + ($t - io)) * Si);
                }
                var ue = Vt && Vt.codePoints[0] || za;
                if (dt != null && (ue === za || Zu(ue))) {
                  var pe = dt + (ue - za);
                  if (et.hasGlyphForCodePoint(pe)) {
                    var Te = vt === so ? 3 : 2;
                    return ft.splice(X - Te + 1, Te, Ai(et, pe, P.features)), X - Te + 1;
                  }
                }
                return ct && (ct.features.ljmo = !0), Ot && (Ot.features.vjmo = !0), Vt && (Vt.features.tjmo = !0), vt === fo ? (hs(ft, X - 1, et), X + 1) : X;
              }
              function qu(ft) {
                switch (lo(ft)) {
                  case fo:
                  case cs:
                    return 1;
                  case so:
                    return 2;
                  case qo:
                    return 3;
                }
              }
              function _u(ft, X, et) {
                var P = ft[X], M = ft[X].codePoints[0];
                if (et.glyphForCodePoint(M).advanceWidth !== 0) {
                  var H = ft[X - 1].codePoints[0], lt = qu(H);
                  return ft.splice(X, 1), ft.splice(X - lt, 0, P);
                }
              }
              function tc(ft, X, et) {
                var P = ft[X], M = ft[X].codePoints[0];
                if (et.hasGlyphForCodePoint(us)) {
                  var H = Ai(et, us, P.features), lt = et.glyphForCodePoint(M).advanceWidth === 0 ? X : X + 1;
                  ft.splice(lt, 0, H), X++;
                }
                return X;
              }
              var ec = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 14, 15, 16, 17], [0, 0, 0, 18, 19, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 28, 29, 30, 31, 32, 33, 0, 34, 0, 0, 35, 36, 0, 0, 37, 0], [0, 0, 0, 38, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 39, 0, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 12, 43, 0, 0, 0, 0], [0, 0, 0, 0, 43, 44, 44, 8, 9, 0, 0, 0, 0, 0, 43, 0, 0, 0, 0], [0, 0, 0, 45, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 51, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 52, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 55, 56, 57, 58, 0, 59, 0, 0, 60, 61, 0, 0, 62, 0], [0, 0, 0, 4, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 63, 64, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 63, 0, 0], [0, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 11, 12, 13, 0, 2, 16, 0], [0, 0, 0, 18, 65, 20, 21, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 0, 0], [0, 0, 0, 69, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 73, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 75, 0, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 25, 79, 0, 0, 0, 0], [0, 0, 0, 18, 19, 20, 74, 22, 23, 0, 24, 0, 0, 25, 26, 0, 0, 27, 0], [0, 0, 0, 81, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 87, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 88, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 18, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 89, 90, 0, 0, 76, 77, 0, 23, 0, 24, 0, 0, 0, 78, 0, 89, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 0, 0], [0, 0, 0, 94, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 96, 0, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 35, 100, 0, 0, 0, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 102, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 108, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 109, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 28, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 110, 111, 0, 0, 97, 98, 0, 33, 0, 34, 0, 0, 0, 99, 0, 110, 0, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 0, 0], [0, 0, 0, 0, 5, 7, 7, 8, 9, 0, 10, 0, 0, 0, 13, 0, 0, 16, 0], [0, 0, 0, 115, 116, 117, 118, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 39, 0, 122, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 124, 64, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 0, 0], [0, 39, 0, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 46, 47, 48, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 47, 47, 49, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 128, 127, 127, 49, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 129, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 50, 0, 0, 0, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 134, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 135, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 136, 0, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 60, 140, 0, 0, 0, 0], [0, 0, 0, 0, 140, 141, 141, 57, 58, 0, 0, 0, 0, 0, 140, 0, 0, 0, 0], [0, 0, 0, 142, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 148, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 149, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 53, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 150, 151, 0, 0, 137, 138, 0, 58, 0, 59, 0, 0, 0, 139, 0, 150, 0, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 157, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 3, 4, 5, 159, 160, 8, 161, 0, 162, 0, 11, 12, 163, 0, 75, 16, 0], [0, 0, 0, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 0, 165, 0, 0, 0, 0], [0, 124, 64, 0, 0, 40, 164, 0, 9, 0, 10, 0, 0, 0, 42, 0, 124, 0, 0], [0, 0, 0, 0, 0, 70, 70, 0, 71, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 71, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 167, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 168, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 19, 74, 74, 22, 23, 0, 24, 0, 0, 0, 26, 0, 0, 27, 0], [0, 0, 0, 0, 79, 80, 80, 22, 23, 0, 0, 0, 0, 0, 79, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 172, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 75, 0, 176, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 178, 90, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 178, 0, 0], [0, 75, 0, 0, 0, 175, 179, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 180, 180, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 82, 83, 84, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 83, 83, 85, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 182, 181, 181, 85, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 183, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 86, 0, 0, 0, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 188, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 191, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 0, 194, 0, 0, 0, 0], [0, 178, 90, 0, 0, 76, 193, 0, 23, 0, 24, 0, 0, 0, 78, 0, 178, 0, 0], [0, 0, 0, 0, 29, 95, 31, 32, 33, 0, 34, 0, 0, 0, 36, 0, 0, 37, 0], [0, 0, 0, 0, 100, 101, 101, 32, 33, 0, 0, 0, 0, 0, 100, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 198, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 96, 0, 202, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 204, 111, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 204, 0, 0], [0, 96, 0, 0, 0, 201, 205, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 206, 206, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 103, 104, 105, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 104, 104, 106, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 208, 207, 207, 106, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 209, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 107, 0, 0, 0, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 214, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 217, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 0, 220, 0, 0, 0, 0], [0, 204, 111, 0, 0, 97, 219, 0, 33, 0, 34, 0, 0, 0, 99, 0, 204, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 223, 0, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 119, 225, 0, 0, 0, 0], [0, 0, 0, 115, 116, 117, 222, 8, 9, 0, 10, 0, 0, 119, 120, 0, 0, 16, 0], [0, 0, 0, 115, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 226, 64, 0, 0, 40, 224, 0, 9, 0, 10, 0, 0, 0, 42, 0, 226, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 39, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 44, 44, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 229, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 39, 0, 122, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 39, 0, 0], [0, 0, 0, 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 231, 231, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 232, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 130, 131, 132, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 131, 131, 133, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 234, 233, 233, 133, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 235, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 54, 56, 56, 57, 58, 0, 59, 0, 0, 0, 61, 0, 0, 62, 0], [0, 0, 0, 240, 241, 242, 243, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 136, 0, 247, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 249, 151, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 249, 0, 0], [0, 136, 0, 0, 0, 246, 250, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 251, 251, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 143, 144, 145, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 144, 144, 146, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 253, 252, 252, 146, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 254, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 147, 0, 0, 0, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 259, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 262, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 0, 265, 0, 0, 0, 0], [0, 249, 151, 0, 0, 137, 264, 0, 58, 0, 59, 0, 0, 0, 139, 0, 249, 0, 0], [0, 0, 0, 221, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 158, 225, 0, 0, 0, 0], [0, 0, 0, 155, 116, 156, 222, 8, 9, 0, 10, 0, 0, 158, 120, 0, 0, 16, 0], [0, 0, 0, 155, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 43, 266, 266, 8, 161, 0, 24, 0, 0, 12, 267, 0, 0, 0, 0], [0, 75, 0, 176, 43, 268, 268, 269, 161, 0, 24, 0, 0, 0, 267, 0, 75, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 271, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 272, 0, 0, 0, 0, 0, 0, 0, 0], [0, 273, 274, 0, 0, 40, 41, 0, 9, 0, 10, 0, 0, 0, 42, 0, 273, 0, 0], [0, 0, 0, 40, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 121, 275, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 166, 0, 0, 0, 0, 72, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 276, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 279, 0, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 173, 281, 0, 0, 0, 0], [0, 0, 0, 169, 170, 171, 278, 22, 23, 0, 24, 0, 0, 173, 174, 0, 0, 27, 0], [0, 0, 0, 169, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 282, 90, 0, 0, 76, 280, 0, 23, 0, 24, 0, 0, 0, 78, 0, 282, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 75, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 80, 80, 22, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 285, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 75, 0, 176, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 75, 0, 0], [0, 0, 0, 0, 0, 0, 0, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 287, 287, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 288, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 184, 185, 186, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 185, 185, 187, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 290, 289, 289, 187, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 291, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 277, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 192, 281, 0, 0, 0, 0], [0, 0, 0, 189, 170, 190, 278, 22, 23, 0, 24, 0, 0, 192, 174, 0, 0, 27, 0], [0, 0, 0, 189, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 76, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 175, 296, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 299, 0, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 199, 301, 0, 0, 0, 0], [0, 0, 0, 195, 196, 197, 298, 32, 33, 0, 34, 0, 0, 199, 200, 0, 0, 37, 0], [0, 0, 0, 195, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 302, 111, 0, 0, 97, 300, 0, 33, 0, 34, 0, 0, 0, 99, 0, 302, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 96, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 101, 101, 32, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 305, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 96, 0, 202, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 96, 0, 0], [0, 0, 0, 0, 0, 0, 0, 32, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 307, 307, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 308, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 210, 211, 212, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 211, 211, 213, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 310, 309, 309, 213, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 311, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 297, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 218, 301, 0, 0, 0, 0], [0, 0, 0, 215, 196, 216, 298, 32, 33, 0, 34, 0, 0, 218, 200, 0, 0, 37, 0], [0, 0, 0, 215, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 97, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 201, 316, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 116, 222, 222, 8, 9, 0, 10, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 9, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 320, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 223, 0, 323, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 0, 0, 121, 324, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 325, 318, 326, 327, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 64, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 9, 0, 0, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 228, 121, 0, 9, 0, 10, 0, 0, 230, 0, 0, 0, 0, 0], [0, 0, 0, 227, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 49, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 46, 0, 0], [0, 0, 0, 0, 0, 329, 329, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 330, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 236, 237, 238, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 237, 237, 239, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 332, 331, 331, 239, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 333, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 337, 0, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 244, 339, 0, 0, 0, 0], [0, 0, 0, 240, 241, 242, 336, 57, 58, 0, 59, 0, 0, 244, 245, 0, 0, 62, 0], [0, 0, 0, 240, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 340, 151, 0, 0, 137, 338, 0, 58, 0, 59, 0, 0, 0, 139, 0, 340, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 136, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 141, 141, 57, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 343, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 136, 0, 247, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 136, 0, 0], [0, 0, 0, 0, 0, 0, 0, 57, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 345, 345, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 346, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 255, 256, 257, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 256, 256, 258, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 348, 347, 347, 258, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 349, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 335, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 263, 339, 0, 0, 0, 0], [0, 0, 0, 260, 241, 261, 336, 57, 58, 0, 59, 0, 0, 263, 245, 0, 0, 62, 0], [0, 0, 0, 260, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 137, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 246, 354, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 126, 126, 8, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 355, 90, 0, 0, 121, 125, 0, 9, 0, 10, 0, 0, 0, 42, 0, 355, 0, 0], [0, 0, 0, 0, 0, 356, 356, 269, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 357, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 270, 0, 0, 0, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 363, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 366, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 40, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 170, 278, 278, 22, 23, 0, 24, 0, 0, 0, 174, 0, 0, 27, 0], [0, 0, 0, 0, 281, 80, 80, 22, 23, 0, 0, 0, 0, 0, 281, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 372, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 279, 0, 375, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 0, 0, 175, 376, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 377, 370, 378, 379, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 90, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 23, 0, 0, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 284, 175, 0, 23, 0, 24, 0, 0, 286, 0, 0, 0, 0, 0], [0, 0, 0, 283, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 85, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 82, 0, 0], [0, 0, 0, 0, 0, 381, 381, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 382, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 292, 293, 294, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 293, 293, 295, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 0, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 384, 383, 383, 295, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 385, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 76, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 196, 298, 298, 32, 33, 0, 34, 0, 0, 0, 200, 0, 0, 37, 0], [0, 0, 0, 0, 301, 101, 101, 32, 33, 0, 0, 0, 0, 0, 301, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 390, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 299, 0, 393, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 0, 0, 201, 394, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 395, 388, 396, 397, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 111, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 33, 0, 0, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 304, 201, 0, 33, 0, 34, 0, 0, 306, 0, 0, 0, 0, 0], [0, 0, 0, 303, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 106, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 103, 0, 0], [0, 0, 0, 0, 0, 399, 399, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 400, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 312, 313, 314, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 313, 313, 315, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 0, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 402, 401, 401, 315, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 403, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 97, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 407, 0, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 321, 409, 0, 0, 0, 0], [0, 0, 0, 317, 318, 319, 406, 8, 9, 0, 10, 0, 0, 321, 322, 0, 0, 16, 0], [0, 0, 0, 317, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 410, 64, 0, 0, 40, 408, 0, 9, 0, 10, 0, 0, 0, 42, 0, 410, 0, 0], [0, 223, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 223, 0, 323, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 223, 0, 0], [0, 0, 0, 405, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 328, 409, 0, 0, 0, 0], [0, 0, 0, 325, 318, 326, 406, 8, 9, 0, 10, 0, 0, 328, 322, 0, 0, 16, 0], [0, 0, 0, 325, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 133, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 130, 0, 0], [0, 0, 0, 0, 0, 411, 411, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 412, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 40, 121, 334, 0, 9, 0, 10, 0, 0, 0, 42, 0, 0, 0, 0], [0, 0, 0, 0, 413, 0, 0, 0, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 241, 336, 336, 57, 58, 0, 59, 0, 0, 0, 245, 0, 0, 62, 0], [0, 0, 0, 0, 339, 141, 141, 57, 58, 0, 0, 0, 0, 0, 339, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 417, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 337, 0, 420, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 0, 0, 246, 421, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 422, 415, 423, 424, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 151, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 58, 0, 0, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 342, 246, 0, 58, 0, 59, 0, 0, 344, 0, 0, 0, 0, 0], [0, 0, 0, 341, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 146, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 143, 0, 0], [0, 0, 0, 0, 0, 426, 426, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 427, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 350, 351, 352, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 351, 351, 353, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 0, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 429, 428, 428, 353, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 430, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 137, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 434, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 180, 180, 269, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 358, 359, 360, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 359, 359, 361, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 437, 436, 436, 361, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 438, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 443, 274, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 443, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 367, 225, 0, 0, 0, 0], [0, 0, 0, 364, 116, 365, 445, 8, 161, 0, 162, 0, 0, 367, 120, 0, 0, 16, 0], [0, 0, 0, 364, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 448, 0, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 373, 450, 0, 0, 0, 0], [0, 0, 0, 369, 370, 371, 447, 22, 23, 0, 24, 0, 0, 373, 374, 0, 0, 27, 0], [0, 0, 0, 369, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 451, 90, 0, 0, 76, 449, 0, 23, 0, 24, 0, 0, 0, 78, 0, 451, 0, 0], [0, 279, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 279, 0, 375, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 279, 0, 0], [0, 0, 0, 446, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 380, 450, 0, 0, 0, 0], [0, 0, 0, 377, 370, 378, 447, 22, 23, 0, 24, 0, 0, 380, 374, 0, 0, 27, 0], [0, 0, 0, 377, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 187, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 184, 0, 0], [0, 0, 0, 0, 0, 452, 452, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 453, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 76, 175, 386, 0, 23, 0, 24, 0, 0, 0, 78, 0, 0, 0, 0], [0, 0, 0, 0, 454, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 457, 0, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 391, 459, 0, 0, 0, 0], [0, 0, 0, 387, 388, 389, 456, 32, 33, 0, 34, 0, 0, 391, 392, 0, 0, 37, 0], [0, 0, 0, 387, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 460, 111, 0, 0, 97, 458, 0, 33, 0, 34, 0, 0, 0, 99, 0, 460, 0, 0], [0, 299, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 299, 0, 393, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 299, 0, 0], [0, 0, 0, 455, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 398, 459, 0, 0, 0, 0], [0, 0, 0, 395, 388, 396, 456, 32, 33, 0, 34, 0, 0, 398, 392, 0, 0, 37, 0], [0, 0, 0, 395, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 213, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 210, 0, 0], [0, 0, 0, 0, 0, 461, 461, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 462, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 97, 201, 404, 0, 33, 0, 34, 0, 0, 0, 99, 0, 0, 0, 0], [0, 0, 0, 0, 463, 0, 0, 0, 33, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 318, 406, 406, 8, 9, 0, 10, 0, 0, 0, 322, 0, 0, 16, 0], [0, 0, 0, 0, 409, 44, 44, 8, 9, 0, 0, 0, 0, 0, 409, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 467, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 407, 0, 470, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 0, 0, 121, 471, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 472, 465, 473, 474, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 239, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 236, 0, 0], [0, 0, 0, 0, 0, 0, 476, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 479, 0, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 418, 481, 0, 0, 0, 0], [0, 0, 0, 414, 415, 416, 478, 57, 58, 0, 59, 0, 0, 418, 419, 0, 0, 62, 0], [0, 0, 0, 414, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 482, 151, 0, 0, 137, 480, 0, 58, 0, 59, 0, 0, 0, 139, 0, 482, 0, 0], [0, 337, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 337, 0, 420, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 337, 0, 0], [0, 0, 0, 477, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 425, 481, 0, 0, 0, 0], [0, 0, 0, 422, 415, 423, 478, 57, 58, 0, 59, 0, 0, 425, 419, 0, 0, 62, 0], [0, 0, 0, 422, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 258, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 0], [0, 0, 0, 0, 0, 483, 483, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 484, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 137, 246, 431, 0, 58, 0, 59, 0, 0, 0, 139, 0, 0, 0, 0], [0, 0, 0, 0, 485, 0, 0, 0, 58, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 444, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 435, 225, 0, 0, 0, 0], [0, 0, 0, 432, 116, 433, 445, 8, 161, 0, 162, 0, 0, 435, 120, 0, 0, 16, 0], [0, 0, 0, 432, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 0, 486, 486, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 487, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 439, 440, 441, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 440, 440, 442, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 489, 488, 488, 442, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 490, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 497, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 0, 116, 445, 445, 8, 161, 0, 162, 0, 0, 0, 120, 0, 0, 16, 0], [0, 0, 0, 0, 225, 44, 44, 8, 161, 0, 0, 0, 0, 0, 225, 0, 0, 0, 0], [0, 0, 0, 0, 370, 447, 447, 22, 23, 0, 24, 0, 0, 0, 374, 0, 0, 27, 0], [0, 0, 0, 0, 450, 80, 80, 22, 23, 0, 0, 0, 0, 0, 450, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 502, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 448, 0, 505, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 0, 0, 175, 506, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 507, 500, 508, 509, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 295, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 292, 0, 0], [0, 0, 0, 0, 0, 0, 511, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 388, 456, 456, 32, 33, 0, 34, 0, 0, 0, 392, 0, 0, 37, 0], [0, 0, 0, 0, 459, 101, 101, 32, 33, 0, 0, 0, 0, 0, 459, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 515, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 457, 0, 518, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 0, 0, 201, 519, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 520, 513, 521, 522, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 315, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 312, 0, 0], [0, 0, 0, 0, 0, 0, 524, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 527, 0, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 468, 529, 0, 0, 0, 0], [0, 0, 0, 464, 465, 466, 526, 8, 9, 0, 10, 0, 0, 468, 469, 0, 0, 16, 0], [0, 0, 0, 464, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 530, 64, 0, 0, 40, 528, 0, 9, 0, 10, 0, 0, 0, 42, 0, 530, 0, 0], [0, 407, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 407, 0, 470, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 407, 0, 0], [0, 0, 0, 525, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 475, 529, 0, 0, 0, 0], [0, 0, 0, 472, 465, 473, 526, 8, 9, 0, 10, 0, 0, 475, 469, 0, 0, 16, 0], [0, 0, 0, 472, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 40, 0, 0], [0, 0, 0, 0, 415, 478, 478, 57, 58, 0, 59, 0, 0, 0, 419, 0, 0, 62, 0], [0, 0, 0, 0, 481, 141, 141, 57, 58, 0, 0, 0, 0, 0, 481, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 534, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 479, 0, 537, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 0, 0, 246, 538, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 539, 532, 540, 541, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 353, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 350, 0, 0], [0, 0, 0, 0, 0, 0, 543, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 361, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 358, 0, 0], [0, 0, 0, 0, 0, 544, 544, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 545, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 491, 492, 493, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 492, 492, 494, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 547, 546, 546, 494, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 548, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 274, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 161, 0, 0, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 496, 368, 0, 161, 0, 162, 0, 0, 498, 0, 0, 0, 0, 0], [0, 0, 0, 495, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 553, 0, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 503, 555, 0, 0, 0, 0], [0, 0, 0, 499, 500, 501, 552, 22, 23, 0, 24, 0, 0, 503, 504, 0, 0, 27, 0], [0, 0, 0, 499, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 556, 90, 0, 0, 76, 554, 0, 23, 0, 24, 0, 0, 0, 78, 0, 556, 0, 0], [0, 448, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 448, 0, 505, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 448, 0, 0], [0, 0, 0, 551, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 510, 555, 0, 0, 0, 0], [0, 0, 0, 507, 500, 508, 552, 22, 23, 0, 24, 0, 0, 510, 504, 0, 0, 27, 0], [0, 0, 0, 507, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 76, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 559, 0, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 516, 561, 0, 0, 0, 0], [0, 0, 0, 512, 513, 514, 558, 32, 33, 0, 34, 0, 0, 516, 517, 0, 0, 37, 0], [0, 0, 0, 512, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 562, 111, 0, 0, 97, 560, 0, 33, 0, 34, 0, 0, 0, 99, 0, 562, 0, 0], [0, 457, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 457, 0, 518, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 457, 0, 0], [0, 0, 0, 557, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 523, 561, 0, 0, 0, 0], [0, 0, 0, 520, 513, 521, 558, 32, 33, 0, 34, 0, 0, 523, 517, 0, 0, 37, 0], [0, 0, 0, 520, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 97, 0, 0], [0, 0, 0, 0, 465, 526, 526, 8, 9, 0, 10, 0, 0, 0, 469, 0, 0, 16, 0], [0, 0, 0, 0, 529, 44, 44, 8, 9, 0, 0, 0, 0, 0, 529, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 565, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 527, 0, 567, 0, 123, 123, 8, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 0, 0, 121, 568, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 569, 66, 570, 571, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 575, 0, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 535, 577, 0, 0, 0, 0], [0, 0, 0, 531, 532, 533, 574, 57, 58, 0, 59, 0, 0, 535, 536, 0, 0, 62, 0], [0, 0, 0, 531, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 578, 151, 0, 0, 137, 576, 0, 58, 0, 59, 0, 0, 0, 139, 0, 578, 0, 0], [0, 479, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 479, 0, 537, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 479, 0, 0], [0, 0, 0, 573, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 542, 577, 0, 0, 0, 0], [0, 0, 0, 539, 532, 540, 574, 57, 58, 0, 59, 0, 0, 542, 536, 0, 0, 62, 0], [0, 0, 0, 539, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 137, 0, 0], [0, 0, 0, 0, 0, 0, 0, 442, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 439, 0, 0], [0, 0, 0, 0, 0, 579, 579, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 580, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 549, 368, 550, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 0, 368, 368, 0, 161, 0, 162, 0, 0, 0, 362, 0, 0, 0, 0], [0, 0, 0, 0, 581, 0, 0, 0, 161, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 500, 552, 552, 22, 23, 0, 24, 0, 0, 0, 504, 0, 0, 27, 0], [0, 0, 0, 0, 555, 80, 80, 22, 23, 0, 0, 0, 0, 0, 555, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 584, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 553, 0, 586, 0, 177, 177, 22, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 0, 0, 175, 587, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 588, 91, 589, 590, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 0, 513, 558, 558, 32, 33, 0, 34, 0, 0, 0, 517, 0, 0, 37, 0], [0, 0, 0, 0, 561, 101, 101, 32, 33, 0, 0, 0, 0, 0, 561, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 594, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 559, 0, 596, 0, 203, 203, 32, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 0, 0, 201, 597, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 598, 112, 599, 600, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 566, 165, 0, 0, 0, 0], [0, 0, 0, 563, 66, 564, 67, 8, 9, 0, 10, 0, 0, 566, 68, 0, 0, 16, 0], [0, 0, 0, 563, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 527, 0, 0, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 527, 0, 567, 0, 121, 121, 0, 9, 0, 10, 0, 0, 0, 42, 0, 527, 0, 0], [0, 0, 0, 602, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 165, 44, 44, 8, 9, 0, 0, 0, 0, 572, 165, 0, 0, 0, 0], [0, 0, 0, 569, 66, 570, 67, 8, 9, 0, 10, 0, 0, 572, 68, 0, 0, 16, 0], [0, 0, 0, 569, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 0, 532, 574, 574, 57, 58, 0, 59, 0, 0, 0, 536, 0, 0, 62, 0], [0, 0, 0, 0, 577, 141, 141, 57, 58, 0, 0, 0, 0, 0, 577, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 605, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 575, 0, 607, 0, 248, 248, 57, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 0, 0, 246, 608, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 609, 152, 610, 611, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 494, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 491, 0, 0], [0, 0, 0, 0, 0, 0, 613, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 585, 194, 0, 0, 0, 0], [0, 0, 0, 582, 91, 583, 92, 22, 23, 0, 24, 0, 0, 585, 93, 0, 0, 27, 0], [0, 0, 0, 582, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 553, 0, 0, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 553, 0, 586, 0, 175, 175, 0, 23, 0, 24, 0, 0, 0, 78, 0, 553, 0, 0], [0, 0, 0, 614, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 194, 80, 80, 22, 23, 0, 0, 0, 0, 591, 194, 0, 0, 0, 0], [0, 0, 0, 588, 91, 589, 92, 22, 23, 0, 24, 0, 0, 591, 93, 0, 0, 27, 0], [0, 0, 0, 588, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 595, 220, 0, 0, 0, 0], [0, 0, 0, 592, 112, 593, 113, 32, 33, 0, 34, 0, 0, 595, 114, 0, 0, 37, 0], [0, 0, 0, 592, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 559, 0, 0, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 559, 0, 596, 0, 201, 201, 0, 33, 0, 34, 0, 0, 0, 99, 0, 559, 0, 0], [0, 0, 0, 615, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 220, 101, 101, 32, 33, 0, 0, 0, 0, 601, 220, 0, 0, 0, 0], [0, 0, 0, 598, 112, 599, 113, 32, 33, 0, 34, 0, 0, 601, 114, 0, 0, 37, 0], [0, 0, 0, 598, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 66, 67, 67, 8, 9, 0, 10, 0, 0, 0, 68, 0, 0, 16, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 606, 265, 0, 0, 0, 0], [0, 0, 0, 603, 152, 604, 153, 57, 58, 0, 59, 0, 0, 606, 154, 0, 0, 62, 0], [0, 0, 0, 603, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 575, 0, 0, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 575, 0, 607, 0, 246, 246, 0, 58, 0, 59, 0, 0, 0, 139, 0, 575, 0, 0], [0, 0, 0, 616, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 265, 141, 141, 57, 58, 0, 0, 0, 0, 612, 265, 0, 0, 0, 0], [0, 0, 0, 609, 152, 610, 153, 57, 58, 0, 59, 0, 0, 612, 154, 0, 0, 62, 0], [0, 0, 0, 609, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 549, 0, 0], [0, 0, 0, 0, 91, 92, 92, 22, 23, 0, 24, 0, 0, 0, 93, 0, 0, 27, 0], [0, 0, 0, 0, 112, 113, 113, 32, 33, 0, 34, 0, 0, 0, 114, 0, 0, 37, 0], [0, 0, 0, 0, 152, 153, 153, 57, 58, 0, 59, 0, 0, 0, 154, 0, 0, 62, 0]], rc = [!1, !0, !0, !0, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !1, !0, !1, !0, !0, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !1, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !0, !1, !1, !0, !1, !0, !0, !1, !0, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !0, !1, !0, !1, !0, !0, !1, !1, !0, !0, !1, !1, !0, !0, !0, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !1, !0, !0, !0, !0, !1, !1, !1, !1, !1, !1, !1, !0, !0, !1, !1, !0, !0, !1, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !1, !0, !0, !1, !1, !1, !1, !1, !0, !0, !1, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !0, !1, !1, !1, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !1, !0, !0, !1, !0, !0, !0], nc = [[], ["broken_cluster"], ["consonant_syllable"], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["consonant_syllable"], ["broken_cluster"], ["symbol_cluster"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["broken_cluster"], ["broken_cluster"], ["consonant_syllable", "broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["symbol_cluster"], [], ["symbol_cluster"], ["symbol_cluster"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], [], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["symbol_cluster"], ["symbol_cluster"], ["symbol_cluster"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], [], ["consonant_syllable"], ["consonant_syllable"], [], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], [], ["vowel_syllable"], ["vowel_syllable"], [], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], [], [], ["broken_cluster"], ["broken_cluster"], [], [], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["broken_cluster"], ["symbol_cluster"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], [], [], ["consonant_syllable"], ["consonant_syllable"], [], [], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], [], [], ["vowel_syllable"], ["vowel_syllable"], [], [], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], [], [], [], ["broken_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], ["standalone_cluster"], ["standalone_cluster"], [], [], ["standalone_cluster"], ["standalone_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], [], [], [], ["consonant_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], [], [], [], ["vowel_syllable"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], [], [], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], ["standalone_cluster"], [], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], [], [], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], [], [], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], [], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], [], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], [], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], [], [], [], [], ["consonant_syllable", "broken_cluster"], ["consonant_syllable", "broken_cluster"], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], [], [], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], ["consonant_syllable"], [], ["consonant_syllable"], ["consonant_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], ["vowel_syllable"], [], ["vowel_syllable"], ["vowel_syllable"], ["broken_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], ["standalone_cluster"], [], ["standalone_cluster"], ["standalone_cluster"], [], ["consonant_syllable"], ["vowel_syllable"], ["standalone_cluster"]], ac = {
                stateTable: ec,
                accepting: rc,
                tags: nc
              }, ic = ["O", "IND", "S", "GB", "B", "FM", "CGJ", "VMAbv", "VMPst", "VAbv", "VPst", "CMBlw", "VPre", "VBlw", "H", "VMBlw", "CMAbv", "MBlw", "CS", "R", "SUB", "MPst", "MPre", "FAbv", "FPst", "FBlw", "null", "SMAbv", "SMBlw", "VMPre", "ZWNJ", "ZWJ", "WJ", "M", "VS", "N", "HN", "MAbv"], oc = {
                2507: [2503, 2494],
                2508: [2503, 2519],
                2888: [2887, 2902],
                2891: [2887, 2878],
                2892: [2887, 2903],
                3018: [3014, 3006],
                3019: [3015, 3006],
                3020: [3014, 3031],
                3144: [3142, 3158],
                3264: [3263, 3285],
                3271: [3270, 3285],
                3272: [3270, 3286],
                3274: [3270, 3266],
                3275: [3270, 3266, 3285],
                3402: [3398, 3390],
                3403: [3399, 3390],
                3404: [3398, 3415],
                3546: [3545, 3530],
                3548: [3545, 3535],
                3549: [3545, 3535, 3530],
                3550: [3545, 3551],
                3635: [3661, 3634],
                3763: [3789, 3762],
                3955: [3953, 3954],
                3957: [3953, 3956],
                3958: [4018, 3968],
                3959: [4018, 3953, 3968],
                3960: [4019, 3968],
                3961: [4019, 3953, 3968],
                3969: [3953, 3968],
                6971: [6970, 6965],
                6973: [6972, 6965],
                6976: [6974, 6965],
                6977: [6975, 6965],
                6979: [6978, 6965],
                69934: [69937, 69927],
                69935: [69938, 69927],
                70475: [70471, 70462],
                70476: [70471, 70487],
                70843: [70841, 70842],
                70844: [70841, 70832],
                70846: [70841, 70845],
                71098: [71096, 71087],
                71099: [71097, 71087]
              }, sc = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [2, 2, 3, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 2, 0, 0, 24, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 26, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 27, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 39, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 9, 0, 0, 12, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 18, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 0, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 4, 4, 5, 0, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 49, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 21, 22, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 0, 0, 0, 0, 0, 0, 14, 0, 0, 0, 0, 0, 0, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 0, 11, 12, 0, 14, 0, 16, 0, 0, 0, 11, 0, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 27, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 28, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 33, 0, 0, 36, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 41, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 0, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 53, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 44, 45, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 0, 0, 0, 0, 0, 0, 38, 0, 0, 0, 0, 0, 0, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 0, 35, 36, 0, 38, 0, 40, 0, 0, 0, 35, 0, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 0, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 5, 0, 6, 7, 8, 9, 48, 11, 12, 13, 14, 48, 16, 0, 0, 18, 11, 19, 20, 21, 22, 0, 0, 0, 23, 0, 0, 0, 0, 0, 0, 0, 25], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 51, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 54, 0, 0], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 0, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 29, 0, 30, 31, 32, 33, 52, 35, 36, 37, 38, 52, 40, 0, 0, 41, 35, 42, 43, 44, 45, 0, 0, 0, 46, 0, 0, 0, 0, 0, 0, 0, 47], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 50, 0, 51, 0]], fc = [!1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !1, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0, !0], lc = [[], ["broken_cluster"], ["independent_cluster"], ["symbol_cluster"], ["standard_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], [], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["broken_cluster"], ["numeral_cluster"], ["broken_cluster"], ["independent_cluster"], ["symbol_cluster"], ["symbol_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["virama_terminated_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["standard_cluster"], ["broken_cluster"], ["broken_cluster"], ["numeral_cluster"], ["number_joiner_terminated_cluster"], ["standard_cluster"], ["standard_cluster"], ["numeral_cluster"]], uo = {
                categories: ic,
                decompositions: oc,
                stateTable: sc,
                accepting: fc,
                tags: lc
              }, wr = {
                X: 1,
                C: 2,
                V: 4,
                N: 8,
                H: 16,
                ZWNJ: 32,
                ZWJ: 64,
                M: 128,
                SM: 256,
                VD: 512,
                A: 1024,
                Placeholder: 2048,
                Dotted_Circle: 4096,
                RS: 8192,
                // Register Shifter, used in Khmer OT spec.
                Coeng: 16384,
                // Khmer-style Virama.
                Repha: 32768,
                // Atomically-encoded logical or visual repha.
                Ra: 65536,
                CM: 1 << 17,
                // Consonant-Medial.
                Symbol: 1 << 18
                // Avagraha, etc that take marks (SM,A,VD).
              }, er = {
                Start: 1,
                Ra_To_Become_Reph: 2,
                Pre_M: 4,
                Pre_C: 8,
                Base_C: 16,
                After_Main: 32,
                Above_C: 64,
                Before_Sub: 128,
                Below_C: 256,
                After_Sub: 512,
                Before_Post: 1024,
                Post_C: 2048,
                After_Post: 4096,
                Final_C: 8192,
                SMVD: 16384,
                End: 32768
              }, uc = wr.C | wr.Ra | wr.CM | wr.V | wr.Placeholder | wr.Dotted_Circle, ds = wr.ZWJ | wr.ZWNJ, Ci = wr.H | wr.Coeng, vs = {
                Default: {
                  hasOldSpec: !1,
                  virama: 0,
                  basePos: "Last",
                  rephPos: er.Before_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Devanagari: {
                  hasOldSpec: !0,
                  virama: 2381,
                  basePos: "Last",
                  rephPos: er.Before_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Bengali: {
                  hasOldSpec: !0,
                  virama: 2509,
                  basePos: "Last",
                  rephPos: er.After_Sub,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Gurmukhi: {
                  hasOldSpec: !0,
                  virama: 2637,
                  basePos: "Last",
                  rephPos: er.Before_Sub,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Gujarati: {
                  hasOldSpec: !0,
                  virama: 2765,
                  basePos: "Last",
                  rephPos: er.Before_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Oriya: {
                  hasOldSpec: !0,
                  virama: 2893,
                  basePos: "Last",
                  rephPos: er.After_Main,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Tamil: {
                  hasOldSpec: !0,
                  virama: 3021,
                  basePos: "Last",
                  rephPos: er.After_Post,
                  rephMode: "Implicit",
                  blwfMode: "Pre_And_Post"
                },
                Telugu: {
                  hasOldSpec: !0,
                  virama: 3149,
                  basePos: "Last",
                  rephPos: er.After_Post,
                  rephMode: "Explicit",
                  blwfMode: "Post_Only"
                },
                Kannada: {
                  hasOldSpec: !0,
                  virama: 3277,
                  basePos: "Last",
                  rephPos: er.After_Post,
                  rephMode: "Implicit",
                  blwfMode: "Post_Only"
                },
                Malayalam: {
                  hasOldSpec: !0,
                  virama: 3405,
                  basePos: "Last",
                  rephPos: er.After_Main,
                  rephMode: "Log_Repha",
                  blwfMode: "Pre_And_Post"
                },
                // Handled by UniversalShaper
                // Sinhala: {
                //   hasOldSpec: false,
                //   virama: 0x0DCA,
                //   basePos: 'Last_Sinhala',
                //   rephPos: POSITIONS.After_Main,
                //   rephMode: 'Explicit',
                //   blwfMode: 'Pre_And_Post'
                // },
                Khmer: {
                  hasOldSpec: !1,
                  virama: 6098,
                  basePos: "First",
                  rephPos: er.Ra_To_Become_Reph,
                  rephMode: "Vis_Repha",
                  blwfMode: "Pre_And_Post"
                }
              }, cc = {
                // Khmer
                6078: [6081, 6078],
                6079: [6081, 6079],
                6080: [6081, 6080],
                6084: [6081, 6084],
                6085: [6081, 6085]
              }, hc = uo.decompositions, ps = new I(o("AAARAAAAAABg2AAAAWYPmfDtnXuMXFUdx+/uzs7M7szudAtECGJRIMRQbUAithQWkGAKiVhNpFVRRAmIQVCDkDYICGotIA9BTCz8IeUviv7BQ2PBtBIRLBBQIWAUsKg1BKxRAqIgfs/cc+aeOXPej3tnZX7JJ/dxzj3nd36/8753Z5fUsuxgsAwcAU4Gp4BPgM+Cd4P3RjieDs4GXwLrHJ5bDy4DG8A14LvgZrAZbAF3gns0z18ALgY/B78C94NHwBPgabAE/AX8DbwM5sF/QX0yD5vFcU/wVnAgWAoOAyvAceBE8CGwBpwGzgJfAF8BXwXfAFeC68EmsBlsAXeCreA+8CB4DDwF/gh2gd3gFfAGmKxn2QzYC+wHDgRLweFgJTgWrKrnuq/GcQ04jV6fheN54EJwEbgcXAG+Q8O/j+Mt4DZwB9haz8t9Hz3a8iCN/xiOvwRP0evH6fE68AzOH+Ke2eWYhw3PcGnuxvkr4A3QaGRZB7wFLAEHg2XgiEZ/fHKcp/ceBh/A+cngFPCpRm6vM3E8l8a5gN67GMdvgqsbeX2ap9yI601gM7gN3AG20mfuo8cdOP6GpvdUg9oKxz839GV90RDO2/glxN1B790NXsN1rZll7WYRdw+c70uvTwIHNAfTO0RyL5TDmnnbc3lmRQI9UnM0dD5eovfz4FpJ/BNpXNYWV+N6Lfg0hY97JK1vn+Pur9DoQur2F7m436bHDUK8C5t5/8vruo4+97WmXG+GLmzEiBF+PDwEOowYMWLEiBEjRoxYeBw5BDqIPEfXut9yWN+vVNxfrnnmWqR/PdgENoMt4E5wD9gOHgCPgifBs2BXM99b2o3jP8F/wMRUlrXAHNgHvH0q3895J46HguXgWHAGLctmLv9VuL96qnp7jxgxYsSbCbJvuRZ97/tqxT59VVRtixEjRsThBG7OSt5zzoPT0M+cBc4T5noXOs79TqLHeZrHUeCSqeJ96gacXy2kecNU8V6Hh7yXuQlhtw7B/PO1RTkr52Aj8JNFZjYg3gOKuC/g/v6Ls2wNuAY8urg//PcIb+6RZXuDNeCS6SzbBrJWlh0DLiFHco8ed9IjzzvaWfa9sZzTcf6D9mCcnbg3PlNcH4fzS8F2MDaLdQG4dLZIJxbbaZqv4ri8k58f3+mPs66T6/TTzqDeI0aMGDGiHP5dcR8ce/xxYcWi6vOfr725uRzcjnngXVOD61Hync+9uL+Nmyfej/NHpvL56A5Jeuz7uyfo+pqcPz2Vf1NH0ttJ03pekt8SmuY/EPYy9zzbN319ym/9TL6ZIt9MHCXRdxJtoAkWTRdz472n87D9cTwYLJvuz++I6WIePo/zE8AHp4v8WLyP0nufnM6/+zoDx8+DL08P6r9+urheRtO+jD6/cdrsx3mqu8w+xH4PScKIXa5D2jeCm8Et4DbwI/BjcC/4BXgI/Bb8DuwEu8Bu8Ap4A9RaRZptnO8J9gUHgEPAoWA5OLY1qMO90GEV7q+mYWtxPBWcIYnL4p+DsPNbxfVFOP86uAr8DNc34HgTDb8Vx9sVaRFI/LtagzYjnCqpb908EX87eBA8Bh4Hf2jle/9/wvGFVv787rrZZy8h7qtgDOuFOmiBuXYRvg/O9wMHgXeB97SLspk4sq0OI/q9v13+ek+sh3zYSRp9jrYorw9ll1/GRzR+KotYZSHf8laVP2lvpA/8OGdPMk59hqtXZ+L8nHbxvWwqO65ryu+fT3VZz+l4dET7L0R072ljsMyzTpaJqQxsbL8M9WajY789DO85XMp/Dcp3Qztdn+9qf/a97ZWK8PXc3G+TpC/nv8Mncy7ZvICF302P5O+aNiOtLdTXd+D4Q7DVwfcvWvx9zTEJ/o5iG3R8YAjGNFseha5PGuZKz7b7xxXbOrXMcu5eJSo//rXdH/73Enz6L1q/X+fyIu8wZGtNBmkjkzNZNgP2AvuBg2bysKUzduXn/66JtNeN4PCZvO0/x7Ujdn4VnYOvRJzjZ/I+9sQZeftX2Tc1RPcPz/Tf4/si0g+t5Mq+kfZjZL34Mc5ul3PPnE7TOxvHK2qDaZ+L++db2HyYqMo/qVnb/P8uH8/rmnFxR0k6DCu/rjj/RxT7KGUSWgbd+LMQuEgYB1zsk2qtvJD8v5AhdfdttbEunSxbcJD9Zf7chqp1Hlbe7FK1/aPVTfp7FgtC1yGGiSncFK/DhZvi+epZta0WWjlsfDZMyPRdSPrryqSSKnXx1bkq/Ye9TlRpk7Lrjq1UrfdC9X+MtKqwP6+3a/4pJFUZF0pZZpv91MYjMBaRRXbxpho5zQmUY3F+Pt4o7rvQrBXPdm00TaE24uMadaM2meLSI7iu071t3er3b6ZLi8JEde3qw+6zGv+ycF5kaRBh/m1T/7Yl/mMyTuMwadP4xL9ifjJpNwbvDZRJ8G8vnqV/Wf12aa/kyOdl69+BspTsXzGueE6E+JfZnvmXIfNPW+FfXkjb1YmqPNpnLP3b61fHCj/X5tzGANf2y3yqvC7Jv7btV4TVbdammI9l/g0dS5lNxLrk2j9r8xjjxhBQnygg0lgg/bOrfyct+udJi/Yrk0lFnxC7f+5kRbsNmcexfrubt0X/rGvLqrGSnYv3ZPHEe8r7lvMvUfi2LOu/2dg8LrRtQt2yfcv8r5IU70VkIs6nbebUXf0M/o7Znl39Sdoz+X1oEb5N8ffF67qhPfPP6eoUbxf+GRf/6sRnvaSdmw+Bf1VxmbD+2sa//DU7t/Gv2PfKpKdrBP92Ojk+IvqX16ks/2qxbL8EZnc2HqsgYuqPuzZV+I3RbujbDm+T0PmWCVO/5jqftp1zy+wSA6s0JWtp2z5e1oZV+yMsjB3ZXolsv0Ulrv01v3/iKrF94Qtbt9siCnmeb6fjjf59KnLk1xaEbvtvFnFirGvEOqmycQrbm/IMsXd3P28uh4nM3swXRER717OiX8kc7K2qqyn2p3maFGU/aruP5VCv+PraoTYU8yUmmbDwcYo6pusnM486xdoga4dkPCb1pK7Sfc6ebvkd4qeAtQcd/N63bB3lU3dlUnUf38VyvqCqK7JxlNSd7lydrDlm+/uqHiRvl30Nrp/n9zpkZRjoJ3V1diyP05rIYXHYs+w+D5+WMS8b5gZtKcuX0KT5d/WwtB97VnyvY6rjMukI56HI0rFJPwt8PjT/1OXzSbcMeEmdh294qvKK4rNu7j4n3LNZg8TKXwafv025U+XvKjHsT8Q7/7LGaJt9lAh7Asz3uv0XEX6t0duDoWN/93wmh92XpUHmCKb9GALbG+rZP3AfNbQPKKv/jpF/bP0JXfuW1QYk7dhljcyvk5mw+933Hpo1g26PQ2ZP6zVmTJt47P25jncD9vPwGS+q9QS/V6RaY8j8K8LmvUr9HfYCpH5OWL9lZY+Sv6pesHCJHbtrf9k6etZvf0G1L0ja4cAe1UT/s3zdCe3/Q5/n372wMc97/E1Qh0Tbmfwh3m/V9On72tNnrCF1sJkVe1EyXMdBa7+lHMsk44zMF6St9e2djNnbm8ybpHkq+gbbemMaH0UZmD8obKGrk7r+nt+3bE7o83YZp/vqOKdv6PzJNN6mTJsI/51XR7i2ZrGA5B6zFwnjzxmqPjaGfW3tZNrz1eljq29mOOqeCfF/irRt87PNw0uXSVAvrmOMNT569MptsYaV0sic/wbY13e8hPrb9K2ySUJ0j6G/Lu0U4qpTrR23jMp6m5hU+YTaWCeh9aIsm/rqUHV4bFv42kgnZdfH1PUj1D7DVH9d8khRN1zFRl/+/TW//qxL1uH83+mk3H+SvRtS2TDU90nX2TpM6/1xzZpZtoYdK763dqlz0f6uNeFehcs+H/nbGP77MpX06n/ofpzP+tVmTUvRtVuX/cjS67OE5kRBrxyJ+w/dPo7r+9cO1160e3gqu0S2uW7PjN/L6ns/UfMf10Lai87frJ+3KndAfc8yTf1M3T4s6qm4/yh7/2GSkG8UMw//DvRLgbYZSEOxr0LCWvRdjfh9XGzfqN4NivfZd7rsmFp08zmbssrKJEuTfVMZopdpbuwSrhNv3/N2s+0PDG3KNB6RMrFvJHv6B85HXObAoWsd3zm3i+6uZYytv+5+pohbpo6+tpZJFfmGlrcMf4c8b1Pe2OUIsaXJrinCTfaxtZOt+NYnU3hIfQlN20Z/1+dt7JaqLsbIzycNWZmrlNg2Dc2/LJ1T+T6WrrYSml4Ku7ik7yIx2opJD51vU9UfVRmrqL8u/olZj0PyCLV5irxcdKoi/6rKb8qTrHsnhW9jyZH/nSpeWDzxd9769uQ016lgUuf2pAfKPhu2FpfZL2Yb9snLNl/fNIepXaUsj4vNXCXUZ75px8ojNP8UPvAta2g6fb+F1ckZuneshv1vGXXDeyRRrN/bBPS1Jul+l+7zW86R7Wv63WXyDpt/RxraRjvC+TC3O61/Sqj/prag8x372yQivn+XwudrI2X2E2KdtJEov52e0L+uv4FO3p/rvssgsL8F4d/z9PzlWS94m8fqS3361Fi+6qaVYHwi9Yz4iH2fobIj+45cpz/TUaarr/4+z+vaWtVtyAX2d1LG8W9C3f+F1mnf36/k4w3YPrLv+XBVXCJs3cr+n4MKJuLv/fN9GhNdXVP5pJMN9vFi3rpv3/r8Ywg3SYp66zNOsO8QGcxPpnmRS/1mvmJjju3v7absI2xspQrvs1dNbjOj/wP7h1RlZyKGy8occ408UL8En4v6xfC/K3z52XzJd62T8vuZGGsxo/6O46ntmNqqFb/jps2/hHV4rPKH0svT4pstU7t2tZ9u/ZdqbJL1MwP6O86Fyt4jYaIrGz9mjEt8lFL4PtVE6votG2P6fpdf/GZRse7s3bf4BtSl/DIbKMctx++Z+8o6K6z9FPOwKsRmXiaNl7C+6NYRpjlbqG1j72f49qsuY4brd/amb4ZVc8TQ+sSH985LrEe8iPWJnfPrJRbWbb+dwn4x6o+r/aS2S7w3qWt//LnYz2ntE0vH1uDcyKatx1rH+EiMPEN1SZG/iz6+9o01Rob6O7Q+xLZ1jHobK61U+pWVvo2EpuWqzzD6Poa+pvhli0wn8Zq/72Mzm2d90o5VN1x9ZKuzbTgvqWwUIin8FSpl1CXXvFRxU0iozVPYJDRtF3uFphn6XAyJUUdD7SjTJ8v6n9fVbVObkKWp001lc9VRlqdOf5v0ZM+bymdbfp1NfG0bq27Y5JMyfxeJkU6o/inKH8O2Zfgidb6h/g3VJ7QcVbWL0Pxt6rlrPqa4KfQ25a2zl4/E8GdM/4fK/wA=", "base64")), dc = new E(ac), hn = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                return X.planFeatures = function(P) {
                  P.addStage(vc), P.addStage(["locl", "ccmp"]), P.addStage(gc), P.addStage("nukt"), P.addStage("akhn"), P.addStage("rphf", !1), P.addStage("rkrf"), P.addStage("pref", !1), P.addStage("blwf", !1), P.addStage("abvf", !1), P.addStage("half", !1), P.addStage("pstf", !1), P.addStage("vatu"), P.addStage("cjct"), P.addStage("cfar", !1), P.addStage(yc), P.addStage({
                    local: ["init"],
                    global: ["pres", "abvs", "blws", "psts", "haln", "dist", "abvm", "blwm", "calt", "clig"]
                  }), P.unicodeScript = Jl(P.script), P.indicConfig = vs[P.unicodeScript] || vs.Default, P.isOldSpec = P.indicConfig.hasOldSpec && P.script[P.script.length - 1] !== "2";
                }, X.assignFeatures = function(P, M) {
                  for (var H = function(dt) {
                    var ct = M[dt].codePoints[0], Ot = cc[ct] || hc[ct];
                    if (Ot) {
                      var Vt = Ot.map(function(se) {
                        var $t = P.font.glyphForCodePoint(se);
                        return new ma(P.font, $t.id, [se], M[dt].features);
                      });
                      M.splice.apply(M, [dt, 1].concat(Vt));
                    }
                  }, lt = M.length - 1; lt >= 0; lt--)
                    H(lt);
                }, X;
              }(Ta);
              U(hn, "zeroMarkWidths", "NONE");
              function r0(ft) {
                return ps.get(ft.codePoints[0]) >> 8;
              }
              function gs(ft) {
                return 1 << (ps.get(ft.codePoints[0]) & 255);
              }
              var co = function(X, et, P, M) {
                this.category = X, this.position = et, this.syllableType = P, this.syllable = M;
              };
              function vc(ft, X) {
                for (var et = 0, P = 0, M = a(dc.match(X.map(r0))), H; !(H = M()).done; ) {
                  var lt = H.value, vt = lt[0], dt = lt[1], ct = lt[2];
                  if (vt > P) {
                    ++et;
                    for (var Ot = P; Ot < vt; Ot++)
                      X[Ot].shaperInfo = new co(wr.X, er.End, "non_indic_cluster", et);
                  }
                  ++et;
                  for (var Vt = vt; Vt <= dt; Vt++)
                    X[Vt].shaperInfo = new co(1 << r0(X[Vt]), gs(X[Vt]), ct[0], et);
                  P = dt + 1;
                }
                if (P < X.length) {
                  ++et;
                  for (var se = P; se < X.length; se++)
                    X[se].shaperInfo = new co(wr.X, er.End, "non_indic_cluster", et);
                }
              }
              function Wa(ft) {
                return ft.shaperInfo.category & uc;
              }
              function ha(ft) {
                return ft.shaperInfo.category & ds;
              }
              function ba(ft) {
                return ft.shaperInfo.category & Ci;
              }
              function wa(ft, X) {
                for (var et = a(ft), P; !(P = et()).done; ) {
                  var M, H = P.value;
                  H.features = (M = {}, M[X] = !0, M);
                }
                var lt = ft[0]._font._layoutEngine.engine.GSUBProcessor;
                return lt.applyFeatures([X], ft), ft.length === 1;
              }
              function pc(ft, X, et) {
                var P = [et, X, et];
                return wa(P.slice(0, 2), "blwf") || wa(P.slice(1, 3), "blwf") ? er.Below_C : wa(P.slice(0, 2), "pstf") || wa(P.slice(1, 3), "pstf") || wa(P.slice(0, 2), "pref") || wa(P.slice(1, 3), "pref") ? er.Post_C : er.Base_C;
              }
              function gc(ft, X, et) {
                var P = et.indicConfig, M = ft._layoutEngine.engine.GSUBProcessor.features, H = ft.glyphForCodePoint(9676).id, lt = ft.glyphForCodePoint(P.virama).id;
                if (lt)
                  for (var vt = new ma(ft, lt, [P.virama]), dt = 0; dt < X.length; dt++)
                    X[dt].shaperInfo.position === er.Base_C && (X[dt].shaperInfo.position = pc(ft, X[dt].copy(), vt));
                for (var ct = 0, Ot = ho(X, 0); ct < X.length; ct = Ot, Ot = ho(X, ct)) {
                  var Vt = X[ct].shaperInfo;
                  Vt.category;
                  var se = Vt.syllableType;
                  if (!(se === "symbol_cluster" || se === "non_indic_cluster")) {
                    if (se === "broken_cluster" && H) {
                      var $t = new ma(ft, H, [9676]);
                      $t.shaperInfo = new co(1 << r0($t), gs($t), X[ct].shaperInfo.syllableType, X[ct].shaperInfo.syllable);
                      for (var ue = ct; ue < Ot && X[ue].shaperInfo.category === wr.Repha; )
                        ue++;
                      X.splice(ue++, 0, $t), Ot++;
                    }
                    var pe = Ot, Te = ct, He = !1;
                    if (P.rephPos !== er.Ra_To_Become_Reph && M.rphf && ct + 3 <= Ot && (P.rephMode === "Implicit" && !ha(X[ct + 2]) || P.rephMode === "Explicit" && X[ct + 2].shaperInfo.category === wr.ZWJ)) {
                      var _e = [X[ct].copy(), X[ct + 1].copy(), X[ct + 2].copy()];
                      if (wa(_e.slice(0, 2), "rphf") || P.rephMode === "Explicit" && wa(_e, "rphf")) {
                        for (Te += 2; Te < Ot && ha(X[Te]); )
                          Te++;
                        pe = ct, He = !0;
                      }
                    } else if (P.rephMode === "Log_Repha" && X[ct].shaperInfo.category === wr.Repha) {
                      for (Te++; Te < Ot && ha(X[Te]); )
                        Te++;
                      pe = ct, He = !0;
                    }
                    switch (P.basePos) {
                      case "Last": {
                        var Xe = Ot, hr = !1;
                        do {
                          var sr = X[--Xe].shaperInfo;
                          if (Wa(X[Xe])) {
                            if (sr.position !== er.Below_C && (sr.position !== er.Post_C || hr)) {
                              pe = Xe;
                              break;
                            }
                            sr.position === er.Below_C && (hr = !0), pe = Xe;
                          } else if (ct < Xe && sr.category === wr.ZWJ && X[Xe - 1].shaperInfo.category === wr.H)
                            break;
                        } while (Xe > Te);
                        break;
                      }
                      case "First": {
                        pe = ct;
                        for (var dr = pe + 1; dr < Ot; dr++)
                          Wa(X[dr]) && (X[dr].shaperInfo.position = er.Below_C);
                      }
                    }
                    He && pe === ct && Te - pe <= 2 && (He = !1);
                    for (var mr = ct; mr < pe; mr++) {
                      var Hr = X[mr].shaperInfo;
                      Hr.position = Math.min(er.Pre_C, Hr.position);
                    }
                    pe < Ot && (X[pe].shaperInfo.position = er.Base_C);
                    for (var tn = pe + 1; tn < Ot; tn++)
                      if (X[tn].shaperInfo.category === wr.M) {
                        for (var Ur = tn + 1; Ur < Ot; Ur++)
                          if (Wa(X[Ur])) {
                            X[Ur].shaperInfo.position = er.Final_C;
                            break;
                          }
                        break;
                      }
                    if (He && (X[ct].shaperInfo.position = er.Ra_To_Become_Reph), et.isOldSpec) {
                      for (var vr = et.unicodeScript !== "Malayalam", Or = pe + 1; Or < Ot; Or++)
                        if (X[Or].shaperInfo.category === wr.H) {
                          var zr = void 0;
                          for (zr = Ot - 1; zr > Or && !(Wa(X[zr]) || vr && X[zr].shaperInfo.category === wr.H); zr--)
                            ;
                          if (X[zr].shaperInfo.category !== wr.H && zr > Or) {
                            var un = X[Or];
                            X.splice.apply(X, [Or, 0].concat(X.splice(Or + 1, zr - Or))), X[zr] = un;
                          }
                          break;
                        }
                    }
                    for (var gr = er.Start, Br = ct; Br < Ot; Br++) {
                      var jr = X[Br].shaperInfo;
                      if (jr.category & (ds | wr.N | wr.RS | wr.CM | Ci & jr.category)) {
                        if (jr.position = gr, jr.category === wr.H && jr.position === er.Pre_M) {
                          for (var xr = Br; xr > ct; xr--)
                            if (X[xr - 1].shaperInfo.position !== er.Pre_M) {
                              jr.position = X[xr - 1].shaperInfo.position;
                              break;
                            }
                        }
                      } else
                        jr.position !== er.SMVD && (gr = jr.position);
                    }
                    for (var fn = pe, mn = pe + 1; mn < Ot; mn++)
                      if (Wa(X[mn])) {
                        for (var Fn = fn + 1; Fn < mn; Fn++)
                          X[Fn].shaperInfo.position < er.SMVD && (X[Fn].shaperInfo.position = X[mn].shaperInfo.position);
                        fn = mn;
                      } else
                        X[mn].shaperInfo.category === wr.M && (fn = mn);
                    var Bn = X.slice(ct, Ot);
                    Bn.sort(function(aa, i0) {
                      return aa.shaperInfo.position - i0.shaperInfo.position;
                    }), X.splice.apply(X, [ct, Bn.length].concat(Bn));
                    for (var In = ct; In < Ot; In++)
                      if (X[In].shaperInfo.position === er.Base_C) {
                        pe = In;
                        break;
                      }
                    for (var Un = ct; Un < Ot && X[Un].shaperInfo.position === er.Ra_To_Become_Reph; Un++)
                      X[Un].features.rphf = !0;
                    for (var zn = !et.isOldSpec && P.blwfMode === "Pre_And_Post", Sn = ct; Sn < pe; Sn++)
                      X[Sn].features.half = !0, zn && (X[Sn].features.blwf = !0);
                    for (var vn = pe + 1; vn < Ot; vn++)
                      X[vn].features.abvf = !0, X[vn].features.pstf = !0, X[vn].features.blwf = !0;
                    if (et.isOldSpec && et.unicodeScript === "Devanagari")
                      for (var Rn = ct; Rn + 1 < pe; Rn++)
                        X[Rn].shaperInfo.category === wr.Ra && X[Rn + 1].shaperInfo.category === wr.H && (Rn + 1 === pe || X[Rn + 2].shaperInfo.category === wr.ZWJ) && (X[Rn].features.blwf = !0, X[Rn + 1].features.blwf = !0);
                    var Rr = 2;
                    if (M.pref && pe + Rr < Ot)
                      for (var Cr = pe + 1; Cr + Rr - 1 < Ot; Cr++) {
                        var Qr = [X[Cr].copy(), X[Cr + 1].copy()];
                        if (wa(Qr, "pref")) {
                          for (var Gr = 0; Gr < Rr; Gr++)
                            X[Cr++].features.pref = !0;
                          if (M.cfar)
                            for (; Cr < Ot; Cr++)
                              X[Cr].features.cfar = !0;
                          break;
                        }
                      }
                    for (var Lr = ct + 1; Lr < Ot; Lr++)
                      if (ha(X[Lr])) {
                        var An = X[Lr].shaperInfo.category === wr.ZWNJ, ei = Lr;
                        do
                          ei--, An && delete X[ei].features.half;
                        while (ei > ct && !Wa(X[ei]));
                      }
                  }
                }
              }
              function yc(ft, X, et) {
                for (var P = et.indicConfig, M = ft._layoutEngine.engine.GSUBProcessor.features, H = 0, lt = ho(X, 0); H < X.length; H = lt, lt = ho(X, H)) {
                  for (var vt = !!M.pref, dt = H; dt < lt; dt++)
                    if (X[dt].shaperInfo.position >= er.Base_C) {
                      if (vt && dt + 1 < lt) {
                        for (var ct = dt + 1; ct < lt; ct++)
                          if (X[ct].features.pref) {
                            if (!(X[ct].substituted && X[ct].isLigated && !X[ct].isMultiplied)) {
                              for (dt = ct; dt < lt && ba(X[dt]); )
                                dt++;
                              X[dt].shaperInfo.position = er.BASE_C, vt = !1;
                            }
                            break;
                          }
                      }
                      if (et.unicodeScript === "Malayalam")
                        for (var Ot = dt + 1; Ot < lt; Ot++) {
                          for (; Ot < lt && ha(X[Ot]); )
                            Ot++;
                          if (Ot === lt || !ba(X[Ot]))
                            break;
                          for (Ot++; Ot < lt && ha(X[Ot]); )
                            Ot++;
                          Ot < lt && Wa(X[Ot]) && X[Ot].shaperInfo.position === er.Below_C && (dt = Ot, X[dt].shaperInfo.position = er.Base_C);
                        }
                      H < dt && X[dt].shaperInfo.position > er.Base_C && dt--;
                      break;
                    }
                  if (dt === lt && H < dt && X[dt - 1].shaperInfo.category === wr.ZWJ && dt--, dt < lt)
                    for (; H < dt && X[dt].shaperInfo.category & (wr.N | Ci); )
                      dt--;
                  if (H + 1 < lt && H < dt) {
                    var Vt = dt === lt ? dt - 2 : dt - 1;
                    if (et.unicodeScript !== "Malayalam" && et.unicodeScript !== "Tamil") {
                      for (; Vt > H && !(X[Vt].shaperInfo.category & (wr.M | Ci)); )
                        Vt--;
                      ba(X[Vt]) && X[Vt].shaperInfo.position !== er.Pre_M ? Vt + 1 < lt && ha(X[Vt + 1]) && Vt++ : Vt = H;
                    }
                    if (H < Vt && X[Vt].shaperInfo.position !== er.Pre_M) {
                      for (var se = Vt; se > H; se--)
                        if (X[se - 1].shaperInfo.position === er.Pre_M) {
                          var $t = se - 1;
                          $t < dt && dt <= Vt && dt--;
                          var ue = X[$t];
                          X.splice.apply(X, [$t, 0].concat(X.splice($t + 1, Vt - $t))), X[Vt] = ue, Vt--;
                        }
                    }
                  }
                  if (H + 1 < lt && X[H].shaperInfo.position === er.Ra_To_Become_Reph && X[H].shaperInfo.category === wr.Repha !== (X[H].isLigated && !X[H].isMultiplied)) {
                    var pe = void 0, Te = P.rephPos, He = !1;
                    if (Te !== er.After_Post) {
                      for (pe = H + 1; pe < dt && !ba(X[pe]); )
                        pe++;
                      if (pe < dt && ba(X[pe]) && (pe + 1 < dt && ha(X[pe + 1]) && pe++, He = !0), !He && Te === er.After_Main) {
                        for (pe = dt; pe + 1 < lt && X[pe + 1].shaperInfo.position <= er.After_Main; )
                          pe++;
                        He = pe < lt;
                      }
                      if (!He && Te === er.After_Sub) {
                        for (pe = dt; pe + 1 < lt && !(X[pe + 1].shaperInfo.position & (er.Post_C | er.After_Post | er.SMVD)); )
                          pe++;
                        He = pe < lt;
                      }
                    }
                    if (!He) {
                      for (pe = H + 1; pe < dt && !ba(X[pe]); )
                        pe++;
                      pe < dt && ba(X[pe]) && (pe + 1 < dt && ha(X[pe + 1]) && pe++, He = !0);
                    }
                    if (!He) {
                      for (pe = lt - 1; pe > H && X[pe].shaperInfo.position === er.SMVD; )
                        pe--;
                      if (ba(X[pe]))
                        for (var _e = dt + 1; _e < pe; _e++)
                          X[_e].shaperInfo.category === wr.M && pe--;
                    }
                    var Xe = X[H];
                    X.splice.apply(X, [H, 0].concat(X.splice(H + 1, pe - H))), X[pe] = Xe, H < dt && dt <= pe && dt--;
                  }
                  if (vt && dt + 1 < lt) {
                    for (var hr = dt + 1; hr < lt; hr++)
                      if (X[hr].features.pref) {
                        if (X[hr].isLigated && !X[hr].isMultiplied) {
                          var sr = dt;
                          if (et.unicodeScript !== "Malayalam" && et.unicodeScript !== "Tamil") {
                            for (; sr > H && !(X[sr - 1].shaperInfo.category & (wr.M | Ci)); )
                              sr--;
                            if (sr > H && X[sr - 1].shaperInfo.category === wr.M) {
                              for (var dr = hr, mr = dt + 1; mr < dr; mr++)
                                if (X[mr].shaperInfo.category === wr.M) {
                                  sr--;
                                  break;
                                }
                            }
                          }
                          sr > H && ba(X[sr - 1]) && sr < lt && ha(X[sr]) && sr++;
                          var Hr = hr, tn = X[Hr];
                          X.splice.apply(X, [sr + 1, 0].concat(X.splice(sr, Hr - sr))), X[sr] = tn, sr <= dt && dt < Hr && dt++;
                        }
                        break;
                      }
                  }
                  X[H].shaperInfo.position === er.Pre_M && (!H || !/Cf|Mn/.test(D.getCategory(X[H - 1].codePoints[0]))) && (X[H].features.init = !0);
                }
              }
              function ho(ft, X) {
                if (X >= ft.length)
                  return X;
                for (var et = ft[X].shaperInfo.syllable; ++X < ft.length && ft[X].shaperInfo.syllable === et; )
                  ;
                return X;
              }
              var mc = uo.categories, ys = uo.decompositions, xc = new I(o("AAACAAAAAAAQugAAAQUO+vHtnHuMX0UVx2d3u/t7bXe7FlqgvB+mpQhFmhikMRAg0ZQmakMU+cPWBzZisEGNjUpoiIYCEgmGUGOEGqOVNPUZUGNA+QNIBU2KREEFFSMBUYRISMXE+B3vnPzOzp553tcWfif5ZO5jnufMzJ2ZO/eumlDqFLAWnAMuBBvBZnC5uXZeBe4WsA1sBzs8/naCXcL1G8GtYDfYA74NvgfuAfcZHmT+fwEeBb8DTwvxPQWeAavACyZvq8z9VYxXwCGglijVBcvACnA8eCM4E6wHG8BF4BLwbvA+8AHwUbAd7AA7wS5wC9gN7gR7wX5wN7gXPAAeBr8Gvwd/Ac+CF8EhoCaV6oBZsBKcAE4FZ0wWeV8P9zxwoTnfCHczuBxsAdvAx8Gnzf1r4X4B3AxuA1+bHJb9m5PzdVGW/Yjv+xXHyfmxFfd9OH8Q/Ar8Bjw1WZT3GfACeAX8N5CfqSmlZsAKsGqqCH8K3DXgbHCuuXYB3HeAd4HLpgrdarbi+EPgY+CT4HPg8ybMTcb9MtyvghtYut/A+b4pf95+ELgfw08Qx/3gADgInjDl0veehPtX8A/wsrn2KtzxDuogWNoJx38k/BzXKeI8Ee5qcBZYD9aZtDbg+AwT19uMX83F7JizCdcvBZdZ97c6/BMfMWmfzfTm88/95aLj+DDSvApcDXZ04uPfaen3TMHPLvi5BezuFPVtD4t/qUcfe3FvP7gb3Ouwo9T+H+gMy/UIjh8DfwBPm7T08d/M8WMBe1Sh3xEjXo+M2s+IESNGjBgxYsSI1wLrOsM1gRsi/P+TzV3/Zc1jvxgR/j8IM9Et1mEGcJeDFeA4cJq5/ia467uF/w1wzwdvB+80998LdwvYZs63w90Bdnbd6Wp/uzz3R4wYMWJEvZzTMm2Xf8SIEfVQd/v+EsaPt3eL90J3wP2WMJ78Trd4t6+P77Hu37cIxp9/ny6YXqrUJeCR6TA74e/nll81MzxejeMtYA94HBwy91bPYow+O/S3A8d7oIM/gRN7CAP29Iqx/B1ThfuwOecM+vA3NmRjf6Gfm3BtH7v+PI7XDpS6EuwDz4O10+0/f9om1F4ehO4OmHp6EO7jxl56nvhsN/15ut+4Z0b657yYkZ7UJ0jhX0bcr3bn+6P87vekN4762QNzvWHZtL+jcH5srzg/uTf0f3pvfj5i+6tYW7rK9+aefO+tuL4BXAQ2gs3gPeBJc//9OL4CXAWuNvc/A64DN4Jbwe0s7jtxvBfsAz8EPwX3gwPgoJAHPQ9/Atf/bO7p/TTP4fglwS/5/zfujfWH5z0cz4Gj+8X5Sf1ib4m+vwbHZ/fdOtP+z+3LOnPp/QL4vxhsApeCy8BWk/a2ftFmYu22Hf4/Ba4B14Hrwc0sP7fh+Cvg6+Au8F1WthA/8pT7UeTxZ/12njkuXT8UyM9i6iur1EEb6f+yPz/eg0b3v4X7x365fMaW42lPu7PTv6vi8i/G+lWF/cvUk7bLl1r+5/rN5tu3j2qvWTd/qV+4h+AqjDGnBsX59GDo94iBXDa6v6Yjl6vu+h8itJcsZq/ZykHhHg/3tMHhUe9s/Yfuny7YNxTvQ8LYdrER2+/c0GBezhrMv3ZNRv7PmYirh7oOv4W1Y72/cwPOzx8U7X8d2295sfE3MPnbBPfSQbHv9nK4HxTqiK/trI7Yy5mLzvuVg/nX+N7V51A3r+gMy/4J434W7l2dYf5PZWGuNX6uh3uzEPetuLY7sZ20zTETY2oxyBhj3DrnfsidYPeXRGLHpxzX6pbFofGRkFBdGhcgW40L4cYtd9JAElO36q4LEzXHX7VMtZ2BEhJjy9dT25fazOtJxhwsBrHzwfu8w12kMYN9fLhIbp2RxlI59rX1dzjpsKl2Fxt3iu6rbofc9q5+KcRrXVzzDn6/Crvk6p/y1GFgGhs9/6maHjBLgv8/18fTxl1q0bPoW8ywsFTGWaazHosrNn/kP2eeqEroZYLZphsZl7L82eephMIqNT8dyT9JjH1Jpg32ubZvTB/SF665ymSnnaqjUHum+1Qn+NyOtz9f2r6y5OQ51b6hYy0D40r2tYXar30+Y/mbVX6JqY+hMC60XZapoh3S/HdOpT3DYu3rs0lKnquyb277JZvyPlqp+f1zVVK2/dJYNpQGf04uYyh1+PTPqfalZ2tO/xwSu+3bOrDzmWvfcTW/fLmibRx6lkvlcOlc8qsE/y5/rnSk67F1iAu1VT6+4jKt5tufn8e2b+n57JKcckhrsKG1Cd6Wu+Y8tf2l5DenPafqQZ/7xstKLeyr+XnInjSelvRgS9n27JPQM5n6Am7jmLG8VK6m7OvyS2L313XYV2r/tth5LWPfNxhyhI+1Up7HVbe/HMgeZE8brtNQ/7tcyX0cn//H2LTO9kpir5VI6yYp9szJW9W2jI1Tqfl5ic2v1GZ5XaG6RDZbyvxMO/DVh1SdUj5y1vraaHs+2/TYNXvtSRoXk4wrf9w6fEctnFt0zL2y+xFsfSrLza2zOTqMiZv8xOpbn8+xsL5ykdj6VsxNKb/Lvxb7nX8u48y1x6yuMW3V9tNxTlouzXslibVxndjC14xda8g2NIbg5x01XAP2lfeIBFSi/zrQEporTXru8fCueiy1CUnqrhspSM9SzbSS64tep9R1ZsZcOxKsUEUfNZeYtr0vjY5DeXW915hT8/PRV8MxlR1HV4DHZZc9R7dzajgWoXikdLtGr0uEfPigsGS/NvYjSHW87XejoXZehZ74XrcqpQ4d5T5f7Gu8f6g7fQmefoqOqk4/VarQv2o4/VDetPDnhjR2dc3BCBp/9NVw7KGfwStVMf6aZNAajj6224j9HCZbpZa/LvH1gU30i/q5WnUdSNEprxv2eIOwx2pcjjLMsmObo008k0J4u69P3d9QdbspW/dy080Nb8PXqcrmj0vsc7tu6qwD1A5oLYr3U3XWSxqj6/a10nCMkudJMyxvrvbK55jUrqU+Xlr/Iai98jY7mVAml5QNHxq31j2m5TrSdmp6z5p+9kpzQntdQbI1Pafr6I9C60gxrALHGtdF6tyhLTtxeBuW+hhqyzPMX931xl6rJ5f6n5h3blpsW7vKbvdBfL1gpYfjDLrvob1drrRT+mcuMf1OrJSdW/P+RfufdUB+pOtdTzhpL5t0jfKr46P3obQfQdPGt1jS+DEkx4MT2PmEg1j72OthqfZNWX+JuZ4at/2sTAmn5cSIMqZIjk0pnD0+aUI6YS9ekdaspWsp8cWEC62dS66UTkq+ypajyvXSlPz4xhQhm/ns6wpXBVI560jHN9aKkdT46spvWT916rONdHNsGSNtl6Hp8oakTVukpF9n3U3Jx0TNefbp3R4jltVfFfpvQkJpNaH/puyco++qbZPz7sE1L3DFGVovc4XPLUPO3ELyrzLiSpmPhaTJfqeJ+t60PiTh9snNW2656upDQ+Wtyg6ueJquB7HSVPspW9a28lDWJouhb6iyv7XjTfVL67j2vjDpvUfMt1Vl4GvctMaeq/vYcFWXIfV5Ku3XaxK951H6dsWFrhcxa3pU/pz3C1xc71tTcaXjGjtJbYIj7UHm7wxSyx+D/d7SfpfJ3wPpfSQp32tS2dt8V2tD7+Bce3rpPa3eC6Dr8Ulq+K+J3HFvbn312Zv2RdStr9g0pP0P/B04XbP3Q8cIT2dlRF6orkrhY/Rv27FqHfL1DP480ffo/V6V7aTHXLKDbTdXOOrnyG1ScvSv6xqve30lPzdpj36M8Pilb+L5vr0xE3dd30nWIfZ45uSSxK4x+CRmTUK6F/LrSsfnj+aOdYyvpXyMK7/OpHWjlDTsa0rJum5K7Ppnj7F9c+0q0qtr7pQji2X9oMwcVrJfmblwU2V2SV3rEk3YuO46XXf8MfrQz077G2zftyDkj/ZqhcZr9nldkOg5ykAt3GunJbR3NGYsUfWafd3ts853C4dLHppOM6WcfM5C+xSbaC/2HMa1H9v1vXdoXm/LKSVpYh5wqmr/X67SfwHtPc9a97p/k8bt0hpbW0j1Svr2m+7Rd98qIQ1pvSF273dKOjHYNmk6fd8/JX3tWIddblBqoU5p7zrZKnd9TppjVq0DSitWqkwz12b2exb7vwjaRvS/TFd/S+8AYvIo+Suri5TwvvZRdV1IQevQ1/8SA+UeH5eto7n/X1Oe86ptaafl8kPjcF7P7W93eD9d5n+oSvn7fFe7I/G9q1IBfylSR71N6fft94ZU18hOXKR+JqUO8f4+5dvLsmWlMQb/Vov+CUDlpTGUndeQlG3fdZWdRPoPgl3mmDlsLnaey/4X3tVuU+o6L3/Pym+qlLV/jk6rlBRd8394hZ6JdnuqIv2ykOh3pfq96Wkq/E8qu2xl88/tOJ4R3tfmpbGi3c5T859bzqr7MbsN03iI5itUNj5eaEKWqIX/KJCQ/iFWNZMmHXs8ovWk53JzFq5vPul6zDjLV36pX7bzvNzB0YlQOZephWtRS5T7eeSq8030R77/HvC1d7tN83Zt9yltrDdwSR0XxsZd5l+MvvvU1/M9jSnj+Nh6FPJbBld/w6XHXH5MZeXrOfS/65g9RTl1JCa8chzX2RZ9/3lXSh4/VqWfEBNq4b82Ytp6m+9Qqxir1jX+rfPdT1vvsWhM6bPbmON6E1LnPCZW7L0qqXswmtqf0MQelZj4myrzYtzvIYmURlvtqapyx+gzRfd0XPfahVSOquMoG+dibBdl46iyfdbV1qvUW9m8+KTudMvkzZe/pqTJ+pWTflX5zw1fVfox6ZTVc8hvHflOSb+OuG1JsZ0kufXAJf8D", "base64")), bc = new E(uo), pr = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                return X.planFeatures = function(P) {
                  P.addStage(Sc), P.addStage(["locl", "ccmp", "nukt", "akhn"]), P.addStage(xs), P.addStage(["rphf"], !1), P.addStage(Ac), P.addStage(xs), P.addStage(["pref"]), P.addStage(Cc), P.addStage(["rkrf", "abvf", "blwf", "half", "pstf", "vatu", "cjct"]), P.addStage(Ec), P.addStage(["abvs", "blws", "pres", "psts", "dist", "abvm", "blwm"]);
                }, X.assignFeatures = function(P, M) {
                  for (var H = function(dt) {
                    var ct = M[dt].codePoints[0];
                    if (ys[ct]) {
                      var Ot = ys[ct].map(function(Vt) {
                        var se = P.font.glyphForCodePoint(Vt);
                        return new ma(P.font, se.id, [Vt], M[dt].features);
                      });
                      M.splice.apply(M, [dt, 1].concat(Ot));
                    }
                  }, lt = M.length - 1; lt >= 0; lt--)
                    H(lt);
                }, X;
              }(Ta);
              U(pr, "zeroMarkWidths", "BEFORE_GPOS");
              function ms(ft) {
                return xc.get(ft.codePoints[0]);
              }
              var wc = function(X, et, P) {
                this.category = X, this.syllableType = et, this.syllable = P;
              };
              function Sc(ft, X) {
                for (var et = 0, P = a(bc.match(X.map(ms))), M; !(M = P()).done; ) {
                  var H = M.value, lt = H[0], vt = H[1], dt = H[2];
                  ++et;
                  for (var ct = lt; ct <= vt; ct++)
                    X[ct].shaperInfo = new wc(mc[ms(X[ct])], dt[0], et);
                  for (var Ot = X[lt].shaperInfo.category === "R" ? 1 : Math.min(3, vt - lt), Vt = lt; Vt < lt + Ot; Vt++)
                    X[Vt].features.rphf = !0;
                }
              }
              function xs(ft, X) {
                for (var et = a(X), P; !(P = et()).done; ) {
                  var M = P.value;
                  M.substituted = !1;
                }
              }
              function Ac(ft, X) {
                for (var et = a(X), P; !(P = et()).done; ) {
                  var M = P.value;
                  M.substituted && M.features.rphf && (M.shaperInfo.category = "R");
                }
              }
              function Cc(ft, X) {
                for (var et = a(X), P; !(P = et()).done; ) {
                  var M = P.value;
                  M.substituted && (M.shaperInfo.category = "VPre");
                }
              }
              function Ec(ft, X) {
                for (var et = ft.glyphForCodePoint(9676).id, P = 0, M = bs(X, 0); P < X.length; P = M, M = bs(X, P)) {
                  var H = void 0, lt = void 0, vt = X[P].shaperInfo, dt = vt.syllableType;
                  if (!(dt !== "virama_terminated_cluster" && dt !== "standard_cluster" && dt !== "broken_cluster")) {
                    if (dt === "broken_cluster" && et) {
                      var ct = new ma(ft, et, [9676]);
                      for (ct.shaperInfo = vt, H = P; H < M && X[H].shaperInfo.category === "R"; H++)
                        ;
                      X.splice(++H, 0, ct), M++;
                    }
                    if (vt.category === "R" && M - P > 1) {
                      for (H = P + 1; H < M; H++)
                        if (vt = X[H].shaperInfo, ws(vt) || vo(X[H])) {
                          vo(X[H]) && H--, X.splice.apply(X, [P, 0].concat(X.splice(P + 1, H - P), [X[H]]));
                          break;
                        }
                    }
                    for (H = P, lt = M; H < M; H++)
                      vt = X[H].shaperInfo, ws(vt) || vo(X[H]) ? lt = vo(X[H]) ? H + 1 : H : (vt.category === "VPre" || vt.category === "VMPre") && lt < H && X.splice.apply(X, [lt, 1, X[H]].concat(X.splice(lt, H - lt)));
                  }
                }
              }
              function bs(ft, X) {
                if (X >= ft.length)
                  return X;
                for (var et = ft[X].shaperInfo.syllable; ++X < ft.length && ft[X].shaperInfo.syllable === et; )
                  ;
                return X;
              }
              function vo(ft) {
                return ft.shaperInfo.category === "H" && !ft.isLigated;
              }
              function ws(ft) {
                return ft.category === "B" || ft.category === "GB";
              }
              var Tc = {
                arab: Ia,
                // Arabic
                mong: Ia,
                // Mongolian
                syrc: Ia,
                // Syriac
                "nko ": Ia,
                // N'Ko
                phag: Ia,
                // Phags Pa
                mand: Ia,
                // Mandaic
                mani: Ia,
                // Manichaean
                phlp: Ia,
                // Psalter Pahlavi
                hang: fs,
                // Hangul
                bng2: hn,
                // Bengali
                beng: hn,
                // Bengali
                dev2: hn,
                // Devanagari
                deva: hn,
                // Devanagari
                gjr2: hn,
                // Gujarati
                gujr: hn,
                // Gujarati
                guru: hn,
                // Gurmukhi
                gur2: hn,
                // Gurmukhi
                knda: hn,
                // Kannada
                knd2: hn,
                // Kannada
                mlm2: hn,
                // Malayalam
                mlym: hn,
                // Malayalam
                ory2: hn,
                // Oriya
                orya: hn,
                // Oriya
                taml: hn,
                // Tamil
                tml2: hn,
                // Tamil
                telu: hn,
                // Telugu
                tel2: hn,
                // Telugu
                khmr: hn,
                // Khmer
                bali: pr,
                // Balinese
                batk: pr,
                // Batak
                brah: pr,
                // Brahmi
                bugi: pr,
                // Buginese
                buhd: pr,
                // Buhid
                cakm: pr,
                // Chakma
                cham: pr,
                // Cham
                dupl: pr,
                // Duployan
                egyp: pr,
                // Egyptian Hieroglyphs
                gran: pr,
                // Grantha
                hano: pr,
                // Hanunoo
                java: pr,
                // Javanese
                kthi: pr,
                // Kaithi
                kali: pr,
                // Kayah Li
                khar: pr,
                // Kharoshthi
                khoj: pr,
                // Khojki
                sind: pr,
                // Khudawadi
                lepc: pr,
                // Lepcha
                limb: pr,
                // Limbu
                mahj: pr,
                // Mahajani
                // mand: UniversalShaper, // Mandaic
                // mani: UniversalShaper, // Manichaean
                mtei: pr,
                // Meitei Mayek
                modi: pr,
                // Modi
                // mong: UniversalShaper, // Mongolian
                // 'nko ': UniversalShaper, // NâKo
                hmng: pr,
                // Pahawh Hmong
                // phag: UniversalShaper, // Phags-pa
                // phlp: UniversalShaper, // Psalter Pahlavi
                rjng: pr,
                // Rejang
                saur: pr,
                // Saurashtra
                shrd: pr,
                // Sharada
                sidd: pr,
                // Siddham
                sinh: pr,
                // Sinhala
                sund: pr,
                // Sundanese
                sylo: pr,
                // Syloti Nagri
                tglg: pr,
                // Tagalog
                tagb: pr,
                // Tagbanwa
                tale: pr,
                // Tai Le
                lana: pr,
                // Tai Tham
                tavt: pr,
                // Tai Viet
                takr: pr,
                // Takri
                tibt: pr,
                // Tibetan
                tfng: pr,
                // Tifinagh
                tirh: pr,
                // Tirhuta
                latn: Ta,
                // Latin
                DFLT: Ta
                // Default
              };
              function Fc(ft) {
                Array.isArray(ft) || (ft = [ft]);
                for (var X = a(ft), et; !(et = X()).done; ) {
                  var P = et.value, M = Tc[P];
                  if (M)
                    return M;
                }
                return Ta;
              }
              for (var Ic = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et.applyLookup = function(M, H) {
                  var lt = this;
                  switch (M) {
                    case 1: {
                      var vt = this.coverageIndex(H.coverage);
                      if (vt === -1)
                        return !1;
                      var dt = this.glyphIterator.cur;
                      switch (H.version) {
                        case 1:
                          dt.id = dt.id + H.deltaGlyphID & 65535;
                          break;
                        case 2:
                          dt.id = H.substitute.get(vt);
                          break;
                      }
                      return !0;
                    }
                    case 2: {
                      var ct = this.coverageIndex(H.coverage);
                      if (ct !== -1) {
                        var Ot, Vt = H.sequences.get(ct);
                        if (Vt.length === 0)
                          return this.glyphs.splice(this.glyphIterator.index, 1), !0;
                        this.glyphIterator.cur.id = Vt[0], this.glyphIterator.cur.ligatureComponent = 0;
                        var se = this.glyphIterator.cur.features, $t = this.glyphIterator.cur, ue = Vt.slice(1).map(function(zn, Sn) {
                          var vn = new ma(lt.font, zn, void 0, se);
                          return vn.shaperInfo = $t.shaperInfo, vn.isLigated = $t.isLigated, vn.ligatureComponent = Sn + 1, vn.substituted = !0, vn.isMultiplied = !0, vn;
                        });
                        return (Ot = this.glyphs).splice.apply(Ot, [this.glyphIterator.index + 1, 0].concat(ue)), !0;
                      }
                      return !1;
                    }
                    case 3: {
                      var pe = this.coverageIndex(H.coverage);
                      if (pe !== -1) {
                        var Te = 0;
                        return this.glyphIterator.cur.id = H.alternateSet.get(pe)[Te], !0;
                      }
                      return !1;
                    }
                    case 4: {
                      var He = this.coverageIndex(H.coverage);
                      if (He === -1)
                        return !1;
                      for (var _e = a(H.ligatureSets.get(He)), Xe; !(Xe = _e()).done; ) {
                        var hr = Xe.value, sr = this.sequenceMatchIndices(1, hr.components);
                        if (sr) {
                          for (var dr = this.glyphIterator.cur, mr = dr.codePoints.slice(), Hr = a(sr), tn; !(tn = Hr()).done; ) {
                            var Ur, vr = tn.value;
                            (Ur = mr).push.apply(Ur, this.glyphs[vr].codePoints);
                          }
                          var Or = new ma(this.font, hr.glyph, mr, dr.features);
                          Or.shaperInfo = dr.shaperInfo, Or.isLigated = !0, Or.substituted = !0;
                          for (var zr = dr.isMark, un = 0; un < sr.length && zr; un++)
                            zr = this.glyphs[sr[un]].isMark;
                          Or.ligatureID = zr ? null : this.ligatureID++;
                          for (var gr = dr.ligatureID, Br = dr.codePoints.length, jr = Br, xr = this.glyphIterator.index + 1, fn = a(sr), mn; !(mn = fn()).done; ) {
                            var Fn = mn.value;
                            if (zr)
                              xr = Fn;
                            else
                              for (; xr < Fn; ) {
                                var Bn = jr - Br + Math.min(this.glyphs[xr].ligatureComponent || 1, Br);
                                this.glyphs[xr].ligatureID = Or.ligatureID, this.glyphs[xr].ligatureComponent = Bn, xr++;
                              }
                            gr = this.glyphs[xr].ligatureID, Br = this.glyphs[xr].codePoints.length, jr += Br, xr++;
                          }
                          if (gr && !zr)
                            for (var In = xr; In < this.glyphs.length && this.glyphs[In].ligatureID === gr; In++) {
                              var Bn = jr - Br + Math.min(this.glyphs[In].ligatureComponent || 1, Br);
                              this.glyphs[In].ligatureComponent = Bn;
                            }
                          for (var Un = sr.length - 1; Un >= 0; Un--)
                            this.glyphs.splice(sr[Un], 1);
                          return this.glyphs[this.glyphIterator.index] = Or, !0;
                        }
                      }
                      return !1;
                    }
                    case 5:
                      return this.applyContext(H);
                    case 6:
                      return this.applyChainingContext(H);
                    case 7:
                      return this.applyLookup(H.lookupType, H.extension);
                    default:
                      throw new Error("GSUB lookupType ".concat(M, " is not supported"));
                  }
                }, X;
              }(no), Dc = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et.applyPositionValue = function(M, H) {
                  var lt = this.positions[this.glyphIterator.peekIndex(M)];
                  H.xAdvance != null && (lt.xAdvance += H.xAdvance), H.yAdvance != null && (lt.yAdvance += H.yAdvance), H.xPlacement != null && (lt.xOffset += H.xPlacement), H.yPlacement != null && (lt.yOffset += H.yPlacement);
                  var vt = this.font._variationProcessor, dt = this.font.GDEF && this.font.GDEF.itemVariationStore;
                  vt && dt && (H.xPlaDevice && (lt.xOffset += vt.getDelta(dt, H.xPlaDevice.a, H.xPlaDevice.b)), H.yPlaDevice && (lt.yOffset += vt.getDelta(dt, H.yPlaDevice.a, H.yPlaDevice.b)), H.xAdvDevice && (lt.xAdvance += vt.getDelta(dt, H.xAdvDevice.a, H.xAdvDevice.b)), H.yAdvDevice && (lt.yAdvance += vt.getDelta(dt, H.yAdvDevice.a, H.yAdvDevice.b)));
                }, et.applyLookup = function(M, H) {
                  switch (M) {
                    case 1: {
                      var lt = this.coverageIndex(H.coverage);
                      if (lt === -1)
                        return !1;
                      switch (H.version) {
                        case 1:
                          this.applyPositionValue(0, H.value);
                          break;
                        case 2:
                          this.applyPositionValue(0, H.values.get(lt));
                          break;
                      }
                      return !0;
                    }
                    case 2: {
                      var vt = this.glyphIterator.peek();
                      if (!vt)
                        return !1;
                      var dt = this.coverageIndex(H.coverage);
                      if (dt === -1)
                        return !1;
                      switch (H.version) {
                        case 1:
                          for (var ct = H.pairSets.get(dt), Ot = a(ct), Vt; !(Vt = Ot()).done; ) {
                            var se = Vt.value;
                            if (se.secondGlyph === vt.id)
                              return this.applyPositionValue(0, se.value1), this.applyPositionValue(1, se.value2), !0;
                          }
                          return !1;
                        case 2:
                          var $t = this.getClassID(this.glyphIterator.cur.id, H.classDef1), ue = this.getClassID(vt.id, H.classDef2);
                          if ($t === -1 || ue === -1)
                            return !1;
                          var pe = H.classRecords.get($t).get(ue);
                          return this.applyPositionValue(0, pe.value1), this.applyPositionValue(1, pe.value2), !0;
                      }
                    }
                    case 3: {
                      var Te = this.glyphIterator.peekIndex(), He = this.glyphs[Te];
                      if (!He)
                        return !1;
                      var _e = H.entryExitRecords[this.coverageIndex(H.coverage)];
                      if (!_e || !_e.exitAnchor)
                        return !1;
                      var Xe = H.entryExitRecords[this.coverageIndex(H.coverage, He.id)];
                      if (!Xe || !Xe.entryAnchor)
                        return !1;
                      var hr = this.getAnchor(Xe.entryAnchor), sr = this.getAnchor(_e.exitAnchor), dr = this.positions[this.glyphIterator.index], mr = this.positions[Te];
                      switch (this.direction) {
                        case "ltr":
                          dr.xAdvance = sr.x + dr.xOffset;
                          var Hr = hr.x + mr.xOffset;
                          mr.xAdvance -= Hr, mr.xOffset -= Hr;
                          break;
                        case "rtl":
                          Hr = sr.x + dr.xOffset, dr.xAdvance -= Hr, dr.xOffset -= Hr, mr.xAdvance = hr.x + mr.xOffset;
                          break;
                      }
                      return this.glyphIterator.flags.rightToLeft ? (this.glyphIterator.cur.cursiveAttachment = Te, dr.yOffset = hr.y - sr.y) : (He.cursiveAttachment = this.glyphIterator.index, dr.yOffset = sr.y - hr.y), !0;
                    }
                    case 4: {
                      var tn = this.coverageIndex(H.markCoverage);
                      if (tn === -1)
                        return !1;
                      for (var Ur = this.glyphIterator.index; --Ur >= 0 && (this.glyphs[Ur].isMark || this.glyphs[Ur].ligatureComponent > 0); )
                        ;
                      if (Ur < 0)
                        return !1;
                      var vr = this.coverageIndex(H.baseCoverage, this.glyphs[Ur].id);
                      if (vr === -1)
                        return !1;
                      var Or = H.markArray[tn], zr = H.baseArray[vr][Or.class];
                      return this.applyAnchor(Or, zr, Ur), !0;
                    }
                    case 5: {
                      var un = this.coverageIndex(H.markCoverage);
                      if (un === -1)
                        return !1;
                      for (var gr = this.glyphIterator.index; --gr >= 0 && this.glyphs[gr].isMark; )
                        ;
                      if (gr < 0)
                        return !1;
                      var Br = this.coverageIndex(H.ligatureCoverage, this.glyphs[gr].id);
                      if (Br === -1)
                        return !1;
                      var jr = H.ligatureArray[Br], xr = this.glyphIterator.cur, fn = this.glyphs[gr], mn = fn.ligatureID && fn.ligatureID === xr.ligatureID && xr.ligatureComponent > 0 ? Math.min(xr.ligatureComponent, fn.codePoints.length) - 1 : fn.codePoints.length - 1, Fn = H.markArray[un], Bn = jr[mn][Fn.class];
                      return this.applyAnchor(Fn, Bn, gr), !0;
                    }
                    case 6: {
                      var In = this.coverageIndex(H.mark1Coverage);
                      if (In === -1)
                        return !1;
                      var Un = this.glyphIterator.peekIndex(-1), zn = this.glyphs[Un];
                      if (!zn || !zn.isMark)
                        return !1;
                      var Sn = this.glyphIterator.cur, vn = !1;
                      if (Sn.ligatureID === zn.ligatureID ? Sn.ligatureID ? Sn.ligatureComponent === zn.ligatureComponent && (vn = !0) : vn = !0 : (Sn.ligatureID && !Sn.ligatureComponent || zn.ligatureID && !zn.ligatureComponent) && (vn = !0), !vn)
                        return !1;
                      var Rn = this.coverageIndex(H.mark2Coverage, zn.id);
                      if (Rn === -1)
                        return !1;
                      var Rr = H.mark1Array[In], Cr = H.mark2Array[Rn][Rr.class];
                      return this.applyAnchor(Rr, Cr, Un), !0;
                    }
                    case 7:
                      return this.applyContext(H);
                    case 8:
                      return this.applyChainingContext(H);
                    case 9:
                      return this.applyLookup(H.lookupType, H.extension);
                    default:
                      throw new Error("Unsupported GPOS table: ".concat(M));
                  }
                }, et.applyAnchor = function(M, H, lt) {
                  var vt = this.getAnchor(H), dt = this.getAnchor(M.markAnchor);
                  this.positions[lt];
                  var ct = this.positions[this.glyphIterator.index];
                  ct.xOffset = vt.x - dt.x, ct.yOffset = vt.y - dt.y, this.glyphIterator.cur.markAttachment = lt;
                }, et.getAnchor = function(M) {
                  var H = M.xCoordinate, lt = M.yCoordinate, vt = this.font._variationProcessor, dt = this.font.GDEF && this.font.GDEF.itemVariationStore;
                  return vt && dt && (M.xDeviceTable && (H += vt.getDelta(dt, M.xDeviceTable.a, M.xDeviceTable.b)), M.yDeviceTable && (lt += vt.getDelta(dt, M.yDeviceTable.a, M.yDeviceTable.b))), {
                    x: H,
                    y: lt
                  };
                }, et.applyFeatures = function(M, H, lt) {
                  ft.prototype.applyFeatures.call(this, M, H, lt);
                  for (var vt = 0; vt < this.glyphs.length; vt++)
                    this.fixCursiveAttachment(vt);
                  this.fixMarkAttachment();
                }, et.fixCursiveAttachment = function(M) {
                  var H = this.glyphs[M];
                  if (H.cursiveAttachment != null) {
                    var lt = H.cursiveAttachment;
                    H.cursiveAttachment = null, this.fixCursiveAttachment(lt), this.positions[M].yOffset += this.positions[lt].yOffset;
                  }
                }, et.fixMarkAttachment = function() {
                  for (var M = 0; M < this.glyphs.length; M++) {
                    var H = this.glyphs[M];
                    if (H.markAttachment != null) {
                      var lt = H.markAttachment;
                      if (this.positions[M].xOffset += this.positions[lt].xOffset, this.positions[M].yOffset += this.positions[lt].yOffset, this.direction === "ltr")
                        for (var vt = lt; vt < M; vt++)
                          this.positions[M].xOffset -= this.positions[vt].xAdvance, this.positions[M].yOffset -= this.positions[vt].yAdvance;
                      else
                        for (var dt = lt + 1; dt < M + 1; dt++)
                          this.positions[M].xOffset += this.positions[dt].xAdvance, this.positions[M].yOffset += this.positions[dt].yAdvance;
                    }
                  }
                }, X;
              }(no), Pc = /* @__PURE__ */ function() {
                function ft(et) {
                  this.font = et, this.glyphInfos = null, this.plan = null, this.GSUBProcessor = null, this.GPOSProcessor = null, this.fallbackPosition = !0, et.GSUB && (this.GSUBProcessor = new Ic(et, et.GSUB)), et.GPOS && (this.GPOSProcessor = new Dc(et, et.GPOS));
                }
                var X = ft.prototype;
                return X.setup = function(P) {
                  var M = this;
                  this.glyphInfos = P.glyphs.map(function(vt) {
                    return new ma(M.font, vt.id, [].concat(vt.codePoints));
                  });
                  var H = null;
                  this.GPOSProcessor && (H = this.GPOSProcessor.selectScript(P.script, P.language, P.direction)), this.GSUBProcessor && (H = this.GSUBProcessor.selectScript(P.script, P.language, P.direction)), this.shaper = Fc(H), this.plan = new wu(this.font, H, P.direction), this.shaper.plan(this.plan, this.glyphInfos, P.features);
                  for (var lt in this.plan.allFeatures)
                    P.features[lt] = !0;
                }, X.substitute = function(P) {
                  var M = this;
                  this.GSUBProcessor && (this.plan.process(this.GSUBProcessor, this.glyphInfos), P.glyphs = this.glyphInfos.map(function(H) {
                    return M.font.getGlyph(H.id, H.codePoints);
                  }));
                }, X.position = function(P) {
                  return this.shaper.zeroMarkWidths === "BEFORE_GPOS" && this.zeroMarkAdvances(P.positions), this.GPOSProcessor && this.plan.process(this.GPOSProcessor, this.glyphInfos, P.positions), this.shaper.zeroMarkWidths === "AFTER_GPOS" && this.zeroMarkAdvances(P.positions), P.direction === "rtl" && (P.glyphs.reverse(), P.positions.reverse()), this.GPOSProcessor && this.GPOSProcessor.features;
                }, X.zeroMarkAdvances = function(P) {
                  for (var M = 0; M < this.glyphInfos.length; M++)
                    this.glyphInfos[M].isMark && (P[M].xAdvance = 0, P[M].yAdvance = 0);
                }, X.cleanup = function() {
                  this.glyphInfos = null, this.plan = null, this.shaper = null;
                }, X.getAvailableFeatures = function(P, M) {
                  var H = [];
                  return this.GSUBProcessor && (this.GSUBProcessor.selectScript(P, M), H.push.apply(H, Object.keys(this.GSUBProcessor.features))), this.GPOSProcessor && (this.GPOSProcessor.selectScript(P, M), H.push.apply(H, Object.keys(this.GPOSProcessor.features))), H;
                }, ft;
              }(), Oc = /* @__PURE__ */ function() {
                function ft(et) {
                  this.font = et, this.unicodeLayoutEngine = null, this.kernProcessor = null, this.font.morx ? this.engine = new bu(this.font) : (this.font.GSUB || this.font.GPOS) && (this.engine = new Pc(this.font));
                }
                var X = ft.prototype;
                return X.layout = function(P, M, H, lt, vt) {
                  if (typeof M == "string" && (vt = lt, lt = H, H = M, M = []), typeof P == "string") {
                    H == null && (H = Ql(P));
                    var dt = this.font.glyphsForString(P);
                  } else {
                    if (H == null) {
                      for (var ct = [], Ot = a(P), Vt; !(Vt = Ot()).done; ) {
                        var se = Vt.value;
                        ct.push.apply(ct, se.codePoints);
                      }
                      H = $l(ct);
                    }
                    var dt = P;
                  }
                  var $t = new _l(dt, M, H, lt, vt);
                  return dt.length === 0 ? ($t.positions = [], $t) : (this.engine && this.engine.setup && this.engine.setup($t), this.substitute($t), this.position($t), this.hideDefaultIgnorables($t.glyphs, $t.positions), this.engine && this.engine.cleanup && this.engine.cleanup(), $t);
                }, X.substitute = function(P) {
                  this.engine && this.engine.substitute && this.engine.substitute(P);
                }, X.position = function(P) {
                  P.positions = P.glyphs.map(function(H) {
                    return new tu(H.advanceWidth);
                  });
                  var M = null;
                  this.engine && this.engine.position && (M = this.engine.position(P)), !M && (!this.engine || this.engine.fallbackPosition) && (this.unicodeLayoutEngine || (this.unicodeLayoutEngine = new Zl(this.font)), this.unicodeLayoutEngine.positionGlyphs(P.glyphs, P.positions)), (!M || !M.kern) && P.features.kern !== !1 && this.font.kern && (this.kernProcessor || (this.kernProcessor = new Xl(this.font)), this.kernProcessor.process(P.glyphs, P.positions), P.features.kern = !0);
                }, X.hideDefaultIgnorables = function(P, M) {
                  for (var H = this.font.glyphForCodePoint(32), lt = 0; lt < P.length; lt++)
                    this.isDefaultIgnorable(P[lt].codePoints[0]) && (P[lt] = H, M[lt].xAdvance = 0, M[lt].yAdvance = 0);
                }, X.isDefaultIgnorable = function(P) {
                  var M = P >> 16;
                  if (M === 0)
                    switch (P >> 8) {
                      case 0:
                        return P === 173;
                      case 3:
                        return P === 847;
                      case 6:
                        return P === 1564;
                      case 23:
                        return 6068 <= P && P <= 6069;
                      case 24:
                        return 6155 <= P && P <= 6158;
                      case 32:
                        return 8203 <= P && P <= 8207 || 8234 <= P && P <= 8238 || 8288 <= P && P <= 8303;
                      case 254:
                        return 65024 <= P && P <= 65039 || P === 65279;
                      case 255:
                        return 65520 <= P && P <= 65528;
                      default:
                        return !1;
                    }
                  else
                    switch (M) {
                      case 1:
                        return 113824 <= P && P <= 113827 || 119155 <= P && P <= 119162;
                      case 14:
                        return 917504 <= P && P <= 921599;
                      default:
                        return !1;
                    }
                }, X.getAvailableFeatures = function(P, M) {
                  var H = [];
                  return this.engine && H.push.apply(H, this.engine.getAvailableFeatures(P, M)), this.font.kern && H.indexOf("kern") === -1 && H.push("kern"), H;
                }, X.stringsForGlyph = function(P) {
                  for (var M = /* @__PURE__ */ new Set(), H = this.font._cmapProcessor.codePointsForGlyph(P), lt = a(H), vt; !(vt = lt()).done; ) {
                    var dt = vt.value;
                    M.add(String.fromCodePoint(dt));
                  }
                  if (this.engine && this.engine.stringsForGlyph)
                    for (var ct = a(this.engine.stringsForGlyph(P)), Ot; !(Ot = ct()).done; ) {
                      var Vt = Ot.value;
                      M.add(Vt);
                    }
                  return Array.from(M);
                }, ft;
              }(), Bc = {
                moveTo: "M",
                lineTo: "L",
                quadraticCurveTo: "Q",
                bezierCurveTo: "C",
                closePath: "Z"
              }, po = /* @__PURE__ */ function() {
                function ft() {
                  this.commands = [], this._bbox = null, this._cbox = null;
                }
                var X = ft.prototype;
                return X.toFunction = function() {
                  var P = this;
                  return function(M) {
                    P.commands.forEach(function(H) {
                      return M[H.command].apply(M, H.args);
                    });
                  };
                }, X.toSVG = function() {
                  var P = this.commands.map(function(M) {
                    var H = M.args.map(function(lt) {
                      return Math.round(lt * 100) / 100;
                    });
                    return "".concat(Bc[M.command]).concat(H.join(" "));
                  });
                  return P.join("");
                }, X.mapPoints = function(P) {
                  for (var M = new ft(), H = a(this.commands), lt; !(lt = H()).done; ) {
                    for (var vt = lt.value, dt = [], ct = 0; ct < vt.args.length; ct += 2) {
                      var Ot = P(vt.args[ct], vt.args[ct + 1]), Vt = Ot[0], se = Ot[1];
                      dt.push(Vt, se);
                    }
                    M[vt.command].apply(M, dt);
                  }
                  return M;
                }, X.transform = function(P, M, H, lt, vt, dt) {
                  return this.mapPoints(function(ct, Ot) {
                    return ct = P * ct + H * Ot + vt, Ot = M * ct + lt * Ot + dt, [ct, Ot];
                  });
                }, X.translate = function(P, M) {
                  return this.transform(1, 0, 0, 1, P, M);
                }, X.rotate = function(P) {
                  var M = Math.cos(P), H = Math.sin(P);
                  return this.transform(M, H, -H, M, 0, 0);
                }, X.scale = function(P, M) {
                  return M === void 0 && (M = P), this.transform(P, 0, 0, M, 0, 0);
                }, i(ft, [{
                  key: "cbox",
                  get: function() {
                    if (!this._cbox) {
                      for (var P = new qa(), M = a(this.commands), H; !(H = M()).done; )
                        for (var lt = H.value, vt = 0; vt < lt.args.length; vt += 2)
                          P.addPoint(lt.args[vt], lt.args[vt + 1]);
                      this._cbox = Object.freeze(P);
                    }
                    return this._cbox;
                  }
                  /**
                   * Gets the exact bounding box of the path by evaluating curve segments.
                   * Slower to compute than the control box, but more accurate.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    if (this._bbox)
                      return this._bbox;
                    for (var P = new qa(), M = 0, H = 0, lt = function(fn) {
                      return Math.pow(1 - fn, 3) * mr[vr] + 3 * Math.pow(1 - fn, 2) * fn * Hr[vr] + 3 * (1 - fn) * Math.pow(fn, 2) * tn[vr] + Math.pow(fn, 3) * Ur[vr];
                    }, vt = a(this.commands), dt; !(dt = vt()).done; ) {
                      var ct = dt.value;
                      switch (ct.command) {
                        case "moveTo":
                        case "lineTo":
                          var Ot = ct.args, Vt = Ot[0], se = Ot[1];
                          P.addPoint(Vt, se), M = Vt, H = se;
                          break;
                        case "quadraticCurveTo":
                        case "bezierCurveTo":
                          if (ct.command === "quadraticCurveTo")
                            var $t = ct.args, ue = $t[0], pe = $t[1], Te = $t[2], He = $t[3], _e = M + 2 / 3 * (ue - M), Xe = H + 2 / 3 * (pe - H), hr = Te + 2 / 3 * (ue - Te), sr = He + 2 / 3 * (pe - He);
                          else
                            var dr = ct.args, _e = dr[0], Xe = dr[1], hr = dr[2], sr = dr[3], Te = dr[4], He = dr[5];
                          P.addPoint(Te, He);
                          for (var mr = [M, H], Hr = [_e, Xe], tn = [hr, sr], Ur = [Te, He], vr = 0; vr <= 1; vr++) {
                            var Or = 6 * mr[vr] - 12 * Hr[vr] + 6 * tn[vr], zr = -3 * mr[vr] + 9 * Hr[vr] - 9 * tn[vr] + 3 * Ur[vr];
                            if (ct = 3 * Hr[vr] - 3 * mr[vr], zr === 0) {
                              if (Or === 0)
                                continue;
                              var un = -ct / Or;
                              0 < un && un < 1 && (vr === 0 ? P.addPoint(lt(un), P.maxY) : vr === 1 && P.addPoint(P.maxX, lt(un)));
                              continue;
                            }
                            var gr = Math.pow(Or, 2) - 4 * ct * zr;
                            if (!(gr < 0)) {
                              var Br = (-Or + Math.sqrt(gr)) / (2 * zr);
                              0 < Br && Br < 1 && (vr === 0 ? P.addPoint(lt(Br), P.maxY) : vr === 1 && P.addPoint(P.maxX, lt(Br)));
                              var jr = (-Or - Math.sqrt(gr)) / (2 * zr);
                              0 < jr && jr < 1 && (vr === 0 ? P.addPoint(lt(jr), P.maxY) : vr === 1 && P.addPoint(P.maxX, lt(jr)));
                            }
                          }
                          M = Te, H = He;
                          break;
                      }
                    }
                    return this._bbox = Object.freeze(P);
                  }
                }]), ft;
              }(), Rc = function(X) {
                po.prototype[X] = function() {
                  this._bbox = this._cbox = null;
                  for (var et = arguments.length, P = new Array(et), M = 0; M < et; M++)
                    P[M] = arguments[M];
                  return this.commands.push({
                    command: X,
                    args: P
                  }), this;
                };
              }, n0 = 0, Ss = ["moveTo", "lineTo", "quadraticCurveTo", "bezierCurveTo", "closePath"]; n0 < Ss.length; n0++) {
                var Lc = Ss[n0];
                Rc(Lc);
              }
              var Ei = [".notdef", ".null", "nonmarkingreturn", "space", "exclam", "quotedbl", "numbersign", "dollar", "percent", "ampersand", "quotesingle", "parenleft", "parenright", "asterisk", "plus", "comma", "hyphen", "period", "slash", "zero", "one", "two", "three", "four", "five", "six", "seven", "eight", "nine", "colon", "semicolon", "less", "equal", "greater", "question", "at", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "bracketleft", "backslash", "bracketright", "asciicircum", "underscore", "grave", "a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "braceleft", "bar", "braceright", "asciitilde", "Adieresis", "Aring", "Ccedilla", "Eacute", "Ntilde", "Odieresis", "Udieresis", "aacute", "agrave", "acircumflex", "adieresis", "atilde", "aring", "ccedilla", "eacute", "egrave", "ecircumflex", "edieresis", "iacute", "igrave", "icircumflex", "idieresis", "ntilde", "oacute", "ograve", "ocircumflex", "odieresis", "otilde", "uacute", "ugrave", "ucircumflex", "udieresis", "dagger", "degree", "cent", "sterling", "section", "bullet", "paragraph", "germandbls", "registered", "copyright", "trademark", "acute", "dieresis", "notequal", "AE", "Oslash", "infinity", "plusminus", "lessequal", "greaterequal", "yen", "mu", "partialdiff", "summation", "product", "pi", "integral", "ordfeminine", "ordmasculine", "Omega", "ae", "oslash", "questiondown", "exclamdown", "logicalnot", "radical", "florin", "approxequal", "Delta", "guillemotleft", "guillemotright", "ellipsis", "nonbreakingspace", "Agrave", "Atilde", "Otilde", "OE", "oe", "endash", "emdash", "quotedblleft", "quotedblright", "quoteleft", "quoteright", "divide", "lozenge", "ydieresis", "Ydieresis", "fraction", "currency", "guilsinglleft", "guilsinglright", "fi", "fl", "daggerdbl", "periodcentered", "quotesinglbase", "quotedblbase", "perthousand", "Acircumflex", "Ecircumflex", "Aacute", "Edieresis", "Egrave", "Iacute", "Icircumflex", "Idieresis", "Igrave", "Oacute", "Ocircumflex", "apple", "Ograve", "Uacute", "Ucircumflex", "Ugrave", "dotlessi", "circumflex", "tilde", "macron", "breve", "dotaccent", "ring", "cedilla", "hungarumlaut", "ogonek", "caron", "Lslash", "lslash", "Scaron", "scaron", "Zcaron", "zcaron", "brokenbar", "Eth", "eth", "Yacute", "yacute", "Thorn", "thorn", "minus", "multiply", "onesuperior", "twosuperior", "threesuperior", "onehalf", "onequarter", "threequarters", "franc", "Gbreve", "gbreve", "Idotaccent", "Scedilla", "scedilla", "Cacute", "cacute", "Ccaron", "ccaron", "dcroat"], dn, go = (dn = /* @__PURE__ */ function() {
                function ft(et, P, M) {
                  this.id = et, this.codePoints = P, this._font = M, this.isMark = this.codePoints.length > 0 && this.codePoints.every(D.isMark), this.isLigature = this.codePoints.length > 1;
                }
                var X = ft.prototype;
                return X._getPath = function() {
                  return new po();
                }, X._getCBox = function() {
                  return this.path.cbox;
                }, X._getBBox = function() {
                  return this.path.bbox;
                }, X._getTableMetrics = function(P) {
                  if (this.id < P.metrics.length)
                    return P.metrics.get(this.id);
                  var M = P.metrics.get(P.metrics.length - 1), H = {
                    advance: M ? M.advance : 0,
                    bearing: P.bearings.get(this.id - P.metrics.length) || 0
                  };
                  return H;
                }, X._getMetrics = function(P) {
                  if (this._metrics)
                    return this._metrics;
                  var M = this._getTableMetrics(this._font.hmtx), H = M.advance, lt = M.bearing;
                  if (this._font.vmtx)
                    var vt = this._getTableMetrics(this._font.vmtx), dt = vt.advance, ct = vt.bearing;
                  else {
                    var Ot;
                    if ((typeof P > "u" || P === null) && (P = this.cbox), (Ot = this._font["OS/2"]) && Ot.version > 0)
                      var dt = Math.abs(Ot.typoAscender - Ot.typoDescender), ct = Ot.typoAscender - P.maxY;
                    else
                      var Vt = this._font.hhea, dt = Math.abs(Vt.ascent - Vt.descent), ct = Vt.ascent - P.maxY;
                  }
                  return this._font._variationProcessor && this._font.HVAR && (H += this._font._variationProcessor.getAdvanceAdjustment(this.id, this._font.HVAR)), this._metrics = {
                    advanceWidth: H,
                    advanceHeight: dt,
                    leftBearing: lt,
                    topBearing: ct
                  };
                }, X.getScaledPath = function(P) {
                  var M = 1 / this._font.unitsPerEm * P;
                  return this.path.scale(M);
                }, X._getName = function() {
                  var P = this._font.post;
                  if (!P)
                    return null;
                  switch (P.version) {
                    case 1:
                      return Ei[this.id];
                    case 2:
                      var M = P.glyphNameIndex[this.id];
                      return M < Ei.length ? Ei[M] : P.names[M - Ei.length];
                    case 2.5:
                      return Ei[this.id + P.offsets[this.id]];
                    case 4:
                      return String.fromCharCode(P.map[this.id]);
                  }
                }, X.render = function(P, M) {
                  P.save();
                  var H = 1 / this._font.head.unitsPerEm * M;
                  P.scale(H, H);
                  var lt = this.path.toFunction();
                  lt(P), P.fill(), P.restore();
                }, i(ft, [{
                  key: "cbox",
                  get: function() {
                    return this._getCBox();
                  }
                  /**
                   * The glyphâs bounding box, i.e. the rectangle that encloses the
                   * glyph outline as tightly as possible.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    return this._getBBox();
                  }
                  /**
                   * A vector Path object representing the glyph outline.
                   * @type {Path}
                   */
                }, {
                  key: "path",
                  get: function() {
                    return this._getPath();
                  }
                }, {
                  key: "advanceWidth",
                  get: function() {
                    return this._getMetrics().advanceWidth;
                  }
                  /**
                   * The glyph's advance height.
                   * @type {number}
                   */
                }, {
                  key: "advanceHeight",
                  get: function() {
                    return this._getMetrics().advanceHeight;
                  }
                }, {
                  key: "ligatureCaretPositions",
                  get: function() {
                  }
                }, {
                  key: "name",
                  get: function() {
                    return this._getName();
                  }
                }]), ft;
              }(), W(dn.prototype, "cbox", [J], Object.getOwnPropertyDescriptor(dn.prototype, "cbox"), dn.prototype), W(dn.prototype, "bbox", [J], Object.getOwnPropertyDescriptor(dn.prototype, "bbox"), dn.prototype), W(dn.prototype, "path", [J], Object.getOwnPropertyDescriptor(dn.prototype, "path"), dn.prototype), W(dn.prototype, "advanceWidth", [J], Object.getOwnPropertyDescriptor(dn.prototype, "advanceWidth"), dn.prototype), W(dn.prototype, "advanceHeight", [J], Object.getOwnPropertyDescriptor(dn.prototype, "advanceHeight"), dn.prototype), W(dn.prototype, "name", [J], Object.getOwnPropertyDescriptor(dn.prototype, "name"), dn.prototype), dn), As = new e.Struct({
                numberOfContours: e.int16,
                // if negative, this is a composite glyph
                xMin: e.int16,
                yMin: e.int16,
                xMax: e.int16,
                yMax: e.int16
              }), Nc = 1, Mc = 2, kc = 4, Uc = 8, zc = 16, Wc = 32, Hc = 1, jc = 8, Cs = 32, Gc = 64, Vc = 128, Xc = 256, Sa = /* @__PURE__ */ function() {
                function ft(et, P, M, H) {
                  M === void 0 && (M = 0), H === void 0 && (H = 0), this.onCurve = et, this.endContour = P, this.x = M, this.y = H;
                }
                var X = ft.prototype;
                return X.copy = function() {
                  return new ft(this.onCurve, this.endContour, this.x, this.y);
                }, ft;
              }(), Zc = function(X, et, P) {
                this.glyphID = X, this.dx = et, this.dy = P, this.pos = 0, this.scaleX = this.scaleY = 1, this.scale01 = this.scale10 = 0;
              }, yo = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et._getCBox = function(M) {
                  if (this._font._variationProcessor && !M)
                    return this.path.cbox;
                  var H = this._font._getTableStream("glyf");
                  H.pos += this._font.loca.offsets[this.id];
                  var lt = As.decode(H), vt = new qa(lt.xMin, lt.yMin, lt.xMax, lt.yMax);
                  return Object.freeze(vt);
                }, et._parseGlyphCoord = function(M, H, lt, vt) {
                  if (lt) {
                    var dt = M.readUInt8();
                    vt || (dt = -dt), dt += H;
                  } else if (vt)
                    var dt = H;
                  else
                    var dt = H + M.readInt16BE();
                  return dt;
                }, et._decode = function() {
                  var M = this._font.loca.offsets[this.id], H = this._font.loca.offsets[this.id + 1];
                  if (M === H)
                    return null;
                  var lt = this._font._getTableStream("glyf");
                  lt.pos += M;
                  var vt = lt.pos, dt = As.decode(lt);
                  return dt.numberOfContours > 0 ? this._decodeSimple(dt, lt) : dt.numberOfContours < 0 && this._decodeComposite(dt, lt, vt), dt;
                }, et._decodeSimple = function(M, H) {
                  M.points = [];
                  var lt = new e.Array(e.uint16, M.numberOfContours).decode(H);
                  M.instructions = new e.Array(e.uint8, e.uint16).decode(H);
                  for (var vt = [], dt = lt[lt.length - 1] + 1; vt.length < dt; ) {
                    var ct = H.readUInt8();
                    if (vt.push(ct), ct & Uc)
                      for (var Ot = H.readUInt8(), Vt = 0; Vt < Ot; Vt++)
                        vt.push(ct);
                  }
                  for (var se = 0; se < vt.length; se++) {
                    var ct = vt[se], $t = new Sa(!!(ct & Nc), lt.indexOf(se) >= 0, 0, 0);
                    M.points.push($t);
                  }
                  for (var ue = 0, se = 0; se < vt.length; se++) {
                    var ct = vt[se];
                    M.points[se].x = ue = this._parseGlyphCoord(H, ue, ct & Mc, ct & zc);
                  }
                  for (var pe = 0, se = 0; se < vt.length; se++) {
                    var ct = vt[se];
                    M.points[se].y = pe = this._parseGlyphCoord(H, pe, ct & kc, ct & Wc);
                  }
                  if (this._font._variationProcessor) {
                    var Te = M.points.slice();
                    Te.push.apply(Te, this._getPhantomPoints(M)), this._font._variationProcessor.transformPoints(this.id, Te), M.phantomPoints = Te.slice(-4);
                  }
                }, et._decodeComposite = function(M, H, lt) {
                  lt === void 0 && (lt = 0), M.components = [];
                  for (var vt = !1, dt = Cs; dt & Cs; ) {
                    dt = H.readUInt16BE();
                    var ct = H.pos - lt, Ot = H.readUInt16BE();
                    if (vt || (vt = (dt & Xc) !== 0), dt & Hc)
                      var Vt = H.readInt16BE(), se = H.readInt16BE();
                    else
                      var Vt = H.readInt8(), se = H.readInt8();
                    var $t = new Zc(Ot, Vt, se);
                    $t.pos = ct, dt & jc ? $t.scaleX = $t.scaleY = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824 : dt & Gc ? ($t.scaleX = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824, $t.scaleY = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824) : dt & Vc && ($t.scaleX = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824, $t.scale01 = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824, $t.scale10 = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824, $t.scaleY = (H.readUInt8() << 24 | H.readUInt8() << 16) / 1073741824), M.components.push($t);
                  }
                  if (this._font._variationProcessor) {
                    for (var ue = [], pe = 0; pe < M.components.length; pe++) {
                      var $t = M.components[pe];
                      ue.push(new Sa(!0, !0, $t.dx, $t.dy));
                    }
                    ue.push.apply(ue, this._getPhantomPoints(M)), this._font._variationProcessor.transformPoints(this.id, ue), M.phantomPoints = ue.splice(-4, 4);
                    for (var Te = 0; Te < ue.length; Te++) {
                      var He = ue[Te];
                      M.components[Te].dx = He.x, M.components[Te].dy = He.y;
                    }
                  }
                  return vt;
                }, et._getPhantomPoints = function(M) {
                  var H = this._getCBox(!0);
                  this._metrics == null && (this._metrics = go.prototype._getMetrics.call(this, H));
                  var lt = this._metrics, vt = lt.advanceWidth, dt = lt.advanceHeight, ct = lt.leftBearing, Ot = lt.topBearing;
                  return [new Sa(!1, !0, M.xMin - ct, 0), new Sa(!1, !0, M.xMin - ct + vt, 0), new Sa(!1, !0, 0, M.yMax + Ot), new Sa(!1, !0, 0, M.yMax + Ot + dt)];
                }, et._getContours = function() {
                  var M = this._decode();
                  if (!M)
                    return [];
                  var H = [];
                  if (M.numberOfContours < 0)
                    for (var lt = a(M.components), vt; !(vt = lt()).done; )
                      for (var dt = vt.value, ct = this._font.getGlyph(dt.glyphID)._getContours(), Ot = 0; Ot < ct.length; Ot++)
                        for (var Vt = ct[Ot], se = 0; se < Vt.length; se++) {
                          var $t = Vt[se], ue = $t.x * dt.scaleX + $t.y * dt.scale01 + dt.dx, pe = $t.y * dt.scaleY + $t.x * dt.scale10 + dt.dy;
                          H.push(new Sa($t.onCurve, $t.endContour, ue, pe));
                        }
                  else
                    H = M.points || [];
                  M.phantomPoints && !this._font.directory.tables.HVAR && (this._metrics.advanceWidth = M.phantomPoints[1].x - M.phantomPoints[0].x, this._metrics.advanceHeight = M.phantomPoints[3].y - M.phantomPoints[2].y, this._metrics.leftBearing = M.xMin - M.phantomPoints[0].x, this._metrics.topBearing = M.phantomPoints[2].y - M.yMax);
                  for (var Te = [], He = [], _e = 0; _e < H.length; _e++) {
                    var Xe = H[_e];
                    He.push(Xe), Xe.endContour && (Te.push(He), He = []);
                  }
                  return Te;
                }, et._getMetrics = function() {
                  if (this._metrics)
                    return this._metrics;
                  var M = this._getCBox(!0);
                  return ft.prototype._getMetrics.call(this, M), this._font._variationProcessor && !this._font.HVAR && this.path, this._metrics;
                }, et._getPath = function() {
                  for (var M = this._getContours(), H = new po(), lt = 0; lt < M.length; lt++) {
                    var vt = M[lt], dt = vt[0], ct = vt[vt.length - 1], Ot = 0;
                    if (dt.onCurve) {
                      var Vt = null;
                      Ot = 1;
                    } else {
                      ct.onCurve ? dt = ct : dt = new Sa(!1, !1, (dt.x + ct.x) / 2, (dt.y + ct.y) / 2);
                      var Vt = dt;
                    }
                    H.moveTo(dt.x, dt.y);
                    for (var se = Ot; se < vt.length; se++) {
                      var $t = vt[se], ue = se === 0 ? dt : vt[se - 1];
                      if (ue.onCurve && $t.onCurve)
                        H.lineTo($t.x, $t.y);
                      else if (ue.onCurve && !$t.onCurve)
                        var Vt = $t;
                      else if (!ue.onCurve && !$t.onCurve) {
                        var pe = (ue.x + $t.x) / 2, Te = (ue.y + $t.y) / 2;
                        H.quadraticCurveTo(ue.x, ue.y, pe, Te);
                        var Vt = $t;
                      } else if (!ue.onCurve && $t.onCurve) {
                        H.quadraticCurveTo(Vt.x, Vt.y, $t.x, $t.y);
                        var Vt = null;
                      } else
                        throw new Error("Unknown TTF path state");
                    }
                    Vt && H.quadraticCurveTo(Vt.x, Vt.y, dt.x, dt.y), H.closePath();
                  }
                  return H;
                }, X;
              }(go), Yc = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et._getName = function() {
                  return this._font.CFF2 ? ft.prototype._getName.call(this) : this._font["CFF "].getGlyphName(this.id);
                }, et.bias = function(M) {
                  return M.length < 1240 ? 107 : M.length < 33900 ? 1131 : 32768;
                }, et._getPath = function() {
                  var M = this._font.CFF2 || this._font["CFF "], H = M.stream, lt = M.topDict.CharStrings[this.id], vt = lt.offset + lt.length;
                  H.pos = lt.offset;
                  var dt = new po(), ct = [], Ot = [], Vt = null, se = 0, $t = 0, ue = 0, pe, Te, He = !1;
                  this._usedGsubrs = pe = {}, this._usedSubrs = Te = {};
                  var _e = M.globalSubrIndex || [], Xe = this.bias(_e), hr = M.privateDictForGlyph(this.id) || {}, sr = hr.Subrs || [], dr = this.bias(sr), mr = M.topDict.vstore && M.topDict.vstore.itemVariationStore, Hr = hr.vsindex, tn = this._font._variationProcessor;
                  function Ur() {
                    Vt == null && (Vt = ct.shift() + hr.nominalWidthX);
                  }
                  function vr() {
                    return ct.length % 2 !== 0 && Ur(), se += ct.length >> 1, ct.length = 0;
                  }
                  function Or(un, gr) {
                    He && dt.closePath(), dt.moveTo(un, gr), He = !0;
                  }
                  var zr = function un() {
                    for (; H.pos < vt; ) {
                      var gr = H.readUInt8();
                      if (gr < 32)
                        switch (gr) {
                          case 1:
                          case 3:
                          case 18:
                          case 23:
                            vr();
                            break;
                          case 4:
                            ct.length > 1 && Ur(), ue += ct.shift(), Or($t, ue);
                            break;
                          case 5:
                            for (; ct.length >= 2; )
                              $t += ct.shift(), ue += ct.shift(), dt.lineTo($t, ue);
                            break;
                          case 6:
                          case 7:
                            for (var Br = gr === 6; ct.length >= 1; )
                              Br ? $t += ct.shift() : ue += ct.shift(), dt.lineTo($t, ue), Br = !Br;
                            break;
                          case 8:
                            for (; ct.length > 0; ) {
                              var Rr = $t + ct.shift(), Cr = ue + ct.shift(), Qr = Rr + ct.shift(), Gr = Cr + ct.shift();
                              $t = Qr + ct.shift(), ue = Gr + ct.shift(), dt.bezierCurveTo(Rr, Cr, Qr, Gr, $t, ue);
                            }
                            break;
                          case 10:
                            var jr = ct.pop() + dr, xr = sr[jr];
                            if (xr) {
                              Te[jr] = !0;
                              var fn = H.pos, mn = vt;
                              H.pos = xr.offset, vt = xr.offset + xr.length, un(), H.pos = fn, vt = mn;
                            }
                            break;
                          case 11:
                            if (M.version >= 2)
                              break;
                            return;
                          case 14:
                            if (M.version >= 2)
                              break;
                            ct.length > 0 && Ur(), He && (dt.closePath(), He = !1);
                            break;
                          case 15: {
                            if (M.version < 2)
                              throw new Error("vsindex operator not supported in CFF v1");
                            Hr = ct.pop();
                            break;
                          }
                          case 16: {
                            if (M.version < 2)
                              throw new Error("blend operator not supported in CFF v1");
                            if (!tn)
                              throw new Error("blend operator in non-variation font");
                            for (var Fn = tn.getBlendVector(mr, Hr), Bn = ct.pop(), In = Bn * Fn.length, Un = ct.length - In, zn = Un - Bn, Sn = 0; Sn < Bn; Sn++) {
                              for (var vn = ct[zn + Sn], Rn = 0; Rn < Fn.length; Rn++)
                                vn += Fn[Rn] * ct[Un++];
                              ct[zn + Sn] = vn;
                            }
                            for (; In--; )
                              ct.pop();
                            break;
                          }
                          case 19:
                          case 20:
                            vr(), H.pos += se + 7 >> 3;
                            break;
                          case 21:
                            ct.length > 2 && Ur(), $t += ct.shift(), ue += ct.shift(), Or($t, ue);
                            break;
                          case 22:
                            ct.length > 1 && Ur(), $t += ct.shift(), Or($t, ue);
                            break;
                          case 24:
                            for (; ct.length >= 8; ) {
                              var Rr = $t + ct.shift(), Cr = ue + ct.shift(), Qr = Rr + ct.shift(), Gr = Cr + ct.shift();
                              $t = Qr + ct.shift(), ue = Gr + ct.shift(), dt.bezierCurveTo(Rr, Cr, Qr, Gr, $t, ue);
                            }
                            $t += ct.shift(), ue += ct.shift(), dt.lineTo($t, ue);
                            break;
                          case 25:
                            for (; ct.length >= 8; )
                              $t += ct.shift(), ue += ct.shift(), dt.lineTo($t, ue);
                            var Rr = $t + ct.shift(), Cr = ue + ct.shift(), Qr = Rr + ct.shift(), Gr = Cr + ct.shift();
                            $t = Qr + ct.shift(), ue = Gr + ct.shift(), dt.bezierCurveTo(Rr, Cr, Qr, Gr, $t, ue);
                            break;
                          case 26:
                            for (ct.length % 2 && ($t += ct.shift()); ct.length >= 4; )
                              Rr = $t, Cr = ue + ct.shift(), Qr = Rr + ct.shift(), Gr = Cr + ct.shift(), $t = Qr, ue = Gr + ct.shift(), dt.bezierCurveTo(Rr, Cr, Qr, Gr, $t, ue);
                            break;
                          case 27:
                            for (ct.length % 2 && (ue += ct.shift()); ct.length >= 4; )
                              Rr = $t + ct.shift(), Cr = ue, Qr = Rr + ct.shift(), Gr = Cr + ct.shift(), $t = Qr + ct.shift(), ue = Gr, dt.bezierCurveTo(Rr, Cr, Qr, Gr, $t, ue);
                            break;
                          case 28:
                            ct.push(H.readInt16BE());
                            break;
                          case 29:
                            if (jr = ct.pop() + Xe, xr = _e[jr], xr) {
                              pe[jr] = !0;
                              var fn = H.pos, mn = vt;
                              H.pos = xr.offset, vt = xr.offset + xr.length, un(), H.pos = fn, vt = mn;
                            }
                            break;
                          case 30:
                          case 31:
                            for (Br = gr === 31; ct.length >= 4; )
                              Br ? (Rr = $t + ct.shift(), Cr = ue, Qr = Rr + ct.shift(), Gr = Cr + ct.shift(), ue = Gr + ct.shift(), $t = Qr + (ct.length === 1 ? ct.shift() : 0)) : (Rr = $t, Cr = ue + ct.shift(), Qr = Rr + ct.shift(), Gr = Cr + ct.shift(), $t = Qr + ct.shift(), ue = Gr + (ct.length === 1 ? ct.shift() : 0)), dt.bezierCurveTo(Rr, Cr, Qr, Gr, $t, ue), Br = !Br;
                            break;
                          case 12:
                            switch (gr = H.readUInt8(), gr) {
                              case 3:
                                var Lr = ct.pop(), An = ct.pop();
                                ct.push(Lr && An ? 1 : 0);
                                break;
                              case 4:
                                Lr = ct.pop(), An = ct.pop(), ct.push(Lr || An ? 1 : 0);
                                break;
                              case 5:
                                Lr = ct.pop(), ct.push(Lr ? 0 : 1);
                                break;
                              case 9:
                                Lr = ct.pop(), ct.push(Math.abs(Lr));
                                break;
                              case 10:
                                Lr = ct.pop(), An = ct.pop(), ct.push(Lr + An);
                                break;
                              case 11:
                                Lr = ct.pop(), An = ct.pop(), ct.push(Lr - An);
                                break;
                              case 12:
                                Lr = ct.pop(), An = ct.pop(), ct.push(Lr / An);
                                break;
                              case 14:
                                Lr = ct.pop(), ct.push(-Lr);
                                break;
                              case 15:
                                Lr = ct.pop(), An = ct.pop(), ct.push(Lr === An ? 1 : 0);
                                break;
                              case 18:
                                ct.pop();
                                break;
                              case 20:
                                var ei = ct.pop(), aa = ct.pop();
                                Ot[aa] = ei;
                                break;
                              case 21:
                                aa = ct.pop(), ct.push(Ot[aa] || 0);
                                break;
                              case 22:
                                var i0 = ct.pop(), Lh = ct.pop(), Nh = ct.pop(), Mh = ct.pop();
                                ct.push(Nh <= Mh ? i0 : Lh);
                                break;
                              case 23:
                                ct.push(Math.random());
                                break;
                              case 24:
                                Lr = ct.pop(), An = ct.pop(), ct.push(Lr * An);
                                break;
                              case 26:
                                Lr = ct.pop(), ct.push(Math.sqrt(Lr));
                                break;
                              case 27:
                                Lr = ct.pop(), ct.push(Lr, Lr);
                                break;
                              case 28:
                                Lr = ct.pop(), An = ct.pop(), ct.push(An, Lr);
                                break;
                              case 29:
                                aa = ct.pop(), aa < 0 ? aa = 0 : aa > ct.length - 1 && (aa = ct.length - 1), ct.push(ct[aa]);
                                break;
                              case 30:
                                var mo = ct.pop(), Ti = ct.pop();
                                if (Ti >= 0)
                                  for (; Ti > 0; ) {
                                    for (var o0 = ct[mo - 1], xo = mo - 2; xo >= 0; xo--)
                                      ct[xo + 1] = ct[xo];
                                    ct[0] = o0, Ti--;
                                  }
                                else
                                  for (; Ti < 0; ) {
                                    for (var o0 = ct[0], bo = 0; bo <= mo; bo++)
                                      ct[bo] = ct[bo + 1];
                                    ct[mo - 1] = o0, Ti++;
                                  }
                                break;
                              case 34:
                                Rr = $t + ct.shift(), Cr = ue, Qr = Rr + ct.shift(), Gr = Cr + ct.shift();
                                var Fi = Qr + ct.shift(), Ii = Gr, Di = Fi + ct.shift(), Pi = Ii, Oi = Di + ct.shift(), Bi = Pi, Ri = Oi + ct.shift(), Li = Bi;
                                $t = Ri, ue = Li, dt.bezierCurveTo(Rr, Cr, Qr, Gr, Fi, Ii), dt.bezierCurveTo(Di, Pi, Oi, Bi, Ri, Li);
                                break;
                              case 35:
                                for (var Da = [], Us = 0; Us <= 5; Us++)
                                  $t += ct.shift(), ue += ct.shift(), Da.push($t, ue);
                                dt.bezierCurveTo.apply(dt, Da.slice(0, 6)), dt.bezierCurveTo.apply(dt, Da.slice(6)), ct.shift();
                                break;
                              case 36:
                                Rr = $t + ct.shift(), Cr = ue + ct.shift(), Qr = Rr + ct.shift(), Gr = Cr + ct.shift(), Fi = Qr + ct.shift(), Ii = Gr, Di = Fi + ct.shift(), Pi = Ii, Oi = Di + ct.shift(), Bi = Pi + ct.shift(), Ri = Oi + ct.shift(), Li = Bi, $t = Ri, ue = Li, dt.bezierCurveTo(Rr, Cr, Qr, Gr, Fi, Ii), dt.bezierCurveTo(Di, Pi, Oi, Bi, Ri, Li);
                                break;
                              case 37:
                                var zs = $t, Ws = ue;
                                Da = [];
                                for (var Hs = 0; Hs <= 4; Hs++)
                                  $t += ct.shift(), ue += ct.shift(), Da.push($t, ue);
                                Math.abs($t - zs) > Math.abs(ue - Ws) ? ($t += ct.shift(), ue = Ws) : ($t = zs, ue += ct.shift()), Da.push($t, ue), dt.bezierCurveTo.apply(dt, Da.slice(0, 6)), dt.bezierCurveTo.apply(dt, Da.slice(6));
                                break;
                              default:
                                throw new Error("Unknown op: 12 ".concat(gr));
                            }
                            break;
                          default:
                            throw new Error("Unknown op: ".concat(gr));
                        }
                      else if (gr < 247)
                        ct.push(gr - 139);
                      else if (gr < 251) {
                        var s0 = H.readUInt8();
                        ct.push((gr - 247) * 256 + s0 + 108);
                      } else if (gr < 255) {
                        var s0 = H.readUInt8();
                        ct.push(-(gr - 251) * 256 - s0 - 108);
                      } else
                        ct.push(H.readInt32BE() / 65536);
                    }
                  };
                  return zr(), He && dt.closePath(), dt;
                }, X;
              }(go), Kc = new e.Struct({
                originX: e.uint16,
                originY: e.uint16,
                type: new e.String(4),
                data: new e.Buffer(function(ft) {
                  return ft.parent.buflen - ft._currentOffset;
                })
              }), Jc = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et.getImageForSize = function(M) {
                  for (var H = 0; H < this._font.sbix.imageTables.length; H++) {
                    var lt = this._font.sbix.imageTables[H];
                    if (lt.ppem >= M)
                      break;
                  }
                  var vt = lt.imageOffsets, dt = vt[this.id], ct = vt[this.id + 1];
                  return dt === ct ? null : (this._font.stream.pos = dt, Kc.decode(this._font.stream, {
                    buflen: ct - dt
                  }));
                }, et.render = function(M, H) {
                  var lt = this.getImageForSize(H);
                  if (lt != null) {
                    var vt = H / this._font.unitsPerEm;
                    M.image(lt.data, {
                      height: H,
                      x: lt.originX,
                      y: (this.bbox.minY - lt.originY) * vt
                    });
                  }
                  this._font.sbix.flags.renderOutlines && ft.prototype.render.call(this, M, H);
                }, X;
              }(yo), Es = function(X, et) {
                this.glyph = X, this.color = et;
              }, Qc = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et._getBBox = function() {
                  for (var M = new qa(), H = 0; H < this.layers.length; H++) {
                    var lt = this.layers[H], vt = lt.glyph.bbox;
                    M.addPoint(vt.minX, vt.minY), M.addPoint(vt.maxX, vt.maxY);
                  }
                  return M;
                }, et.render = function(M, H) {
                  for (var lt = a(this.layers), vt; !(vt = lt()).done; ) {
                    var dt = vt.value, ct = dt.glyph, Ot = dt.color;
                    M.fillColor([Ot.red, Ot.green, Ot.blue], Ot.alpha / 255 * 100), ct.render(M, H);
                  }
                }, i(X, [{
                  key: "layers",
                  get: function() {
                    for (var M = this._font.CPAL, H = this._font.COLR, lt = 0, vt = H.baseGlyphRecord.length - 1; lt <= vt; ) {
                      var dt = lt + vt >> 1, ct = H.baseGlyphRecord[dt];
                      if (this.id < ct.gid)
                        vt = dt - 1;
                      else if (this.id > ct.gid)
                        lt = dt + 1;
                      else {
                        var Ot = ct;
                        break;
                      }
                    }
                    if (Ot == null) {
                      var Vt = this._font._getBaseGlyph(this.id), se = {
                        red: 0,
                        green: 0,
                        blue: 0,
                        alpha: 255
                      };
                      return [new Es(Vt, se)];
                    }
                    for (var $t = [], ue = Ot.firstLayerIndex; ue < Ot.firstLayerIndex + Ot.numLayers; ue++) {
                      var ct = H.layerRecords[ue], se = M.colorRecords[ct.paletteIndex], Vt = this._font._getBaseGlyph(ct.gid);
                      $t.push(new Es(Vt, se));
                    }
                    return $t;
                  }
                }]), X;
              }(go), $c = 32768, qc = 4095, _c = 32768, Ts = 16384, th = 8192, Fs = 4095, Is = 128, Ds = 127, eh = 128, rh = 64, nh = 63, ah = /* @__PURE__ */ function() {
                function ft(et, P) {
                  this.font = et, this.normalizedCoords = this.normalizeCoords(P), this.blendVectors = /* @__PURE__ */ new Map();
                }
                var X = ft.prototype;
                return X.normalizeCoords = function(P) {
                  for (var M = [], H = 0; H < this.font.fvar.axis.length; H++) {
                    var lt = this.font.fvar.axis[H];
                    P[H] < lt.defaultValue ? M.push((P[H] - lt.defaultValue + Number.EPSILON) / (lt.defaultValue - lt.minValue + Number.EPSILON)) : M.push((P[H] - lt.defaultValue + Number.EPSILON) / (lt.maxValue - lt.defaultValue + Number.EPSILON));
                  }
                  if (this.font.avar)
                    for (var H = 0; H < this.font.avar.segment.length; H++)
                      for (var vt = this.font.avar.segment[H], dt = 0; dt < vt.correspondence.length; dt++) {
                        var ct = vt.correspondence[dt];
                        if (dt >= 1 && M[H] < ct.fromCoord) {
                          var Ot = vt.correspondence[dt - 1];
                          M[H] = ((M[H] - Ot.fromCoord) * (ct.toCoord - Ot.toCoord) + Number.EPSILON) / (ct.fromCoord - Ot.fromCoord + Number.EPSILON) + Ot.toCoord;
                          break;
                        }
                      }
                  return M;
                }, X.transformPoints = function(P, M) {
                  if (!(!this.font.fvar || !this.font.gvar)) {
                    var H = this.font.gvar;
                    if (!(P >= H.glyphCount)) {
                      var lt = H.offsets[P];
                      if (lt !== H.offsets[P + 1]) {
                        var vt = this.font.stream;
                        if (vt.pos = lt, !(vt.pos >= vt.length)) {
                          var dt = vt.readUInt16BE(), ct = lt + vt.readUInt16BE();
                          if (dt & $c) {
                            var Ot = vt.pos;
                            vt.pos = ct;
                            var Vt = this.decodePoints();
                            ct = vt.pos, vt.pos = Ot;
                          }
                          var se = M.map(function(Fn) {
                            return Fn.copy();
                          });
                          dt &= qc;
                          for (var $t = 0; $t < dt; $t++) {
                            var ue = vt.readUInt16BE(), pe = vt.readUInt16BE();
                            if (pe & _c)
                              for (var Te = [], He = 0; He < H.axisCount; He++)
                                Te.push(vt.readInt16BE() / 16384);
                            else {
                              if ((pe & Fs) >= H.globalCoordCount)
                                throw new Error("Invalid gvar table");
                              var Te = H.globalCoords[pe & Fs];
                            }
                            if (pe & Ts) {
                              for (var _e = [], Xe = 0; Xe < H.axisCount; Xe++)
                                _e.push(vt.readInt16BE() / 16384);
                              for (var hr = [], sr = 0; sr < H.axisCount; sr++)
                                hr.push(vt.readInt16BE() / 16384);
                            }
                            var dr = this.tupleFactor(pe, Te, _e, hr);
                            if (dr === 0) {
                              ct += ue;
                              continue;
                            }
                            var Ot = vt.pos;
                            if (vt.pos = ct, pe & th)
                              var mr = this.decodePoints();
                            else
                              var mr = Vt;
                            var Hr = mr.length === 0 ? M.length : mr.length, tn = this.decodeDeltas(Hr), Ur = this.decodeDeltas(Hr);
                            if (mr.length === 0)
                              for (var vr = 0; vr < M.length; vr++) {
                                var Or = M[vr];
                                Or.x += Math.round(tn[vr] * dr), Or.y += Math.round(Ur[vr] * dr);
                              }
                            else {
                              for (var zr = se.map(function(Bn) {
                                return Bn.copy();
                              }), un = M.map(function() {
                                return !1;
                              }), gr = 0; gr < mr.length; gr++) {
                                var Br = mr[gr];
                                if (Br < M.length) {
                                  var jr = zr[Br];
                                  un[Br] = !0, jr.x += Math.round(tn[gr] * dr), jr.y += Math.round(Ur[gr] * dr);
                                }
                              }
                              this.interpolateMissingDeltas(zr, se, un);
                              for (var xr = 0; xr < M.length; xr++) {
                                var fn = zr[xr].x - se[xr].x, mn = zr[xr].y - se[xr].y;
                                M[xr].x += fn, M[xr].y += mn;
                              }
                            }
                            ct += ue, vt.pos = Ot;
                          }
                        }
                      }
                    }
                  }
                }, X.decodePoints = function() {
                  var P = this.font.stream, M = P.readUInt8();
                  M & Is && (M = (M & Ds) << 8 | P.readUInt8());
                  for (var H = new Uint16Array(M), lt = 0, vt = 0; lt < M; )
                    for (var dt = P.readUInt8(), ct = (dt & Ds) + 1, Ot = dt & Is ? P.readUInt16 : P.readUInt8, Vt = 0; Vt < ct && lt < M; Vt++)
                      vt += Ot.call(P), H[lt++] = vt;
                  return H;
                }, X.decodeDeltas = function(P) {
                  for (var M = this.font.stream, H = 0, lt = new Int16Array(P); H < P; ) {
                    var vt = M.readUInt8(), dt = (vt & nh) + 1;
                    if (vt & eh)
                      H += dt;
                    else
                      for (var ct = vt & rh ? M.readInt16BE : M.readInt8, Ot = 0; Ot < dt && H < P; Ot++)
                        lt[H++] = ct.call(M);
                  }
                  return lt;
                }, X.tupleFactor = function(P, M, H, lt) {
                  for (var vt = this.normalizedCoords, dt = this.font.gvar, ct = 1, Ot = 0; Ot < dt.axisCount; Ot++)
                    if (M[Ot] !== 0) {
                      if (vt[Ot] === 0)
                        return 0;
                      if (P & Ts) {
                        if (vt[Ot] < H[Ot] || vt[Ot] > lt[Ot])
                          return 0;
                        vt[Ot] < M[Ot] ? ct = ct * (vt[Ot] - H[Ot] + Number.EPSILON) / (M[Ot] - H[Ot] + Number.EPSILON) : ct = ct * (lt[Ot] - vt[Ot] + Number.EPSILON) / (lt[Ot] - M[Ot] + Number.EPSILON);
                      } else {
                        if (vt[Ot] < Math.min(0, M[Ot]) || vt[Ot] > Math.max(0, M[Ot]))
                          return 0;
                        ct = (ct * vt[Ot] + Number.EPSILON) / (M[Ot] + Number.EPSILON);
                      }
                    }
                  return ct;
                }, X.interpolateMissingDeltas = function(P, M, H) {
                  if (P.length !== 0)
                    for (var lt = 0; lt < P.length; ) {
                      for (var vt = lt, dt = lt, ct = P[dt]; !ct.endContour; )
                        ct = P[++dt];
                      for (; lt <= dt && !H[lt]; )
                        lt++;
                      if (!(lt > dt)) {
                        var Ot = lt, Vt = lt;
                        for (lt++; lt <= dt; )
                          H[lt] && (this.deltaInterpolate(Vt + 1, lt - 1, Vt, lt, M, P), Vt = lt), lt++;
                        Vt === Ot ? this.deltaShift(vt, dt, Vt, M, P) : (this.deltaInterpolate(Vt + 1, dt, Vt, Ot, M, P), Ot > 0 && this.deltaInterpolate(vt, Ot - 1, Vt, Ot, M, P)), lt = dt + 1;
                      }
                    }
                }, X.deltaInterpolate = function(P, M, H, lt, vt, dt) {
                  if (!(P > M))
                    for (var ct = ["x", "y"], Ot = 0; Ot < ct.length; Ot++) {
                      var Vt = ct[Ot];
                      if (vt[H][Vt] > vt[lt][Vt]) {
                        var se = H;
                        H = lt, lt = se;
                      }
                      var $t = vt[H][Vt], ue = vt[lt][Vt], pe = dt[H][Vt], Te = dt[lt][Vt];
                      if ($t !== ue || pe === Te)
                        for (var He = $t === ue ? 0 : (Te - pe) / (ue - $t), _e = P; _e <= M; _e++) {
                          var Xe = vt[_e][Vt];
                          Xe <= $t ? Xe += pe - $t : Xe >= ue ? Xe += Te - ue : Xe = pe + (Xe - $t) * He, dt[_e][Vt] = Xe;
                        }
                    }
                }, X.deltaShift = function(P, M, H, lt, vt) {
                  var dt = vt[H].x - lt[H].x, ct = vt[H].y - lt[H].y;
                  if (!(dt === 0 && ct === 0))
                    for (var Ot = P; Ot <= M; Ot++)
                      Ot !== H && (vt[Ot].x += dt, vt[Ot].y += ct);
                }, X.getAdvanceAdjustment = function(P, M) {
                  var H, lt;
                  if (M.advanceWidthMapping) {
                    var vt = P;
                    vt >= M.advanceWidthMapping.mapCount && (vt = M.advanceWidthMapping.mapCount - 1), M.advanceWidthMapping.entryFormat;
                    var dt = M.advanceWidthMapping.mapData[vt];
                    H = dt.outerIndex, lt = dt.innerIndex;
                  } else
                    H = 0, lt = P;
                  return this.getDelta(M.itemVariationStore, H, lt);
                }, X.getDelta = function(P, M, H) {
                  if (M >= P.itemVariationData.length)
                    return 0;
                  var lt = P.itemVariationData[M];
                  if (H >= lt.deltaSets.length)
                    return 0;
                  for (var vt = lt.deltaSets[H], dt = this.getBlendVector(P, M), ct = 0, Ot = 0; Ot < lt.regionIndexCount; Ot++)
                    ct += vt.deltas[Ot] * dt[Ot];
                  return ct;
                }, X.getBlendVector = function(P, M) {
                  var H = P.itemVariationData[M];
                  if (this.blendVectors.has(H))
                    return this.blendVectors.get(H);
                  for (var lt = this.normalizedCoords, vt = [], dt = 0; dt < H.regionIndexCount; dt++) {
                    for (var ct = 1, Ot = H.regionIndexes[dt], Vt = P.variationRegionList.variationRegions[Ot], se = 0; se < Vt.length; se++) {
                      var $t = Vt[se], ue = void 0;
                      $t.startCoord > $t.peakCoord || $t.peakCoord > $t.endCoord || $t.startCoord < 0 && $t.endCoord > 0 && $t.peakCoord !== 0 || $t.peakCoord === 0 ? ue = 1 : lt[se] < $t.startCoord || lt[se] > $t.endCoord ? ue = 0 : lt[se] === $t.peakCoord ? ue = 1 : lt[se] < $t.peakCoord ? ue = (lt[se] - $t.startCoord + Number.EPSILON) / ($t.peakCoord - $t.startCoord + Number.EPSILON) : ue = ($t.endCoord - lt[se] + Number.EPSILON) / ($t.endCoord - $t.peakCoord + Number.EPSILON), ct *= ue;
                    }
                    vt[dt] = ct;
                  }
                  return this.blendVectors.set(H, vt), vt;
                }, ft;
              }(), ih = Promise.resolve(), Ps = /* @__PURE__ */ function() {
                function ft(et) {
                  this.font = et, this.glyphs = [], this.mapping = {}, this.includeGlyph(0);
                }
                var X = ft.prototype;
                return X.includeGlyph = function(P) {
                  return typeof P == "object" && (P = P.id), this.mapping[P] == null && (this.glyphs.push(P), this.mapping[P] = this.glyphs.length - 1), this.mapping[P];
                }, X.encodeStream = function() {
                  var P = this, M = new e.EncodeStream();
                  return ih.then(function() {
                    return P.encode(M), M.end();
                  }), M;
                }, ft;
              }(), oh = 1, sh = 2, fh = 4, lh = 8, uh = 16, ch = 32, Os = /* @__PURE__ */ function() {
                function ft() {
                }
                return ft.size = function(et) {
                  return et >= 0 && et <= 255 ? 1 : 2;
                }, ft.encode = function(et, P) {
                  P >= 0 && P <= 255 ? et.writeUInt8(P) : et.writeInt16BE(P);
                }, ft;
              }(), Bs = new e.Struct({
                numberOfContours: e.int16,
                // if negative, this is a composite glyph
                xMin: e.int16,
                yMin: e.int16,
                xMax: e.int16,
                yMax: e.int16,
                endPtsOfContours: new e.Array(e.uint16, "numberOfContours"),
                instructions: new e.Array(e.uint8, e.uint16),
                flags: new e.Array(e.uint8, 0),
                xPoints: new e.Array(Os, 0),
                yPoints: new e.Array(Os, 0)
              }), hh = /* @__PURE__ */ function() {
                function ft() {
                }
                var X = ft.prototype;
                return X.encodeSimple = function(P, M) {
                  M === void 0 && (M = []);
                  for (var H = [], lt = [], vt = [], dt = [], ct = 0, Ot = 0, Vt = 0, se = 0, $t = 0, ue = 0; ue < P.commands.length; ue++) {
                    for (var pe = P.commands[ue], Te = 0; Te < pe.args.length; Te += 2) {
                      var He = pe.args[Te], _e = pe.args[Te + 1], Xe = 0;
                      if (pe.command === "quadraticCurveTo" && Te === 2) {
                        var hr = P.commands[ue + 1];
                        if (hr && hr.command === "quadraticCurveTo") {
                          var sr = (Ot + hr.args[0]) / 2, dr = (Vt + hr.args[1]) / 2;
                          if (He === sr && _e === dr)
                            continue;
                        }
                      }
                      pe.command === "quadraticCurveTo" && Te === 0 || (Xe |= oh), Xe = this._encodePoint(He, Ot, lt, Xe, sh, uh), Xe = this._encodePoint(_e, Vt, vt, Xe, fh, ch), Xe === se && ct < 255 ? (dt[dt.length - 1] |= lh, ct++) : (ct > 0 && (dt.push(ct), ct = 0), dt.push(Xe), se = Xe), Ot = He, Vt = _e, $t++;
                    }
                    pe.command === "closePath" && H.push($t - 1);
                  }
                  P.commands.length > 1 && P.commands[P.commands.length - 1].command !== "closePath" && H.push($t - 1);
                  var mr = P.bbox, Hr = {
                    numberOfContours: H.length,
                    xMin: mr.minX,
                    yMin: mr.minY,
                    xMax: mr.maxX,
                    yMax: mr.maxY,
                    endPtsOfContours: H,
                    instructions: M,
                    flags: dt,
                    xPoints: lt,
                    yPoints: vt
                  }, tn = Bs.size(Hr), Ur = 4 - tn % 4, vr = new e.EncodeStream(tn + Ur);
                  return Bs.encode(vr, Hr), Ur !== 0 && vr.fill(0, Ur), vr.buffer;
                }, X._encodePoint = function(P, M, H, lt, vt, dt) {
                  var ct = P - M;
                  return P === M ? lt |= dt : (-255 <= ct && ct <= 255 && (lt |= vt, ct < 0 ? ct = -ct : lt |= dt), H.push(ct)), lt;
                }, ft;
              }(), dh = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X(P) {
                  var M;
                  return M = ft.call(this, P) || this, M.glyphEncoder = new hh(), M;
                }
                var et = X.prototype;
                return et._addGlyph = function(M) {
                  var H = this.font.getGlyph(M), lt = H._decode(), vt = this.font.loca.offsets[M], dt = this.font.loca.offsets[M + 1], ct = this.font._getTableStream("glyf");
                  ct.pos += vt;
                  var Ot = ct.readBuffer(dt - vt);
                  if (lt && lt.numberOfContours < 0) {
                    Ot = o.from(Ot);
                    for (var Vt = a(lt.components), se; !(se = Vt()).done; ) {
                      var $t = se.value;
                      M = this.includeGlyph($t.glyphID), Ot.writeUInt16BE(M, $t.pos);
                    }
                  } else
                    lt && this.font._variationProcessor && (Ot = this.glyphEncoder.encodeSimple(H.path, lt.instructions));
                  return this.glyf.push(Ot), this.loca.offsets.push(this.offset), this.hmtx.metrics.push({
                    advance: H.advanceWidth,
                    bearing: H._getMetrics().leftBearing
                  }), this.offset += Ot.length, this.glyf.length - 1;
                }, et.encode = function(M) {
                  this.glyf = [], this.offset = 0, this.loca = {
                    offsets: [],
                    version: this.font.loca.version
                  }, this.hmtx = {
                    metrics: [],
                    bearings: []
                  };
                  for (var H = 0; H < this.glyphs.length; )
                    this._addGlyph(this.glyphs[H++]);
                  var lt = T(this.font.maxp);
                  lt.numGlyphs = this.glyf.length, this.loca.offsets.push(this.offset);
                  var vt = T(this.font.head);
                  vt.indexToLocFormat = this.loca.version;
                  var dt = T(this.font.hhea);
                  dt.numberOfMetrics = this.hmtx.metrics.length, Ki.encode(M, {
                    tables: {
                      head: vt,
                      hhea: dt,
                      loca: this.loca,
                      maxp: lt,
                      "cvt ": this.font["cvt "],
                      prep: this.font.prep,
                      glyf: this.glyf,
                      hmtx: this.hmtx,
                      fpgm: this.font.fpgm
                      // name: clone @font.name
                      // 'OS/2': clone @font['OS/2']
                      // post: clone @font.post
                      // cmap: cmap
                    }
                  });
                }, X;
              }(Ps), vh = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X(P) {
                  var M;
                  if (M = ft.call(this, P) || this, M.cff = M.font["CFF "], !M.cff)
                    throw new Error("Not a CFF Font");
                  return M;
                }
                var et = X.prototype;
                return et.subsetCharstrings = function() {
                  this.charstrings = [];
                  for (var M = {}, H = a(this.glyphs), lt; !(lt = H()).done; ) {
                    var vt = lt.value;
                    this.charstrings.push(this.cff.getCharString(vt));
                    var dt = this.font.getGlyph(vt);
                    dt.path;
                    for (var ct in dt._usedGsubrs)
                      M[ct] = !0;
                  }
                  this.gsubrs = this.subsetSubrs(this.cff.globalSubrIndex, M);
                }, et.subsetSubrs = function(M, H) {
                  for (var lt = [], vt = 0; vt < M.length; vt++) {
                    var dt = M[vt];
                    H[vt] ? (this.cff.stream.pos = dt.offset, lt.push(this.cff.stream.readBuffer(dt.length))) : lt.push(o.from([11]));
                  }
                  return lt;
                }, et.subsetFontdict = function(M) {
                  M.FDArray = [], M.FDSelect = {
                    version: 0,
                    fds: []
                  };
                  for (var H = {}, lt = [], vt = {}, dt = a(this.glyphs), ct; !(ct = dt()).done; ) {
                    var Ot = ct.value, Vt = this.cff.fdForGlyph(Ot);
                    if (Vt != null) {
                      H[Vt] || (M.FDArray.push(Object.assign({}, this.cff.topDict.FDArray[Vt])), lt.push({}), vt[Vt] = M.FDArray.length - 1), H[Vt] = !0, M.FDSelect.fds.push(vt[Vt]);
                      var se = this.font.getGlyph(Ot);
                      se.path;
                      for (var $t in se._usedSubrs)
                        lt[vt[Vt]][$t] = !0;
                    }
                  }
                  for (var ue = 0; ue < M.FDArray.length; ue++) {
                    var pe = M.FDArray[ue];
                    delete pe.FontName, pe.Private && pe.Private.Subrs && (pe.Private = Object.assign({}, pe.Private), pe.Private.Subrs = this.subsetSubrs(pe.Private.Subrs, lt[ue]));
                  }
                }, et.createCIDFontdict = function(M) {
                  for (var H = {}, lt = a(this.glyphs), vt; !(vt = lt()).done; ) {
                    var dt = vt.value, ct = this.font.getGlyph(dt);
                    ct.path;
                    for (var Ot in ct._usedSubrs)
                      H[Ot] = !0;
                  }
                  var Vt = Object.assign({}, this.cff.topDict.Private);
                  return this.cff.topDict.Private && this.cff.topDict.Private.Subrs && (Vt.Subrs = this.subsetSubrs(this.cff.topDict.Private.Subrs, H)), M.FDArray = [{
                    Private: Vt
                  }], M.FDSelect = {
                    version: 3,
                    nRanges: 1,
                    ranges: [{
                      first: 0,
                      fd: 0
                    }],
                    sentinel: this.charstrings.length
                  };
                }, et.addString = function(M) {
                  return M ? (this.strings || (this.strings = []), this.strings.push(M), fe.length + this.strings.length - 1) : null;
                }, et.encode = function(M) {
                  this.subsetCharstrings();
                  var H = {
                    version: this.charstrings.length > 255 ? 2 : 1,
                    ranges: [{
                      first: 1,
                      nLeft: this.charstrings.length - 2
                    }]
                  }, lt = Object.assign({}, this.cff.topDict);
                  lt.Private = null, lt.charset = H, lt.Encoding = null, lt.CharStrings = this.charstrings;
                  for (var vt = 0, dt = ["version", "Notice", "Copyright", "FullName", "FamilyName", "Weight", "PostScript", "BaseFontName", "FontName"]; vt < dt.length; vt++) {
                    var ct = dt[vt];
                    lt[ct] = this.addString(this.cff.string(lt[ct]));
                  }
                  lt.ROS = [this.addString("Adobe"), this.addString("Identity"), 0], lt.CIDCount = this.charstrings.length, this.cff.isCIDFont ? this.subsetFontdict(lt) : this.createCIDFontdict(lt);
                  var Ot = {
                    version: 1,
                    hdrSize: this.cff.hdrSize,
                    offSize: 4,
                    header: this.cff.header,
                    nameIndex: [this.cff.postscriptName],
                    topDictIndex: [lt],
                    stringIndex: this.strings,
                    globalSubrIndex: this.gsubrs
                  };
                  ve.encode(M, Ot);
                }, X;
              }(Ps), sn, Ha = (sn = /* @__PURE__ */ function() {
                ft.probe = function(P) {
                  var M = P.toString("ascii", 0, 4);
                  return M === "true" || M === "OTTO" || M === String.fromCharCode(0, 1, 0, 0);
                };
                function ft(et, P) {
                  P === void 0 && (P = null), this.defaultLanguage = null, this.stream = et, this.variationCoords = P, this._directoryPos = this.stream.pos, this._tables = {}, this._glyphs = {}, this._decodeDirectory();
                  for (var M in this.directory.tables) {
                    var H = this.directory.tables[M];
                    or[M] && H.length > 0 && Object.defineProperty(this, M, {
                      get: this._getTable.bind(this, H)
                    });
                  }
                }
                var X = ft.prototype;
                return X.setDefaultLanguage = function(P) {
                  P === void 0 && (P = null), this.defaultLanguage = P;
                }, X._getTable = function(P) {
                  if (!(P.tag in this._tables))
                    try {
                      this._tables[P.tag] = this._decodeTable(P);
                    } catch (M) {
                      R.logErrors && (console.error("Error decoding table ".concat(P.tag)), console.error(M.stack));
                    }
                  return this._tables[P.tag];
                }, X._getTableStream = function(P) {
                  var M = this.directory.tables[P];
                  return M ? (this.stream.pos = M.offset, this.stream) : null;
                }, X._decodeDirectory = function() {
                  return this.directory = Ki.decode(this.stream, {
                    _startOffset: 0
                  });
                }, X._decodeTable = function(P) {
                  var M = this.stream.pos, H = this._getTableStream(P.tag), lt = or[P.tag].decode(H, this, P.length);
                  return this.stream.pos = M, lt;
                }, X.getName = function(P, M) {
                  M === void 0 && (M = this.defaultLanguage || R.defaultLanguage);
                  var H = this.name && this.name.records[P];
                  return H && (H[M] || H[this.defaultLanguage] || H[R.defaultLanguage] || H.en || H[Object.keys(H)[0]]) || null;
                }, X.hasGlyphForCodePoint = function(P) {
                  return !!this._cmapProcessor.lookup(P);
                }, X.glyphForCodePoint = function(P) {
                  return this.getGlyph(this._cmapProcessor.lookup(P), [P]);
                }, X.glyphsForString = function(P) {
                  for (var M = [], H = P.length, lt = 0, vt = -1, dt = -1; lt <= H; ) {
                    var ct = 0, Ot = 0;
                    if (lt < H) {
                      if (ct = P.charCodeAt(lt++), 55296 <= ct && ct <= 56319 && lt < H) {
                        var Vt = P.charCodeAt(lt);
                        56320 <= Vt && Vt <= 57343 && (lt++, ct = ((ct & 1023) << 10) + (Vt & 1023) + 65536);
                      }
                      Ot = 65024 <= ct && ct <= 65039 || 917760 <= ct && ct <= 917999 ? 1 : 0;
                    } else
                      lt++;
                    dt === 0 && Ot === 1 ? M.push(this.getGlyph(this._cmapProcessor.lookup(vt, ct), [vt, ct])) : dt === 0 && Ot === 0 && M.push(this.glyphForCodePoint(vt)), vt = ct, dt = Ot;
                  }
                  return M;
                }, X.layout = function(P, M, H, lt, vt) {
                  return this._layoutEngine.layout(P, M, H, lt, vt);
                }, X.stringsForGlyph = function(P) {
                  return this._layoutEngine.stringsForGlyph(P);
                }, X.getAvailableFeatures = function(P, M) {
                  return this._layoutEngine.getAvailableFeatures(P, M);
                }, X._getBaseGlyph = function(P, M) {
                  return M === void 0 && (M = []), this._glyphs[P] || (this.directory.tables.glyf ? this._glyphs[P] = new yo(P, M, this) : (this.directory.tables["CFF "] || this.directory.tables.CFF2) && (this._glyphs[P] = new Yc(P, M, this))), this._glyphs[P] || null;
                }, X.getGlyph = function(P, M) {
                  return M === void 0 && (M = []), this._glyphs[P] || (this.directory.tables.sbix ? this._glyphs[P] = new Jc(P, M, this) : this.directory.tables.COLR && this.directory.tables.CPAL ? this._glyphs[P] = new Qc(P, M, this) : this._getBaseGlyph(P, M)), this._glyphs[P] || null;
                }, X.createSubset = function() {
                  return this.directory.tables["CFF "] ? new vh(this) : new dh(this);
                }, X.getVariation = function(P) {
                  if (!(this.directory.tables.fvar && (this.directory.tables.gvar && this.directory.tables.glyf || this.directory.tables.CFF2)))
                    throw new Error("Variations require a font with the fvar, gvar and glyf, or CFF2 tables.");
                  if (typeof P == "string" && (P = this.namedVariations[P]), typeof P != "object")
                    throw new Error("Variation settings must be either a variation name or settings object.");
                  var M = this.fvar.axis.map(function(vt, dt) {
                    var ct = vt.axisTag.trim();
                    return ct in P ? Math.max(vt.minValue, Math.min(vt.maxValue, P[ct])) : vt.defaultValue;
                  }), H = new e.DecodeStream(this.stream.buffer);
                  H.pos = this._directoryPos;
                  var lt = new ft(H, M);
                  return lt._tables = this._tables, lt;
                }, X.getFont = function(P) {
                  return this.getVariation(P);
                }, i(ft, [{
                  key: "postscriptName",
                  get: function() {
                    return this.getName("postscriptName");
                  }
                  /**
                   * The font's full name, e.g. "Helvetica Bold"
                   * @type {string}
                   */
                }, {
                  key: "fullName",
                  get: function() {
                    return this.getName("fullName");
                  }
                  /**
                   * The font's family name, e.g. "Helvetica"
                   * @type {string}
                   */
                }, {
                  key: "familyName",
                  get: function() {
                    return this.getName("fontFamily");
                  }
                  /**
                   * The font's sub-family, e.g. "Bold".
                   * @type {string}
                   */
                }, {
                  key: "subfamilyName",
                  get: function() {
                    return this.getName("fontSubfamily");
                  }
                  /**
                   * The font's copyright information
                   * @type {string}
                   */
                }, {
                  key: "copyright",
                  get: function() {
                    return this.getName("copyright");
                  }
                  /**
                   * The font's version number
                   * @type {string}
                   */
                }, {
                  key: "version",
                  get: function() {
                    return this.getName("version");
                  }
                  /**
                   * The fontâs [ascender](https://en.wikipedia.org/wiki/Ascender_(typography))
                   * @type {number}
                   */
                }, {
                  key: "ascent",
                  get: function() {
                    return this.hhea.ascent;
                  }
                  /**
                   * The fontâs [descender](https://en.wikipedia.org/wiki/Descender)
                   * @type {number}
                   */
                }, {
                  key: "descent",
                  get: function() {
                    return this.hhea.descent;
                  }
                  /**
                   * The amount of space that should be included between lines
                   * @type {number}
                   */
                }, {
                  key: "lineGap",
                  get: function() {
                    return this.hhea.lineGap;
                  }
                  /**
                   * The offset from the normal underline position that should be used
                   * @type {number}
                   */
                }, {
                  key: "underlinePosition",
                  get: function() {
                    return this.post.underlinePosition;
                  }
                  /**
                   * The weight of the underline that should be used
                   * @type {number}
                   */
                }, {
                  key: "underlineThickness",
                  get: function() {
                    return this.post.underlineThickness;
                  }
                  /**
                   * If this is an italic font, the angle the cursor should be drawn at to match the font design
                   * @type {number}
                   */
                }, {
                  key: "italicAngle",
                  get: function() {
                    return this.post.italicAngle;
                  }
                  /**
                   * The height of capital letters above the baseline.
                   * See [here](https://en.wikipedia.org/wiki/Cap_height) for more details.
                   * @type {number}
                   */
                }, {
                  key: "capHeight",
                  get: function() {
                    var P = this["OS/2"];
                    return P ? P.capHeight : this.ascent;
                  }
                  /**
                   * The height of lower case letters in the font.
                   * See [here](https://en.wikipedia.org/wiki/X-height) for more details.
                   * @type {number}
                   */
                }, {
                  key: "xHeight",
                  get: function() {
                    var P = this["OS/2"];
                    return P ? P.xHeight : 0;
                  }
                  /**
                   * The number of glyphs in the font.
                   * @type {number}
                   */
                }, {
                  key: "numGlyphs",
                  get: function() {
                    return this.maxp.numGlyphs;
                  }
                  /**
                   * The size of the fontâs internal coordinate grid
                   * @type {number}
                   */
                }, {
                  key: "unitsPerEm",
                  get: function() {
                    return this.head.unitsPerEm;
                  }
                  /**
                   * The fontâs bounding box, i.e. the box that encloses all glyphs in the font.
                   * @type {BBox}
                   */
                }, {
                  key: "bbox",
                  get: function() {
                    return Object.freeze(new qa(this.head.xMin, this.head.yMin, this.head.xMax, this.head.yMax));
                  }
                }, {
                  key: "_cmapProcessor",
                  get: function() {
                    return new Vl(this.cmap);
                  }
                  /**
                   * An array of all of the unicode code points supported by the font.
                   * @type {number[]}
                   */
                }, {
                  key: "characterSet",
                  get: function() {
                    return this._cmapProcessor.getCharacterSet();
                  }
                }, {
                  key: "_layoutEngine",
                  get: function() {
                    return new Oc(this);
                  }
                }, {
                  key: "availableFeatures",
                  get: function() {
                    return this._layoutEngine.getAvailableFeatures();
                  }
                }, {
                  key: "variationAxes",
                  get: function() {
                    var P = {};
                    if (!this.fvar)
                      return P;
                    for (var M = a(this.fvar.axis), H; !(H = M()).done; ) {
                      var lt = H.value;
                      P[lt.axisTag.trim()] = {
                        name: lt.name.en,
                        min: lt.minValue,
                        default: lt.defaultValue,
                        max: lt.maxValue
                      };
                    }
                    return P;
                  }
                  /**
                   * Returns an object describing the named variation instances
                   * that the font designer has specified. Keys are variation names
                   * and values are the variation settings for this instance.
                   *
                   * @type {object}
                   */
                }, {
                  key: "namedVariations",
                  get: function() {
                    var P = {};
                    if (!this.fvar)
                      return P;
                    for (var M = a(this.fvar.instance), H; !(H = M()).done; ) {
                      for (var lt = H.value, vt = {}, dt = 0; dt < this.fvar.axis.length; dt++) {
                        var ct = this.fvar.axis[dt];
                        vt[ct.axisTag.trim()] = lt.coord[dt];
                      }
                      P[lt.name.en] = vt;
                    }
                    return P;
                  }
                }, {
                  key: "_variationProcessor",
                  get: function() {
                    if (!this.fvar)
                      return null;
                    var P = this.variationCoords;
                    return !P && !this.CFF2 ? null : (P || (P = this.fvar.axis.map(function(M) {
                      return M.defaultValue;
                    })), new ah(this, P));
                  }
                }]), ft;
              }(), W(sn.prototype, "bbox", [J], Object.getOwnPropertyDescriptor(sn.prototype, "bbox"), sn.prototype), W(sn.prototype, "_cmapProcessor", [J], Object.getOwnPropertyDescriptor(sn.prototype, "_cmapProcessor"), sn.prototype), W(sn.prototype, "characterSet", [J], Object.getOwnPropertyDescriptor(sn.prototype, "characterSet"), sn.prototype), W(sn.prototype, "_layoutEngine", [J], Object.getOwnPropertyDescriptor(sn.prototype, "_layoutEngine"), sn.prototype), W(sn.prototype, "variationAxes", [J], Object.getOwnPropertyDescriptor(sn.prototype, "variationAxes"), sn.prototype), W(sn.prototype, "namedVariations", [J], Object.getOwnPropertyDescriptor(sn.prototype, "namedVariations"), sn.prototype), W(sn.prototype, "_variationProcessor", [J], Object.getOwnPropertyDescriptor(sn.prototype, "_variationProcessor"), sn.prototype), sn), ph = new e.Struct({
                tag: new e.String(4),
                offset: new e.Pointer(e.uint32, "void", {
                  type: "global"
                }),
                compLength: e.uint32,
                length: e.uint32,
                origChecksum: e.uint32
              }), Rs = new e.Struct({
                tag: new e.String(4),
                // should be 'wOFF'
                flavor: e.uint32,
                length: e.uint32,
                numTables: e.uint16,
                reserved: new e.Reserved(e.uint16),
                totalSfntSize: e.uint32,
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                metaOffset: e.uint32,
                metaLength: e.uint32,
                metaOrigLength: e.uint32,
                privOffset: e.uint32,
                privLength: e.uint32,
                tables: new e.Array(ph, "numTables")
              });
              Rs.process = function() {
                for (var ft = {}, X = a(this.tables), et; !(et = X()).done; ) {
                  var P = et.value;
                  ft[P.tag] = P;
                }
                this.tables = ft;
              };
              var gh = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                X.probe = function(M) {
                  return M.toString("ascii", 0, 4) === "wOFF";
                };
                var et = X.prototype;
                return et._decodeDirectory = function() {
                  this.directory = Rs.decode(this.stream, {
                    _startOffset: 0
                  });
                }, et._getTableStream = function(M) {
                  var H = this.directory.tables[M];
                  if (H)
                    if (this.stream.pos = H.offset, H.compLength < H.length) {
                      this.stream.pos += 2;
                      var lt = o.alloc(H.length), vt = A(this.stream.readBuffer(H.compLength - 2), lt);
                      return new e.DecodeStream(vt);
                    } else
                      return this.stream;
                  return null;
                }, X;
              }(Ha), yh = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                var et = X.prototype;
                return et._decode = function() {
                  return this._font._transformedGlyphs[this.id];
                }, et._getCBox = function() {
                  return this.path.bbox;
                }, X;
              }(yo), Ls = {
                decode: function(X) {
                  for (var et = 0, P = [0, 1, 2, 3, 4], M = 0; M < P.length; M++) {
                    var H = X.readUInt8();
                    if (et & 3758096384)
                      throw new Error("Overflow");
                    if (et = et << 7 | H & 127, !(H & 128))
                      return et;
                  }
                  throw new Error("Bad base 128 number");
                }
              }, mh = ["cmap", "head", "hhea", "hmtx", "maxp", "name", "OS/2", "post", "cvt ", "fpgm", "glyf", "loca", "prep", "CFF ", "VORG", "EBDT", "EBLC", "gasp", "hdmx", "kern", "LTSH", "PCLT", "VDMX", "vhea", "vmtx", "BASE", "GDEF", "GPOS", "GSUB", "EBSC", "JSTF", "MATH", "CBDT", "CBLC", "COLR", "CPAL", "SVG ", "sbix", "acnt", "avar", "bdat", "bloc", "bsln", "cvar", "fdsc", "feat", "fmtx", "fvar", "gvar", "hsty", "just", "lcar", "mort", "morx", "opbd", "prop", "trak", "Zapf", "Silf", "Glat", "Gloc", "Feat", "Sill"], xh = new e.Struct({
                flags: e.uint8,
                customTag: new e.Optional(new e.String(4), function(ft) {
                  return (ft.flags & 63) === 63;
                }),
                tag: function(X) {
                  return X.customTag || mh[X.flags & 63];
                },
                // || (() => { throw new Error(`Bad tag: ${flags & 0x3f}`); })(); },
                length: Ls,
                transformVersion: function(X) {
                  return X.flags >>> 6 & 3;
                },
                transformed: function(X) {
                  return X.tag === "glyf" || X.tag === "loca" ? X.transformVersion === 0 : X.transformVersion !== 0;
                },
                transformLength: new e.Optional(Ls, function(ft) {
                  return ft.transformed;
                })
              }), Ns = new e.Struct({
                tag: new e.String(4),
                // should be 'wOF2'
                flavor: e.uint32,
                length: e.uint32,
                numTables: e.uint16,
                reserved: new e.Reserved(e.uint16),
                totalSfntSize: e.uint32,
                totalCompressedSize: e.uint32,
                majorVersion: e.uint16,
                minorVersion: e.uint16,
                metaOffset: e.uint32,
                metaLength: e.uint32,
                metaOrigLength: e.uint32,
                privOffset: e.uint32,
                privLength: e.uint32,
                tables: new e.Array(xh, "numTables")
              });
              Ns.process = function() {
                for (var ft = {}, X = 0; X < this.tables.length; X++) {
                  var et = this.tables[X];
                  ft[et.tag] = et;
                }
                return this.tables = ft;
              };
              var bh = /* @__PURE__ */ function(ft) {
                u(X, ft);
                function X() {
                  return ft.apply(this, arguments) || this;
                }
                X.probe = function(M) {
                  return M.toString("ascii", 0, 4) === "wOF2";
                };
                var et = X.prototype;
                return et._decodeDirectory = function() {
                  this.directory = Ns.decode(this.stream), this._dataPos = this.stream.pos;
                }, et._decompress = function() {
                  if (!this._decompressed) {
                    this.stream.pos = this._dataPos;
                    var M = this.stream.readBuffer(this.directory.totalCompressedSize), H = 0;
                    for (var lt in this.directory.tables) {
                      var vt = this.directory.tables[lt];
                      vt.offset = H, H += vt.transformLength != null ? vt.transformLength : vt.length;
                    }
                    var dt = F(M, H);
                    if (!dt)
                      throw new Error("Error decoding compressed data in WOFF2");
                    this.stream = new e.DecodeStream(o.from(dt)), this._decompressed = !0;
                  }
                }, et._decodeTable = function(M) {
                  return this._decompress(), ft.prototype._decodeTable.call(this, M);
                }, et._getBaseGlyph = function(M, H) {
                  if (H === void 0 && (H = []), !this._glyphs[M])
                    return this.directory.tables.glyf && this.directory.tables.glyf.transformed ? (this._transformedGlyphs || this._transformGlyfTable(), this._glyphs[M] = new yh(M, H, this)) : ft.prototype._getBaseGlyph.call(this, M, H);
                }, et._transformGlyfTable = function() {
                  this._decompress(), this.stream.pos = this.directory.tables.glyf.offset;
                  for (var M = wh.decode(this.stream), H = [], lt = 0; lt < M.numGlyphs; lt++) {
                    var vt = {}, dt = M.nContours.readInt16BE();
                    if (vt.numberOfContours = dt, dt > 0) {
                      for (var ct = [], Ot = 0, Vt = 0; Vt < dt; Vt++) {
                        var se = a0(M.nPoints);
                        Ot += se, ct.push(Ot);
                      }
                      vt.points = Eh(M.flags, M.glyphs, Ot);
                      for (var $t = 0; $t < dt; $t++)
                        vt.points[ct[$t] - 1].endContour = !0;
                      a0(M.glyphs);
                    } else if (dt < 0) {
                      var ue = yo.prototype._decodeComposite.call({
                        _font: this
                      }, vt, M.composites);
                      ue && a0(M.glyphs);
                    }
                    H.push(vt);
                  }
                  this._transformedGlyphs = H;
                }, X;
              }(Ha), ja = /* @__PURE__ */ function() {
                function ft(et) {
                  this.length = et, this._buf = new e.Buffer(et);
                }
                var X = ft.prototype;
                return X.decode = function(P, M) {
                  return new e.DecodeStream(this._buf.decode(P, M));
                }, ft;
              }(), wh = new e.Struct({
                version: e.uint32,
                numGlyphs: e.uint16,
                indexFormat: e.uint16,
                nContourStreamSize: e.uint32,
                nPointsStreamSize: e.uint32,
                flagStreamSize: e.uint32,
                glyphStreamSize: e.uint32,
                compositeStreamSize: e.uint32,
                bboxStreamSize: e.uint32,
                instructionStreamSize: e.uint32,
                nContours: new ja("nContourStreamSize"),
                nPoints: new ja("nPointsStreamSize"),
                flags: new ja("flagStreamSize"),
                glyphs: new ja("glyphStreamSize"),
                composites: new ja("compositeStreamSize"),
                bboxes: new ja("bboxStreamSize"),
                instructions: new ja("instructionStreamSize")
              }), Sh = 253, Ah = 254, Ch = 255, Ms = 253;
              function a0(ft) {
                var X = ft.readUInt8();
                return X === Sh ? ft.readUInt16BE() : X === Ch ? ft.readUInt8() + Ms : X === Ah ? ft.readUInt8() + Ms * 2 : X;
              }
              function da(ft, X) {
                return ft & 1 ? X : -X;
              }
              function Eh(ft, X, et) {
                for (var P, M = P = 0, H = [], lt = 0; lt < et; lt++) {
                  var vt = 0, dt = 0, ct = ft.readUInt8(), Ot = !(ct >> 7);
                  if (ct &= 127, ct < 10)
                    vt = 0, dt = da(ct, ((ct & 14) << 7) + X.readUInt8());
                  else if (ct < 20)
                    vt = da(ct, ((ct - 10 & 14) << 7) + X.readUInt8()), dt = 0;
                  else if (ct < 84) {
                    var Vt = ct - 20, se = X.readUInt8();
                    vt = da(ct, 1 + (Vt & 48) + (se >> 4)), dt = da(ct >> 1, 1 + ((Vt & 12) << 2) + (se & 15));
                  } else if (ct < 120) {
                    var Vt = ct - 84;
                    vt = da(ct, 1 + (Vt / 12 << 8) + X.readUInt8()), dt = da(ct >> 1, 1 + (Vt % 12 >> 2 << 8) + X.readUInt8());
                  } else if (ct < 124) {
                    var se = X.readUInt8(), $t = X.readUInt8();
                    vt = da(ct, (se << 4) + ($t >> 4)), dt = da(ct >> 1, (($t & 15) << 8) + X.readUInt8());
                  } else
                    vt = da(ct, X.readUInt16BE()), dt = da(ct >> 1, X.readUInt16BE());
                  M += vt, P += dt, H.push(new Sa(Ot, !1, M, P));
                }
                return H;
              }
              var Th = new e.VersionedStruct(e.uint32, {
                65536: {
                  numFonts: e.uint32,
                  offsets: new e.Array(e.uint32, "numFonts")
                },
                131072: {
                  numFonts: e.uint32,
                  offsets: new e.Array(e.uint32, "numFonts"),
                  dsigTag: e.uint32,
                  dsigLength: e.uint32,
                  dsigOffset: e.uint32
                }
              }), Fh = /* @__PURE__ */ function() {
                ft.probe = function(P) {
                  return P.toString("ascii", 0, 4) === "ttcf";
                };
                function ft(et) {
                  if (this.stream = et, et.readString(4) !== "ttcf")
                    throw new Error("Not a TrueType collection");
                  this.header = Th.decode(et);
                }
                var X = ft.prototype;
                return X.getFont = function(P) {
                  for (var M = a(this.header.offsets), H; !(H = M()).done; ) {
                    var lt = H.value, vt = new e.DecodeStream(this.stream.buffer);
                    vt.pos = lt;
                    var dt = new Ha(vt);
                    if (dt.postscriptName === P)
                      return dt;
                  }
                  return null;
                }, i(ft, [{
                  key: "fonts",
                  get: function() {
                    for (var P = [], M = a(this.header.offsets), H; !(H = M()).done; ) {
                      var lt = H.value, vt = new e.DecodeStream(this.stream.buffer);
                      vt.pos = lt, P.push(new Ha(vt));
                    }
                    return P;
                  }
                }]), ft;
              }(), Ih = new e.String(e.uint8);
              new e.Struct({
                len: e.uint32,
                buf: new e.Buffer("len")
              });
              var Dh = new e.Struct({
                id: e.uint16,
                nameOffset: e.int16,
                attr: e.uint8,
                dataOffset: e.uint24,
                handle: e.uint32
              }), Ph = new e.Struct({
                name: new e.String(4),
                maxTypeIndex: e.uint16,
                refList: new e.Pointer(e.uint16, new e.Array(Dh, function(ft) {
                  return ft.maxTypeIndex + 1;
                }), {
                  type: "parent"
                })
              }), Oh = new e.Struct({
                length: e.uint16,
                types: new e.Array(Ph, function(ft) {
                  return ft.length + 1;
                })
              }), Bh = new e.Struct({
                reserved: new e.Reserved(e.uint8, 24),
                typeList: new e.Pointer(e.uint16, Oh),
                nameListOffset: new e.Pointer(e.uint16, "void")
              }), ks = new e.Struct({
                dataOffset: e.uint32,
                map: new e.Pointer(e.uint32, Bh),
                dataLength: e.uint32,
                mapLength: e.uint32
              }), Rh = /* @__PURE__ */ function() {
                ft.probe = function(P) {
                  var M = new e.DecodeStream(P);
                  try {
                    var H = ks.decode(M);
                  } catch {
                    return !1;
                  }
                  for (var lt = a(H.map.typeList.types), vt; !(vt = lt()).done; ) {
                    var dt = vt.value;
                    if (dt.name === "sfnt")
                      return !0;
                  }
                  return !1;
                };
                function ft(et) {
                  this.stream = et, this.header = ks.decode(this.stream);
                  for (var P = a(this.header.map.typeList.types), M; !(M = P()).done; ) {
                    for (var H = M.value, lt = a(H.refList), vt; !(vt = lt()).done; ) {
                      var dt = vt.value;
                      dt.nameOffset >= 0 ? (this.stream.pos = dt.nameOffset + this.header.map.nameListOffset, dt.name = Ih.decode(this.stream)) : dt.name = null;
                    }
                    H.name === "sfnt" && (this.sfnt = H);
                  }
                }
                var X = ft.prototype;
                return X.getFont = function(P) {
                  if (!this.sfnt)
                    return null;
                  for (var M = a(this.sfnt.refList), H; !(H = M()).done; ) {
                    var lt = H.value, vt = this.header.dataOffset + lt.dataOffset + 4, dt = new e.DecodeStream(this.stream.buffer.slice(vt)), ct = new Ha(dt);
                    if (ct.postscriptName === P)
                      return ct;
                  }
                  return null;
                }, i(ft, [{
                  key: "fonts",
                  get: function() {
                    for (var P = [], M = a(this.sfnt.refList), H; !(H = M()).done; ) {
                      var lt = H.value, vt = this.header.dataOffset + lt.dataOffset + 4, dt = new e.DecodeStream(this.stream.buffer.slice(vt));
                      P.push(new Ha(dt));
                    }
                    return P;
                  }
                }]), ft;
              }();
              R.registerFormat(Ha), R.registerFormat(gh), R.registerFormat(bh), R.registerFormat(Fh), R.registerFormat(Rh), c.exports = R;
            }
          ),
          /***/
          46982: (
            /***/
            function(c, d, t) {
              var o = t(67827), r = t(5155), n = t(71692), i = n.BK, f = n.CR, l = n.LF, u = n.NL, h = n.SG, a = n.WJ, v = n.SP, y = n.ZWJ, p = n.BA, e = n.HY, m = n.NS, w = n.AI, D = n.AL, I = n.CJ, E = n.HL, T = n.RI, A = n.SA, F = n.XX, b = t(54069), R = b.DI_BRK, N = b.IN_BRK, U = b.CI_BRK, W = b.CP_BRK;
              b.PR_BRK;
              var J = b.pairTable, ht = r.toByteArray("AAgOAAAAAACA3QAAAe0OEvHtnXuMXUUdx+d2d2/33r237V3YSoFC11r6IGgbRFBEfFF5KCVCMYKFaKn8AYqmwUeqECFabUGQipUiNCkgSRElUkKwJRWtwSpJrZpCI4E2NQqiBsFGwWL8Tu6Md3Z23o9zbund5JM5c+b1m9/85nnOuXtTHyFrwXpwL9gBngTPgj+Dv4H9Ae4B0N9PSAMcDqaB0X57urmIs8AQ72SEnQ4+ABaBxWAJWAquENJ9BtdfANeCleBGcCv4NvgeuBv8AGwCm8FWlpbzOPw7wC7wFNgDngMvgpfAq2DCACF10ACHgaPAzIF2+PFwT2Th1P8OuO8FZ4MPggvAxWAp+A6VHe5ysILFvx7u6oF2+Wvg3g7uYvlT+TbC/TH4CdgCtoGtfW3/E2An8++Gu5eleR7uP8B+8BoLf4LFH6i23Vp1rB5a1Q7TGMeCUYYY18RcxF0gxT8H5b3dIw8X3iPkdxauPwQWgyVgWbVT30/h+mrwZan8r8L/FcEWVsJ/E1grpKXcwdLdI9y/H9cPgUerbbun0PadCHcbjQd+D55mafcx9y9wXwKvCLJUJiLdRH09ef4xupqE/KeCY8Bx4M3gbeBdYCE4G3wYXASWgGXgSibTcuaugHs9WA3WgNvBBha2Ee4D4GFNPTYL9x/D9XaJXwnXvwW7wDPgTzQd2A9eAwODhDTBCJgOZoETwEngtEFmF3DPAouY/0K4Swb9dbaMpbkS7nKP9CsCyrpOSrNK8K9kNnYL7q0DGwbb/XnjoDv3gQfBZvBz8GvwO/AHdr3Pkv4F4fplj3J79OgRBx8HypajR48ePXr06NGjx8HFv7pABhX/HRx7HqKjr9Y+y6PXg7X2WRoPm1Kzpz8CcWaweLPhHt/fPq95C65PZnmfDnchOLfWPo/7OLgQ15ewdJ+E++na2PMhyudw72bDGc01CP8aWAm+Dr4BVoHV4IZeWC+sF9YL64UlD1sD1oE7au0z0zK5p1YuZde/R49uJnYdez/62EPgkVr4c7pHkfYXivTbcW8n2A32gOekOH+F/5/gAOivE9IArXpbrmlwR+vljz9bJrV552RCvgQ2GXgRzJ9CyGVTxofdLd17Gv6jW4RcAG5ote/9FO4B8NZhQs4DN4O9kOFY6OFSsB48C/qGCFkAyERCzh9q+0WuA2sqHX4m+Smv4t6RjXYelItwvQ7sBtOahHwU3NYcn+5Q4pFmRz89evTocajxStM898/FfLSgrg8/sT5+zcLDTkXY+6S0C+E/l907SXO+Rt/Lujrxe1kmztPU70JDvSmXILwJWS9TxLuC3VtuycPGCoV+VfD41yvKW6W4d1O9/S5YtZ+Qtbi+k/m/D/eHYBPzb4G7DfyS+enZ42/qnXPFp+pjZdgD/yX0XcV6+93DF+H+G5AhtcxPIs/BoY5cg0g7RRGXx/8Ewo8Y6vhp/Bnwz2F5zId7CgunZ6Dv1uTF0585pNY7P9NdhPCPDI1Ncyn8l4OrwHKwguVB12WrNPnpoPW5BWluA3eCuxRl3cfyfFCom43NBjkeQ9h2Tzlzs7PL5CmD3UwHew26+KMm7AVHu8hJaL1fTtj29L3E/wi6oPvWvkY7bAjucKOYtpymKWdGo/3e5KxGR8YTGvmfZ4XW46RGmnMIG6excs6Ae46nPuh7pGXbvm/fOB91vLhRXvkmlkKuK8BnFTb8xYL6TyqugbzXJZCZ9tlVrO9+C+53G5134A8G1htsjdbvXoT/KEBPmwq04dS2v6UxNnxbAXV5gul4Z6J+tMtBZtv4+Qzy2Ndof+fwPHP/zsbg/QFz02tIM4B9ZRO0mp379NxxBpgD5gv3T8H16eAMcCZYxMIWw/2YEG8pri9n/qvgfr45fm67VtjPzmbpVrJ7NzL3VrjvF/Jdh+sN3M/cB+A+LOV/bVNdX13b0G9KtmrSHCo8jvqfGjFu7WiWP37E8s2+yv8ZwVbYRgvMAm9kvMkhjStzAZbIBGIR+ngAy2NSZ9f0Hv2bIIShCckU5k5sb+OdGGQ0BKqSPzeE1WFCgWXK5dO2rDD/COn9zTvEUfXJ4zT3c9DP2oH2+ZoAtc9RBr/mY0SLdGyap+Nxh6W0In2Sn5C8/W00c/7dXn63we1DtAHud9WZbFNimmFL2iIoqt8eDPQHptERIkNoO8prFVvblm13OaG6oGM+n7P4/RrRz2HdTktotxHFdZW5tvm72UWEtm9dQF6n++hU1FmVFL++L2Nsdt3/1IVrWaacda4Se91t+pHDVXF5HFd9pG7X14NNyePr6wkfPTRI+H6qDPvLqRM5DR2beZ8W95Divq0IWXXyy/d18Yq09ZhyY/fyPjafY37yta8ybD9l3W15+crXYhQ5rsj2Wkb7iDadon1c+tKI4p5NR6HjPl/vqvLm92uK8lTjWNntkwJTu9hkiJmHVf3S1V5UOii6PWL1nVqOkP5QI/b2L2o+Kqr/h9i0bHNl9HudnKn0btKBbZzItQ7n47Drmutg6P+ubZK7/5va0PU8XZS56DP4Isci07gUo3/fscdlfMyp6xR6dy0vt/275K1bJ8qkHI99bdK3v4vt4Gtzs7sEWa5aZH4NDz3yfWG368bXLlQ6GZYQ7/UL1y3mryroZ+nkZwK28SD1vlt+7sNd+lcR3Ji1RKq1WcvhftFzousYxftH7Ngu2pZubcGfD8eMizp5Y/uha/m69NNK5siSOapkcq2lTOOGvE4y9aPclFl20eXTvwoZO374ymob90Jx3Zfk2h/I849q7VNE+WXsj+ZFlJ96Xcd1PyD4ue2J69/Q9V+u9uPrQC7/sHRftjE+n+eQP2Ztl5Kc+0TX/WND8vP2iF23xO7lfO3XtKfLhUm/PE6Ze78RD/3Fknr8i907yWsoUx+M3S+0SNjcHyu7qg6+aYvqF671TLXfTzU+2uaTnOOzbFc+7yHoZE59npIL175kay/ZxlKMH6a+NSJdl90XKXytpbMpTr/kP5zJfqxQDzneYWTstxh9pPPdYJ/CL8alTBag+fFvHFXtQMutWxBloOUMMHS6GWSyVYS4pvgmexXtVjc/TFWk9ZnnZLt3+caI10/8Xkb+hsYlfeh+QOyPNQN1S7hv2nqivEVSj/Ex+1lu73Ib1olbu4jpfN4ddbWbHN+/mcpWfUem+g7RhK4833SuepHbN0d5PjKF1kUll3xPFc5d+btTW9uqdCHXwaQ7kw252ENIW9vKTdEfTLox+VPYT6r8XXUWq7tYuXyZnEAG+ic+pwyVdRLDp8wcOp0kEZNXzLyqw3f+yEkjMI1sFznk8ulDKcoKlcFVlz75qPyu9+U8YuvnqnfXNDn6t6neNr3xfHj4JEU500ma8SSkjjodptBlTLurbI7rTxUnhcxF6d9W76KRbd6G3DdVNj2qia/qD3KY2O90elLJocpHJc90Q7kqVLqaLlGUjYj+Pg00jD8Xk+Wnf5UAN8c8HGrvXKYi+4irnsoo09ctU29Fll2UraSyaxnTOar8DFw+w60St+cRNlzfm9E9y9CNUTZM5/7iOTWR6imOgaKf/pn6hJw/f8dDdS6u0tNhDN1ZOlGUoauTrqyQNvCd21Mjy8N/T7AixBkQrm3tRKS0tngDwrWYzobuLFwXV3WfP5uR9TGTXdvc3BRVjq18l3rbwmaS8c9QByR4m3Sb/lPVX2V/M4naDkV79GFmJDad2NaLOdpBpxsbvs+/YubgVPO5bn3h+75BahnEOU/EVb+yTL7vQeTQp04GH/twfTYaCv9ehe8XXdZ0Ic+IY94Hcik/9h0Zk35c7MdWXo737HM/y6dllPENj9zeuvq7vMMYam88fZnfU7nOHznf6/AdP+W8ffXv2q6uelDlE1N/Wx+Prb/MG8ARBVJ0eb7rz5Tf6sl5l/G9nizDnJLJudZoaNqU/hbsCPH73dhu+03aWPiZhW9/yLHf8IGvT1OtzwZJ56yG/7YvX5sSdn+yof6x5av2ebxcV1dOZ9pDVgSXys/36uLzG1s5Nvj7pKo9axm2zsueylxeT1lWlQ4rkuuzx5f3+VXPPGIhgbLnKp/rtiJdcz2lOtMpAtMZV27E/kRttyaF83dFbf3NdYwXx6sZpH0uVkZ/VslmOrspa24V1+O56u3TdmXpQdaJy36wLPm4LZVR7jyp/CLOmULtzeWZoqstuLS9rhzTmqwIe3LVia0f2OSP3c/71Ec8V0itv6JtONbOXdb3Oc5YdcTaQVFzRWg7+z6HydnHy+qPoWO+j1yq8anofifWl7ri97chNiq/z6KyM37t8333sJR/SF/3bUvd+z+8nV3KNPWfIvt3mfNZijFAZT8xfXSekLfOtl3rHCuPzxrEdT7U9UvRjn3HKV5/XTuo2i3n+E3L5L+3yN+TkH+z07ZGDlkviuXLcX3aL7b+8m+duhCzJonp/yF9wabPItZhJmJ/N8pVfvn31Fok7PeiYsalFON4bPnyuOO7Ru2G+S52fqB5DAt55bJtXf2LtJdQParCVevHlqcufduvKJuQ5yxxvA/Zw6W0l5D3+nz7a4wdieXxd+FS2SjPN7Z9XXDRp62/dMv4GTM22uwx1/iTe7zTUSfjf1Mqld36EHv2xvPoprMnGfGvIiDHk+/x+EQTP7fMOjl928f0/855OTnaJ5XeQsevVHNojO5147ePXLH681mDqOBhqef/Ivp+7PMF1Vxs02kMITLK30zp/k+FbX1RdP/w1b2OMt9hiR1bKLHfZ+XWT+4+ahqzVM8iUug81r5tfTf3+JB6DPFpk1zllLUu9523cpPLdlR6zTVP+bShGFd1lh/Td33rVdT44WqTtjqktOtc87osc8x5hM9vyLrK49v+Pvmp7De0/vyvLJvk1C3+1OOyLyG/aSSud1L/TlLq/BoZ5M2xNj66IFRlT9fcT4GqDYosQ3df/G0zlR5U4UVzjAJZPpW8NlLI5lOejzwq+eS4rnWZbsjTx7ZUrq4sXdrQPmAa82Pb0HVuyZl3rrrZ7Nal/ULzdy0zBUXrMaQcU18v6ncmxd9eM/1fkdQ24Tvu+paZ2q5S6z13+anlTyVfrv4aWz/desfFfn3WEj727rNGKHJdlqsM1VompjzT+shXv7F75dj3J3K3qY7QM7DcZ2L/Aw=="), K = new o(ht), nt = function(Lt) {
                switch (Lt) {
                  case w:
                    return D;
                  case A:
                  case h:
                  case F:
                    return D;
                  case I:
                    return m;
                  default:
                    return Lt;
                }
              }, xt = function(Lt) {
                switch (Lt) {
                  case l:
                  case u:
                    return i;
                  case v:
                    return a;
                  default:
                    return Lt;
                }
              }, bt = function(Lt, Ut) {
                Ut === void 0 && (Ut = !1), this.position = Lt, this.required = Ut;
              }, Tt = /* @__PURE__ */ function() {
                function It(Ut) {
                  this.string = Ut, this.pos = 0, this.lastPos = 0, this.curClass = null, this.nextClass = null, this.LB8a = !1, this.LB21a = !1, this.LB30a = 0;
                }
                var Lt = It.prototype;
                return Lt.nextCodePoint = function() {
                  var $ = this.string.charCodeAt(this.pos++), gt = this.string.charCodeAt(this.pos);
                  return 55296 <= $ && $ <= 56319 && 56320 <= gt && gt <= 57343 ? (this.pos++, ($ - 55296) * 1024 + (gt - 56320) + 65536) : $;
                }, Lt.nextCharClass = function() {
                  return nt(K.get(this.nextCodePoint()));
                }, Lt.getSimpleBreak = function() {
                  switch (this.nextClass) {
                    case v:
                      return !1;
                    case i:
                    case l:
                    case u:
                      return this.curClass = i, !1;
                    case f:
                      return this.curClass = f, !1;
                  }
                  return null;
                }, Lt.getPairTableBreak = function($) {
                  var gt = !1;
                  switch (J[this.curClass][this.nextClass]) {
                    case R:
                      gt = !0;
                      break;
                    case N:
                      gt = $ === v;
                      break;
                    case U:
                      if (gt = $ === v, !gt)
                        return gt = !1, gt;
                      break;
                    case W:
                      if ($ !== v)
                        return gt;
                      break;
                  }
                  return this.LB8a && (gt = !1), this.LB21a && (this.curClass === e || this.curClass === p) ? (gt = !1, this.LB21a = !1) : this.LB21a = this.curClass === E, this.curClass === T ? (this.LB30a++, this.LB30a == 2 && this.nextClass === T && (gt = !0, this.LB30a = 0)) : this.LB30a = 0, this.curClass = this.nextClass, gt;
                }, Lt.nextBreak = function() {
                  if (this.curClass == null) {
                    var $ = this.nextCharClass();
                    this.curClass = xt($), this.nextClass = $, this.LB8a = $ === y, this.LB30a = 0;
                  }
                  for (; this.pos < this.string.length; ) {
                    this.lastPos = this.pos;
                    var gt = this.nextClass;
                    if (this.nextClass = this.nextCharClass(), this.curClass === i || this.curClass === f && this.nextClass !== l)
                      return this.curClass = xt(nt(this.nextClass)), new bt(this.lastPos, !0);
                    var ut = this.getSimpleBreak();
                    if (ut === null && (ut = this.getPairTableBreak(gt)), this.LB8a = this.nextClass === y, ut)
                      return new bt(this.lastPos);
                  }
                  return this.lastPos < this.string.length ? (this.lastPos = this.string.length, new bt(this.string.length)) : null;
                }, It;
              }();
              c.exports = Tt;
            }
          ),
          /***/
          42480: (
            /***/
            function() {
            }
          ),
          /***/
          25832: (
            /***/
            function() {
            }
          ),
          /***/
          69862: (
            /***/
            function() {
            }
          ),
          /***/
          40964: (
            /***/
            function() {
            }
          ),
          /***/
          14343: (
            /***/
            function(c, d, t) {
              var o = [
                "BigInt64Array",
                "BigUint64Array",
                "Float32Array",
                "Float64Array",
                "Int16Array",
                "Int32Array",
                "Int8Array",
                "Uint16Array",
                "Uint32Array",
                "Uint8Array",
                "Uint8ClampedArray"
              ], r = typeof globalThis > "u" ? t.g : globalThis;
              c.exports = function() {
                for (var i = [], f = 0; f < o.length; f++)
                  typeof r[o[f]] == "function" && (i[i.length] = o[f]);
                return i;
              };
            }
          ),
          /***/
          51348: (
            /***/
            function(c, d, t) {
              var o = t(5155), r = t(67827);
              function n(ut) {
                return ut && ut.__esModule ? ut.default : ut;
              }
              function i(ut) {
                Object.defineProperty(ut, "__esModule", { value: !0, configurable: !0 });
              }
              function f(ut, st, yt, G) {
                Object.defineProperty(ut, st, { get: yt, set: G, enumerable: !0, configurable: !0 });
              }
              i(c.exports), f(c.exports, "getCategory", () => N), f(c.exports, "getCombiningClass", () => U), f(c.exports, "getScript", () => W), f(c.exports, "getEastAsianWidth", () => J), f(c.exports, "getNumericValue", () => ht), f(c.exports, "isAlphabetic", () => K), f(c.exports, "isDigit", () => nt), f(c.exports, "isPunctuation", () => xt), f(c.exports, "isLowerCase", () => bt), f(c.exports, "isUpperCase", () => Tt), f(c.exports, "isTitleCase", () => It), f(c.exports, "isWhiteSpace", () => Lt), f(c.exports, "isBaseForm", () => Ut), f(c.exports, "isMark", () => $), f(c.exports, "default", () => gt);
              var l = {};
              l = JSON.parse('{"categories":["Cc","Zs","Po","Sc","Ps","Pe","Sm","Pd","Nd","Lu","Sk","Pc","Ll","So","Lo","Pi","Cf","No","Pf","Lt","Lm","Mn","Me","Mc","Nl","Zl","Zp","Cs","Co"],"combiningClasses":["Not_Reordered","Above","Above_Right","Below","Attached_Above_Right","Attached_Below","Overlay","Iota_Subscript","Double_Below","Double_Above","Below_Right","Above_Left","CCC10","CCC11","CCC12","CCC13","CCC14","CCC15","CCC16","CCC17","CCC18","CCC19","CCC20","CCC21","CCC22","CCC23","CCC24","CCC25","CCC30","CCC31","CCC32","CCC27","CCC28","CCC29","CCC33","CCC34","CCC35","CCC36","Nukta","Virama","CCC84","CCC91","CCC103","CCC107","CCC118","CCC122","CCC129","CCC130","CCC132","Attached_Above","Below_Left","Left","Kana_Voicing","CCC26","Right"],"scripts":["Common","Latin","Bopomofo","Inherited","Greek","Coptic","Cyrillic","Armenian","Hebrew","Arabic","Syriac","Thaana","Nko","Samaritan","Mandaic","Devanagari","Bengali","Gurmukhi","Gujarati","Oriya","Tamil","Telugu","Kannada","Malayalam","Sinhala","Thai","Lao","Tibetan","Myanmar","Georgian","Hangul","Ethiopic","Cherokee","Canadian_Aboriginal","Ogham","Runic","Tagalog","Hanunoo","Buhid","Tagbanwa","Khmer","Mongolian","Limbu","Tai_Le","New_Tai_Lue","Buginese","Tai_Tham","Balinese","Sundanese","Batak","Lepcha","Ol_Chiki","Braille","Glagolitic","Tifinagh","Han","Hiragana","Katakana","Yi","Lisu","Vai","Bamum","Syloti_Nagri","Phags_Pa","Saurashtra","Kayah_Li","Rejang","Javanese","Cham","Tai_Viet","Meetei_Mayek","null","Linear_B","Lycian","Carian","Old_Italic","Gothic","Old_Permic","Ugaritic","Old_Persian","Deseret","Shavian","Osmanya","Osage","Elbasan","Caucasian_Albanian","Linear_A","Cypriot","Imperial_Aramaic","Palmyrene","Nabataean","Hatran","Phoenician","Lydian","Meroitic_Hieroglyphs","Meroitic_Cursive","Kharoshthi","Old_South_Arabian","Old_North_Arabian","Manichaean","Avestan","Inscriptional_Parthian","Inscriptional_Pahlavi","Psalter_Pahlavi","Old_Turkic","Old_Hungarian","Hanifi_Rohingya","Old_Sogdian","Sogdian","Elymaic","Brahmi","Kaithi","Sora_Sompeng","Chakma","Mahajani","Sharada","Khojki","Multani","Khudawadi","Grantha","Newa","Tirhuta","Siddham","Modi","Takri","Ahom","Dogra","Warang_Citi","Nandinagari","Zanabazar_Square","Soyombo","Pau_Cin_Hau","Bhaiksuki","Marchen","Masaram_Gondi","Gunjala_Gondi","Makasar","Cuneiform","Egyptian_Hieroglyphs","Anatolian_Hieroglyphs","Mro","Bassa_Vah","Pahawh_Hmong","Medefaidrin","Miao","Tangut","Nushu","Duployan","SignWriting","Nyiakeng_Puachue_Hmong","Wancho","Mende_Kikakui","Adlam"],"eaw":["N","Na","A","W","H","F"]}');
              const u = new (n(r))(n(o).toByteArray("")), h = Math.log2 || ((ut) => Math.log(ut) / Math.LN2), a = (ut) => h(ut) + 1 | 0, v = a((/* @__PURE__ */ n(l)).categories.length - 1), y = a((/* @__PURE__ */ n(l)).combiningClasses.length - 1), p = a((/* @__PURE__ */ n(l)).scripts.length - 1), e = a((/* @__PURE__ */ n(l)).eaw.length - 1), m = 10, w = y + p + e + m, D = p + e + m, I = e + m, E = m, T = (1 << v) - 1, A = (1 << y) - 1, F = (1 << p) - 1, b = (1 << e) - 1, R = (1 << m) - 1;
              function N(ut) {
                const st = u.get(ut);
                return (/* @__PURE__ */ n(l)).categories[st >> w & T];
              }
              function U(ut) {
                const st = u.get(ut);
                return (/* @__PURE__ */ n(l)).combiningClasses[st >> D & A];
              }
              function W(ut) {
                const st = u.get(ut);
                return (/* @__PURE__ */ n(l)).scripts[st >> I & F];
              }
              function J(ut) {
                const st = u.get(ut);
                return (/* @__PURE__ */ n(l)).eaw[st >> E & b];
              }
              function ht(ut) {
                let st = u.get(ut), yt = st & R;
                if (yt === 0)
                  return null;
                if (yt <= 50)
                  return yt - 1;
                if (yt < 480) {
                  const G = (yt >> 4) - 12, Et = (yt & 15) + 1;
                  return G / Et;
                } else if (yt < 768) {
                  st = (yt >> 5) - 14;
                  let G = (yt & 31) + 2;
                  for (; G > 0; )
                    st *= 10, G--;
                  return st;
                } else {
                  st = (yt >> 2) - 191;
                  let G = (yt & 3) + 1;
                  for (; G > 0; )
                    st *= 60, G--;
                  return st;
                }
              }
              function K(ut) {
                const st = N(ut);
                return st === "Lu" || st === "Ll" || st === "Lt" || st === "Lm" || st === "Lo" || st === "Nl";
              }
              function nt(ut) {
                return N(ut) === "Nd";
              }
              function xt(ut) {
                const st = N(ut);
                return st === "Pc" || st === "Pd" || st === "Pe" || st === "Pf" || st === "Pi" || st === "Po" || st === "Ps";
              }
              function bt(ut) {
                return N(ut) === "Ll";
              }
              function Tt(ut) {
                return N(ut) === "Lu";
              }
              function It(ut) {
                return N(ut) === "Lt";
              }
              function Lt(ut) {
                const st = N(ut);
                return st === "Zs" || st === "Zl" || st === "Zp";
              }
              function Ut(ut) {
                const st = N(ut);
                return st === "Nd" || st === "No" || st === "Nl" || st === "Lu" || st === "Ll" || st === "Lt" || st === "Lm" || st === "Lo" || st === "Me" || st === "Mc";
              }
              function $(ut) {
                const st = N(ut);
                return st === "Mn" || st === "Me" || st === "Mc";
              }
              var gt = {
                getCategory: N,
                getCombiningClass: U,
                getScript: W,
                getEastAsianWidth: J,
                getNumericValue: ht,
                isAlphabetic: K,
                isDigit: nt,
                isPunctuation: xt,
                isLowerCase: bt,
                isUpperCase: Tt,
                isTitleCase: It,
                isWhiteSpace: Lt,
                isBaseForm: Ut,
                isMark: $
              };
            }
          ),
          /***/
          63480: (
            /***/
            function(c) {
              c.exports = JSON.parse('[["8740","ä°ä°²ää¦ä¸ð§§äµ·ä³ð§²±ä³¢ð§³ã®ä¶ää±ä±ð¤¿ð£ð§ð¦ºð§ä±ðªäää²ð§±¬ä´äª¤ä¡ð¦¬£ç¥ð¥©ð¡©£ð£¸ð£½¡æå»"],["8767","ç¶å¤ð¨®¹ã·´é´ð§¯¯å¯ð¡µåª¤ã¥ð©º°å«å®·å³¼æ®èð©¥ç¡çã¡µð¡µð£ð¦¡ã»¬"],["87a1","ð¥£ã«µç«¼é¾ð¤¡ð¨¤ð£ªð ªð£äèé¾é¯ä¤°èå¢ééç§ç¨²æ æ¨©è¢çç¯æç¨¬åéã¦çð¥¶¹çé¿å³ä¤¯åä±ð£å ç©²ð§­¥è®ä®ð¦ºäð¥¶ç®®ð¢¼é¿ð¢ð¢ð¢é¿èð£»ä´é¿ä¡ðª·¿æç®é¿"],["8840","ã",4,"ð ãð ð ããð ð¡¿¨ãð ããããð ããÄÃÇÃÄÃÄÃÅÃÇÃà¿¿ÃÌáº¾à¿¿ÃÌá»ÃÄÃ¡ÇÃ ÉÄÃ©ÄÃ¨Ä«Ã­ÇÃ¬ÅÃ³ÇÃ²Å«ÃºÇÃ¹ÇÇÇ"],["88a1","ÇÃ¼à¿¿ÃªÌáº¿à¿¿ÃªÌá»ÃªÉ¡ââ"],["8940","ðª©ð¡"],["8943","æ"],["8946","ä¸½æ»éµé"],["894c","ð§µæä¼ä¼¨ä¾¨åå´åå¤å¡å¨å»åååå¢å£°å¤å¤å¤²å¤´å­¦å®å®å²åºæ»ææ¾æ æ¡¥æµç¼çµçº¤çº¬çººç»ç»ç»ç¼ç¼·èºèè¯è§è®¾è¯¢è½¦è½§è½®"],["89a1","çç³¼ç·æ¥ç«å§"],["89ab","éç¢¸éè¼"],["89b0","è´è¶ð §§"],["89b5","èé»ä³é·é¸ä°¾ð©·¶ð§é¸ðª³ã"],["89c1","æºè¾ç"],["89c5","ä¤é©¬éªé¾ç¦ð¨¬ð¡·ð ð¢«¦ä¸¤äºäºäºäº¿ä»«ä¼·ãä¾½ã¹ååã½ãã¥åå¤åå¼åäºå¹åå§ãå©ãå°ãåå£ã­ã²ãåå£å´å¹åå¯åå£å¨ãå¿ã¥ã¿åã"],["8a40","ð§¶å¥"],["8a43","ð ±ð ´ð¥«åð¢³ã§¬ð è¹ð¤¶¸ð©¥äð¨¾çºð¢°¸ã¨´äð¨ð¦§²ð¤·ªæð µ¼ð ¾´ð ³ð¡´æè¹¾ð ºð °ð ½¤ð¢²©ð¨ð¤"],["8a64","ð µð©©ð¨©ä´ð¤º§ð¢³éª²ã©§ð©´ã¿­ãð¥ð©ð§£ð¢µéµ®é "],["8a76","äð¦¥æ´å£ð¢µð¢¯ð¡·ã§»ð¡¯"],["8aa1","ð¦ð¦ð§¦ æªð¥ð ±è¹¨ð¢¡ð¨­ð ±"],["8aac","ä ð ©ã¿ºå¡³ð¢¶"],["8ab2","ð¤ð ¼ð¦ð ½ð ¶å¹ä»äº"],["8abb","äª´ð¢©¦ð¡èªé£µð ¶æ¹ã§¾ð¢µè·å¡æ¼ã¹"],["8ac9","ðªð ¸ð¢«ð¢³"],["8ace","ð¡ð£§ã¦ã¨ð¨ã¸ð¥¹ð¢åð ¼±ð¢²²ð© ã¼æ°½ð¤¸»"],["8adf","ð§´ð¢ºð¢ðªð¨³ð ¹ºð °´ð¦ ç¾ð¡ð¢ ð¢¤¹ã»ð¥£ð ºð ¾ð ºªã¾ð ¼°ð µð¡ð ¹"],["8af6","ð º«ð ®©ð µð¡ð¡½ã¿¹ð¢æ²ð ¾­"],["8b40","ð£´ð§¹ð¢¯ð µ¾ð µ¿ð¢±ð¢±ã¨ð ºð¡ð ¼®ðª²ð¦­ð¨³ð¨¶ð¨³éªåèå¹"],["8b55","ð©»é°¦éª¶ð§ð¢·®çè­è¬å°ð¦²è´ãåð¨½é¶ð »ºð ¸ð ¹·ð »»ãð¤·«ãð ³å¯ð¢µð¡ð ¸ð ¹¸ð¡¸ð¡ð¨ð¡ð ¹¹ð¤¹ð¢¶¤å©ð¡ð¡ð¡µð¡¶åð ¸"],["8ba1","ð§ð¨ð ¾µð ¹»ð¥¾ãð ¾¶ð¡ð¥ðª½ð¤§ð¡ ºð¤·ð¨¼å¢å¨ãð¥½ç®²å­¨ä ä¬¬é¼§ä§§é°é®ð¥­´ð£½å»ã²åä¸¨å¤ð¡¯ð¯¡¸éð ä¹äº»ã¾å°£å½å¿ã£ºææµæ­ºæ°µæ°ºç¬ç«ä¸¬ç­ð¤£©ç½ç¤»ç³¹ç½ð¦ªã"],["8bde","ð¦èèð¦ð¦¥åè¡¤è§ð§¢²è® è´éé¸é¿é¨ð¨¸é¦é¡µé£é£é¥£ð© é±¼é¸é»æ­¯ï¤ä¸·ð éæ·é¢"],["8c40","å»æ·¾ð©±³é¾¦ã·è¢ð¤ç·å³µä¬ ð¥ãð¥´°æ¢ð¨¨²è¾§é¶çæçºð£ðªã²ð¡¦ä¬ç£¤çå®ð¨äæ©£ðªºä£èð ©¯ç¨ªð©¥ð¨«ªéçå¤ð¢¾é´çð¨§£é¾§çäº£ä¿°å¼ä¸¯ä¼é¾¨å´ç¶å¢å£ð¡¶¶åºåºå¿ð¢æ"],["8ca1","ð£¹æ¤æ©ð£±£æ³¿"],["8ca7","çð¤çã»ð¤¨å¬ç¹è®ð¥²¤ð¥çªç¯¬ç³ç¹¬è¸èé¾©è¢é¾ªèº¹é¾«è¿èé§ é¡é¾¬ð¨¶¹ð¡¿ä±ä¢å¨"],["8cc9","é¡¨æ«ä¶å½"],["8cce","èð¤¥»è¿ð§ä²ð¦µ´åµ»ð¦¬ð¦¾¾é¾­é¾®å®é¾¯æ§ç¹æ¹ç§ã¶äð£ð¢ää¶"],["8ce6","å³ð£¬è«¹å±¸ã´ð£åµ¸é¾²çäð¤¬ð¡¸£ä±·ã¥¸ãð ¤ð¦±è«ä¾´ð ¹å¦¿è¬é¡ð©£ºå¼»"],["8d40","ð ®"],["8d42","ð¢ð¨¥­ää»ð©¹ã¼é¾³ðªµä¸ãä·ð¦±ä¼ð¨²ð§¿ä­ã£ð¥ä¡ää¶ä±»äµ¶äªã¿ð¤¬ã¡ää½ä­å´¾åµåµã·¼ã å¶¤å¶¹ã  ã ¸å¹åº½å¼¥å¾ã¤ã¤ã¤¿ã¥ææ½å³¥ã¦æ·æ¹æã¦¸æ¬ææ¥æã§¸å±"],["8da1","ã¨æ¢æ»ææã©æå´å¡é¾ãªæãª½æ¿æã«²æã¬¢æã­æ¤æ ã­æ¡æ¢ã­²ã­±ã­»æ¤æ¥çæ¥¤æ¦æ¦ã®¼æ§ã¯æ©¥æ©´æ©±æªã¯¬æªã¯²æª«æªµæ«æ«¶æ®æ¯æ¯ªæ±µæ²ªã³æ´æ´æ´¦æ¶ã³¯æ¶¤æ¶±æ¸æ¸æ¸©æºð¨§æº»æ»¢æ»é½¿æ»¨æ»©æ¼¤æ¼´ãµð£½æ¾æ¾¾ãµªãµµç·å²ã¶ç¬ã¶ççç¯ç¿çð ¥äã±ð »"],["8e40","ð£»å¾ð¦»ç¾ð¥ ãæ¦¢ð¨¯©å­´ç©ð¥£¡ð©ç©¥ç©½ð¥¦¬çª»çª°ç«ç«çð¦äç«ç«ç«ªä¯å²ð¥°ç¬ç­ç¬©ð¥ð¥³¾ç®¢ç­¯èð¥®´ð¦±¿ç¯è¡ç®ç®¸ð¥´ ã¶­ð¥±¥èç¯ºç°ç°µð¥³ç±ç²ð¤¢ç²¦æ½ð¤¸ç³ç³ç³¦ç±´ç³³ç³µç³"],["8ea1","ç¹§äð¦¹çµð¦»çç¶ç¶«çµç¶³ç·ð¤ð¦©ç·¤ã´ç·µð¡¹ç·¥ð¨­ç¸ð¦¡ð¦ç¹®çºä«é¬ç¸§ç½ç½ç½ç¤¶ð¦é§¡ç¾ð¦ç¾£ð¡¡ð ¨äð£¦äð¨ºç¿ºð¦èèèè¨è¯ðªð¦³è»è¼è¡ð¢ä¦ð¦¦ð£·£ð¦¨æ¥è§ð¨©èèå¢°ð¢¶æ±¿ð¦ð¤¾¸æ§ð¡èð¡¡æ©ð¤©¥ð¤ªäºè©ð ¬ð¦©ð£µ¾ä¿¹ð¡½è¢è¢ð¦¬ð¤¦§ð£°ð¡³ð£·¸èªæ¤ð¯¦ä"],["8f40","èèèð ¸ð¡´ãð£½ð£è»è¢èð£ºð¦¶£ð¦¬ð¦®ð£ã¶¿èå¬èäð¦¶¥è¬èèã¾ð¦»æ©èãð¦¹ð¢»¯èð¥¯¤è±ã·ä¤æª§èð£²µç¥è¨ð¦®ð¦¹·ð¦¹èèèä èè¤ð¥²äð¥³äè´å«²ð¦ºä§è³äæ¿è"],["8fa1","ð¨¥ð¨»èð§èð¡ð§ð¯¦²äªè¨ãð¡¢¢å·ð§è¾è±ðª¸è®ð¢°§è±èè å¡è¬æ¡äè¡è¡ð§ ð£¶¹ð§¤è¡è¢äè¢´è¢µæè£ç·ð§è¦è¦è¦¦è¦©è¦§è¦¼ð¨¨¥è§§ð§¤¤ð§ª½èªçé¾èªð§©ç«©ð§¬ºð£¾äð§¬¸ç¼è¬è¬ð¥°ð¥¥è¬¿è­è­èª©ð¤©ºè®è®èª¯ð¡äè¡è²ð§µð§¶ð¯§ã¥ð§µè³ð§¶ð§¶½è´è´ð¡¤è³çè´ð¤³ã»èµ·"],["9040","è¶©ð¨ð¡ð¤¦ã­¼ð¨¼ð§ç«§èº­èº¶è»éè¼è¼­ð¨¥ð¨è¾¥éðªð ©è¾³ä¤ªð¨§ð¨½ð£¶»å»¸ð£¢è¿¹ðªð¨¼ð¨ð¢¥ã¦ð¦»é·ð¨¼ð§ª¾é¡ð¨¬ð¨é¨ð¨éð¨¦é®é½é§ã«°é©éç²¬ð¨¤³ð¡ºéæ²éé¢ð¥¹é¹ð¨«ð£²ð¨¬ð¥"],["90a1","ð ´±é¬é«ð¨«¡ð¨¯«çå«ð¨«¢ð¨«¥ä¥¥éð¨¯¬ð¨°¹ð¨¯¿é³éèº¼éé¦é¦é æ¿¶ä¹ð¢ºð¨ð¡¼ð£¸®ä§æ°é»éä¬é£ð¦»æé¶ç£µð¨« é½åä¦¡ð¦²¸ð ´ð¦ð©¯ð©¥ð¤«ð¡¤ð£é±èé¶ä¨ä½äð¤«©çµå­ééð©éå­ð©«éé¥åð£·ð£¼ééé±é¾ééé ð¥¬é®çð©³é¿éµð©ð§¥ºä«é ´é ³é¡é¡¦ã¬ð§µãµð °ð¤"],["9140","ð¥é£é¢·é£é£ä«¿ð¦´§ð¡å°é£¡é£¦é£¬é¸é¤¹ð¤¨©ä­²ð©¡ð©¤é§µé¨é¨»é¨é©ð¥¥ãð©±ð©¯é« é«¢ð©¬é«´ä°é¬é¬­ð¨å´é¬´ð¦¦¨ã£ð£½é­é­ð©´¾å©ð¡¡£é®ð¤é°é¯¿é°ð©¹¨é·ð©¾·ðªðª«ðª¡ðª£ðªéµ¾é¶ðª´é¸æ¢"],["91a1","é·ð¢ðªðª ð¡¤»ðª³é´¹ðª¹ðª´éºéºéºéº¢ä´´éºªéº¯ð¤¤é»ã­ ã§¥ã´ä¼²ã¾ð¨°«é¼é¼ä®é¤ð¦¶¢é¼é¼é¼¹ååé½é¦¸ð©é²è¿é½¢é½©ç«é¾çä®¾ð¤¥µð¤¦»ç·ð¤§¸ð¤ð¤©çð¨¯ð¡£ºç¦ð¨¥¾ð¨¸¶é©é³ð¨©é¬ééð¨¥¬ð¤¹çã»«ç²ç©çð¤³ð¤¸ç¾ð¡¯ç£ð¡¢¾ð£ã»ð¡¢ð¥¯ð¡¸ã¢ð¡»ð¡ ¹ã¡ð¡´ð¡£ð¥½ã£ð¡åð¤¨¥ð¡¾ð¡¨"],["9240","ð¡ð¡¶èð£¦èèð¤¦ð§¥ð£¸±ð¥ð£»»ð§ä´ð£®ð©¦ð¦¼¦æ¹ã³ã°ã·§å¡¬ð¡¤¢æ äð£¿ð¤¡ð¤ð¤ð¦°¡ååð¦±åð ¿ð ®¨ð ¸éð¨¬éä»¸å«ã ð¤¶äº¼ð ¥ð ¿ä½ä¾ð¥å©¨ð «ð ã¦ð ð ãµä¼©ð ð¨º³ð µè«ð äº"],["92a1","ååä¾¢ä¼ð¤¨ð£ºä½å®å¬åä¿ä¿¥åå¼ååååæ¹¶ð£ð£¸¹ð£º¿æµ²ð¡¢ð£ºå¨åð  äð £ð ð èµºð¨ªð åå¤ð ¡³å¡é®äºçð¤ð ° ð¤¦¬ð¡¤æ§ð ¸ç¹ã»ççççä®ð¤ª¼ð¤åãçð¤å´ð åð ¯åéé´é¦ååå¿ã¾å£åªð¨©ð¡ºð¡¯ð¡å¨¬å¦¸éå©¾å«å¨ð¥¥ð¡§³ð¡¡¡ð¤ãµæ´çå¨¡ð¥º"],["9340","åªð¨¯ð é çð¡çä¥²éð¨§»é½ã å°å²å¹å¹ð¡¦ð¡¥¼ð£«®å»å­ð¡¤ð¡¤ãð¡¢ ãð¡¾ãèªð¨©ð¡¶ºð£²ð¨¦¨å¼å¼ð¡¤§ð¡«å©«ð¡»å­èð§½è¡ æ¾ð¢¡ ð¢«å¿ãº¸ð¢¯ð¢¾ð©ð¦½³æð ¾ð ð¢æææµð¢²ð¢´ð¤ð©"],["93a1","æ±ð¤¥ð¢­ªã¨©ð¢¬¢ð£ð©£ªð¢¹¸æ·ðªæ¶æ±æð¤§£ð¢µ§æ¤ð¢²¡æ»æ«æ¥²ã¯´ð£ð£­ð¤¦ð£«åð£ ð¡£ð©¿æð£ð£³ã« äð¥ð¨¬¢ð¥ð¡¼ð¥ð¥¥ç£®ð£ð¡ ªð£´ã¤ð£ð£ð¤æð¦´¤æ«ä®æ°ð§¡°ð¡·«æ£ð£ð£¡æð¥¡²ã£ð£ ºð£¼ã®ð£¢ð£¾çã®æð¤ªæ¢¶æ ã¯æª¾ã¡£ð£ð¤æ¨³æ©æ«æ¬ð¡¤ææ¢æ©ã¯æ©ºæ­ð£¿ð£²é é²ð¨¯ªð¨«"],["9440","éð¨ð¨§é§æ¶¥æ¼ð¤§¬æµ§ð£½¿ã¶æ¸ð¤¼å¨½æ¸å¡æ´¤ç¡ç»ð¤ð¤¶ç±çççð¤ð¤¥å¹ð¤ª¤ð «çºð£»¸ð£ð¤©ð¤¤ð¥¿¡ã¼ãº±ð¤«ð¨°£ð£¼µæ§ã»³çç¼éç·äð¦·ªäçã½£ð¤³ð¤´ã½çç³ðªã¬ç¨ð¨«ð¤¦«ð¤¦ã«»"],["94a1","ã·ð¤©ã»¿ð¤§ð¤£³éºå²éð¨«£ð¡¡¤åð¥¡ð¥§ç¸ð£²ççç»ð¤ð£ã©ð¤£°ç¸çãº¿ð¤ªºð¤«äð¤ªð¦®éð¥ç ç¢ç¢ç£çç¥ð§ð¥£äç¦èç¦¥æ¨­ð£»ºç¨ºç§´ä®ð¡¦ä²éµç§±ð µð¤¦ð ð£¶ºð¡®ãå«ã°ãªð ð °ç«¢å©ð¢µð¥ª¯ð¥ªå¨ð ç£°å¨ªð¥¯ç«¾ä¹ç±ç±­äð¥®³ð¥º¼ð¥º¦ç³ð¤§¹ð¡°ç²ç±¼ç²®æª²ç·ç¸ç·ç½ð¦¡"],["9540","ð¦ð§­ç¶ð¥ºäªð¦­µð ¤æð ð£åð¦ð¦¸ð¤¥¢ç¿ç¬§ð  ¬ð¥«©ð¥µç¬ð¥¸é§¦èé©£æ¨ð£¿ã§¢ð¤§·ð¦­é¨ð¦ èð§§ð¦³äªè·äèèèð¦´é£ð¦©è¢è¥ð¦©èð¦¶§èð§åªä¿ð¡¡å¬«ð¡¢¡å«¤ð¡£è ð¯¦¼ð£¶è ­ð§¢å¨"],["95a1","è¡®ä½è¢è¢¿è£¦è¥¥è¥ð¥è¥ð§ð§ð¨¯µð¨¯ð¨®ð¨§¹ãº­è£äµäã²è¨½è¨ð©å½é«ð¤æç©çð¡¡éµ­è²è³©ð§·å¦çå§°ä®ãè¸ªèº§ð¤°è¼°è½ä´æ±æ¾»ð¢¡ä¢æ½¹æºð¡é¯©ãµð¤¤¯é»éå±ä¤é»éð¨©ä¢ð¨«¼é§ð¨°ð¨°»è¥è¨«éé§ééð¨´´çã»ð¤£¿ð¤©ð¤ªã»§ð£¥éð¨»§ð¨¹¦ð¨¹¥ã»ð¤§­ð¤©¸ð£¿®çç«ã»¼éð©°"],["9640","æ¡ä¨ð©ð¥éé¨ð¨¦ð¨°¦ð¨¬¯ð¦¾éºå¬è­©ä¤¼ç¹ð¤éé±é¤¸ð ¼¦å·ð¨¯ð¤ª²é ð©é¶ð©é¥äð¨­ð¤©§ð¨­¤é£ð¨©ã¼éªä¤¥èé¤»é¥ð§¬ã·½é¦ä­¯é¦ªé©ð¨­¥ð¥£æªé¨¡å«¾é¨¯ð©£±ä®ð©¥é¦¼ä®½ä®é½å¡²ð¡å ¢ð¤¦¸"],["96a1","ð¡¨ç¡ð¢ð£¶¸æ£ãµ½éã¤§æð¢ð¢¥«æé±é±é±»é°µé°é­¿é¯ð©¸­é®ðªµðª¾é´¡ä²®ð¤é¸ä²°é´ðª´ðª­ðª³ð©¤¯é¶¥è½ð¦¸ð¦¿ð¦®è¼ä³ð¦¶¤ð¦ºð¦·°è è®ð¦¸ð£ð¦¤ç§¢ð£ð£ä¤­ð¤§ãµ¢éé¾éð ¿ç¢¹é·éä¿¤ãé¤ð¥ç ½ç¡ç¢¶ç¡ð¡ð£ð¤¥ãä½²æ¿æ¿ççåð¤µå»å£³åé´åç´ã¯ð¤¬ç«ð¦±ð¤¾å¬¨ð¡µð¨©"],["9740","æå«å¨ä¼ð¤ã¬ä­»ð¨§¼é»é¸ð¡£ð ¼è²ð¦³ð¡ð¤ºð¢°¦ð¤å¦ð£¶·ð¦ç¶¨ð¦ð¦¤ð¤¦¹ð¤¦ð¨§ºé¥ç¢ã»©ç´ð¨­£ð¡¢ã»¡ð¤ª³æ«ç³ç»ã»ð¤¨¾ð¤ªð¡ð¤©¦ð §ð¡¤ð¤§¥çð¤¤ç¥ð¤¥¶éç¦éð ¾é±ð¨«ð¨¨éð¨¯§ð¥ä¤µð¨ªç«"],["97a1","ð¤¥ð ³¿å¤ð ð ¯«ð ²¸åç§ð¡ºç·¾ð¡ð¤©ð¡¡ä®éãð¨«ð¤¦­å¦°ð¡¢¿ð¡¢ð§åª¡ã¢ð£µã°éå©¹ð¨ªð¡¡¢é´ã³ð ª´äªã¦å´ãµ©ãµð¡çµä»ð¨æ¸ð©¤ä«æµð§¹ç§æ²¯ã³ð£¿­ð£¸­æ¸æ¼ãµ¯ð µçã¼ãäã»ä¡±å§é®ä¤¾è½ð¨°ð¦¯å åãð¡ç¾ð¤¢ð¤©±ð¢¿£ð¡°ð¢½æ¢¹æ¥§ð¡ð£¥ð§¯´ð£ð¨ªð£ð£ºð¤²æ¨ð£­ð¦²·è¾ää"],["9840","ð¦´¦ð¦µð¦²ð¦¿æ¼ð§è½ð¡ºè­ð¦²ð§ð¡å¦åªð¡³å©¡å©±ð¡¤ð¤¼ã­å§¯ð¡¼ãçéæð¤¥å©®å¨«ð¤æ¨«ð£»¹ð§¶ð¤ð¤çð¤ð¨§¡ä¾°ð¦´¨å³ð¤ð§¹ð¤½æ¨ð¤ð¡ç¦ç³ð¤©ã¶¥æ³ð¯ ¥ð¤©ç¹¥å§«å´¯ã·³å½ð¤©ð¡ç¶¤è¦"],["98a1","åð£«ºð£ð å¾ð £ð ã¿¥ð¡¾ðª¶çð©åµ°çç³ð¨©ð© ä¿ç¿§ççð§«´ç¸ç¹ð¥¶ççãº©ð§¬é¬çµð¤£²ç¡è¶ã»çã»æ²¢å½çççã»¢ã»°ã»´ã»ºçã¼ã½çç­ç²çã½¼ççã¿çã¿ç´ã¿çºð¤½çå£è¦å¡©äçä¹æ¡äãçäªä¯å±ç¾çå£²ç ç¹ç ä¨ç ¹ç¡ç¡ç¡¦èð¥µç¤³æ ç¤²ä"],["9940","äç¦ç¦è¾»ç¨è¾¼ä§çªä²çª¼è¹äç«ç«ää¸¡ç­¢ç­¬ç­»ç°ç°ä äºç±»ç²äç²¸äç³­è¾çð ³ç·ç·ç·ç·½ç¾®ç¾´çäè è¥ç¬¹è®è±èã·å´ç è·è©ä­èçªèèç èäã¬¹èèè"],["99a1","äå ºè¼èä¥èä­è¥å¯èè¤èäè¦è¶èèè¿ä°èé©æ¦èçµè¤æ£èäè¾è¡è¸èè¸èä»è¯è°è ä·è²èè²è¯éèääè¢®è£¿è¤¤è¥è¦ð§¥§è¨©è¨¸èªèª´è±è³è³²è´äå¡è·ä­ä»®è¸ºååè¹±åµèº°ä ·è»è»¢è»¤è»­è»²è¾·è¿è¿è¿é³é§ä¢­é£ éä¤é¨éé«é±é®é¿"],["9a40","é£é«é³é´é½ééé­ä¥ä¥éº¿éåéé­é¾ä¥ªéé¹é­é¢ä¦§é´é³ä§¥æ ä¨¤éä¨µé²éåä«¤æ¨é¢¹ä¬é£±å¡é¤é¤å´é¤é¤·é¥é¥é¥¢ä­°é§ä®é¨¼é¬çªé­©é®é¯é¯±é¯´ä±­é° ã¯ð¡¯éµé°º"],["9aa1","é»¾åé¶é¶½é·é·¼é¶è¾¶é¹»éº¬éº±éº½é»éé»¢é»±é»¸ç«é½ð ð ·ð  æ¤éå¦¬ð å¡éã¹ð ð ð ¶ð¡ºåç³ð «ð «ð ®¿åªð¯ »ð ¯åð ¯»ð °»ð ±ð ±¥ð ±¼æ§ð ²åºð ²µð ³ð ³­ð µ¯ð ¶²ð ·æ¥é°¯è¥ð ¸ð ¸ð »ð ¾ð ¼­ð ¹³å° ð ¾¼å¸ð¡ð¡ð¡¶æð¡»ð¡ð¡ãð¡¿ð¡ð¡¯ð¡»å¤è­ð¡£ð¡µð¡¶è®ð¡·ð¡ð¡ð¡ä¹¸ç»ð¡ ­ð¡¥ª"],["9b40","ð¡¨­ð¡©ð¡°ªð¡±°ð¡²¬ð¡»æð¡»ð¡¼çæ¡ð¢æ§©ãð¢¼ð¢ð¢ºð¢ªð¢¡±ð¢¥è½ð¢¥§ð¢¦ð¢«è¦¥ð¢«¨è¾ ð¢¬é¸ð¢¬¿é¡éª½ð¢±"],["9b62","ð¢²ð¢²·ð¥¯¨ð¢´ð¢´ð¢¶·ð¢¶ð¢¹ð¢½´ð¢¿ð£³ð£¦ð£ð£å¾±ææ¿ð§©¹ð£§ð£³çð¤¦ºçð£ð£çºð å¢µæ"],["9ba1","æ¤ð£ª§ð§ð¥¿¢ð£¸ð£º¹ð§¾ð¢ä£äª¸ð¤ð¨ªð¤®ð¤ð¤»ð¤´ð¤ð¤©ð åð å¦ð¡º¨ã®¾ð£³¿ð¤ð¤åð¤´ã¦ð¤¯ð¨¨ð©§ã¢ð¢è­ð¨­é§ð¤ ð¤£»ð¤¨çð¤«ð ±¸å¥¥ð¤º¥ð¤¾ð ¹è»ð¥¬åå¿ç±ð¥ð¥ð£½ð¤ª§å¼ð¥ð¥®ð¦­éã³ð¥¿ð§²ð¥äð¥¢ð¥¦ð¥ð¤¤¿ð¥¡å¦ã»ð£æð¥¤ä¼ð¨¥ð¥ª®ð¥®ð¥°ð¡¶å¡çæ¾¶ð¦ð§°éð¦²ð¤¾è­¢ð¦ð¦"],["9c40","åµð¦¯·è¼¶ð¦ð¡¤è«ªð¤§¶ð¦ð£¿¯ð¦ä¯ð¦¿ð¦µð¢é¥ð¥¡æå¨§ð¯£ä¾»å¹ð¤¡ð¦¼ä¹ªð¤¤´éæ¶ð¦²½ãè¥·ð¦ð¦¡®ð¦ð¦¡çð¦£ç­ð©ð ¨ð¦¤¦éð¦¤¹ç©é·°ð¦§ºé¨¦ð¦¨­ãð¦©ð ¡ç¦ð¦¨´ð¦­å´¬ð£èð¦®äð¦²¤ç»è¡¥ð¦¶®å¢¶"],["9ca1","ãð¢ð§ð§ã±ð§ð§éð¢ºð§é°ð§¦ð¤§æ°¹éð§ð »¸è §è£µð¢¤¦ð¨³ð¡±æº¸ð¤¨ªð¡  ã¦¤ã¹å°ç§£ä¿æ¶ð©²­ð©¢¤è¥ð§ð§¡åäð¡ã¦¡ð£¯ð¨¨ð¡ç­è¦ð§§ð©¨å©§ä²·ð§¯ð¨¦«ð§§½ð§¨ð§¬ð§µ¦ð¤ºç­ç¥¾ð¨æ¾µðªæ¨ð¨å¢ð¦¸é¿æ ¶éð¨¯ð¨£ð¦¦µð¡­ð£¯ð¨å¶ð¨°°ð¨åé £ð¨¥å¶«ð¤¦æ¾æ§åð¤ª¥ð£¾ã°æ¶ð¨ð¨´ð¨®ð¡¾¡ð¨"],["9d40","ð¨ð¨¯ð¨ð¨ð¨¯ð¨ãð¨¨ð¨ªä£ºæ¦ð¨¥ç éð¨¦¸ä²ð¨§§äð¨§¨ð¨­ð¨¯å§¸ð¨°è¼ð¨¿ð©¬ç­ð©ð©¼ã··ð©ð¤«è¿çåð©§ð©©ð©°ð©¸ð©²ð©£ð©¥ð©¥ªð©§ð©¨¨ð©¬ð©µð©¶çºð©»¸ð©¼£ä²¤éðªç¢ðª¿ä¶éðªä¶ð ²è¾¾å"],["9da1","è¾ºð¢°è¾¹ð¤ªäç¹¿æ½æª±ä»ªã¤ð¨¬¬ð§¢ãºèºð¡µð¨¤ð¨­¬ð¨®ð§¨¾ð¦¯ã·«ð§ð£²·ð¥µð¥¥äºð¥ºð¦å¿ð ¹­è¸å­­ð£ºð¤²ææð¡¶ð¡¡»æ°å­ð¥±åð¥ã·ð©¶ä±½å¢åç½ð¥»å¥µð£µè°ä¸ð ¿ªð µð£ºèéµè´ç»é±çç¹éå²èè·å¥è²èè½åªç¥¢ååð ºãåå±æ±ð¨¢ã­ç´å°åºåå²ð ±ð ²å»ð¥ð ¹¶ð¢±¢"],["9e40","ð º¢éº«çµåð¡µæé­åè³ç¶é¶æ¼æ¹æ¾å©ð¢­é±²ð¢º³åãð ¶§å§åååç¦è¸­ð¦¢ç±è¶è èè£è¶èð¡ä¬çð¤å®èð¦¢å»ð¢´ð§´¯ð¤£ð§µ³ð¦»ð§¶é°ð¡éð£³¼ðª©ð º¬ð »¹ç¦ð¡²¢äð¤¿ð§¿¹ð ¿«äº"],["9ea1","é±æð¢¶ ä£³ð¤ ð©µ¼ð ¿¬ð ¸æ¢ð§£ð ¿­"],["9ead","ð¦ð¡ç£çºéµä¸ä¸ã·å¬æ²²å§ã¬ã§å½ã¥ð¤å¢ð¤­®è­ååªð¥ªð ¥¹"],["9ec5","ã©ð¢¥ç´ð©º¬ä´é¯­ð£³¾ð©¼°ä±ð¤¾©ð©ð©¿èð£¶¶ð§²ð¦³ð£ æ®ç´¥ð£»·ð£¸¬ã¨ªéåã¹´ãºä©ð çå«°ð º¶ç¡ºð§¼®å¢§ä¿å¼é®åµ´çðª´éºä³¡ç¹ã»æð£ð¤²"],["9ef5","åð¡©å§ð¤¥£ð©¸å´ð§®ã­æ±éµ¼"],["9f40","ç±é¬¹åð¡¬å±æð©ð¦µð§¤è­ð ´¨ð¦´¢ð¤«¢ð µ±"],["9f4f","å¾ð¡¼å¶éð¡·éºéç¬é¬å³ç®£æ¨æµé«¿ç¯é¬ªç±¾é¬®ç±ç²é°ç¯¼é¬é¼é°ð¤¤¾é½å³å¯ä¿½éºä¿²å ã¸åå§åå¦·å¸éé¶«è½å©é´é¥éºå¬æ°"],["9fa1","æ¤¬åé°é´ä°»éæ¦å¦çð¡­é§å³"],["9fae","ééé"],["9fb2","éð¨ºæ¿ð¦´£æ«åéçºæð ¼çç±°ð¥°¡ð£³½"],["9fc1","ð¤¤çé®ä¸ªð ³è¾è¡"],["9fc9","å±æ§å­åºåå·µä»æ°±ð ²ä¼¹åååè¶ã¾å¼ã³"],["9fdb","æ­é¼é¾¥é®é ®é¢´éªºéº¨éºçºç¬"],["9fe7","æ¯ºè ç½¸"],["9feb","å ðªè¹·é½"],["9ff0","è·è¹é¸è¸æð¨½è¸¨è¹µç«ð¤©·ç¨¾ç£æ³ªè©§ç"],["a040","ð¨©é¼¦æ³èçðª²ç¡ð¯¡è´ç¢ç±è¬­çç±è³«ð¤ª»è¯å¾ºè¢ ä·"],["a055","ð¡ »ð¦¸"],["a058","è©¾ð¢"],["a05b","æ½ç§é«éµé®é®èµ"],["a063","è è³·ç¬é¡é®°ãç²ä°ç±é¥ð¦æä°éºæ½"],["a073","åæ¯æ¦æ¹æã©æ¢åªð£µæ¤æ ã"],["a0a1","åµð¨¯è¿ð¨¸¹"],["a0a6","åð¡µç¤å²é¸ð ¼»ä¥"],["a0ae","ç¾"],["a0b0","ç³ð¥¼ç³ç¨­è¦è£çµçç²è¦èæè¢ð§èç°èç¤è¦ð¦çð¦»è©èèèè©è²­è­ç«ç¸èãµæ¦²è¶¦"],["a0d4","è¦©ç¨æ¶¹èð¤ç§ã·ç¶æ¤æã³ç¢æ·"],["a0e2","ç½±ð¨¬­çæ©ä­¾å ã°ð£³ð¥»ð§ð¥±ð¡¥ð¡¾ð©¤ð¦·ð§­å³ð¦­ð¨¨ð£·ð ®ð¦¡ð¤¼ä¢å¬ð¦é½éº¦ð¦«"],["a3c0","â",31,"â¡"],["c6a1","â ",9,"â´",9,"â°",9,"ä¸¶ä¸¿äºäº ååå«å¹å¸å©å¶å¤å®å·â¼³å¹¿å»´å½å½¡æ´æ çç¶è¾µé¶Â¨Ëã½ã¾ãããä»ãããã¼ï¼»ï¼½â½ã",23],["c740","ã",58,"ã¡ã¢ã£ã¤"],["c7a1","ã¥",81,"Ð",5,"ÐÐ",4],["c840","Ð",26,"ÑÐ¶",25,"â§â¸â¹ãð ä¹ð åä"],["c8a1","é¾°åé¾±ð§"],["c8cd","ï¿¢ï¿¤ï¼ï¼ã±ââ¡ããâºâºâºâºâºâºâºâºâºâºâºâº¥âº§âºªâº¬âº®âº¶âº¼âº¾â»â»â»â»â»â»â»â»â»£"],["c8f5","ÊÉÉÉÉµÅÃ¸ÅÊÉª"],["f9fe","ï¿­"],["fa40","ð éð ð£¿èäµç¯åµãð¤¥ð¨§¤éð¡§è®ð£³ç ¼ææð¤¤³ð¨¦ªð  ð¦®³ð¡ä¾«ð¢­åð¦´©ð§ªð£ð¤ª±ð¢å©ð ¾å¾¤ð ð æ»ð å½åãºåé¡¬ãèð¤¦¤ð å ð£´åªð ¯¿ð¢¼ð ¥ð¢°ð ð£³ð¡¦å®è½ð ³ð£²å²å¸"],["faa1","é´´åååã³åð¤ª¦å³å¢åå­èæ¤¾ð£­å½»åå¦å¼åµååå¹åç°èå èð¦¬åð¨«åæ»ð£¾ð ¥ð£¿¬å³åð ¯¢æ³ð¡¦æ çæãºªã£ð¡¨çä¢å­å´ð¨«å¾å¿ð¡ð¡ç¦åð¨ªå å«å®ç§ð¥²ã½çååæ±ä¹å¾åãª«ð ®å ð£¿«ð¢¶£å¶ð ±·åç¹å«ææµå­ð¦­ð µ´ååå¤ä¦ð¡ð »ã¶´ð µ"],["fb40","ð¨¦¼ð¢åä³­å¯çåå©åð¡£ð¤ºäð¤µæ³ð¡´å·æð£æ¤æ­ååç£±å±éå¾åå¯å­ð¨­¦ã£ð¡åð¤¥æ±®çåã±ð¦±¾å¦ð¡å ð¡ð¤£å ¦ð¤¯µå¡å¢ªã¡å£ å£ð¡¼å£»å¯¿åðªð¤¸éã¡å¤æ¢¦ãæ¹"],["fba1","ð¡¾å¨¤åð¡èå§ð µð¦²ð¦´ªð¡å§ð¡»ð¡²ð¦¶¦æµ±ð¡ ¨ð¡å§¹ð¦¹åª«å©£ã¦ð¤¦©å©·ãåªç¥å«ð¦¾¡ð¢ã¶ð¡¤ã²ð¡¸åºåå­¶æå­¼ð§¨ää¡ð å¯æ ð¡¨´ð¥§ð ¥å¯³å®ä´å°ð¡­å°çå°ð¡²¥ð¦¬¨å±ä£å²å³©å³¯å¶ð¡·¹ð¡¸·å´å´åµð¡º¤å²ºå·è¼ã ­ð¤¤ð¢ð¢³èã ¶ã¯å¸®æªå¹µå¹ºð¤¼ð ³å¦äº·å»å¨ð¡±å¸å»´ð¨"],["fc40","å»¹å»»ã¢ å»¼æ ¾éå¼ð ð¯¢ã«ä¢®ð¡ºå¼ºð¦¢ð¢å½ð¢±å½£é½ð¦¹®å½²éð¨¨¶å¾§å¶¶ãµð¥ð¡½ªð§¸ð¢¨éð ð¨¨©æ±æð¡¡·ã¥£ã·ã¹åð¢´ç¥±ã¹ææ¤æ³ð¤¦ð¤¦ð§©ç¤å¡åª æ¤è¤æð¯¢¦ð¦»æå´ð æå®ªð£¾·"],["fca1","ð¢¡æð¨®ð©¥æã¤²ð¢¦ð¢£æ£æææð æð¡°æð¢¸æ¬ð¤§ã¨æ¸æ¸ð¡ð¡¼ææ¾ð¢¸¶é ð¤ð¥æ¡æ¥é»ã©¦æºã©ææ¼ð¤¨¨ð¤¨£ææ­æð£¾æµð¤¥ä¬·æäð¡ ©æ æ£å¿ð£æð£·ð£¸æð£¤ð£¥æð ¹µæ§ð¥¦æ³æ´ð¡¸½ð£±ð¨´ð£ð¥çð¢£·é¦¤æð¤ð¤¨¡ã¬«æ§ºð£ææ§æ¢ð¤ð©­æä©æ ¢æ¹é¼æ ð£¦ð¦¶ æ¡"],["fd40","ð£¯æ§¡æ¨ð¨«æ¥³æ£ð£æ¤æ¤ã´²ã¨ð£¼ã®æ¬æ¥¡ð¨©ä¼æ¤¶æ¦ã®¡ð è£åæ§¹ð£ð¢ªæ©ð£æªã¯³æ±æ«ð©ã°æ¬ð ¤£ææ¬µæ­´ð¢æºµð£«ð µð¡¥ãå¡ð£­æ¯¡ð£»¼æ¯æ°·ð¢ð¤£±ð¦­æ±è¦æ±¹ð£¶¼äð£¶½ð¤¤ð¤¤ð¤¤"],["fda1","ð£³ã¥ã³«ð ´²é®ð£¹ð¢ç¾æ ·ð¦´¥ð¦¶¡ð¦·«æ¶æµæ¹¼æ¼ð¤¥¿ð¤ð¦¹²è³ð¦½´åæ²æ¸è®ð¨¬¡æ¸¯ð£¸¯çð£¾ç§æ¹åªð£æ¿¸ãæ¾ð£¸°æ»ºð¡ð¤½äé°æ½æ½ãµæ½´ð©°ã´»æ¾ð¤æ¿ð¤ð¤ð¤¹ð£¿°ð£¾´ð¤¿åð¤ð¤ð¤ð¦çç¾ç§çççççäã·¨ç´çð¤·ç«çåªçç®å²ð¤¥çé¢ð¤ç¬ð¤ð¤¨§ð¤¨¢çºð¨¯¨ç½ç"],["fe40","éçå¤éç¤éð¥ç®çð¤¥´æ¢½ççã¹ð£æ æ¼½ççªç«ð¤ £ð¨ «ä£­ð¨ ç¨ç®ççªð °ºð¦¨®ççð¤¢ð¡§ð¤¨¤æ£ãð¤¦·ð¤¦ð¤§»ç·çæ¤ð¤¨¦ç¹ð ã»çð¢¢­ç ð¨º²çç¤ç¶è¹ç¬ã°ç´é±æ¨¬çä¥ð¤ª"],["fea1","ð¤ð¤©¹ð¨®å­ð¨°ð¡¢çð¡¦çç©çð¨»ð¡©å¯ð¨º¬éççç§ç®ð¤¾ã¼ð¤´çççç´çç¬ççç¯ç¶ð¦µçè¯ã¸ð¦¤ð¦¤ç¡ç¥ç·çð¦¾è¢ð¥ð¥½ð¡¸çç¦çæ¯ð¥ çð£¬ç¯ð¨¥¤ð¨¥¨ð¡ç´ç ð¡¶ð¤¨æ£ç¢¯ç£ç£é¥ç¤®ð¥ ç£ç¤´ç¢±ð§è¾¸è¢ð¨¬«ð¦ð¢ç¦è¤æ¤ç¦ð¥¡ç¦ð§¬¹ç¤¼ç¦©æ¸ªð§¦ãº¨ç§ð©ç§"]]');
            }
          ),
          /***/
          13336: (
            /***/
            function(c) {
              c.exports = JSON.parse('[["0","\\u0000",127,"â¬"],["8140","ä¸ä¸ä¸ä¸ä¸ä¸ä¸ä¸ä¸ ä¸¡ä¸£ä¸¦ä¸©ä¸®ä¸¯ä¸±ä¸³ä¸µä¸·ä¸¼ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹¢ä¹£ä¹¤ä¹¥ä¹§ä¹¨ä¹ª",5,"ä¹²ä¹´",9,"ä¹¿",6,"äºäº"],["8180","äºäºäºäºäºäºäºäº£äºªäº¯äº°äº±äº´äº¶äº·äº¸äº¹äº¼äº½äº¾ä»ä»ä»ä»ä»ä»ä»ä»ä» ä»¢ä»¦ä»§ä»©ä»­ä»®ä»¯ä»±ä»´ä»¸ä»¹ä»ºä»¼ä»¾ä¼ä¼",6,"ä¼ä¼ä¼",4,"ä¼ä¼ä¼¡ä¼£ä¼¨ä¼©ä¼¬ä¼­ä¼®ä¼±ä¼³ä¼µä¼·ä¼¹ä¼»ä¼¾",4,"ä½ä½ä½",5,"ä½ä½ä½ä½¡ä½¢ä½¦ä½¨ä½ªä½«ä½­ä½®ä½±ä½²ä½µä½·ä½¸ä½¹ä½ºä½½ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾¡ä¾¢"],["8240","ä¾¤ä¾«ä¾­ä¾°",4,"ä¾¶",8,"ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿",4,"ä¿ä¿ä¿ ä¿¢ä¿¤ä¿¥ä¿§ä¿«ä¿¬ä¿°ä¿²ä¿´ä¿µä¿¶ä¿·ä¿¹ä¿»ä¿¼ä¿½ä¿¿",11],["8280","åååååååååååå å¢å£å¤å§å«å¯",10,"å»å½å¿ååååååååååå",4,"åååååå",7,"å¦",5,"å­",8,"å¸å¹åºå¼å½ååååååååååå",20,"å¤å¦åªå«å­",4,"å³",6,"å¼"],["8340","å½",17,"å",5,"åååå",10,"å¨å©åªå«å¯å°å±å²å´å¶",4,"å¼",9,"å"],["8380","ååå",5,"å",13,"å¢",28,"åååååååååååååå",4,"å£å¤å¦å§å©åªå¯å²åºå¾å¿åååååååååååååååååå¡å£å¦",4,"å­å®å´å¸å¹åºå¾å¿åååååååååå",5],["8440","ååååååå¢å£å¥",5,"å¬å®å±å²å´å·å¾åååååååååååååå¡å¢å£å¥å¦å§åªå¬å¯å±å²å´åµå¼å¾å",5,"åååååååå"],["8480","åååååå å¢å£å¤å¦å¨å«å¬å­å®å°å±å³",9,"å¾åå",4,"å",6,"ååå",6,"åå¤å¥å¦å§å®å¯å°å´",9,"åååååååååååååååååå",5,"å å¡å¢å£å¥",10,"å±",7,"å»å¼å½åååååååååå"],["8540","åååååååååå¢å¤å¥å§å¨å©å«å¬å­å¯",9,"å¼å½åååååååååååååå¥å¨åªå¬å­å²å¶å¹å»å¼å½å¾åååååååå"],["8580","å",4,"ååååååå å¡å¤å§åªå«å¬å­å¯",6,"å·å¸å¹åºå¼å½å¾åå",4,"ååååååååååå¡å¢å§å´åºå¾å¿ååååååååååå¢å¤å¥åªå°å³å¶å·åºå½å¿ååååååååååååå",4,"å£å¥å§å©",7,"å´å¹åºå¾å¿åååååååååååååååå å¡"],["8640","å¢å¥å®å°å²åµå¶å·å¹åºå¼å¾åååååååå ",4,"å«å¬å¯å°å±å´",5,"å»å¾ååååååå",4,"ååå",5,"ååååå¡å¥å¦"],["8680","å¨å©å«å­å²å´åµå¶å¸å¹åºå»å½åååååå",4,"ååååå",4,"åååå å¢å£å¨å©å«å¯",5,"å¹åºå½å¿ååååååååååååååå ",6,"å¨",8,"å²å´å¶å¸åºå¼å¿",4,"åååååååååå",4,"åå å¢å§å©å­å®å°å±å´å¶å¸",4,"å¿åååå"],["8740","åååååå",7,"ååååå å¡å¢å¥å¦å¨å©åªå«å®å¯å°å³åµå·å¸åºå¼å½å¾å",11,"å",4,"ååååå",4],["8780","å£å¥å¦å§å­å®å¯å°å²å³å´åµå·å¸å¹åºå½",7,"å",6,"åååå",14,"å¤",10,"å°",6,"å¸å¹åºå»å½",12,"å",8,"åååååå£å¥",5,"å¬å®å¯å²å³å¶å·å¸å»å¼åååååå",6],["8840","å",9,"ååå å¡å¢å¤å¥å¦å§å«å±å²å´",4,"å¼å½å¿ååååååååå",4,"ååå¢å£å¥å§å¬å®å°å±å²å´åµå¸å¹åºå½å¾å¿å"],["8880","åååååå",4,"å",6,"ååååå¥å¨åªå¬å¯å°å±å³åµå¶å·å¹",8,"å",6,"ååååååååååå¡å¢å£å¥",7,"å®å°å±å²å³åµå¶å·å»å¼å¾å¿å å å å å å å å å å å å å å å å å å å å å å å ¢å £å ¥",4,"å «",4,"å ±å ²å ³å ´å ¶",7],["8940","å ¾",5,"å¡",6,"å¡å¡å¡å¡å¡å¡å¡å¡å¡",4,"å¡",5,"å¡¦",4,"å¡­",16,"å¡¿å¢å¢å¢å¢å¢å¢å¢å¢"],["8980","å¢",4,"å¢",4,"å¢å¢å¢å¢ ",7,"å¢ª",17,"å¢½å¢¾å¢¿å£å£å£å£å£",10,"å£å£å£å£",13,"å£¥",5,"å£­å£¯å£±å£²å£´å£µå£·å£¸å£º",7,"å¤å¤å¤å¤",4,"å¤å¤å¤å¤å¤å¤å¤å¤å¤å¤å¤ å¤¡å¤¢å¤£å¤¦å¤¨å¤¬å¤°å¤²å¤³å¤µå¤¶å¤»"],["8a40","å¤½å¤¾å¤¿å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥",4,"å¥¡å¥£å¥¤å¥¦",12,"å¥µå¥·å¥ºå¥»å¥¼å¥¾å¥¿å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦å¦ å¦¡å¦¢å¦¦"],["8a80","å¦§å¦¬å¦­å¦°å¦±å¦³",5,"å¦ºå¦¼å¦½å¦¿",6,"å§å§å§å§å§å§å§å§å§å§å§å§",4,"å§¤å§¦å§§å§©å§ªå§«å§­",11,"å§ºå§¼å§½å§¾å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨å¨¡å¨¢å¨¤å¨¦å¨§å¨¨å¨ª",6,"å¨³å¨µå¨·",4,"å¨½å¨¾å¨¿å©",4,"å©å©å©",9,"å©å©å©å©å©",5],["8b40","å©¡å©£å©¤å©¥å©¦å©¨å©©å©«",8,"å©¸å©¹å©»å©¼å©½å©¾åª",17,"åª",6,"åª",13,"åª«åª¬"],["8b80","åª­",4,"åª´åª¶åª·åª¹",4,"åª¿å«å«",5,"å«å«å«",4,"å«å«å«å«å«å«å«å«å«å«¢å«¤å«¥å«§å«¨å«ªå«¬",4,"å«²",22,"å¬",11,"å¬",25,"å¬³å¬µå¬¶å¬¸",7,"å­",6],["8c40","å­",7,"å­å­å­å­ å­¡å­§å­¨å­«å­­å­®å­¯å­²å­´å­¶å­·å­¸å­¹å­»å­¼å­¾å­¿å®å®å®å®å®å®å®å®å®å®å®å®§å®¨å®©å®¬å®­å®®å®¯å®±å®²å®·å®ºå®»å®¼å¯å¯å¯å¯å¯å¯å¯å¯å¯å¯"],["8c80","å¯å¯",8,"å¯ å¯¢å¯£å¯¦å¯§å¯©",4,"å¯¯å¯±",6,"å¯½å¯¾å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å°å° å°¡å°£å°¦å°¨å°©å°ªå°«å°­å°®å°¯å°°å°²å°³å°µå°¶å°·å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±å±¢å±¤å±§",6,"å±°å±²",6,"å±»å±¼å±½å±¾å²å²",4,"å²å²å²å²å²å²å²å²å²",4,"å²¤",4],["8d40","å²ªå²®å²¯å²°å²²å²´å²¶å²¹å²ºå²»å²¼å²¾å³å³å³å³",5,"å³",5,"å³",5,"å³",6,"å³¢å³£å³§å³©å³«å³¬å³®å³¯å³±",9,"å³¼",4],["8d80","å´å´å´å´",5,"å´",4,"å´å´å´å´å´å´å´å´",4,"å´¥å´¨å´ªå´«å´¬å´¯",4,"å´µ",7,"å´¿",7,"åµåµåµ",10,"åµåµåµåµ",10,"åµªåµ­åµ®åµ°åµ±åµ²åµ³åµµ",12,"å¶",21,"å¶å¶å¶å¶å¶å¶ "],["8e40","å¶¡",21,"å¶¸",12,"å·",6,"å·",12,"å·å·å· å·£å·¤å·ªå·¬å·­"],["8e80","å·°å·µå·¶å·¸",4,"å·¿å¸å¸å¸å¸å¸å¸å¸å¸å¸å¸å¸å¸",7,"å¸¨",4,"å¸¯å¸°å¸²",4,"å¸¹å¸ºå¸¾å¸¿å¹å¹å¹å¹",5,"å¹",6,"å¹",4,"å¹å¹å¹å¹ å¹£",14,"å¹µå¹·å¹¹å¹¾åºåºåºåºåºåºåºåºåºåºåºåºåºåº¡åº¢åº£åº¤åº¨",4,"åº®",4,"åº´åººåº»åº¼åº½åº¿",6],["8f40","å»å»å»å»",5,"å»å»å»å»å»å»å»",11,"å»©å»«",8,"å»µå»¸å»¹å»»å»¼å»½å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼å¼¡å¼¢å¼£å¼¤"],["8f80","å¼¨å¼«å¼¬å¼®å¼°å¼²",6,"å¼»å¼½å¼¾å¼¿å½",14,"å½å½å½å½å½å½å½å½å½ å½£å½¥å½§å½¨å½«å½®å½¯å½²å½´å½µå½¶å½¸å½ºå½½å½¾å½¿å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾å¾ å¾¢",5,"å¾©å¾«å¾¬å¾¯",5,"å¾¶å¾¸å¾¹å¾ºå¾»å¾¾",4,"å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿å¿¢å¿£å¿¥å¿¦å¿¨å¿©å¿¬å¿¯å¿°å¿²å¿³å¿´å¿¶å¿·å¿¹å¿ºå¿¼æ"],["9040","æææææææææææææ¢æ£æ¤æ¬æ­æ®æ°",4,"æ¶",4,"æ½æ¾ææ",6,"ææææææææææææææ æ¡æ¥æ¦æ®æ±æ²æ´æµæ·æ¾æ"],["9080","ææææææææææææææææææææ¡æ¢æ¤æ¥æ§æ©æªæ®æ°æ³æµæ¶æ·æ¹æºæ½",7,"ææææ",4,"æææææææææ¡",4,"æªæ±æ²æµæ·æ¸æ»",4,"æææææææææ",4,"æææææææææ¡æ¢æ¥æ¨æ©æªæ¬",18,"æ",6],["9140","ææææææææææ",6,"æææ æ¡æ£æ¤æ¥æ¦æ©",6,"æ±æ²æ³æ´æ¶æ¸",18,"æææ",4,"æ"],["9180","æ",6,"æ",8,"æªæ«æ­",9,"æ¸",5,"æ¿æææ",4,"ææ",4,"ææ",16,"æ§",13,"æ¶",8,"æ",5,"æææææææææ æ£æ¦æ§æ¨æ©æ«æ­æ¯æ°æ±æ²æµæ¶æ¸",4,"æææææ"],["9240","ææææææææ",6,"æ¤æ¥æ¨æ±æ²æ´æµæ·æ¸æºæ»æ½ææææææææ",5,"ææææææ£æ¦æ§æ©æªæ­æ®æ¯æ°æ²æ³æ´æ¶æ·æ¸æºæ¾ææ"],["9280","ææææææææ æ¡æ¤æªæ«æ°æ²æµæ¸æ¹æºæ»ææææææææææææææææææææ¦æ§æ©æ¬æ­æ®æ°æ±æ³",5,"æ»æ¼æ¾æ¿æææææææææææ",7,"æ æ¤æ¥æ¦æ¨æªæ«æ¬æ¯æ°æ²æ³æ´æµæ¸æ¹æ¼æ½æ¾æ¿æææææææææææææ",6,"æ¡æ¤æ¦æ«æ¯æ±æ²æµæ¶æ¹æ»æ½æ¿æ"],["9340","ææææææææææææææ",6,"ææ¢æ¤",4,"æ«æ¬æ®æ¯æ°æ±æ³æµæ·æ¹æºæ»æ¼æ¾æææ",4,"æææææ",5,"æææ¢æ£æ¤"],["9380","æ¥æ§æ¨æ©æ«æ®",5,"æµ",4,"æ»æ¼æ¾æææææ",6,"æææææ",4,"æ",7,"æ¨æªæ«æ¬æ®",9,"æ»",6,"æææ",8,"æææææææææ",4,"æ¥æ¦æ§æ¨æªæ«æ¯æ±æ²æ³æ´æ¶æ¹æ»æ½æ¾æ¿ææææ",6,"ææææææææ"],["9440","æææææ æ¡æ£æ¥æ§",24,"æ",7,"æ",7,"æ",4,"æ",8],["9480","æ¢æ£æ¤æ¦",4,"æ¬æ­æ°æ±æ²æ³æ·æºæ¼æ½æ",4,"ææææææææææææææææ æ¡æ¤æ¥æ§æ¨æ©æªæ­æ®æ¯æ±æ³æµæ¶æ¸",14,"æææææææææææææææ æ¢æ£æ¦æ¨æªæ¬æ®æ±",7,"æºæ»æ¾æ¿æææææææææææææ",7,"æ¡æ£æ¤æªæ«"],["9540","æ²æ³æ´æµæ¸æ¹æ»",4,"æææææææææææææææææææ¡æ¢æ£æ¤æ¦æ©æªæ«æ¬æ®æ°æ²æ³æ·",4,"æ½æ¿æææ",6,"æææææ"],["9580","ææææææ æ¢æ£æ¥æ§æ©",4,"æ±æ²æ³æµæ¸æ¹æ»æ¼æ½æ¿ææææææææææææææææææ",4,"æ",8,"æ©",4,"æ¯",4,"æµæ¶æ·æ¸æºæ»æ¼æ½æ¿",25,"ææ",7,"æ§æ¨æª",5,"æ±æµæ¶æ¸æºæ»æ½æææ"],["9640","æææææææææææææææææ ",5,"æ§æ©æ®æ°æ²æ³æ¶æ·æ¸æ¹æ»æ¼æ¾æ¿æææææææææææ",4,"ææ¢æ£æ¤æ¦æ§æ«æ¬æ®æ±æ´æ¶"],["9680","æ¸æ¹æºæ»æ½ææææææææææææææææææææ æ¡æ¤æ¦æ©æ¬æ®æ±æ²æ´æ¹",7,"ææ",9,"ææææææ¡æ£æ¤æ¦æ§æ¨æªæ«æ­æ®æ²æµ",7,"æ¾æ æ æ æ æ æ æ æ æ æ æ ",4,"æ æ æ  æ ¢",6,"æ «",6,"æ ´æ µæ ¶æ ºæ »æ ¿æ¡æ¡æ¡æ¡æ¡æ¡",5],["9740","æ¡æ¡æ¡æ¡æ¡ªæ¡¬",7,"æ¡µæ¡¸",8,"æ¢æ¢æ¢",7,"æ¢æ¢æ¢æ¢æ¢æ¢æ¢",9,"æ¢£æ¢¤æ¢¥æ¢©æ¢ªæ¢«æ¢¬æ¢®æ¢±æ¢²æ¢´æ¢¶æ¢·æ¢¸"],["9780","æ¢¹",6,"æ£æ£",5,"æ£æ£æ£æ£æ£æ£æ£æ£æ£æ£æ£æ£",4,"æ£¡æ£¢æ£¤",9,"æ£¯æ£²æ£³æ£´æ£¶æ£·æ£¸æ£»æ£½æ£¾æ£¿æ¤æ¤æ¤æ¤æ¤",4,"æ¤æ¤æ¤æ¤",11,"æ¤¡æ¤¢æ¤£æ¤¥",7,"æ¤®æ¤¯æ¤±æ¤²æ¤³æ¤µæ¤¶æ¤·æ¤¸æ¤ºæ¤»æ¤¼æ¤¾æ¥æ¥æ¥",16,"æ¥æ¥æ¥æ¥æ¥æ¥æ¥"],["9840","æ¥¡æ¥¢æ¥¤æ¥¥æ¥§æ¥¨æ¥©æ¥ªæ¥¬æ¥­æ¥¯æ¥°æ¥²",4,"æ¥ºæ¥»æ¥½æ¥¾æ¥¿æ¦æ¦æ¦æ¦æ¦æ¦æ¦",5,"æ¦æ¦æ¦æ¦æ¦",9,"æ¦©æ¦ªæ¦¬æ¦®æ¦¯æ¦°æ¦²æ¦³æ¦µæ¦¶æ¦¸æ¦¹æ¦ºæ¦¼æ¦½"],["9880","æ¦¾æ¦¿æ§æ§",7,"æ§æ§æ§æ§æ§æ§æ§",5,"æ§æ§æ§æ§¡",11,"æ§®æ§¯æ§°æ§±æ§³",9,"æ§¾æ¨",9,"æ¨",11,"æ¨",5,"æ¨ æ¨¢",5,"æ¨©æ¨«æ¨¬æ¨­æ¨®æ¨°æ¨²æ¨³æ¨´æ¨¶",6,"æ¨¿",4,"æ©æ©æ©",7,"æ©",6,"æ©"],["9940","æ©",4,"æ©¢æ©£æ©¤æ©¦",10,"æ©²",6,"æ©ºæ©»æ©½æ©¾æ©¿æªæªæªæª",8,"æªæª",4,"æª",7,"æª¡",5],["9980","æª§æª¨æªªæª­",114,"æ¬¥æ¬¦æ¬¨",6],["9a40","æ¬¯æ¬°æ¬±æ¬³æ¬´æ¬µæ¬¶æ¬¸æ¬»æ¬¼æ¬½æ¬¿æ­æ­æ­æ­æ­æ­æ­æ­æ­",11,"æ­",7,"æ­¨æ­©æ­«",13,"æ­ºæ­½æ­¾æ­¿æ®æ®æ®"],["9a80","æ®æ®æ®æ®æ®æ®æ®æ®æ®æ®æ®",4,"æ®¢",7,"æ®«",7,"æ®¶æ®¸",6,"æ¯æ¯æ¯æ¯",4,"æ¯æ¯æ¯æ¯æ¯æ¯æ¯",4,"æ¯¢",7,"æ¯¬æ¯­æ¯®æ¯°æ¯±æ¯²æ¯´æ¯¶æ¯·æ¯¸æ¯ºæ¯»æ¯¼æ¯¾",6,"æ°",4,"æ°æ°æ°æ°æ°æ°æ° æ°£æ°¥æ°«æ°¬æ°­æ°±æ°³æ°¶æ°·æ°¹æ°ºæ°»æ°¼æ°¾æ°¿æ±æ±æ±æ±æ±",4,"æ±æ±æ±æ±æ±"],["9b40","æ±æ±æ±¢æ±£æ±¥æ±¦æ±§æ±«",4,"æ±±æ±³æ±µæ±·æ±¸æ±ºæ±»æ±¼æ±¿æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ² æ²¢æ²¨æ²¬æ²¯æ²°æ²´æ²µæ²¶æ²·æ²ºæ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³æ³"],["9b80","æ³æ³æ³æ³æ³æ³¤æ³¦æ³§æ³©æ³¬æ³­æ³²æ³´æ³¹æ³¿æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´æ´",5,"æ´¦æ´¨æ´©æ´¬æ´­æ´¯æ´°æ´´æ´¶æ´·æ´¸æ´ºæ´¿æµæµæµæµæµæµæµæµæµæµæµæµæµæµ¡æµ¢æµ¤æµ¥æµ§æµ¨æµ«æµ¬æµ­æµ°æµ±æµ²æµ³æµµæµ¶æµ¹æµºæµ»æµ½",4,"æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶",4,"æ¶æ¶¢æ¶¥æ¶¬æ¶­æ¶°æ¶±æ¶³æ¶´æ¶¶æ¶·æ¶¹",5,"æ·æ·æ·æ·æ·æ·"],["9c40","æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·æ·¢æ·£æ·¥æ·§æ·¨æ·©æ·ªæ·­æ·¯æ·°æ·²æ·´æ·µæ·¶æ·¸æ·ºæ·½",7,"æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸æ¸¢æ¸¦æ¸§æ¸¨æ¸ªæ¸¬æ¸®æ¸°æ¸±æ¸³æ¸µ"],["9c80","æ¸¶æ¸·æ¸¹æ¸»",7,"æ¹",7,"æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹ ",10,"æ¹¬æ¹­æ¹¯",14,"æºæºæºæºæºæºæº",4,"æº",6,"æºæºæºæºæºæº æº¡æº£æº¤æº¦æº¨æº©æº«æº¬æº­æº®æº°æº³æºµæº¸æº¹æº¼æº¾æº¿æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»£æ»§æ»ª",5],["9d40","æ»°æ»±æ»²æ»³æ»µæ»¶æ»·æ»¸æ»º",7,"æ¼æ¼æ¼æ¼æ¼æ¼",4,"æ¼æ¼æ¼æ¼",9,"æ¼¡æ¼¢æ¼£æ¼¥æ¼¦æ¼§æ¼¨æ¼¬æ¼®æ¼°æ¼²æ¼´æ¼µæ¼·",6,"æ¼¿æ½æ½æ½"],["9d80","æ½æ½æ½æ½æ½æ½æ½æ½",9,"æ½æ½æ½æ½æ½æ½ æ½¡æ½£æ½¤æ½¥æ½§",5,"æ½¯æ½°æ½±æ½³æ½µæ½¶æ½·æ½¹æ½»æ½½",6,"æ¾æ¾æ¾æ¾æ¾æ¾",12,"æ¾æ¾æ¾æ¾ æ¾¢",4,"æ¾¨",10,"æ¾´æ¾µæ¾·æ¾¸æ¾º",5,"æ¿æ¿",5,"æ¿",6,"æ¿",10,"æ¿æ¿¢æ¿£æ¿¤æ¿¥"],["9e40","æ¿¦",7,"æ¿°",32,"ç",7,"ç",6,"ç¤",6],["9e80","ç«",9,"ç¶ç·ç¸çº",17,"ççç",13,"ç",11,"ç®ç±ç²ç³ç´ç·ç¹çºç»ç½ççççççççççççççççççç",12,"ç°ç²ç´çµç¶çºç¾ç¿çççççç",12,"ç"],["9f40","çççç ç¡ç¢ç£ç¥çªç®ç°",6,"ç¸çºç»ç¼ç¾",10,"ç",4,"ççççç",10,"ç§",7,"ç²ç³ç´"],["9f80","çµç·",13,"ççççççç",12,"çç",4,"ç¥ç©",4,"ç¯ç°ç±ç´çµç¶ç·ç¹ç»ç¼ç¾",5,"ç",4,"çççççççççççç",4,"ç¡",6,"ç©çªç«ç­",5,"ç´ç¶ç·ç¸çº",8,"ç",9,"ç",4],["a040","ç",9,"ç¡ç¢ç£ç¤ç¦ç¨",5,"ç¯",9,"çº",11,"ç",19],["a080","ççç",9,"ç©ç«ç­ç®ç¯ç²ç³ç´çºç¼ç¾ç",6,"çççççççççççççççç ç£ç¤ç¥ç¨çªç«ç¬ç­ç°ç±ç³ç´ç¶ç·ç¸ç»ç¼ç½ççç",4,"ççççç",11,"ç ",11,"ç®ç±ç²ç³çµçº",6,"çççççççççççççççç"],["a1a1","ãããÂ·ËËÂ¨ããâï½ââ¦ââââããã",7,"ããããÂ±ÃÃ·â¶â§â¨âââªâ©ââ·ââ¥â¥â âââ«â®â¡âââ½ââ â®â¯â¤â¥ââµâ´ââÂ°â²â³âï¼Â¤ï¿ ï¿¡â°Â§âââââââââ¡â â³â²â»ââââã"],["a2a1","â°",9],["a2b1","â",19,"â´",19,"â ",9],["a2e5","ã ",9],["a2f1","â ",11],["a3a1","ï¼ï¼ï¼ï¿¥ï¼",88,"ï¿£"],["a4a1","ã",82],["a5a1","ã¡",85],["a6a1","Î",16,"Î£",6],["a6c1","Î±",16,"Ï",6],["a6e0","ï¸µï¸¶ï¸¹ï¸ºï¸¿ï¹ï¸½ï¸¾ï¹ï¹ï¹ï¹"],["a6ee","ï¸»ï¸¼ï¸·ï¸¸ï¸±"],["a6f4","ï¸³ï¸´"],["a7a1","Ð",5,"ÐÐ",25],["a7d1","Ð°",5,"ÑÐ¶",25],["a840","ËËËâââ¥âµâââââââââ£ââ¦â§â¿â",35,"â",6],["a880","â",7,"ââââ¼â½â¢â£â¤â¥ââããã"],["a8a1","ÄÃ¡ÇÃ ÄÃ©ÄÃ¨Ä«Ã­ÇÃ¬ÅÃ³ÇÃ²Å«ÃºÇÃ¹ÇÇÇÇÃ¼ÃªÉ"],["a8bd","ÅÅ"],["a8c0","É¡"],["a8c5","ã",36],["a940","ã¡",8,"ã£ãããããã¡ãããããï¸°ï¿¢ï¿¤"],["a959","â¡ã±"],["a95c","â"],["a960","ã¼ããã½ã¾ãããï¹",9,"ï¹ï¹ï¹ï¹ï¹",8],["a980","ï¹¢",4,"ï¹¨ï¹©ï¹ªï¹«"],["a996","ã"],["a9a4","â",75],["aa40","çççç¢",5,"çªç«çµç¶ç¹ç½ç¾ç¿ççç",5,"ççççççççççççç ç£ç¤ç¦ç§ç¨ç­ç¯ç°ç²ç³çµç¶çºç»ç¼ç½ç",8],["aa80","çççççççççççç",7,"ç¡",10,"ç®ç°ç±"],["ab40","ç²",11,"ç¿",4,"çççççççççççççççççççç ç¡ç£",5,"çªç¬ç­ç±ç´çµç¶ç¸ç¹ç¼ç½ç¾ç¿çç",4],["ab80","çççç",6,"çççççç¡ç¢ç£ç¤ç¦ç¨çªç«ç¬ç®ç¯ç°ç±ç³",4],["ac40","ç¸",10,"çççççççç",8,"ç",5,"ç£ç¤ç§ç©ç«ç­ç¯ç±ç²ç·",4,"ç½ç¾ç¿çç",11],["ac80","ç",6,"çççç ",12,"ç®ç¯ç±",4,"ç¸ç¹çº"],["ad40","ç»ç¼ç½ç¿ççççççççççç",10,"çç",7,"çª",15,"ç»",12],["ad80","ç",9,"ç",8,"ççç¡ç¥ç§",6,"ç°ç±ç²"],["ae40","ç³çµç¸",6,"ççççç",7,"ççççççççççç ",4,"ç¦ç§çªç®ç´ç¶ç¹ç¼ç½ç¿ççççççççççççççççç"],["ae80","ç",7,"ç§ç¨ç©ç«",6,"ç³çµç¶ç·çº",4,"çççççç"],["af40","çççççççççççççç¢ç¦",4,"ç­ç¶ç·çºç»ç¿ççççççççççççççççç ç¡ç¥ç©ç¬ç­ç®ç¯ç²ç³çµç¶ç·ç¸çºç»ç½ç¾çççç"],["af80","çççççççççççççççç¡ç£ç§ç¨ç¬ç®ç¯ç±ç²ç¶ç·ç¹çºç»ç½ççç"],["b040","ç",6,"ç",5,"çç",4,"ççç ç¡ç¢ç¤",6,"ç¬ç­ç®ç°",7,"ç¹çºç¼ç¿ççççççççççççççççç"],["b080","ç",7,"ç¥",8,"ç¯ç°ç³çµ",9,"çççåé¿åæ¨åååççè¼ç®è¾ç¢ç±ééæ°¨å®ä¿ºææå²¸èºæ¡è®æçå¹æç¬ç¿±è¢å²å¥¥ææ¾³è­ææå­å§ç¬å«ç¤å·´æè·é¶æèåé¸ç½¢ç¸ç½æç¾æä½°è´¥æç¨æç­æ¬æ³è¬é¢æ¿çæ®æä¼´ç£ååç»é¦å¸®æ¢æ¦èç»æ£ç£èéåè°¤èèåè¤å¥"],["b140","ççççççççççççç ",4,"ç¦",7,"ç°ç³çµç¶ç·çºç»ç½ç¿çççççççç",10,"ççççç¡ç£ç¤ç¥ç§çªç«"],["b180","ç¬ç®ç°",4,"ç¹ç»ç½ç¾ç¿ççççç",7,"ç",7,"çèé¹ä¿å ¡é¥±å®æ±æ¥æ´è±¹é²çæ¯ç¢æ²ååè¾èè´é¡åçå¤æ«çè¢«å¥è¯æ¬ç¬¨å´©ç»·ç­æ³µè¹¦è¿¸é¼é¼»æ¯éç¬å½¼ç¢§èè½æ¯æ¯æ¯å¸åºç¹é­æå¼å¿è¾å£èé¿éé­è¾¹ç¼è´¬æä¾¿ååè¾¨è¾©è¾«éæ å½ªèè¡¨é³æå«çªå½¬ææ¿æ»¨å®¾æåµå°æä¸ç§é¥¼ç³"],["b240","çççç ç¤ç§ç©çªç­",11,"çºç»ç¼çççç",5,"ççç",11,"ç¡ç£ç¤ç¦ç¨ç«ç­ç®ç¯ç±ç²ç´ç¶",4],["b280","ç¼ç¾ç",12,"ç",8,"çççç",4,"ç¤çå¹¶ç»è æ­æ¨éµæ³¢ååæéç®ä¼¯å¸è¶èèæ¸¤æ³é©³æååºè¡¥å ä¸å¸æ­¥ç°¿é¨ææ¦çè£ææè´¢ç¬è¸©éå½©èè¡é¤åèæ®æ­æ¨ç¿èè±ä»æ²§èæç³æ§½æ¹èåç­ä¾§åæµå±è¹­æåè¬è¶æ¥ç¢´æ½å¯å²å·®è¯§ææ´è±ºææºèé¦è°ç¼ é²äº§éé¢¤æç"],["b340","ç¦ç¨çªç¯ç°ç±ç²ç´çµç·ç¹çºç»ç¼ç ",5,"ç ç ç ç ç ç ç ç ç ç ç  ç ¡ç ¢ç ¤ç ¨ç ªç «ç ®ç ¯ç ±ç ²ç ³ç µç ¶ç ½ç ¿ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡"],["b380","ç¡ç¡ç¡",11,"ç¡¯",7,"ç¡¸ç¡¹ç¡ºç¡»ç¡½",6,"åºå°å¸¸é¿å¿è åæçå±å¡è¶æéæå²æ½®å·¢åµçè½¦æ¯æ¤æ£å½»æ¾é´è£è¾°å°æ¨å¿±æ²éè¶è¡¬æç§°åæ©æåä¹ç¨æ©æ¾è¯æ¿ééªç§¤åç´æåæ± è¿å¼é©°è»é½¿ä¾å°ºèµ¤ç¿æ¥ç½åå²è«å´å® æ½é¬ç´è¸ç¨ æç­¹ä»ç»¸çä¸è­ååºæ©±å¨èºééæ»é¤æ¥"],["b440","ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ ç¢¢ç¢¤ç¢¦ç¢¨",7,"ç¢µç¢¶ç¢·ç¢¸ç¢ºç¢»ç¢¼ç¢½ç¢¿ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£",9],["b480","ç£¤ç£¥ç£¦ç£§ç£©ç£ªç£«ç£­",4,"ç£³ç£µç£¶ç£¸ç£¹ç£»",5,"ç¤ç¤ç¤ç¤",6,"ç¡å¨çæè§¦å¤æ£å·ç©¿æ¤½ä¼ è¹åä¸²ç®çªå¹¢åºé¯åå¹çæ¶é¤åæ¥æ¤¿éåæ·³çº¯è ¢æ³ç»°çµè¨ç£éè¾æç·è¯æ­¤åºèµæ¬¡èªè±å±åä»ä¸åç²éç°ä¿è¹¿ç¯¡çªæ§å´å¬èçç²¹æ·¬ç¿ æå­å¯¸ç£æ®ææªæ«éæ­è¾¾ç­ç©æå¤§åæ­¹å£æ´å¸¦æ®ä»£è´·è¢å¾é®"],["b540","ç¤",5,"ç¤",9,"ç¤",4,"ç¤¥",14,"ç¤µ",4,"ç¤½ç¤¿ç¥ç¥ç¥ç¥ç¥ç¥",8,"ç¥ç¥ç¥ç¥ç¥¡ç¥£"],["b580","ç¥¤ç¥¦ç¥©ç¥ªç¥«ç¥¬ç¥®ç¥°",6,"ç¥¹ç¥»",4,"ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦æ è½æä¸¹åé¸æ¸èæ¦æ°®ä½æ®æ·¡è¯å¼¹èå½æ¡åè¡æ¡£åæ£è¹åå²ç¥·å¯¼å°ç¨»æ¼éçå¾·å¾çè¹¬ç¯ç»ç­çªå³éå ¤ä½æ»´è¿ªæç¬çæ¶¤ç¿å«¡æµåºå°èç¬¬å¸å¼éç¼é¢ ææ»ç¢ç¹å¸éå«çµä½ç¸åºæ¦å¥ æ·æ®¿ç¢å¼éååæåéè°è·ç¹ç¢è¶è¿­è°å "],["b640","ç¦",6,"ç¦",11,"ç¦¨",10,"ç¦´",4,"ç¦¼ç¦¿ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§",5,"ç§ ç§¡ç§¢ç§¥ç§¨ç§ª"],["b680","ç§¬ç§®ç§±",6,"ç§¹ç§ºç§¼ç§¾ç§¿ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨",4,"ç¨ç¨ç¨ç¨ç¨ç¨ä¸ç¯å®éé¡¶é¼é­å®è®¢ä¸¢ä¸å¬è£æå¨æ ä¾æ«å»æ´åææé¡è±éçé½ç£æ¯çç¬è¯»å µç¹èµæéèåº¦æ¸¡å¦ç«¯ç­é»æ®µæ­ç¼å åéå¯¹å¢©å¨è¹²æ¦é¡¿å¤éç¾éæåå¤å¤ºåèº²æµè·ºèµåæ°å è¾å³¨é¹ä¿é¢è®¹å¨¥æ¶åæ¼ééé¥¿æ©èå¿è³å°é¥µæ´±äº"],["b740","ç¨ç¨ç¨¡ç¨¢ç¨¤",14,"ç¨´ç¨µç¨¶ç¨¸ç¨ºç¨¾ç©",5,"ç©",9,"ç©",4,"ç©",16],["b780","ç©©",6,"ç©±ç©²ç©³ç©µç©»ç©¼ç©½ç©¾çªçªçªçªçªçªçªçªçªçªçªçªçªçªçªçªçª¡çª¢è´°åç½ç­ä¼ä¹éæ³çè©å¸çªç¿»æ¨ç¾éç¹å¡ç¦åè¿èè´©ç¯é¥­æ³åè³æ¹èªæ¿é²å¦¨ä»¿è®¿çººæ¾è²éå¡é£è¥åªè¯½å èºåºæ²¸è´¹è¬éå©æ°åçº·åçæ±¾ç²å¥ä»½å¿¿æ¤ç²ªä¸°å°æ«èå³°éé£ç¯ç½é¢å¯ç¼è®½å¥å¤ä½å¦å¤«æ·è¤å­µæ¶æè¾å¹æ°ç¬¦ä¼ä¿æ"],["b840","çª£çª¤çª§çª©çªªçª«çª®",4,"çª´",10,"ç«",10,"ç«",9,"ç«ç«ç«ç«ç«ç«ç«¡ç«¢ç«¤ç«§",5,"ç«®ç«°ç«±ç«²ç«³"],["b880","ç«´",4,"ç«»ç«¼ç«¾ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬¡ç¬¢ç¬£ç¬§ç¬©ç¬­æµ®æ¶ªç¦è¢±å¼ç«æè¾ä¿¯éæ§è¯èåºèèµ´å¯è¦èµå¤åä»éç¶è¹è´å¯è®£éå¦ç¼åå¶åè¯¥æ¹æ¦éçæºå¹²çææç«¿èèµ¶æç§æ¢èµ£ååé¢ç¼¸èçº²å²æ¸¯æ ç¯çé«èç¾ç³æéç¨¿åå¥æ­ææé¸½è³çå²é©èæ ¼è¤ééé¬ä¸ªåç»æ ¹è·èæ´åºç¾¹"],["b940","ç¬¯ç¬°ç¬²ç¬´ç¬µç¬¶ç¬·ç¬¹ç¬»ç¬½ç¬¿",5,"ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­¡ç­£",10,"ç­¯ç­°ç­³ç­´ç­¶ç­¸ç­ºç­¼ç­½ç­¿ç®ç®ç®ç®ç®",6,"ç®ç®"],["b980","ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç® ç®£ç®¤ç®¥ç®®ç®¯ç®°ç®²ç®³ç®µç®¶ç®·ç®¹",7,"ç¯ç¯ç¯åè¿æ¢å·¥æ»åæ­é¾ä¾èº¬å¬å®«å¼å·©æ±æ±è´¡å±é©å¾æ²èçå¢æè´­å¤è¾èåç®ä¼°æ²½å­¤å§é¼å¤èéª¨è°·è¡æé¡¾åºéå®çåå¯¡æè¤ä¹ææªæ£ºå³å®å è§ç®¡é¦ç½æ¯çè´¯åå¹¿éç°è§å­ç¡å½é¾éºè½¨é¬¼è¯¡ç¸æ¡æè·ªè´µå½è¾æ»æ£éé­å½æè£¹è¿å"],["ba40","ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯",4,"ç¯ç¯ç¯ç¯ç¯ ç¯¢ç¯£ç¯¤ç¯§ç¯¨ç¯©ç¯«ç¯¬ç¯­ç¯¯ç¯°ç¯²",4,"ç¯¸ç¯¹ç¯ºç¯»ç¯½ç¯¿",7,"ç°ç°ç°ç°ç°ç°",5,"ç°ç°ç°"],["ba80","ç°",4,"ç° ",5,"ç°¨ç°©ç°«",12,"ç°¹",5,"ç±éª¸å­©æµ·æ°¦äº¥å®³éªé£æ¨é¯é©å«æ¶µå¯å½åç½ç¿°æ¼ææ±æ¾æçæ±æ±å¤¯æ­èªå£åè±ªæ¯«éå¥½èå·æµ©åµåè·èæ ¸ç¦¾åä½åçè²éæ²³æ¶¸èµ«è¤é¹¤è´ºå¿é»çå¾ç æ¨å¼äº¨æ¨ªè¡¡æè½°åçè¹é¸¿æ´ªå®å¼çº¢åä¾¯ç´å¼åååå¼ä¹å¿½çå£¶è«è¡è´çç³æ¹"],["bb40","ç±",9,"ç±",36,"ç±µ",5,"ç±¾",9],["bb80","ç²ç²",6,"ç²ç²ç²ç²ç²ç²ç² ç²¡ç²£ç²¦ç²§ç²¨ç²©ç²«ç²¬ç²­ç²¯ç²°ç²´",4,"ç²ºç²»å¼§èå¬æ¤äºæ²ªæ·è±ååç¾æ»ç»ååè¯æ§å¾ææ·®åæ¬¢ç¯æ¡è¿ç¼æ¢æ£å¤çªè±¢çæ¶£å®¦å¹»èæé»ç£ºèç°§çå°æ¶çæå¹æè°ç°æ¥è¾å¾½æ¢èåæ¯ææ§åæ æ¦è´¿ç§½ä¼ç©æ±è®³è¯²ç»è¤æå©é­æµæ··è±æ´»ä¼ç«è·ææéè´§ç¥¸å»å¾åºæºç¸ç¨½ç§¯ç®"],["bc40","ç²¿ç³ç³ç³ç³ç³ç³ç³ç³",6,"ç³ç³ç³ç³ç³ç³¡",6,"ç³©",5,"ç³°",7,"ç³¹ç³ºç³¼",13,"ç´",5],["bc80","ç´",14,"ç´¡ç´£ç´¤ç´¥ç´¦ç´¨ç´©ç´ªç´¬ç´­ç´®ç´°",6,"èé¥¥è¿¹æ¿è®¥é¸¡å§¬ç»©ç¼åææ£è¾ç±éåæ¥ç¾æ±²å³å«çº§æ¤å èå·±èæåå­£ä¼ç¥­åæ¸æµå¯å¯è®¡è®°æ¢å¿éå¦ç»§çºªåæ·å¤¹ä½³å®¶å èé¢è´¾ç²é¾åç¨¼ä»·æ¶é©¾å«æ­¼çåå°ç¬ºé´çå¼è©è°å¥¸ç¼è§æ£æ¬ç¢±ç¡·æ£æ¡ç®ä¿­åªåèæ§é´è·µè´±è§é®ç®­ä»¶"],["bd40","ç´·",54,"çµ¯",7],["bd80","çµ¸",32,"å¥è°åé¥¯æ¸æºæ¶§å»ºåµå§å°æµæ±çèæ¡¨å¥è®²å é±éèæ¤ç¤ç¦è¶äº¤éæµéªå¨å¼æé°ç«ä¾¥èç¡è§é¥ºç¼´ç»å¿æéµè½¿è¾å«çªæ­æ¥çç§¸è¡é¶æªå«èæ¡æ°æ·ç«ç«­æ´ç»è§£å§æèè¥çåä»ç¥è¯«å±å·¾ç­æ¤éä»æ´¥è¥ç´§é¦ä»è°¨è¿é³æç¦è¿ç¬æµ¸"],["be40","ç¶",12,"ç¶§",6,"ç¶¯",42],["be80","ç·",32,"å°½å²èå¢èçæ¶é²¸äº¬æç²¾ç²³ç»äºè­¦æ¯é¢éå¢æ¬éå¾çéç«ç«åç¯çªæªç©¶çº çé­ä¹ç¸ä¹éå©ææ§è¼èåå°±çé æçç½å±é©¹èå±åç©ä¸¾æ²®èææ®å·¨å·è·è¸é¯ä¿±å¥æ§ç¬å§æé¹å¨å¦ç·å·ç»¢ææ«ææåçµè§å³è¯ç»åèé§ååå³»"],["bf40","ç·»",62],["bf80","ç¸ºç¸¼",4,"ç¹",4,"ç¹",21,"ä¿ç«£æµé¡éªååå¡å¯å¼æ©æ¥·å¯æ¨åå ªååç çåº·æ·ç³ ææäº¢çèæ·ç¤é å·èæ¯æ£µç£é¢ç§å£³å³å¯æ¸´åå»å®¢è¯¾è¯åå¦æ³åå­ç©ºæå­æ§æ å£æ£å¯æ¯å­çªè¦é·åºè£¤å¤¸å®æè·¨è¯åç­·ä¾©å¿«å®½æ¬¾å¡ç­çæ¡ç¿ç¶æ·åµäºçå²¿çª¥èµå¥é­å"],["c040","ç¹",35,"çº",23,"çºçºçº"],["c080","çº®çº´çº»çº¼ç»ç»¤ç»¬ç»¹ç¼ç¼ç¼ç¼·ç¼¹ç¼»",6,"ç½ç½",9,"ç½ç½é¦æ§æºå¤ææå°æ¬æ©å»éåæåè¡èè¾£å¦è±æ¥èµèå©ªæ æ¦ç¯®éå°æ¾è°°æ½è§æç¼çæ»¥çæ¦ç¼å»éææµªæå³ç¢èä½¬å§¥éªçæ¶åä¹é·é­è¾ç£ç´¯å¡åæèç±»æ³ªæ£±æ¥å·åæ¢¨çé»ç¯±ç¸ç¦»æ¼çæéé²¤ç¤¼èèåæ ä¸½åå±ç ¾åå©åä¾ä¿"],["c140","ç½ç½ç½ç½ç½ç½ç½ ç½£",4,"ç½«ç½¬ç½­ç½¯ç½°ç½³ç½µç½¶ç½·ç½¸ç½ºç½»ç½¼ç½½ç½¿ç¾ç¾",7,"ç¾ç¾ç¾",4,"ç¾",4,"ç¾ç¾ç¾ ç¾¢ç¾£ç¾¥ç¾¦ç¾¨",6,"ç¾±"],["c180","ç¾³",4,"ç¾ºç¾»ç¾¾ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿",4,"ç¿ç¿ç¿",5,"ç¿¢ç¿£ç¢ç«ç²æ²¥é¶åçå©ä¿©èè²è¿é°å»ææ¶å¸æè¸é¾æç¼ç»ç²®åæ¢ç²±è¯ä¸¤è¾éæ¾äº®è°æ©èåççå¯¥è¾½æ½¦äºæé£å»æåè£çå£çç³æç£·éä¸´é»é³æ·åèµåæç²è±é¶é¾éä¼¶ç¾åçµéµå²­é¢å¦ä»¤æºçæ¦´ç¡«é¦çåç¤æµæ³å­é¾èåç¬¼çª¿"],["c240","ç¿¤ç¿§ç¿¨ç¿ªç¿«ç¿¬ç¿­ç¿¯ç¿²ç¿´",6,"ç¿½ç¿¾ç¿¿èèèèèèèèèèèèèèè¡è£è¤è«",5,"è²è´è¹èºè¼è¾èèèèèèèèèèèèèèè"],["c280","èè",13,"è«",5,"è²",11,"éåæ¢éæ¥¼å¨æç¯æ¼éè¦å¢é¢åºçæ³å¤èé²éºç¢é²è·¯èµé¹¿æ½ç¦å½éæ®é©´åéä¾£æå±¥å±¡ç¼èæ°¯å¾çæ»¤ç»¿å³¦æå­ªæ»¦åµä¹±æ ç¥æ¡è½®ä¼¦ä»æ²¦çº¶è®ºèèºç½é»é£ç®©éª¡è£¸è½æ´éªç»å¦éº»çç èé©¬éªåååä¹°éº¦åè¿èçé¦è®æ»¡èæ¼æ¢æ¼«"],["c340","è¾èèèèèè",5,"èèèèèè£è¦è§è¨è¬è°è³èµè¶è¸è¹è»èè",4,"è",6,"èèè è¢è£è¦è®èµè·è¹è»è¾è¿èèèèèèèè"],["c380","èèèèèèèè",12,"è­è®è°è³è´èµè·è¹",4,"è¿è°©èè«ç²æ°å¿è½ç«èéæ¯çéå¯èåå¸½è²è´¸ä¹ç«ææ¢é¶éç¤æ²¡çåªéæ¯ç¾æ§å¯å¦¹åªé¨é·ä»¬èèæª¬çé°çæ¢¦å­ç¯éé¡ç³è¿·è°å¼¥ç±³ç§è§æ³èå¯å¹æ£ç ç»µåååå¨©ç¼é¢èæçèç§æ¸ºåºå¦èç­æ°æ¿ç¿ææ¯é½æèé¸£é­åå½è°¬æ¸"],["c440","è",5,"èèèèèèèèèè",4,"è¡è¢è£è¤è¦è¨èªè«è¬è¯è²è³èµè¶è·è¸èè",4,"èèèèèèè",5,"èèè",4,"è¤è¥"],["c480","è§è©è«",7,"è´",5,"è¼è½è¾è¿èèèèèèè",6,"æ¹èæ¨¡èç£¨æ©é­æ¹æ«è«å¢¨é»æ²«æ¼ å¯éè°çææç¡äº©å§æ¯å¢æ®å¹åææ¨ç®ç¦ç§ç©æ¿åªåé é£å¨çº³æ°ä¹å¥¶èå¥åç·é¾åæ èæ¼é¹æ·å¢é¦åå«©è½å¦®éåªæ³¥å°¼æä½ å¿è»éæººè«æå¹´ç¢¾æµæ»å¿µå¨é¿é¸å°¿æèå­½å®ééæ¶æ¨æ çåå®"],["c540","è",14,"è¤è¥è¦è¨è©è«è®",4,"èµ",5,"è½è¿èè",4,"èèèèè",5,"èè è¤è¥è¦è§è©è®è²èºè¼è½è¿"],["c580","èèèèèèèèèèèè",7,"èèèèèè ",7,"è©æ§æ³çæ­é®çº½èæµåå¼å¥´åªæå¥³æèçæªæ¦ç³¯è¯ºå¦æ¬§é¸¥æ®´èåå¶æ²¤åªè¶´ç¬å¸æç¶ææçå¾æ¹æ´¾ææ½çç£ç¼çå¤åä¹åºæèªèæåå¨ç®è¢è·æ³¡å¸èå¹è£´èµéªéä½©æ²å·çç °æ¨ç¹æ¾å½­è¬æ£ç¡¼ç¯·è¨æé¹æ§ç¢°å¯ç é¹æ¹æ«åçµæ¯"],["c640","èªè«è¬è­è±èµè¶è·è¸è»è¼èèèèèèèèèèèèèèèèè è¢è£è§è²èµè¶èºè»è¼è¿èèèèèèèèèèèè¢è§è¨è©èªè¬è­è®è°è²è³èµè¶è¸"],["c680","èºè¼",4,"èèèèèèèèèè",9,"è©èªè®è°è²è·è»è½å¤è¾ç²ç®å¹çå»å±è­¬ç¯åçéªé£æ¼ç¢ç¥¨æç¥æ¼é¢è´«åèä¹åªè¹èå¹³å­ç¶è¯å±å¡æ³¼é¢å©ç ´é­è¿«ç²åæéºä»èè¡è©è²åæ´åæ®æµ¦è°±æçææ¬ºæ æå¦»ä¸åæ¼ææ²å¶æ£å¥æ­§ç¦å´èé½æç¥ç¥éªèµ·å²ä¹ä¼å¯å¥ç å¨æ°è¿å¼æ±½æ³£è®«æ"],["c740","è¾è¿èèèèèè",4,"èè",4,"èè¢è°",6,"è¹èºè¾",6,"èèèèèèèèèèèèèèèèèè¡",6,"è¬è­è®"],["c780","è¯èµè»è¾è¿èèèèèèèèèèèèèèèèèèèè¢è£è¤è¦è§è¨è«è¬è­æ°æ´½çµæ¦ééåè¿ç­¾ä»è°¦ä¹¾é»é±é³åæ½é£æµè°´å åµæ¬ æ­æªåèç¾å¢è·å¼ºæ¢æ©é¹æ²ææ¡¥ç§ä¹ä¾¨å·§éæ¬ç¿å³­ä¿çªåèä¸æ¯çªé¦ä¾µäº²ç§¦ç´å¤è¹æç¦½å¯æ²éè½»æ°¢å¾å¿æ¸ææ´æ°°æé¡·è¯·åºç¼ç©·ç§ä¸é±çæ±åéæ³è¶åºèæ²èº¯å±é©±æ¸ "],["c840","è®è¯è³",4,"èºè»è¼è¾è¿èèèèèèèèè",5,"èèèè",5,"è©",7,"è²",5,"è¹èºè»è¾",7,"èèè"],["c880","è",6,"è",4,"èèèèè è¢è¤",4,"èªè®è¯è°è²è´è·è¹è»è¼åå¨¶é¾è¶£å»åé¢§æéæ³å¨çæ³ç¬å¸åç¼ºçç¸å´é¹æ¦·ç¡®éè£ç¾¤ç¶çåæç¤å£¤æå·è®©é¥¶æ°ç»æ¹ç­å£¬ä»äººå¿é§ä»»è®¤åå¦çº«æä»æ¥æè¸èè£èçæº¶å®¹ç»åææèè¹è åå­ºå¦è¾±ä¹³æ±å¥è¤¥è½¯é®èçéé°æ¶¦è¥å¼±ææ´è¨è®é³å¡èµä¸å"],["c940","è½",4,"èèèèèèè",7,"èèèèèèè è¢",12,"è°è±è³èµè¶è·è»è¼è¾èèèèèèèèèèèèèèè"],["c980","è",4,"èè¡è¢è¤è§",4,"è­è®è¯è±",10,"è½è¾èèèä¼æ£æ¡åä¸§æéªæ«å«çè²æ¶©æ£®å§èç æå¹æ²çº±å»å¥çç­æçè«æå±±å ç½è¡«éªéæèµ¡è³åæ±æç¼®å¢ä¼¤åèµæä¸å°è£³æ¢¢æç¨ç§èåºé¶å°å¨éµç»å¥¢èµèèèèµ¦æå°ææ¶ç¤¾è®¾ç ·ç³å»ä¼¸èº«æ·±å¨ ç»ç¥æ²å®¡å©¶çè¾ææ¸å£°çç¥ç²åç»³"],["ca40","è",8,"èèèèèèèèèèèèèèè è¢",8,"è­",9,"è¾",4,"èèèèè",10],["ca80","èèèèèèè",4,"è¥è¦è§è©",8,"è³èµè¶è·è¸è¼è½è¿èèççå©èå£å¸å¤±ç®æ½æ¹¿è¯å°¸è±åç³æ¾æ¶ä»é£èå®è¯å²ç¢ä½¿å±é©¶å§å¼ç¤ºå£«ä¸æ¿äºæ­èªéå¿æ¯åå¬éä»ä¾éé¥°æ°å¸æå®¤è§è¯æ¶æé¦å®å¯¿æå®åç¦å½è¬æ¢æ¢³æ®æè¾åèæ·çä¹¦èµå­°çè¯ææç½²èé»é¼ å±æ¯è¿°æ ææç«å¢åº¶æ°æ¼±"],["cb40","èèèè",6,"è",10,"è",6,"è¥è¦è§è©è«è¬è­è±",5,"è¸èº",6,"è",6,"è",4,"èè"],["cb80","èè",5,"è",6,"è¥è¦è§è¨èª",14,"æå·èæè¡°ç©å¸æ æ´éåç½è°æ°´ç¡ç¨å®ç¬é¡ºèè¯´ç¡æçæ¯æå¶æç§å¸ä¸æ­»èå¯ºå£åä¼ºä¼¼é¥²å·³æ¾è¸æé¢éå®è®¼è¯µæèæå½èé¥ä¿ç´ éç²å³å¡æº¯å®¿è¯èé¸èç®è½ééç»¥é«ç¢å²ç©éé§ç¥å­æç¬èæ¢­åç¼©çç´¢éæå¡ä»å®å¥¹å¡"],["cc40","è¹èºè¼è½è¾è",4,"è",10,"èèèèè",15,"è¨èª",13,"è¹èºè»è½è¾è¿è"],["cc80","è",11,"èèè",4,"èèèèè è¡è£",7,"ç­æè¹è¸èèæ¬å°æ³°éå¤ªææ±°åæè´ªç«æ»©åæªç°æ½­è°­è°å¦æ¯¯è¢ç¢³æ¢å¹ç­æ±¤å¡æªå æ£ èåç³åèººæ·è¶ç«ææ¶æ»ç»¦èæ¡éæ·é¶è®¨å¥ç¹è¤è¾ç¼èªæ¢¯åè¸¢éæé¢è¹å¼ä½æ¿åææ¶åå±å¤©æ·»å¡«ç°çæ¬èèææ¡è¿¢çºè·³è´´éå¸åå¬ç"],["cd40","è­è¯è°è²",6,"è",6,"è",4,"èè",5,"è",4,"è¥è¦è«è­è®è²è³è·è¸è¹è»",4,"èèèèèèèèèèèèèè"],["cd80","èè è¡è¢è£è¥è¦è§è¨èªè«è¬è¯èµè¶è·èºè»è¼è½è¿èèèèèèèèèèèèæ±å»·åäº­åº­æºèéæ¡é®ç³åéå½¤ç«¥æ¡¶æç­ç»çå·æå¤´éå¸ç§çªå¾å¾éæ¶å± åååæ¹å¢æ¨é¢è¿èè¤ªéåå±¯èææè±é¸µéé©®é©¼æ¤­å¦¥æå¾æåèæ´¼å¨ç¦è¢æ­ªå¤è±å¼¯æ¹¾ç©é¡½ä¸¸ç·å®ç¢æ½æçæå®å©ä¸èæ±ªçäº¡æç½å¾æºæå¿å¦å¨"],["ce40","èèèèè è¤è¦è§è¨èªè«è¬è­è¯è°è²è³èµè¶è¸è¹èºè¼è½è",6,"èèèèèèèèèèèè",5,"è¡è¢è¦",7,"è¯è±è²è³èµ"],["ce80","è·è¸è¹èºè¿èèèèèèèèè",4,"èèèè",6,"è ",4,"å·å¾®å±é¦è¿æ¡å´å¯æä¸ºæ½ç»´èèå§ä¼ä¼ªå°¾çº¬æªèå³çèåé­ä½æ¸­è°å°æ°å«çæ¸©èæé»çº¹å»ç¨³ç´é®å¡ç¿ç®æèæ¶¡çªææ¡å§æ¡æ²å·«åé¨ä¹æ±¡è¯¬å±æ èæ¢§å¾å´æ¯æ­¦äºæåèä¼ä¾®åæé¾æ¤ç©å¿å¡æè¯¯æçæè¥¿ç¡ç½æ°å»å¸é¡çº"],["cf40","è¥è¦è§è©èªè®è°è±è²è´è¶è·è¸è¹è»è¼è¾è¿è",4,"èèèè",4,"è",6,"èèèèè¡è¢è£è¤è¦è§è¨è©è«è¬è­è¯",9],["cf80","èºè»è¼è½è¿è è è è ",5,"è ",7,"è è è è è è ",4,"è £ç¨æ¯å¸æèå¤æçç¯æºªæ±çæªè¢­å¸­ä¹ åª³åé£æ´ç³»éæç»çè¾å£éè¾æå³¡ä¾ ç­ä¸å¦å¤åæé¨åä»é²çº¤å¸è´¤è¡è·é²æ¶å¼¦å«æ¾é©ç°ç®å¿èºé¦ç¾¡å®ªé·éçº¿ç¸å¢é¶é¦ç®±è¥æ¹ä¹¡ç¿ç¥¥è¯¦æ³åäº«é¡¹å··æ©¡ååè±¡è§ç¡éåå®å£éæ¶å®µæ·æ"],["d040","è ¤",13,"è ³",5,"è ºè »è ½è ¾è ¿è¡è¡è¡è¡",5,"è¡",5,"è¡è¡è¡è¡",6,"è¡¦è¡§è¡ªè¡­è¡¯è¡±è¡³è¡´è¡µè¡¶è¡¸è¡¹è¡º"],["d080","è¡»è¡¼è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢è¢",4,"è¢",4,"è¢£è¢¥",5,"å°å­æ ¡èå¸ç¬ææ¥äºæ­èéåææºéªæèè°åæ¢°å¸è¹ææ³æ³»è°¢å±èªè¯éæ¬£è¾æ°å¿»å¿ä¿¡è¡æè¥ç©æºå´ååå½¢é¢è¡éå¹¸ææ§å§åå¶è¸åæ±¹éçä¼ä¿®ç¾æ½åéç§è¢ç»£å¢æéèåé¡»å¾è®¸èéåæ­åºçæ¤çµ®å©¿ç»ªç»­è½©å§å®£æ¬æç"],["d140","è¢¬è¢®è¢¯è¢°è¢²",4,"è¢¸è¢¹è¢ºè¢»è¢½è¢¾è¢¿è£è£è£è£è£è£è£è£è£è£è£è£è£è£è£è£",4,"è£ è£¡è£¦è£§è£©",6,"è£²è£µè£¶è£·è£ºè£»è£½è£¿è¤è¤è¤",5],["d180","è¤è¤",4,"è¤è¤",4,"è¤",4,"è¤¢è¤£è¤¤è¤¦è¤§è¤¨è¤©è¤¬è¤­è¤®è¤¯è¤±è¤²è¤³è¤µè¤·éç£ç©ç»é´èå­¦ç©´éªè¡åçå¾ªæ¬è¯¢å¯»é©¯å·¡æ®æ±è®­è®¯éè¿åæ¼é¸¦é¸­åä¸«è½çèå´è¡æ¶¯éåäºè®¶çå½éçæ·¹çä¸¥ç èå²©å»¶è¨é¢éçæ²¿å¥æ©ç¼è¡æ¼è³å °çåç éåå½¦ç°å®´è°éªæ®å¤®é¸¯ç§§æ¨æ¬ä½¯ç¡ç¾æ´é³æ°§ä»°çå»æ ·æ¼¾éè°å¦ç¶"],["d240","è¤¸",8,"è¥è¥è¥",24,"è¥ ",5,"è¥§",19,"è¥¼"],["d280","è¥½è¥¾è¦è¦è¦è¦è¦",26,"æå°§é¥çªè°£å§å¬èè¯è¦èæ¤°åè¶ç·éå¶ä¹é¡µæä¸å¶æ³èå¤æ¶²ä¸å£¹å»æé±ä¾ä¼è¡£é¢å¤·éç§»ä»ªè°çæ²å®å§¨å½æ¤èåå·²ä¹ç£ä»¥èºææéå±¹äº¿å½¹èé¸èç«äº¦è£ææ¯å¿ä¹çæº¢è¯£è®®è°è¯å¼ç¿¼ç¿ç»èµè«å æ®·é³é´å§»åé¶æ·«å¯é¥®å°¹å¼é"],["d340","è¦¢",30,"è§è§è§è§è§è§è§è§è§è§è§è§ è§¡è§¢è§¤è§§è§¨è§©è§ªè§¬è§­è§®è§°è§±è§²è§´",6],["d380","è§»",4,"è¨",5,"è¨",21,"å°è±æ¨±å©´é¹°åºç¼¨è¹è¤è¥è§èè¿èµ¢çå½±é¢ç¡¬æ åæ¥ä½£èçåº¸éè¸è¹åæ³³æ¶æ°¸æ¿åç¨å¹½ä¼æ å¿§å°¤ç±é®éç¹æ²¹æ¸¸éæåå³ä½éè¯±åå¹¼è¿æ·¤äºçæ¦èæèä½ä¿é¾é±¼ææ¸æ¸éäºå¨±é¨ä¸å±¿ç¦¹å®è¯­ç¾½çåèéåéå»å³ªå¾¡ææ¬²ç±è²èª"],["d440","è¨",31,"è¨¿",8,"è©",21],["d480","è©",25,"è©º",6,"æµ´å¯è£é¢è±«é©­é¸³æ¸å¤åå£è¢åæ´è¾å­ååç¿æºç¼è¿èæ¿æ¨é¢æ°çº¦è¶è·é¥å²³ç²¤ææ¦éèäºé§åé¨åè¿è´éæéµå­åç ¸ææ ½åç¾å®°è½½åå¨å±ææèµèµèè¬é­ç³å¿è»æ£æ©æ¾¡è¤èºåªé çç¶ç¥è´£æ©åæ³½è´¼æå¢ææ¾èµ æå³æ¸£æ­è½§"],["d540","èª",7,"èª",7,"èª",46],["d580","è«",32,"é¡é¸ç¨æ æ¦¨åä¹ç¸è¯ææå®çªåºå¯¨ç»æ¯¡è©¹ç²æ²¾çæ©è¾å´­å±è¸æ å æç«æ¹ç»½æ¨ç« å½°æ¼³å¼ ææ¶¨æä¸å¸è´¦ä»èç´éææ­æ¾æ²¼èµµç§ç½©åèå¬é®æå²è°è¾èéèè¿æµçæççç §è»è´éä¾¦æç¹è¯éæ¯ééµè¸æ£çå¾ç°äºææ´æ¯æ­£æ¿"],["d640","è«¤",34,"è¬",27],["d680","è¬¤è¬¥è¬§",30,"å¸§çéè¯èææ¯å±èç¥è¢èæ±ä¹ç»èç´æ¤æ®æ§å¼ä¾åææ­¢è¶¾åªæ¨çº¸å¿ææ·è³è´ç½®å¸å³å¶æºç§©ç¨è´¨ççæ»æ²»çªä¸­çå¿ éè¡·ç»ç§è¿éä»²ä¼èå¨å·æ´²è¯ç²¥è½´èå¸åç±å®æ¼éª¤ç æ ªèæ±çªè¯¸è¯éç«¹çç®æç©å±ä¸»èæ±å©èè´®é¸ç­"],["d740","è­",31,"è­§",4,"è­­",25],["d780","è®",24,"è®¬è®±è®»è¯è¯è¯ªè°è°ä½æ³¨ç¥é©»æçªæ½ä¸ç è½¬æ°èµç¯æ¡©åºè£å¦æå£®ç¶æ¤é¥è¿½èµå ç¼è°åææåæ¡ç¢èéåçç¼æµå¹å¨èµå§¿æ»æ·å­ç´«ä»ç±½æ»å­èªæ¸å­é¬æ£è¸ªå®ç»¼æ»çºµé¹èµ°å¥æç§è¶³åæç¥è¯é»ç»é»çºå´éæç½ªå°éµæ¨å·¦ä½æåä½ååº§"],["d840","è°¸",8,"è±è±è±è±è±è±è±è±",7,"è±è±è±è±è±",5,"è±£",6,"è±¬",6,"è±´è±µè±¶è±·è±»",6,"è²è²è²è²"],["d880","è²è²è²",6,"è²è²è²è²",20,"äºä¸åä¸å»¿åä¸äºä¸é¬²å­¬å©ä¸¨ç¦ºä¸¿åä¹å¤­ç»å®æ°åè¤é¦æ¯ç¾é¼ä¸¶äºé¼ä¹ä¹©äºèå­å¬åä»ååå£å¥å®é¥èµååµå¦å®å¾èµå¦å£åååå­å³å¿åååå¡åè¯å½åååååç½äº»ä»ä»ä»ä»¨ä»¡ä»«ä»ä¼ä»³ä¼¢ä½¤ä»µä¼¥ä¼§ä¼ä¼«ä½ä½§æ¸ä½ä½"],["d940","è²®",62],["d980","è³­",32,"ä½ä½ä¼²ä¼½ä½¶ä½´ä¾ä¾ä¾ä¾ä½¾ä½»ä¾ªä½¼ä¾¬ä¾ä¿¦ä¿¨ä¿ªä¿ä¿ä¿£ä¿ä¿ä¿ä¿¸å©åä¿³å¬åå®å­ä¿¾ååå¥å¨å¾ååååå¬å»å¥å§å©åºååå­å¬å¦å®ååä»æ°½ä½ä½¥ä¿é¾ æ±ç±´å®å·½é»é¦åå¤å¹åè¨åå«å¤åäº åäº³è¡®è¢¤äºµèè£ç¦å¬´è ç¾¸å«å±å½å¼"],["da40","è´",14,"è´ èµèµèµèµèµ¥èµ¨èµ©èµªèµ¬èµ®èµ¯èµ±èµ²èµ¸",8,"è¶è¶è¶è¶è¶è¶è¶",4,"è¶è¶è¶",9,"è¶ è¶¡"],["da80","è¶¢è¶¤",12,"è¶²è¶¶è¶·è¶¹è¶»è¶½è·è·è·è·è·è·è·è·è·è·è·è·è·ååå¢å¥è® è®¦è®§è®ªè®´è®µè®·è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯è¯ è¯¤è¯¨è¯©è¯®è¯°è¯³è¯¶è¯¹è¯¼è¯¿è°è°è°è°è°è°è°è°è°è°è°è°è°è°è°è°è° è°¡è°¥è°§è°ªè°«è°®è°¯è°²è°³è°µè°¶å©åºéé¢é¡é±éªé½é¼ééééé§é¬é²é´éééé°ééééé¬é¡é´é³é¶éº"],["db40","è·è·è·è·è· è·¡è·¢è·¥è·¦è·§è·©è·­è·®è·°è·±è·²è·´è·¶è·¼è·¾",6,"è¸è¸è¸è¸è¸è¸è¸è¸è¸è¸è¸",7,"è¸ è¸¡è¸¤",4,"è¸«è¸­è¸°è¸²è¸³è¸´è¸¶è¸·è¸¸è¸»è¸¼è¸¾"],["db80","è¸¿è¹è¹è¹è¹",4,"è¹",5,"è¹",11,"è¹§è¹¨è¹ªè¹«è¹®è¹±é¸é°ééé¾ééééé¦é¢éééé«é¯é¾éé¢éé£é±é¯é¹ééåå¥å¢å¬å­å¾å¿ååå°åç®çå»´åµå¼é¬¯å¶å¼çå·¯åå©å¡å¡¾å¢¼å£å£å©å¬åªå³å¹å®å¯åå»åå©åå«åå¼å»å¨å­å¶å³å­å¤åå²åå§å´åå åååååå¸å´å¯å¸å¤å"],["dc40","è¹³è¹µè¹·",4,"è¹½è¹¾èºèºèºèºèºèº",6,"èºèºèºèº",6,"èºèº",11,"èº­èº®èº°èº±èº³",6,"èº»",7],["dc80","è»",10,"è»",21,"å å å½å­å å å å¡å  å¡¥å¡¬å¢å¢å¢å¢é¦¨é¼æ¿è¹è½è¿èèè¨èèèèèè«è¸è¾è°èèè£èè·è®èèèè©è´è¡èªèèèè¤è¡èè·è¤èèèè´èèèè»èèèèèèè èèèèèèèè¼è´è±èèè¯èèèèèèè è­èºè³è¦è¥"],["dd40","è»¥",62],["dd80","è¼¤",32,"è¨èè©è¬èªè­è®è°è¸è³è´è èªèèèè¼è¶è©è½è¸è»èèè¨èºè¼èèè¥èå èèèè½èèè¸èèèèèèè¸è¹èªèèè¦è°è¡èèèèè³èèèºèè¸è¼èè©è¶èèè±è­èèèè¦è½èèè¿èºè è¡è¹è´èè¥è£èçè¸è°è¹èèº"],["de40","è½",32,"è½ªè¾è¾è¾è¾è¾ è¾¡è¾¢è¾¤è¾¥è¾¦è¾§è¾ªè¾¬è¾­è¾®è¾¯è¾²è¾³è¾´è¾µè¾·è¾¸è¾ºè¾»è¾¼è¾¿è¿è¿è¿"],["de80","è¿",4,"è¿è¿è¿è¿è¿è¿ è¿¡è¿£è¿§è¿¬è¿¯è¿±è¿²è¿´è¿µè¿¶è¿ºè¿»è¿¼è¿¾è¿¿éééééééèè»è¿è¼èèè¨è¤èèºç¢èè²è»è¤è¨èèè¹è®èèè¹è·è°èèèè¿è§èè©èè¼å»¾å¼å¤¼å¥è·å¥å¥å¥åå°¢å°¥å°¬å°´ææªææ»ææææ®æ¢æ¶æ¹æææ­æ¶æ±æºææ´æ­æ¬ææ©æ®æ¼æ²æ¸æ æ¿ææææææ¾æææææ ææ¦æ¡æææ­æ"],["df40","ééé£é¤é¥é§",5,"é°",4,"é·é¹éºé½é¿ééééé",4,"ééééééé",5,"é¤é¦é§é©éªé«é¬é¯",4,"é¶",6,"é¾é"],["df80","ééééééé",4,"ééééééééé é¤é¥é§é¨é©é«é­é²é·é¼é½é¿éæºæ·æ¸ææºææææ¤æ¢ææ¥æ®å¼å¿çå¼åå±å½å©å¨å»åååååååååå¡ååå£å²ååå·å±å¤åååå¶å¦ååå­åå´åå§å¦ååå²å£åå»å¿ååååå©åªå¤ååååå§å å½åå³å¢å£ååå§åªå§ååµåå­ååå¿åå¼"],["e040","éééééééééééééééééé é£é¤é¥é©éªé¬é®é°é±é²é³éµé¶é·é¹éºé»é¼é¿éééé",19,"ééé"],["e080","ééé é¡é¤",10,"é°é²",6,"éº",8,"éå·ååµå¶å·å³å°ååååå±å¹åååå¾ååå»åå½å¾åååªå·åååå«å¬åå¦ååå¯å¥å²å³ååå¨åµå¤è¾ååååå¤å£å¾åå§å­åå¹åå¬åå¢åååååå¤å±å«å»å¼ååå¯åååå¡åµå«å¹å¿ååååå¸å¸å¸å¸å¸±å¸»å¸¼"],["e140","éééééééééééééé é¦é§é¨é«é­é³éºé»é¼é",4,"éééééé",6,"é",5,"é¤",5,"é«é¬é°é±é²é³é¶é·é¸é¹é»"],["e180","é¼",10,"éééé",9,"é",8,"å¸·å¹å¹å¹å¹å¹¡å²å±ºå²å²å²å²å²å²å²å²å²å²µå²¢å²½å²¬å²«å²±å²£å³å²·å³å³å³¤å³å³¥å´å´å´§å´¦å´®å´¤å´å´å´åµå´¾å´´å´½åµ¬åµåµ¯åµåµ«åµåµåµ©åµ´å¶å¶å¶è±³å¶·å·å½³å½·å¾å¾å¾å¾å¾å¾å¾å¾¨å¾­å¾µå¾¼è¡¢å½¡ç­ç°ç´ç·ç¸çççççç¨ç¯ç©ç²ç´ç·çç³ççº"],["e240","é¦",62],["e280","é¥",32,"ç»ççç¡ççççç¢ç¹ç¥ç¬ç¸ç±çççç ç¬ç¯ç¾èå¤¥é£§å¤¤å¤é¥£é¥§",5,"é¥´é¥·é¥½é¦é¦é¦é¦é¦é¦é¦é¦é¦é¦åºåºåºåºåº¥åº åº¹åºµåº¾åº³èµå»å»å»å»¨å»ªèºå¿å¿å¿å¿æå¿®æå¿¡å¿¤å¿¾ææå¿ªå¿­å¿¸ææµæ¦ææææ©æ«ææ¿æ¡æ¸æ¹æ»æºæ"],["e340","é",45,"éµ",16],["e380","é",7,"é",24,"æªæ½æææ­ææææææ¬æ»æ±æææææ´æ æ¦ææ£æ´æææ«ææµæ¬ææ§æ·ææµå¿é³é©é«é±é³éµé¶é¼é¾éééééééééééééééä¸¬ç¿ææ°µæ±æ±æ±æ²£æ²æ²æ²æ²æ±¨æ±©æ±´æ±¶æ²æ²©æ³æ³æ²­æ³·æ³¸æ³±æ³æ²²æ³ æ³æ³ºæ³«æ³®æ²±æ³æ³¯æ³¾"],["e440","é¨",5,"é¯",24,"é",31],["e480","é©",32,"æ´¹æ´§æ´æµæµæ´æ´æ´æ´æ´«æµæ´®æ´µæ´æµæµæµæ´³æ¶æµ¯æ¶æ¶ æµæ¶æ¶æµæµ æµ¼æµ£æ¸æ·æ·æ·æ¸æ¶¿æ· æ¸æ·¦æ·æ·æ¸æ¶«æ¸æ¶®æ¸«æ¹®æ¹æ¹«æº²æ¹æºæ¹æ¹æ¸²æ¸¥æ¹æ»æº±æºæ» æ¼­æ»¢æº¥æº§æº½æº»æº·æ»æº´æ»æºæ»æºæ½¢æ½æ½æ¼¤æ¼æ»¹æ¼¯æ¼¶æ½æ½´æ¼ªæ¼æ¼©æ¾æ¾æ¾æ½¸æ½²æ½¼æ½ºæ¿"],["e540","é",51,"é¿",10],["e580","é",31,"é«æ¿æ¾§æ¾¹æ¾¶æ¿æ¿¡æ¿®æ¿æ¿ æ¿¯çç£çç¹çµççå®å®å®å®å®¥å®¸ç¯éªæ´å¯¤å¯®è¤°å¯°è¹è¬è¾¶è¿è¿è¿¥è¿®è¿¤è¿©è¿¦è¿³è¿¨éééé¦éééé¡éµé¶é­é¯ééééé¨éé¢éæ¹é´é½ééééå½å½å½å½å°»å«å±å±å­±å±£å±¦ç¾¼å¼ªå¼©å¼­è´å¼¼é¬»å±®å¦å¦å¦å¦©å¦ªå¦£"],["e640","é¬",34,"é",27],["e680","é¬",29,"éééå¦å§å¦«å¦å¦¤å§å¦²å¦¯å§å¦¾å¨å¨å§å¨å§£å§å§¹å¨å¨å¨²å¨´å¨å¨£å¨å©å©§å©å©å¨¼å©¢å©µè¬åªªåªå©·å©ºåª¾å««åª²å«å«åª¸å« å«£å«±å«å«¦å«å«å¬å¬å¬å¬²å¬·å­å°å°å­å­¥å­³å­å­å­¢é©µé©·é©¸é©ºé©¿é©½éªéªéªéªéªéªéªéªéªéªéªéªéªéªéª éª¢éª£éª¥éª§çºçº¡çº£çº¥çº¨çº©"],["e740","é",7,"é",54],["e780","é",32,"çº­çº°çº¾ç»ç»ç»ç»ç»ç»ç»ç»ç»ç»ç» ç»¡ç»¨ç»«ç»®ç»¯ç»±ç»²ç¼ç»¶ç»ºç»»ç»¾ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼ç¼¡",6,"ç¼ªç¼«ç¼¬ç¼­ç¼¯",4,"ç¼µå¹ºç¿å·ç¾éççç®ç¢ççççç·ç³çççç¥çé¡¼çç©ç§ççºç²ççªçç¦ç¥ç¨ç°ç®ç¬"],["e840","é¯",14,"é¿",43,"é¬é­é®é¯"],["e880","é°",20,"ééééééééé¦é»éé çççççççç·ç­ç¾çççççççç¨ç©çç§ççºéªé«é¬æææææ©æ¥ææªæ³ææ§æµæ¨ææ­ææ·æ¼æ°æ ææ æ©æ°æ ææµææ³ææ ææ¸æ¢æ ææ½æ ²æ ³æ¡ æ¡¡æ¡æ¡¢æ¡æ¡¤æ¢æ æ¡æ¡¦æ¡æ¡§æ¡æ ¾æ¡æ¡æ ©æ¢µæ¢æ¡´æ¡·æ¢æ¡«æ£æ¥®æ£¼æ¤æ¤ æ£¹"],["e940","é§é³é½éééééé é®é´éµé·",7,"é",42],["e980","é«",32,"æ¤¤æ£°æ¤æ¤æ¥æ££æ¤æ¥±æ¤¹æ¥ æ¥æ¥æ¦æ¥«æ¦æ¦æ¥¸æ¤´æ§æ¦æ¦æ§æ¦æ¥¦æ¥£æ¥¹æ¦æ¦§æ¦»æ¦«æ¦­æ§æ¦±æ§æ§æ§æ¦æ§ æ¦æ§¿æ¨¯æ§­æ¨æ¨æ©¥æ§²æ©æ¨¾æª æ©æ©æ¨µæªæ©¹æ¨½æ¨¨æ©æ©¼æªæªæª©æªæª«ç·çæ®æ®æ®æ®æ®æ®æ®æ®æ®æ®¡æ®ªè½«è½­è½±è½²è½³è½µè½¶è½¸è½·è½¹è½ºè½¼è½¾è¾è¾è¾è¾è¾"],["ea40","é",27,"é¬é¿éééééé é£",6,"é«é¬é­é¯é°é·é¸é¹éºé¾éééééééééé"],["ea80","ééééééé é£é¥é¦é«é­",4,"é³é¸",12,"éééè¾è¾è¾è¾è¾è»æææææ¢æ¡æ¥æ¤æ¬è§ç¯ç´ç¿çççæ´æ®æ¯æ°æææ²æææçæ·ææ´æ±æ¶æµèææææææ¡ææ·æææ§ææ¾æææ¦æ©è´²è´³è´¶è´»è´½èµèµèµèµèµèµèµèµèµè§è§è§è§è§è§è§è§ç®ççç¦ç¯ç¾ç¿çççççææ²æ°"],["eb40","éééééééééé",9,"é¨",7,"é±é²é´éµé·é¸éºé»é¿éééééééééé",9,"é¡",6,"é«"],["eb80","é¬é­é®é°é±é²é´éµé¸éºé»é¼é½é¿éééééééééééé",4,"ééé æ¿æèæ¯ªæ¯³æ¯½æ¯µæ¯¹æ°æ°æ°æ°æ°æ°æ°æ°æ°¡æ°©æ°¤æ°ªæ°²æµææ«çççç°è¢åèèèè¼æè½è±è«è­è´è·è§è¨è©èªèèèèèèæèè«è±è´è­èèè²è¼æèè±è¶èè¬èè²èèèè´èèè±è è©è¼è½è­è§å¡åªµèèèæ»è£èªèæ¦èè»"],["ec40","é¡",8,"é«é¬é®é¯é±é³",4,"éºé»é¼é½é¿",18,"ééééééééé£é¤é¦é§é¨éª",7],["ec80","é²éµé·",4,"é½",7,"é",4,"ééééééééé",4,"èè¦æ¬¤æ¬·æ¬¹æ­æ­æ­é£é£é£é£é£é£æ®³å½æ¯è§³æé½ææ¼æææææææççççç»çç·ç«ç±ç¨ççççç¯ç±ç³çç¨çç²çç¸çºçç³çµç¨ç ç çç§ç¹çç¨ç¬çç¦ç¹æ¾æ½æææç¤»ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥¢ç¥ç¥ ç¥¯ç¥§ç¥ºç¦ç¦ç¦ç¦§ç¦³å¿å¿"],["ed40","ééé¡é¢é¤",6,"é¬é®é°é±é³éµ",46],["ed80","é¤é¥é¨é®",4,"é´é·",23,"æ¼æææ§æææ£æ«ææææ©ææææèè¿æ²æ³¶æ·¼ç¶ç¸ç ç ç ç ç æ«ç ­ç ç ç ¹ç ºç »ç ç ¼ç ¥ç ¬ç £ç ©ç¡ç¡­ç¡ç¡ç ¦ç¡ç¡ç¡ç¡ªç¢ç¢ç¢ç¢ç¢ç¢¡ç¢£ç¢²ç¢¹ç¢¥ç£ç£ç£ç£¬ç£²ç¤ç£´ç¤ç¤¤ç¤ç¤´é¾é»¹é»»é»¼ç±ççç¹çççç¢çç­ç¦çµç¸çççççç¨"],["ee40","é ",62],["ee80","é¡",32,"ç¢ç¥ç¿çç½ççççç ç°çµç½çºçççççç²ç¹çç½ç½¡ç½è©ç½¨ç½´ç½±ç½¹ç¾ç½¾çç¥è ²éééééééééééééééé£é¤é«éªé­é¬é¯é°é²é´é¶",4,"é¼é½é¿éé",6,"éééééééééééé é¢é¤é¥é§é¨éª"],["ef40","é¡¯",5,"é¢é¢é¢é¢é¢é¢£é¢¨",37,"é£é£é£é£é£é£é£é£é£ ",4],["ef80","é£¥é£¦é£©",30,"é©é«é®é¯é³é´éµé·é¹é¼é½é¿éééééééééé",4,"éééééé¢éªé«é©é¬é±é²é´é¶é·é¸é¼é¾é¿ééµééééééééééééééééééé¡é¢é¤",8,"é¯é±é²é³éºç§ç¬éç§ç§­ç§£ç§«ç¨åµç¨ç¨ç¨ç¨"],["f040","é¤",4,"é¤é¤é¤",28,"é¤¯",26],["f080","é¥",9,"é¥",12,"é¥¤é¥¦é¥³é¥¸é¥¹é¥»é¥¾é¦é¦é¦ç¨¹ç¨·ç©é»é¦¥ç©°ççççç¤çç ç¬é¸ é¸¢é¸¨",4,"é¸²é¸±é¸¶é¸¸é¸·é¸¹é¸ºé¸¾é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹£é¹¦",6,"é¹±é¹­é¹³çççç çç¬ç£ç³ç´ç¸çç±ç°ççççç£ç¨ç¦ç¤ç«ç§çç±ç¼ç¿ççççççç¥ççç"],["f140","é¦é¦é¦",10,"é¦¦é¦§é¦©",47],["f180","é§",32,"çç¼ç¢ç çç­ç°ç¿çµçç¾ç³çççççç«ç¯ç¿ç«¦ç©¸ç©¹çªçªçªçªçª¦çª çª¬çª¨çª­çª³è¡¤è¡©è¡²è¡½è¡¿è¢è¢¢è£è¢·è¢¼è£è£¢è£è££è£¥è£±è¤è£¼è£¨è£¾è£°è¤¡è¤è¤è¤è¤è¤´è¤«è¤¶è¥è¥¦è¥»çè¥ç²ç´çèèèèè è¢è¥è¦è§è©è¨è±èèµèèèèè©è±è¦é¡¸é¢é¢"],["f240","é§º",62],["f280","é¨¹",32,"é¢é¢é¢é¢é¢é¢é¢é¢é¢é¢¡é¢¢é¢¥é¢¦èèè¬è®è¿èºè¼è»è¨èèè¬èè§è£èªèè©è¶èèµèè°èºè±è¯èèè´è©è±è²è­è³èèèè´èèèèèè¸èèèèè£è»èè¥è®èè¾èè´è±è©è·è¿èè¢è½è¾è»è è°èè®èèè£è¼è¤èè¥èè¯è¨è"],["f340","é©",17,"é©²éªéªéªéªéªéªéªéª¦éª©",6,"éª²éª³éª´éªµéª¹éª»éª½éª¾éª¿é«é«é«",4,"é«é«é«é«é«é«é«é«é«é«é«é«é«"],["f380","é«é«é« é«¢é«£é«¤é«¥é«§é«¨é«©é«ªé«¬é«®é«°",8,"é«ºé«¼",6,"é¬é¬é¬èèèè­èèè«è¥è¬èµè³èèè½èèèèèªè è®è è è¾è è è ¡è ¹è ¼ç¼¶ç½ç½ç½èç«ºç«½ç¬ç¬ç¬ç¬ç¬ç¬«ç¬ç­ç¬¸ç¬ªç¬ç¬®ç¬±ç¬ ç¬¥ç¬¤ç¬³ç¬¾ç¬ç­ç­ç­ç­µç­ç­ç­ ç­®ç­»ç­¢ç­²ç­±ç®ç®¦ç®§ç®¸ç®¬ç®ç®¨ç®ç®ªç®ç®¢ç®«ç®´ç¯ç¯ç¯ç¯ç¯ç¯¥ç¯¦ç¯ªç°ç¯¾ç¯¼ç°ç°ç°"],["f440","é¬é¬",5,"é¬é¬é¬é¬",10,"é¬ é¬¡é¬¢é¬¤",10,"é¬°é¬±é¬³",7,"é¬½é¬¾é¬¿é­é­é­é­é­é­é­é­é­é­",5],["f480","é­",32,"ç°ç°ªç°¦ç°¸ç±ç±è¾èèèè¬è¡è¡è¢è£è­è¯è¨è«è¸è»è³è´è¾èèèèèèè¨è¡¾è¢è¢è£è£è¥ç¾ç¾ç¾§ç¾¯ç¾°ç¾²ç±¼æç²ç²ç²ç²ç²¢ç²²ç²¼ç²½ç³ç³ç³ç³ç³ç³ç³ç³¨è®æ¨ç¾¿ç¿ç¿ç¿¥ç¿¡ç¿¦ç¿©ç¿®ç¿³ç³¸çµ·ç¶¦ç¶®ç¹çºéº¸éº´èµ³è¶è¶è¶è¶±èµ§èµ­è±è±ééééé¤"],["f540","é­¼",62],["f580","é®»",32,"é¢é¡é°é©é¯é½é¾é²é´é¹éééééé¢é£éªé­é®é¯éµé´éºè±é¹¾è¶¸è·«è¸è¹è¹©è¶µè¶¿è¶¼è¶ºè·è·è·è·è·è·è·è·è·è·¬è··è·¸è·£è·¹è·»è·¤è¸è·½è¸è¸è¸è¸¬è¸®è¸£è¸¯è¸ºè¹è¸¹è¸µè¸½è¸±è¹è¹è¹è¹è¹è¹è¹°è¹¶è¹¼è¹¯è¹´èºèºèºèºèºèºè±¸è²è²è²è²è²æè§è§è§è§"],["f640","é¯",62],["f680","é°",32,"è§¥è§«è§¯è¨¾è¬¦éé©é³é¯ééééééªé­é°é¾é¾é¾é¾",5,"é¾é»¾é¼é¼é¹é¼é½ééç¿é éé®éé¾éªééé¾é«é±¿é²é²é²é²é²ç¨£é²é²é²é²é²é²é²é²é²é²",5,"é²¥",4,"é²«é²­é²®é²°",7,"é²ºé²»é²¼é²½é³é³é³é³é³é³"],["f740","é°¼",62],["f780","é±»é±½é±¾é²é²é²é²é²é²é²é²é²é²é²é²é²é²ªé²¬é²¯é²¹é²¾",4,"é³é³é³é³é³é³é³ é³¡é³",4,"é³é³é³é³é³é³é³é³é³é³¢é¼ééééé¯é«é£é²é´éª±éª°éª·é¹éª¶éªºéª¼é«é«é«é«é«é«é«é­é­é­é­é­é­é­é£¨é¤é¤®é¥é¥é«é«¡é«¦é«¯é««é«»é«­é«¹é¬é¬é¬é¬é¬£éº½éº¾ç¸»éºéºéºéºéºééºéºé»é»é»é» é»é»¢é»©é»§é»¥é»ªé»¯é¼¢é¼¬é¼¯é¼¹é¼·é¼½é¼¾é½"],["f840","é³£",62],["f880","é´¢",32],["f940","éµ",62],["f980","é¶",32],["fa40","é¶£",62],["fa80","é·¢",32],["fb40","é¸",27,"é¸¤é¸§é¸®é¸°é¸´é¸»é¸¼é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹é¹ é¹¡é¹¢é¹¥é¹®é¹¯é¹²é¹´",9,"éº"],["fb80","éºéºéºéºéºéºéºéº",5,"éº",8,"éºéº ",5,"éº§éº¨éº©éºª"],["fc40","éº«",8,"éºµéº¶éº·éº¹éººéº¼éº¿",4,"é»é»é»é»é»é»é»é»é»é»é»é»é»é»é»é»é»¡é»£é»¤é»¦é»¨é»«é»¬é»­é»®é»°",8,"é»ºé»½é»¿",6],["fc80","é¼",4,"é¼é¼é¼é¼é¼é¼é¼é¼é¼",5,"é¼¡é¼£",8,"é¼­é¼®é¼°é¼±"],["fd40","é¼²",4,"é¼¸é¼ºé¼¼é¼¿",4,"é½",10,"é½",38],["fd80","é½¹",5,"é¾é¾é¾",11,"é¾é¾é¾é¾¡",4,"ï¤¬ï¥¹ï¦ï§§ï§±"],["fe40","ï¨ï¨ï¨ï¨ï¨ï¨ï¨ï¨ï¨ï¨ ï¨¡ï¨£ï¨¤ï¨§ï¨¨ï¨©"]]');
            }
          ),
          /***/
          77348: (
            /***/
            function(c) {
              c.exports = JSON.parse('[["0","\\u0000",127],["8141","ê°ê°ê°ê°ê°",4,"ê°ê°ê°ê°¡ê°¢ê°£ê°¥",6,"ê°®ê°²ê°³ê°´"],["8161","ê°µê°¶ê°·ê°ºê°»ê°½ê°¾ê°¿ê±",9,"ê±ê±",5,"ê±"],["8181","ê±ê±ê±ê±ê±ê±",18,"ê±²ê±³ê±µê±¶ê±¹ê±»",4,"ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²",6,"ê²ê²¢",5,"ê²«ê²­ê²®ê²±",6,"ê²ºê²¾ê²¿ê³ê³ê³ê³ê³ê³ê³ê³ê³ê³",7,"ê³ê³",7,"ê³¢ê³£ê³¥ê³¦ê³©ê³«ê³­ê³®ê³²ê³´ê³·",4,"ê³¾ê³¿ê´ê´ê´ê´ê´",4,"ê´ê´ê´ê´"],["8241","ê´ê´ê´ê´ê´ê´ê´ê´ê´ê´ê´¡",7,"ê´ªê´«ê´®",5],["8261","ê´¶ê´·ê´¹ê´ºê´»ê´½",6,"êµêµêµ",5,"êµêµêµêµêµêµ"],["8281","êµ",7,"êµ¢êµ¤",7,"êµ®êµ¯êµ±êµ²êµ·êµ¸êµ¹êµºêµ¾ê¶ê¶",4,"ê¶ê¶ê¶ê¶ê¶ê¶",10,"ê¶",5,"ê¶¥",17,"ê¶¸",7,"ê·ê·ê·ê·ê·ê·",6,"ê·ê·",7,"ê·ê·ê·ê·¡ê·¢ê·£ê·¥",18],["8341","ê·ºê·»ê·½ê·¾ê¸",5,"ê¸ê¸ê¸",5,"ê¸",7],["8361","ê¸",18,"ê¸²ê¸³ê¸µê¸¶ê¸¹ê¸»ê¸¼"],["8381","ê¸½ê¸¾ê¸¿ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹",4,"ê¹ê¹¢ê¹£ê¹¤ê¹¦ê¹§ê¹ªê¹«ê¹­ê¹®ê¹¯ê¹±",6,"ê¹ºê¹¾",5,"êº",5,"êº",46,"êº¿ê»ê»ê»ê»",6,"ê»ê»",5,"ê»ê»ê»",8],["8441","ê»¦ê»§ê»©ê»ªê»¬ê»®",5,"ê»µê»¶ê»·ê»¹ê»ºê»»ê»½",8],["8461","ê¼ê¼ê¼ê¼ê¼ê¼ê¼ê¼",18],["8481","ê¼¤",7,"ê¼®ê¼¯ê¼±ê¼³ê¼µ",6,"ê¼¾ê½ê½ê½ê½ê½ê½",5,"ê½",10,"ê½",5,"ê½¦",18,"ê½º",5,"ê¾ê¾ê¾ê¾ê¾ê¾ê¾",6,"ê¾ê¾ê¾ê¾",5,"ê¾",26,"ê¾ºê¾»ê¾½ê¾¾"],["8541","ê¾¿ê¿",5,"ê¿ê¿ê¿",4,"ê¿",6,"ê¿",4],["8561","ê¿¢",5,"ê¿ª",5,"ê¿²ê¿³ê¿µê¿¶ê¿·ê¿¹",6,"ëë"],["8581","ë",6,"ëëëëëëë",6,"ë",9,"ë©",26,"ëëëëëëëëëëëëëëë",29,"ë¾ë¿ëëëë",6,"ëëë",5,"ëëëë£ë¤"],["8641","ë¥ë¦ë§ëªë°ë²ë¶ë·ë¹ëºë»ë½",6,"ëë",5,"ë"],["8661","ëëëëë",6,"ë¡ë¢ë£ë¤ë¦",10],["8681","ë±",22,"ëëëëëëëëëëë",4,"ë¦ë§ë©ëªë«ë­",6,"ë¶ëº",5,"ëëëëëë",6,"ëëëëëëëëëëë¡",22,"ëºë»ë½ë¾ë¿ëë",4,"ëëëëëëëëëëëëë"],["8741","ë",9,"ë©",15],["8761","ë¹",18,"ëëëëëëë"],["8781","ë",5,"ëë ",7,"ëªë«ë­ë®ë¯ë±",7,"ëºë¼ë¾",5,"ëëëëë",6,"ëëë",5,"ë¡",18,"ëµ",6,"ë½",26,"ëëëëëëë¡",6,"ëª",4],["8841","ë¯",4,"ë¶",5,"ë½",6,"ëëëë",4],["8861","ëëëëëëë",4,"ë¢ë¤ë§ë¨ë©ë«ë­ë®ë¯ë±ë²ë³ëµë¶ë·"],["8881","ë¸",15,"ëëëëëëë",4,"ëëëëë ë¡ë£ë§ë©ëªë°ë±ë²ë¶ë¼ë½ë¾ëëëëëë",6,"ëë",5,"ë",54,"ëëëëë ë¡ë¢ë£"],["8941","ë¦ë¨ëªë¬ë­ë¯ë²ë³ëµë¶ë·ë¹",6,"ëë",5,"ë"],["8961","ëëëëëë",10,"ë¢",5,"ë©ëªë«ë­"],["8981","ë®",21,"ëëëëëëëëëëëëëëëë¡ë¢ë£ë¥ë¦ë§ë©",18,"ë½",18,"ë",6,"ëëëëëëë¡",6,"ëªë¬",7,"ëµ",15],["8a41","ë",10,"ëëëëëë",6,"ë¢ë¤ë¦"],["8a61","ë§",4,"ë­",18,"ëë"],["8a81","ë",4,"ë",19,"ë",5,"ë¥ë¦ë§ë©ëªë«ë­",7,"ë¶ë¸ëº",5,"ëëëëëëë",6,"ëëëëë",5,"ëëë¡ë¢ë¥ë§",4,"ë®ë°ë²",5,"ë¹",26,"ëëëëë"],["8b41","ë",5,"ë¦ë«",4,"ë²ë³ëµë¶ë·ë¹",6,"ëë"],["8b61","ëëëëëëëëëë",6,"ëë¢",8],["8b81","ë«",52,"ë¢ë£ë¥ë¦ë§ë©ë¬ë­ë®ë¯ë²ë¶",4,"ë¾ë¿ëëëë",6,"ëë",5,"ë",18,"ë­",18],["8c41","ë",15,"ëëëëëë",4],["8c61","ë",6,"ë¦",5,"ë­",6,"ëµ",5],["8c81","ë»",12,"ë",26,"ë¥ë¦ë§ë©",50,"ëëë¡ë¢ë£ë¥",5,"ë­ë®ë¯ë°ë²",16],["8d41","ë",16,"ë",8],["8d61","ë",17,"ë±ë²ë³ëµë¶ë·ë¹ëº"],["8d81","ë»",4,"ëëëë",33,"ëªë«ë­ë®ë±",6,"ëºë¼",7,"ëëëëëëë",6,"ë",9,"ë¡ë¢ë£ë¥ë¦ë§ë©",6,"ë²ë´ë¶",5,"ë¾ë¿ëëëë",6,"ëëëëëëëë"],["8e41","ëë¡",6,"ëªë®",5,"ë¶ë·ë¹",8],["8e61","ë",4,"ëë",19],["8e81","ë",13,"ë®ë¯ë±ë²ë³ëµ",6,"ë¾ë ",4,"ë ë ë ë ë ë ",6,"ë ë ë ",5,"ë ¦ë §ë ©ë ªë «ë ­",6,"ë ¶ë º",5,"ë¡ë¡ë¡ë¡",11,"ë¡ë¡",7,"ë¡ë¡ë¡¡ë¡¢ë¡£ë¡¥",6,"ë¡®ë¡°ë¡²",5,"ë¡¹ë¡ºë¡»ë¡½",7],["8f41","ë¢",7,"ë¢",17],["8f61","ë¢ ",7,"ë¢©",6,"ë¢±ë¢²ë¢³ë¢µë¢¶ë¢·ë¢¹",4],["8f81","ë¢¾ë¢¿ë£ë£ë£",5,"ë£ë£ë£ë£ë£ë£ë£",7,"ë£ë£ ë£¢",5,"ë£ªë£«ë£­ë£®ë£¯ë£±",6,"ë£ºë£¼ë£¾",5,"ë¤",18,"ë¤",6,"ë¤¡",26,"ë¤¾ë¤¿ë¥ë¥ë¥ë¥",6,"ë¥ë¥ë¥ë¥",5],["9041","ë¥ë¥ë¥ë¥ë¥ë¥¡",6,"ë¥ªë¥¬ë¥®",5,"ë¥¶ë¥·ë¥¹ë¥ºë¥»ë¥½"],["9061","ë¥¾",5,"ë¦ë¦ë¦ë¦ë¦",15],["9081","ë¦",12,"ë¦®ë¦¯ë¦±ë¦²ë¦³ë¦µ",6,"ë¦¾ë§ë§",5,"ë§ë§ë§ë§",4,"ë§ë§ë§ë§ ë§¢ë§¦ë§§ë§©ë§ªë§«ë§­",6,"ë§¶ë§»",4,"ë¨",5,"ë¨",11,"ë¨",33,"ë¨ºë¨»ë¨½ë¨¾ë¨¿ë©ë©ë©ë©ë©"],["9141","ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©",6,"ë©¦ë©ª",5],["9161","ë©²ë©³ë©µë©¶ë©·ë©¹",9,"ëªëªëªëªëªëª",5],["9181","ëª",20,"ëªªëª­ëª®ëª¯ëª±ëª³",4,"ëªºëª¼ëª¾",5,"ë«ë«ë«ë«",14,"ë«",33,"ë«½ë«¾ë«¿ë¬ë¬ë¬ë¬",7,"ë¬ë¬ë¬",5,"ë¬ë¬ë¬ë¬ë¬ë¬ë¬¡",6],["9241","ë¬¨ë¬ªë¬¬",7,"ë¬·ë¬¹ë¬ºë¬¿",4,"ë­ë­ë­ë­ë­ë­ë­ë­"],["9261","ë­ë­ë­ë­ë­",7,"ë­¢ë­¤",7,"ë­­",4],["9281","ë­²",21,"ë®ë®ë®ë®ë®ë®ë®",18,"ë®¥ë®¦ë®§ë®©ë®ªë®«ë®­",6,"ë®µë®¶ë®¸",7,"ë¯ë¯ë¯ë¯ë¯ë¯ë¯",6,"ë¯ë¯ë¯",35,"ë¯ºë¯»ë¯½ë¯¾ë°"],["9341","ë°",4,"ë°ë°ë°ë°ë°ë°ë°ë° ë°¡ë°¢ë°£ë°¦ë°¨ë°ªë°«ë°¬ë°®ë°¯ë°²ë°³ë°µ"],["9361","ë°¶ë°·ë°¹",6,"ë±ë±ë±ë±ë±ë±ë±ë±ë±",8],["9381","ë±ë±ë±ë±",37,"ë²ë²ë²ë²ë²ë²",4,"ë²ë²ë²",4,"ë²¢ë²£ë²¥ë²¦ë²©",6,"ë²²ë²¶",5,"ë²¾ë²¿ë³ë³ë³ë³",7,"ë³ë³ë³ë³ë³ë³ë³ë³ë³ë³",22,"ë³·ë³¹ë³ºë³»ë³½"],["9441","ë³¾",5,"ë´ë´ë´",5,"ë´ë´ë´ë´",8],["9461","ë´",5,"ë´¥",6,"ë´­",12],["9481","ë´º",5,"ëµ",6,"ëµëµëµëµëµëµ",6,"ëµ",9,"ëµ¥ëµ¦ëµ§ëµ©",22,"ë¶ë¶ë¶ë¶ë¶",4,"ë¶ë¶ë¶ë¶ë¶ë¶ë¶",6,"ë¶¥",10,"ë¶±",6,"ë¶¹",24],["9541","ë·ë·ë·ë·ë·ë·ë·ë·",11,"ë·ª",5,"ë·±"],["9561","ë·²ë·³ë·µë·¶ë··ë·¹",6,"ë¸ë¸ë¸ë¸",5,"ë¸ë¸ë¸ë¸ë¸"],["9581","ë¸",6,"ë¸ë¸ ",35,"ë¹ë¹ë¹ë¹ë¹ë¹ë¹",4,"ë¹ë¹ë¹ë¹ë¹ë¹ë¹¢ë¹£ë¹¥ë¹¦ë¹§ë¹©ë¹«",4,"ë¹²ë¹¶",4,"ë¹¾ë¹¿ëºëºëºëº",6,"ëºëº",5,"ëº",13,"ëº©",14],["9641","ëº¸",23,"ë»ë»"],["9661","ë»ë»ë»",6,"ë»¡ë»¢ë»¦",5,"ë»­",8],["9681","ë»¶",10,"ë¼",5,"ë¼",13,"ë¼ë¼",33,"ë½ë½ë½ë½ë½ë½",6,"ë½ë½ë½ë½",44],["9741","ë¾",16,"ë¾",8],["9761","ë¾",17,"ë¾±",7],["9781","ë¾¹",11,"ë¿",5,"ë¿ë¿ë¿ë¿ë¿ë¿",6,"ë¿ë¿ë¿ ë¿¢",89,"ì½ì¾ì¿"],["9841","ì",16,"ì",5,"ììì"],["9861","ìììì¡",6,"ìª",15],["9881","ìº",21,"ìììììì",6,"ì¢ì¤ì¦",5,"ì®ì±ì²ì·",4,"ì¾ììììììììììì",6,"ìì",5,"ì¦ì§ì©ìªì«ì­",6,"ì¶ì¸ìº",5,"ììììììì",6,"ììììì",5,"ì¡ì¢ì¥ì¨ì©ìªì«ì®"],["9941","ì²ì³ì´ìµì·ìºì»ì½ì¾ì¿ì",6,"ìì",5,"ìì"],["9961","ìììì",6,"ì¦ìª",5,"ì±ì²ì³ìµì¶ì·ì¹ìºì»"],["9981","ì¼",8,"ì",5,"ìììììì",4,"ìì ì¢ì£ì¤ì¦ì§ìªì«ì­ì®ì¯ì±",11,"ì¾",5,"ììììììì",6,"ììì",6,"ì¡ì¢ì£ì¥ì¦ì§ì©",6,"ì²ì´",7,"ì¾ì¿ìììì",6,"ììì",5,"ììììì¡ì¢ì£"],["9a41","ì¤ì¥ì¦ì§ìªì¬ì®ì°ì³ìµ",16],["9a61","ììì",6,"ìììììì",6,"ì¡ì¢ì£ì¤ì¦"],["9a81","ì§",4,"ì®ì¯ì±ì²ì³ìµ",6,"ì¾ìì",5,"ì",5,"ì",6,"ìììì",5,"ì¦ì§ì©ìªì«ì®",5,"ì¶ì¸ìº",33,"ììì¡ì¢ì¥",5,"ì®ì°ì²ì³ì´ìµì·ìºì½ì¾ì¿ì",6,"ìììì"],["9b41","ììììììììì",6,"ì¦ì§ìª",8],["9b61","ì³",17,"ì",7],["9b81","ì",25,"ìªì«ì­ì®ì¯ì±ì³",4,"ìºì»ì¾",5,"ììììììì",50,"ì",22,"ì"],["9c41","ìììì¡ì£",4,"ìªì«ì¬ì®",5,"ì¶ì·ì¹",5],["9c61","ì¿",8,"ì",6,"ì",9],["9c81","ì",8,"ì¥",6,"ì­ì®ì¯ì±ì²ì³ìµ",6,"ì¾",9,"ì",26,"ì¦ì§ì©ìªì«ì­",6,"ì¶ì·ì¸ìº",5,"ì",18,"ì",6,"ì",12],["9d41","ìª",13,"ì¹ìºì»ì½",8],["9d61","ì",25],["9d81","ì ",8,"ìª",5,"ì²ì³ìµì¶ì·ì¹ì»ì¼ì½ì¾ì",9,"ììììììì",6,"ì",10,"ìªì«ì­ì®ì¯ì±",6,"ìºì¼ì¾",5,"ììììììììììììì¢ì£ì¥ì¦ì§ì©",6,"ì²ì¶",5,"ì¾ì¿ìììììììììììììì"],["9e41","ìììììììì¡",7,"ìª",9,"ì¶"],["9e61","ì·ìºì¿",4,"ììììììììì",6,"ì¢ì¤ì¦ì§"],["9e81","ì¨ì©ìªì«ì¯ì±ì²ì³ìµì¸ì¹ìºì»ìììììììììì",6,"ìì",6,"ì¦ì§ì©ìªì«ì¯ì±ì²ì¶ì¸ìºì¼ì½ì¾ì¿ìììììì",6,"ìì",5,"ììì¡",10,"ì­ì®ì°ì²",5,"ìºì»ì½ì¾ì¿ì",6,"ììì",5,"ìììììì",6,"ì¦"],["9f41","ì¨ìª",5,"ì²ì³ìµì¶ì·ì»",4,"ììì",5,"ì"],["9f61","ììììì",6,"ììì¢",5,"ìªì«ì­ì®ì¯ì±ì²"],["9f81","ì³",4,"ìºì»ì¼ì¾",5,"ìììììì",6,"ììì",5,"ì¢ì£ì¥ì¦ì§ì©",6,"ì²ì´ì¶ì¸ì¹ìºì»ì¾ì¿ìììì",4,"ìììììììììì¡",6,"ì©ìªì¬",7,"ì¶ì·ì¹ìºì»ì¿ììììììììììììì",4,"ì¢ì§",4,"ì®ì¯ì±ì²ì³ìµì¶ì·"],["a041","ì¸ì¹ìºì»ì¾ì",5,"ììììì",6,"ìììì"],["a061","ì",5,"ì¥ì¦ì§ì©ìªì«ì­",13],["a081","ì»",4,"ì ì ì ì ì ì ì ",4,"ì ì ì ",4,"ì ì ì ¡ì ¢ì £ì ¥",6,"ì ®ì °ì ²",5,"ì ¹ì ºì »ì ½ì ¾ì ¿ì¡",6,"ì¡ì¡ì¡",5,"ì¡",26,"ì¡²ì¡³ì¡µì¡¶ì¡·ì¡¹ì¡»",4,"ì¢ì¢ì¢ì¢ì¢ì¢",5,"ì¢",7,"ì¢ì¢ ì¢¢ì¢£ì¢¤"],["a141","ì¢¥ì¢¦ì¢§ì¢©",18,"ì¢¾ì¢¿ì£ì£"],["a161","ì£ì£ì£ì£ì£ì£ì£ì£ì£",6,"ì£ì£ì£",5,"ì£¢ì££ì£¥"],["a181","ì£¦",14,"ì£¶",5,"ì£¾ì£¿ì¤ì¤ì¤ì¤",4,"ì¤ãããÂ·â¥â¦Â¨ãÂ­ââ¥ï¼¼â¼ââââããã",9,"Â±ÃÃ·â â¤â¥ââ´Â°â²â³ââ«ï¿ ï¿¡ï¿¥âââ â¥ââââ¡âÂ§â»ââââââââ¡â â³â²â½â¼âââââãâªâ«ââ½ââµâ«â¬âââââââªâ©â§â¨ï¿¢"],["a241","ì¤ì¤",5,"ì¤",18],["a261","ì¤­",6,"ì¤µ",18],["a281","ì¥",7,"ì¥ì¥ì¥ì¥ì¥ì¥",6,"ì¥¢ì¥¤",7,"ì¥­ì¥®ì¥¯ââââÂ´ï½ËËËËËÂ¸ËÂ¡Â¿Ëâ®ââÂ¤ââ°âââ·â¶â¤â â¡â¥â§â£âââ£ââââ¤â¥â¨â§â¦â©â¨ââââÂ¶â â¡ââââââ­â©âªâ¬ã¿ãâãâ¢ããâ¡â¬Â®"],["a341","ì¥±ì¥²ì¥³ì¥µ",6,"ì¥½",10,"ì¦ì¦ì¦ì¦ì¦"],["a361","ì¦",6,"ì¦ì¦ì¦",16],["a381","ì¦¯",16,"ì§ì§ì§ì§ì§ì§",4,"ì§ì§ì§ì§ì§ï¼",58,"ï¿¦ï¼½",32,"ï¿£"],["a441","ì§ì§ì§¡ì§£ì§¥ì§¦ì§¨ì§©ì§ªì§«ì§®ì§²",5,"ì§ºì§»ì§½ì§¾ì§¿ì¨ì¨ì¨ì¨"],["a461","ì¨ì¨ì¨ì¨ì¨",5,"ì¨ì¨ì¨ì¨",12],["a481","ì¨¦ì¨§ì¨¨ì¨ª",28,"ã±",93],["a541","ì©",4,"ì©ì©ì©ì©ì©ì©",6,"ì©ì©¢",5,"ì©©ì©ª"],["a561","ì©«",17,"ì©¾",5,"ìªìª"],["a581","ìª",16,"ìª",14,"â°",9],["a5b0","â ",9],["a5c1","Î",16,"Î£",6],["a5e1","Î±",16,"Ï",6],["a641","ìª¨",19,"ìª¾ìª¿ì«ì«ì«ì«"],["a661","ì«",5,"ì«ì«ì«ì«ì«ì«ì«ì«",5,"ì«¡",6],["a681","ì«¨ì«©ì«ªì««ì«­",6,"ì«µ",18,"ì¬ì¬ââââââââ¬â¤â´â¼âââââââ£â³â«â»ââ â¯â¨â·â¿ââ°â¥â¸ââââââââââââ¡â¢â¦â§â©âªâ­â®â±â²âµâ¶â¹âºâ½â¾âââ",7],["a741","ì¬",4,"ì¬ì¬ì¬ì¬ì¬ì¬ì¬",6,"ì¬¢",7],["a761","ì¬ª",22,"ì­ì­ì­"],["a781","ì­ì­ì­ì­ì­ì­ì­ì­ì­",6,"ì­ì­ì­ì­",5,"ì­¥",7,"ãããâããã£ã¤ã¥ã¦ã",9,"ããããããããã§ã¨ã°",9,"ã",4,"ãº",5,"ã",4,"â¦ãããããããã­ã®ã¯ãã©ãªã«ã¬ããããããã"],["a841","ì­­",10,"ì­º",14],["a861","ì®",18,"ì®",6],["a881","ì®¤",19,"ì®¹",11,"ÃÃÂªÄ¦"],["a8a6","Ä²"],["a8a8","Ä¿ÅÃÅÂºÃÅ¦Å"],["a8b1","ã ",27,"â",25,"â ",14,"Â½ââÂ¼Â¾ââââ"],["a941","ì¯",14,"ì¯",10],["a961","ì¯ ì¯¡ì¯¢ì¯£ì¯¥ì¯¦ì¯¨ì¯ª",18],["a981","ì¯½",14,"ì°ì°ì°ì°ì°ì°",6,"ì°ì°ì° ì°£ì°¤Ã¦ÄÃ°Ä§Ä±Ä³Ä¸ÅÅÃ¸ÅÃÃ¾Å§ÅÅã",27,"â",25,"â´",14,"Â¹Â²Â³â´â¿ââââ"],["aa41","ì°¥ì°¦ì°ªì°«ì°­ì°¯ì°±",6,"ì°ºì°¿",4,"ì±ì±ì±ì±ì±ì±ì±"],["aa61","ì±",4,"ì±ì±",5,"ì±¡ì±¢ì±£ì±¥ì±§ì±©",6,"ì±±ì±²"],["aa81","ì±³ì±´ì±¶",29,"ã",82],["ab41","ì²ì²ì²ì²ì²ì²ì²ì²ì²ì²¡",6,"ì²ªì²®",5,"ì²¶ì²·ì²¹"],["ab61","ì²ºì²»ì²½",6,"ì³ì³ì³",5,"ì³ì³ì³ì³",5],["ab81","ì³",8,"ì³¥",6,"ì³­ì³®ì³¯ì³±",12,"ã¡",85],["ac41","ì³¾ì³¿ì´ì´",5,"ì´ì´ì´ì´ì´ì´",6,"ì´ì´ì´ì´ì´ "],["ac61","ì´¡ì´¢ì´£ì´¥ì´¦ì´§ì´©ì´ªì´«ì´­",11,"ì´º",4],["ac81","ì´¿",28,"ìµìµìµÐ",5,"ÐÐ",25],["acd1","Ð°",5,"ÑÐ¶",25],["ad41","ìµ¡ìµ¢ìµ£ìµ¥",6,"ìµ®ìµ°ìµ²",5,"ìµ¹",7],["ad61","ì¶",6,"ì¶",10,"ì¶ì¶ì¶ì¶ì¶ì¶ì¶ì¶"],["ad81","ì¶ ì¶¡ì¶¢ì¶£ì¶¦ì¶¨ì¶ª",5,"ì¶±",18,"ì·"],["ae41","ì·",5,"ì·ì·ì·ì·",16],["ae61","ì·¢",5,"ì·©ì·ªì·«ì·­ì·®ì·¯ì·±",6,"ì·ºì·¼ì·¾",4],["ae81","ì¸ì¸ì¸ì¸ì¸ì¸ì¸ì¸",6,"ì¸ì¸ì¸ì¸ì¸",5,"ì¸¢ì¸£ì¸¥ì¸¦ì¸§ì¸©ì¸ªì¸«"],["af41","ì¸¬ì¸­ì¸®ì¸¯ì¸²ì¸´ì¸¶",19],["af61","ì¹",13,"ì¹ì¹ì¹ì¹ì¹¢",5,"ì¹ªì¹¬"],["af81","ì¹®",5,"ì¹¶ì¹·ì¹¹ì¹ºì¹»ì¹½",6,"ìºìºìº",5,"ìºìºìºìºìºìº"],["b041","ìº",5,"ìº¢ìº¦",5,"ìº®",12],["b061","ìº»",5,"ì»",19],["b081","ì»",13,"ì»¦ì»§ì»©ì»ªì»­",6,"ì»¶ì»º",5,"ê°ê°ê°ê°ê°ê°ê°ê°",7,"ê°",4,"ê° ê°¤ê°¬ê°­ê°¯ê°°ê°±ê°¸ê°¹ê°¼ê±ê±ê±ê±ê±ê±ê±°ê±±ê±´ê±·ê±¸ê±ºê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê²ê² ê²¡ê²¨ê²©ê²ªê²¬ê²¯ê²°ê²¸ê²¹ê²»ê²¼ê²½ê³ê³ê³ê³ê³ê³ê³ ê³¡ê³¤ê³§ê³¨ê³ªê³¬ê³¯ê³°ê³±ê³³ê³µê³¶ê³¼ê³½ê´ê´ê´"],["b141","ì¼ì¼ì¼ì¼ì¼ì¼",6,"ì¼ì¼ì¼",5,"ì¼ì¼ì¼ì¼¡ì¼¢ì¼£"],["b161","ì¼¥",6,"ì¼®ì¼²",5,"ì¼¹",11],["b181","ì½",14,"ì½ì½ì½ì½ì½ì½",6,"ì½¦ì½¨ì½ªì½«ì½¬ê´ê´ê´ê´ê´ê´ê´ ê´©ê´¬ê´­ê´´ê´µê´¸ê´¼êµêµêµêµêµêµêµêµ¡êµ£êµ¬êµ­êµ°êµ³êµ´êµµêµ¶êµ»êµ¼êµ½êµ¿ê¶ê¶ê¶ê¶ê¶ê¶ê¶ê¶ê¶¤ê¶·ê·ê·ê·ê·ê·ê·ê·ê·ê· ê·¤ê·¸ê·¹ê·¼ê·¿ê¸ê¸ê¸ê¸ê¸ê¸ê¸ê¸°ê¸±ê¸´ê¸·ê¸¸ê¸ºê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ê¹ ê¹¡ê¹¥ê¹¨ê¹©ê¹¬ê¹°ê¹¸"],["b241","ì½­ì½®ì½¯ì½²ì½³ì½µì½¶ì½·ì½¹",6,"ì¾ì¾ì¾ì¾ì¾",5,"ì¾"],["b261","ì¾",18,"ì¾¢",5,"ì¾©"],["b281","ì¾ª",5,"ì¾±",18,"ì¿",6,"ê¹¹ê¹»ê¹¼ê¹½êºêºêºêº¼êº½êº¾ê»ê»ê»ê»ê»ê»ê»ê»ê»ê»ê»¨ê»«ê»­ê»´ê»¸ê»¼ê¼ê¼ê¼ê¼ê¼¬ê¼­ê¼°ê¼²ê¼´ê¼¼ê¼½ê¼¿ê½ê½ê½ê½ê½ê½ê½ê½ê½¤ê½¥ê½¹ê¾ê¾ê¾ê¾ê¾ê¾ê¾ê¾¸ê¾¹ê¾¼ê¿ê¿ê¿ê¿ê¿ê¿ê¿ê¿ê¿ê¿¨ê¿©ê¿°ê¿±ê¿´ê¿¸ëëëëëëëëë¨ëëëëëëëëëëë"],["b341","ì¿",19,"ì¿¢ì¿£ì¿¥ì¿¦ì¿§ì¿©"],["b361","ì¿ª",5,"ì¿²ì¿´ì¿¶",5,"ì¿½ì¿¾ì¿¿íííí",5],["b381","í",5,"í",5,"í",19,"ëë¼ë½ëëëëëëëëëëëë ë¡ë¢ë¨ë©ë«",4,"ë±ë³ë´ëµë¸ë¼ëëëëëëëëëë ë¥ëëëëëëëëëëëëë£ë¤ë¥ë¨ë¬ë´ëµë·ë¸ë¹ëëëëëëëëëëë ë¸ë¹ë¼ëëëëëëëëëëëë¨ëëëëë"],["b441","í®",5,"í¶í·í¹íºí»í½",6,"ííí",5],["b461","ííííííí",6,"í¡",10,"í®í¯"],["b481","í±í²í³íµ",6,"í¾í¿íí",18,"ëë¨ë©ë¬ë°ë¹ë»ë½ëëëëëëëëëë ë´ë¼ëëë ë¨ë©ë´ëµë¼ëëëëëëëëëë ë¡ë£ë¥ë¦ëªë¬ë°ë´ëëëëëëëëëë¢ë¤ë¥ë¦ë¨ë«",4,"ë³ë´ëµë·",4,"ë¿ëëëëëëëëëëëëëëëëëëë¤ë¥"],["b541","í",14,"í¦í§í©íªí«í­",5],["b561","í³í¶í¸íº",5,"íííííí",5,"íí",4],["b581","íííí¡í¢í£í¥",6,"í®í²",5,"í¹",11,"ë§ë©ë«ë®ë°ë±ë´ë¸ëëëëëëëëë ë¡ë¨ë¬ëëëëëëëëëëëëëë ë¤ë¨ë¼ëëëë ë¨ë©ë«ë´ëëëëë ë¡ë£ë¥ë¬ëëëë¤ë¨ë¬ëµë·ë¹ëëëëëëëë ë£ë¤ë¦ë¬ë­ë¯ë±ë¸ëëëëëë¤ë¥ë§ë¨ë©ëªë°ë±ë´ë¸"],["b641","í",7,"í",17],["b661","í ",15,"í²í³íµí¶í·í¹í»í¼í½í¾"],["b681","í¿íí",5,"íííííí",6,"íí í¢",5,"í©íªí«í­ëëëëëëëëëëëëëë ë¡ë ë¡ë¤ë¨ëªë«ë°ë±ë³ë´ëµë»ë¼ë½ëëëëëëëëë¬ëëëëë¥ë¬ë´ëë¤ë¨ëëë ë¤ë«ë¬ë±ëë°ë´ë¸ëëëë¨ë©ë¬ë¯ë°ë¸ë¹ë»ëëëëëë ë¤ë¨ë°ë±ë³ëµë¼ë½ëëëëëëëëëë"],["b741","í®",13,"í½",6,"ííííí"],["b761","í",20,"í¢í£í¥í¦í§"],["b781","í©",6,"í²í´í¶í·í¸í¹í»í½í¾í¿í",14,"ëëëë ë¨ë©ë«ë¬ë­ë´ëµë¸ëëë¬ë­ë°ë´ë¼ë½ë¿ë ë ë ë ë ë ë ë ë ë ë ë ¤ë ¥ë ¨ë ¬ë ´ë µë ·ë ¸ë ¹ë¡ë¡ë¡ë¡ë¡ë¡ë¡ ë¡¤ë¡¬ë¡­ë¡¯ë¡±ë¡¸ë¡¼ë¢ë¢¨ë¢°ë¢´ë¢¸ë£ë£ë£ë£ë£ë£ë£ë£ë£ë£¡ë£¨ë£©ë£¬ë£°ë£¸ë£¹ë£»ë£½ë¤ë¤ë¤ ë¤¼ë¤½ë¥ë¥ë¥ë¥ë¥ë¥ë¥ë¥ë¥ ë¥¨ë¥©"],["b841","í",7,"í",17],["b861","í«",8,"íµí¶í·í¹",13],["b881","íí",5,"í",24,"ë¥«ë¥­ë¥´ë¥µë¥¸ë¥¼ë¦ë¦ë¦ë¦ë¦ë¦ë¦ë¦¬ë¦­ë¦°ë¦´ë¦¼ë¦½ë¦¿ë§ë§ë§ë§ë§",4,"ë§ë§ë§ë§ë§ë§¡ë§£ë§¤ë§¥ë§¨ë§¬ë§´ë§µë§·ë§¸ë§¹ë§ºë¨ë¨ë¨ë¨ë¨¸ë¨¹ë¨¼ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©ë©¤ë©¥ë©§ë©¨ë©©ë©°ë©±ë©´ë©¸ëªëªëªëªëªëª¨ëª©ëª«ëª¬ëª°ëª²ëª¸ëª¹ëª»ëª½ë«ë«ë«ë«ë«¼"],["b941","íªí«í®í¯í±í²í³íµ",6,"í¾íí",5,"íííí"],["b961","í",14,"í",6,"í¥í¦í§í¨"],["b981","í©",22,"íííííííííë¬ë¬ë¬ë¬ë¬ë¬ë¬ë¬ ë¬©ë¬«ë¬´ë¬µë¬¶ë¬¸ë¬»ë¬¼ë¬½ë¬¾ë­ë­ë­ë­ë­ë­ë­ë­ë­ë­¡ë­£ë­¬ë®ë®ë®ë®¤ë®¨ë®¬ë®´ë®·ë¯ë¯ë¯ë¯ë¯ë¯¸ë¯¹ë¯¼ë¯¿ë°ë°ë°ë°ë°ë°ë°ë°ë°ë°",4,"ë°",4,"ë°¤ë°¥ë°§ë°©ë°­ë°°ë°±ë°´ë°¸ë±ë±ë±ë±ë±ë±ë±ë±ë±ë±ë²ë²ë²ë²ë²ë²ë²ë²ë²"],["ba41","ííííííí",5,"íííí¡í¢í£í¥",6,"í­"],["ba61","í®í¯í°í²",5,"íºí»í½í¾íí",4,"íí",5],["ba81","ííííííííí",6,"í¦",9,"í²í³íµí¶í·í¹íºë²ë²ë² ë²¡ë²¤ë²§ë²¨ë²°ë²±ë²³ë²´ë²µë²¼ë²½ë³ë³ë³ë³ë³ë³ë³ë³ë³ë³´ë³µë³¶ë³¸ë³¼ë´ë´ë´ë´ë´ë´ë´¤ë´¬ëµëµëµëµëµëµëµëµ¤ëµ¨ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶ë¶¤ë¶°ë¶¸ë·ë·ë·ë·ë·©ë·°ë·´ë·¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¸ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ë¹ ë¹¡ë¹¤"],["bb41","í»",4,"ííí",5,"íííííí",4,"íí¢í£"],["bb61","í¤í¦í§íªí«í­í®í¯í±",6,"íºí¾",5,"íííí"],["bb81","í",31,"ë¹¨ë¹ªë¹°ë¹±ë¹³ë¹´ë¹µë¹»ë¹¼ë¹½ëºëºëºëºëºëºëºëºëºëº¨ë»ë»ë»ë»ë»ë» ë»£ë»¤ë»¥ë»¬ë¼ë¼ë¼ë¼ë¼ë¼ë¼ë¼ë½ë½ë½ë½ë½ë½ë½ë¾ë¾°ë¿ë¿ë¿ë¿ë¿ë¿ë¿ë¿¡ì¼ìììì ì¨ì©ììììì ì¡ì£ì¥ì¬ì­ì¯ì°ì³ì´ìµì¶ì¼ì½ì¿ììììììììììììì¤"],["bc41","íª",17,"í¾í¿íííííí"],["bc61","íííííí",5,"íííííí¡",6,"íªí¬í®"],["bc81","í¯",4,"íµí¶í·í¹íºí»í½",6,"ííí",5,"í",5,"ì¥ì¨ì¬ì´ìµì·ì¹ìììììì",4,"ì£ì¤ì¦ì§ì¬ì­ì¯ì°ì±ì¶ì¸ì¹ì¼ììììììììììì¤ì¥ì§ì¨ì©ì°ì´ì¸ììììììììììì¡ì¥ì¨ì©ì¬ì°ì½ììììììì ì¤ì¨ì°ì±ì³ì¼ì½ììììììììììì ì¨ì©ì«ì­"],["bd41","íí",7,"í¢í¤",7,"í®í¯í±í²í³íµí¶í·"],["bd61","í¸í¹íºí»í¾íí",5,"í",13],["bd81","í",5,"í",25,"ì¯ì±ì²ì´ìììììì ì¥ì¬ì­ì°ì´ì¼ì½ì¿ìììììììì¤ì¥ì¨ì¬ì­ì´ìµì·ì¹ììì ì£ì¤ì«ì¬ì­ì¯ì±ì¶ì¸ì¹ì»ì¼ììììììììììì¤ì¥ì¨ì©ìì¨ì©ì¬ì°ì²ì¸ì¹ì¼ì½ììììììììì ì¢ì¨ì©ì­ì´ìµì¸ììì¤ì¬ì°"],["be41","í¸",7,"íííí",14],["be61","í",7,"íííí¡í¢í£í¥",7,"í®í°í±í²"],["be81","í³",4,"íºí»í½í¾íí",4,"ííí",5,"í",8,"ì´ì¼ì½ìì¤ì¥ì¨ì¬ì´ìµì¹ìììì¸ì¼ì©ì°ì±ì´ì¸ìºì¿ììììììì¨ì©ì¬ì°ì¸ì¹ì»ì½ììììììììììììììììì ì¡ì¤ì¨ì°ì±ì³ì´ìµì¼ì½ìììììììììììì ì©ì´ìµì¸ì¹ì»ì¼ì½ì¾ì",6,"ìì"],["bf41","í",10,"íª",14],["bf61","í¹",18,"ííííííí"],["bf81","í",5,"ííí ",7,"í©íªí«í­í®í¯í±",6,"í¹íºí¼ììììì ì¡ì£ì¥ì¬ì­ì®ì°ì´ì¶ì·ì¼",5,"ììììììììììì¤ì¥ì¨ì¬ì­ì®ì°ì³ì´ìµì·ì¹ì»ìììììììììììì ì¬ì¯ì±ì¸ì¹ì¼ìììììììììì¤ì¥ì§ì©ì°ì±ì´ì¸ì¹ìºììììììììììì ì¡ì¨"],["c041","í¾",5,"ííííííí",6,"íí",5],["c061","í",25],["c081","í¸í¹íºí»í¾í¿íííí",6,"ííí",5,"íííííí¡í¢í£ì©ì¬ì°ì¸ì¹ì½ììììììììì ì¡ì¤ì¨ì°ì±ì³ìµì·ì¼ì½ììììììì",7,"ìì ì¨ì«ì´ìµì¸ì¼ì½ì¾ìììììììììììììììì ì¡ì£ì¤ì¥ì¦ì¬ì­ì°ì´ì¼ì½ì¿ìììììììììì¤ì¨ì¬ì ì ì ì ì "],["c141","í¤í¦í§íªí¬í®",5,"í¶í·í¹íºí»í½",6,"ííí"],["c161","ííííí",19,"í¦í§"],["c181","í¨",31,"ì ì ì ì ì ì ì ì  ì ¤ì ¬ì ­ì ¯ì ±ì ¸ì ¼ì¡ì¡ì¡ì¡ì¡ì¡ì¡°ì¡±ì¡´ì¡¸ì¡ºì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢ì¢¡ì¢¨ì¢¼ì¢½ì£ì£ì£ì£ì£ì£ì£ì£ ì£¡ì£¤ì£µì£¼ì£½ì¤ì¤ì¤ì¤ì¤ì¤ì¤ì¤ì¤ì¤¬ì¤´ì¥ì¥ì¥ì¥ì¥ ì¥¡ì¥£ì¥¬ì¥°ì¥´ì¥¼ì¦ì¦ì¦ì¦ì¦ì¦ì¦ì¦ì§ì§ì§ì§ì§ì§ì§ì§ì§"],["c241","ííííííí",4,"ííí",5,"í¦í§í©íªí«í­í®"],["c261","í¯",4,"í¶í¸íº",5,"íííííí",6,"í"],["c281","í",5,"íííí¡í¢í£í¥",7,"í®",9,"íºí»ì§ì§ì§ì§ì§ì§ì§ ì§¢ì§¤ì§§ì§¬ì§­ì§¯ì§°ì§±ì§¸ì§¹ì§¼ì¨ì¨ì¨ì¨ì¨ì¨ì¨ì¨ì¨©ì©ì©ì©ì©ì©ì©ì©ì© ì©¡ì©¨ì©½ìªìªìª¼ìª½ì«ì«ì«ì«ì«ì«ì«ì«ì«ì« ì«¬ì«´ì¬ì¬ì¬ì¬ì¬ ì¬¡ì­ì­ì­ì­ì­ì­ì­ì­ì­¤ì­¸ì­¹ì®ì®¸ì¯ì¯¤ì¯§ì¯©ì°ì°ì°ì°ì°ì°ì°¡ì°¢ì°§ì°¨ì°©ì°¬ì°®ì°°ì°¸ì°¹ì°»"],["c341","í½í¾í¿ííííííííííííííííííí",4],["c361","í¢",4,"í¨íª",5,"í²í³íµ",11],["c381","íííí",5,"íííííí",7,"íí í¢",5,"í©íªì°¼ì°½ì°¾ì±ì±ì±ì±ì±ì±ì±ì±ì±ì± ì±¤ì±¦ì±¨ì±°ì±µì²ì²ì²ì² ì²¨ì²©ì²«ì²¬ì²­ì²´ì²µì²¸ì²¼ì³ì³ì³ì³ì³ì³ì³¤ì³¬ì³°ì´ì´ì´ì´ì´ì´ì´ì´ì´ì´¤ì´¨ì´¬ì´¹ìµìµ ìµ¤ìµ¬ìµ­ìµ¯ìµ±ìµ¸ì¶ì¶ì¶ì¶ì¶ì¶¤ì¶¥ì¶§ì¶©ì¶°ì·ì·ì·ì·¨ì·¬ì·°ì·¸ì·¹ì·»ì·½ì¸ì¸ì¸ì¸ì¸ì¸ ì¸¡ì¸¤ì¸¨ì¸°ì¸±ì¸³ì¸µ"],["c441","í«í­í®í¯í±",7,"íºí¼",7,"ííííí"],["c461","íííííííííí",5,"í¡í¢í£í¥í¦í§í©",4],["c481","í®í¯í±í²í³í´í¶",5,"í¾í¿íííí",11,"íííì¹ì¹ì¹ì¹ì¹ ì¹¡ì¹¨ì¹©ì¹«ì¹­ì¹´ì¹µì¹¸ì¹¼ìºìºìºìºìºìºìºìºìº ìº¡ìº£ìº¤ìº¥ìº¬ìº­ì»ì»¤ì»¥ì»¨ì»«ì»¬ì»´ì»µì»·ì»¸ì»¹ì¼ì¼ì¼ì¼ì¼ì¼ì¼ì¼ì¼ì¼ ì¼¤ì¼¬ì¼­ì¼¯ì¼°ì¼±ì¼¸ì½ì½ì½ì½ì½¤ì½¥ì½§ì½©ì½°ì½±ì½´ì½¸ì¾ì¾ì¾ì¾¡ì¾¨ì¾°ì¿ì¿ ì¿¡ì¿¤ì¿¨ì¿°ì¿±ì¿³ì¿µì¿¼ííííí­í´íµí¸í¼"],["c541","ííííííííí¡",6,"íªí¬í®",5,"í¶í·í¹"],["c561","íºí»í½",6,"íííí",5,"íííí",4],["c581","íí¢í¤í¦í§í¨íªí«í­í®í¯í±í²í³íµ",6,"í¾í¿íí",5,"íííííííííí í¬í­í°í´í¼í½íí¤í¥í¨í¬í´íµí·í¹ííííííííííííí í¤í¬í­í¯í°í±í¸íí°í±í´í¸íºííííííííííííí¡í¨í¬í¼ííí í¡í¤í¨í°í±í³íµíºí¼ííí´í¸íííí¬í­í°í´í¼í½í¿ííí"],["c641","íííí",6,"ííí",5],["c6a1","í¤ííííííííí í¤í¬í±í¸í¹í¼í¿ííííííííí¤í¥í°í±í´í¸íííííííííííííí í¡í¥í¨í©í¬í°í¸í¹í»í¼í½ííí¼í½ííííííííííí í¨í©í«í­í´í¸í¼ííííííí¡í£í¬í­í°í´í¼í½í¿í"],["c7a1","íííííí í¤í­í¯í¸í¹í¼í¿íííííííí©íííííí¨í¬í°í¸í»í½ííííííí¼í½íííííííííí í¥í¨í©í«í­í´íµí¸í¼ííííííí¥íííííííííí¤í¥í¨í¬í´íµí·í¹ííííííííííí "],["c8a1","í¤í­í¸í¹í¼íííííííííííí§í©í°í±í´ííííííííí¡í¨í¬í°í¹í»ííííííííí í¤í¨í°íµí¼í½ííííííí í¨í©í«í­í´íµí¸í¼ííííííííííí í¡í£í¥í©í¬í°í´í¼í½ííííííííí"],["caa1","ä¼½ä½³åå¹å å¯åµå¥åå«å®¶ææ¶æ·æ¯æ­ççç¨¼èèè¡è¢è¨¶è³è·è»»è¿¦é§å»å´åæªæ¤æ®¼çèè¦ºè§é£ä¾åå¢¾å¥¸å§¦å¹²å¹¹ææææ¬æ¡¿æ¾ççç£µç¨ç«¿ç°¡èè®è±è««éä¹«åæ·æ¸´ç¢£ç«­èè¤èé¨ååå ªåµææ¾æ¡æ¢ææ©æ¸çç³ç£ç°ç´ºé¯ééé¾"],["cba1","å£å²¬ç²èééåå å§å²¡å´åº·å¼ºå½æ·æ±çºçç³ çµ³ç¶±ç¾èè¡èè¥è¬é¼éé±ä»ä»·åå±å¡æ·æ¾æ¨æ¹æ§ªæ¼ç¥ççç®è¥èï¤é§éåå®¢åï¤ç²³ç¾¹éµå¨å»å±å·¨ææ®ææ§æ¸ ç¬ç¥è·è¸ï¤é½éé¸ä¹¾ä»¶å¥å·¾å»ºææ¥è±èè¹éµé¨«ä¹åæ°æ¡åååæª¢"],["cca1","ç¼éé»å«æ¯è¿²åæ©æ­ææ ¼æªæ¿èè¦¡éå ç½ç¬ççµ¹ç¹­è©è¦è­´é£éµææ±ºæ½çµç¼ºè¨£å¼æç®è¬ééäº¬ä¿åå¾åååå¿å°å¢åºå¾æ¶æ¬ææ¬æ¯æ»æ´æ¢æ¶çç±çç¥ççç¡¬ç£¬ç«ç«¶çµç¶èè¿èèè­¦è¼éé¡é é ¸é©é¯¨ä¿åå ºå¥å­£å±æ¸ææ¡æ¢°"],["cda1","æ£¨æºªçç¸ç£ç¨½ç³»ç¹«ç¹¼è¨èª¡è°¿éé·å¤å©åå±åºå§å­¤å°»åº«æ·æ·ææ²æ æ¯æ§æ²½ç¼çç¾ç¨¿ç¾èè¡èè¦è½è°èè ±è¢´èª¥ï¤è¾é®éé¡§é«é¼å­ææ²æ¢ç©è°·éµ å°å¤å´ææ¢±æ£æ»¾ç¨è¢é¯¤æ±¨ï¤éª¨ä¾å¬å±åå­å·¥ææ­æ±æ§æ»çç©ºè£è²¢éä¸²å¯¡ææç"],["cea1","ç§èèªèª²è·¨ééé¡å»æ§¨è¿é­ï¤å å®å¯¬æ£æ£ºæ¬¾çç¯çç®¡ç½èè§è²«éé¤¨å®ææ¬éä¾åå¡å£å»£æ æ´¸çççç­è±éå¦æç½«ä¹åå¡å£æªæ§ææ§é­å®ç´è±è½äº¤åå¬å¬å¬å¶ å·§æªææ ¡æ©ç¡çç¯çµç¿¹è èèè¼è½éé¤é©é®«ä¸ä¹ä¹ä»ä¿±å·å¾"],["cfa1","åå£å¥åååµå¢å¯å¶å»æ¼æææ¸æ©æ§æ­æ¯æ¯¬æ±æºç¸çççç¿ç©ç©¶çµ¿èè¼èèèè¡¢è¬³è³¼è»éé±é¤é¶é§é©é³©é·é¾åå±èé é«éº´åçªç¾¤è£è»é¡å å±æçªå®®å¼ç©¹çª®èèº¬å¦å¸å¸å·åæ³æ²æ¬æ·ç·å¥çè¨è¹¶éæºæ«æ½°è©­è»é¥ï¤æ·æ­¸è²´"],["d0a1","é¬¼ï¤å«å­å¥ææ§»çªç¡çªºç«ç³¾èµè¦èµ³éµé¨å»åçç­ èéï¤æ©åååææ£æ¥µéåå¤å¤ææ¤æ ¹æ§¿ç¾ç­è¹è«è¦²è¬¹è¿é¥ï¤ä»å¦æææªç´ç¦ç¦½è©è¡¾è¡¿è¥ï¤é¦ä¼åæ¥æ±æ±²ç´çµ¦äºå¢çè¯ä¼ä¼å¶ååå¨å»åºå¼å¤å¥å¦å¯å²å´å·±å¹¾å¿æææ£"],["d1a1","ææææ£æ£æ©æ¬ºæ°£æ±½æ²æ·çç¦çªçç£ç¸ç¿ç¢ç£¯ç¥ç¥ç¥ç¥ºç®ç´ç¶ºç¾èè­èè¨è­è±èµ·é¡é¤é£¢é¥é¨é¨é©¥éºç·ä½¶åæ®æ¡éå«åºï¤ï¤å¨æ¦ï¤ææ¿ï¤",5,"é£ï¤",4,"è«¾ï¤ï¤ï¤ï¤æï¤çï¤ï¤é£ï¤ ææºåï¤¡ææ¥ æ¹³ï¤¢ç·ï¤£ï¤¤ï¤¥"],["d2a1","ç´ï¤¦ï¤§è¡²åå¨ï¤¨",4,"ä¹ï¤­å§å¥æ°èï¤®å¥³å¹´æç§å¿µæ¬ææ»å¯§å¯åªï¤¯å¥´å¼©æï¤°ï¤±ï¤²çï¤³",5,"é§ï¤¹",10,"æ¿ï¥ï¥è¿è¾²æ±ï¥ï¥è¦ï¥ï¥å°¿ï¥",7,"å«©è¨¥æ»ç´ï¥",5,"è½ï¥ï¥å°¼æ³¥å¿æººå¤è¶"],["d3a1","ä¸¹äº¶ä½å®åå£å½æ·æ¦æªæ®µæ¹ç­ç«¯ç°ç·èè¢é²éæ»æ¾¾çºç¸éååæºæææ·¡æ¹æ½­æ¾¹ç°èè½èè¦è«è­éæ²çç­è¸éåå å¡å¹¢æææ£ ç¶ç³è³é»¨ä»£åå®å¤§å°å²±å¸¶å¾æ´æ¡ç³èºè¢è²¸éé»å®å¾·æ³ååå°åå µå¡å°å± å³¶å¶åº¦å¾æ¼ææææ¡"],["d4a1","æ£¹æ«æ·æ¸¡æ»æ¿¤ç¾çç¹ç¦±ç¨»èè¦©è³­è·³è¹éééé½éé¶éæ¯ççç¢ç¨ç£ç¦¿ç¯¤çºè®å¢©ææ¦æ½æ¾æ²ççè±é ä¹­çªä»å¬åååæ§æ±æ¡æ£æ´æ½¼ç¼ç³ç«¥è´è£éåæææçç«è³ï¥è±éé ­å±¯èèéé¯éå¾å¶æ©çç»ç­è¤è¬é§é¨°åæ¶ï¥ç©ç¾"],["d5a1","è¿èºè£¸éï¥æ´çççµ¡è½ï¥éªé§±ï¥äºåµæ¬æ¬ç¾çè­é¸åè¾£åµæ¥æ¬æ¬æ¿«ç±çºèè¥¤è¦½æèè å»ææµªç¼çç¯èéä¾å´å¾ èå·æ ç¥äº®åå©åæ¢æ¨ç²®ç²±ç³§è¯è«è¼éä¾¶å·åµåå»¬æ®æ¾ææ«æ¿¾ç¤ªèè £é­é©¢é©ªéºé»åææ­·çç¤«è½¢éæææ£æ¼£"],["d6a1","ççç·´è¯è®è¼¦é£éå½åå£æ´çè£å»ææ®®æ¿ç°¾çµä»¤ä¼¶å¹ï¥å²ºå¶ºæç²ç¬­ç¾ç¿èéé´é¶éé é½¡ä¾æ¾§ç¦®é´é·åï¥ æææ«æ½ççç§èèèè·¯è¼é²é­¯é·ºé¹µç¢ç¥¿ç¶ èéé¹¿éºè«å£å¼æ§ç§çç± è¾å¡ç¨ç¢ç£è³è³è³´é·äºåå¯®å»æççç­èè¼"],["d7a1","é¼é¬§é¾å£å©å±¢æ¨æ·æ¼ç»ç´¯ç¸·èè¤¸é¤éåææ³æ¦´æµæºççç çç¤ç¡«è¬¬é¡å­æ®é¸ä¾å«å´æ·ªç¶¸è¼ªå¾ææ ï¥¡éåèååæ¥ç¨ç¶¾è±éµä¿å©åååå±¥æ§ææ¢¨æµ¬çç¸ççï¥¢ç¢ç±¬ç½¹ç¾¸èè£è£¡ééé¢é¯åæ½¾ççèºèºªé£é±éºææ·ç³è¨éç ¬"],["d8a1","ç«ç¬ ç²æ©çªç²ç¢¼ç£¨é¦¬é­éº»å¯å¹æ¼ èè«éä¸åå¨©å·å½æ¢æ½æ©æ¼æ»¿æ¼«ç£çè¬èè »è¼é¥é°»åæ¹æ«æ²«èè¥ªéºäº¡å¦å¿å¿æç¶²ç½èè«è½è¼éåå¦¹åªå¯æ§ææ¢æ¯ç¤ç½µè²·è³£éé­èè²éé©éº¥å­æ°çç²çèåªè¦åååæ£æ²çç ç¶¿ç·¬é¢éºµæ»"],["d9a1","èå¥åå½æææ¤§æºç¿çèèèé©éé³´è¢ä¾®ååå§å¸½ææ¸æ¹æ®ææ¨¡æ¯æ¯çç¡çç¸çèè¼èè¬è¬¨è²æ¨æ²ç§ç®ç¦ç©é¶©æ­¿æ²å¤¢æ¦èå¯å¢å¦å»ææ´æ³æ¸ºç«ç«èé¨åå·«æ®ææææ«æ æ¥æ­¦æ¯ç¡ç·çç¹èèèªèª£è²¿é§éµ¡å¢¨é»ååå»åæ"],["daa1","æ±¶ç´ç´èèéé¯å¿æ²ç©å³åªå°¾åµå½å¾®æªæ¢¶æ¥£æ¸¼æ¹çç±³ç¾èè¬è¿·é¡é»´å²·æ¶ææ«ææ»æ¼æ°æ³¯ççç·¡éå¯èè¬ååæææ²æ´æ¨¸æ³ççç®ç²ç¸èè¶èè¿«é¹é§ä¼´åååææ¬æææ§æ³®æ½ç­çç¢ç¤ç¼ç£ç£»ç¤¬çµè¬è è¿é é£¯åææ¥æ¸¤æ½"],["dba1","ç¼è·é±é¢é«®é­å£ååå¦¨å°¨å¹å½·æ¿æ¾æ¹ææææ¦æ»ç£ç´¡èªèè«è³è¡èè¨ªè¬é¦é²é¾åä¿³ï¥£å¹å¾æææ¯æ¹ççèèè£´è£µè¤è³ è¼©ééªä¼¯ä½°å¸ææ ¢ç½ç¾é­å¹¡æ¨ç©ççªï¥¤ç¹èè©é£ä¼ç­ç½°é¥å¡å¸æ¢µæ°¾æ±æ³ç¯ç¯èæ³çºå»åå£ææªç§ç"],["dca1","ç¢§èé¢é¹ï¥¥åå¼è®è¾¨è¾¯éå¥ç¥é±é¼ä¸ååµå±å¹·ææºææ£ç³ççç§ç«è¼§é¤ é¨ä¿å ¡å ±å¯¶æ®æ­¥æ´æ¹ºæ½½ç¤ç«è©è£è¤è­è¼ä¼åååå®å¾©æç¦è¹è¯èè¤è¦è¼¹è¼»é¦¥é°æ¬ä¹¶ä¿¸å¥å°å³¯å³°æ§æ£ç½ç¢ç«ç¸«è¬èé¢éé³³ä¸ä»ä¿¯ååå¯å¦åå å¤«å©¦"],["dda1","å­å­µå¯åºï¥¦æ¶æ·æ§æµ®æº¥ç¶ç¬¦ç°¿ç¼¶èèèèèè©è¨è² è³¦è³»èµ´è¶ºé¨éééé§é³§ååå©å´å¢³å¥å¥®å¿¿æ¤æ®ææ±¾ççç²ç³ç´è¬è³é°ï¥§ä½å¼å½¿æå´©ææ£ç¡¼ç¹éµ¬ä¸åååªåå¦å©¢åºæ²æææ¹æææ¦§æ¯æ¯æ¯æ¯æ²¸ï¥¨çµçºç ç¢ç§ç§ç²ç·ç¿¡è¥"],["dea1","è¾èè²èè£¨èª¹è­¬è²»ééé£é¼»å¬å¬ªå½¬ææª³æ®¯æµæ¿±ççç­è²§è³é »ææ°·èé¨ä¹äºäºä»ä¼ºä¼¼ä½¿ä¿å¿å²å¸åå£åå£«å¥¢å¨å¯«å¯ºå°å·³å¸«å¾ææ¨ææ¯æ¶æ»æ¢­æ­»æ²æ³æ¸£ççç ç¤¾ç¥ç¥ ç§ç¯©ç´çµ²èèèèèè£è©è©è¬è³èµ¦è¾­éªé£¼é§éºåï¥©æï¥ª"],["dfa1","ååªå±±æ£æ±çç£çç®èé¸é°ä¹·ææ®ºçè©ä¸ï¥«ææ£®æ¸èèè¡«æ·æ¾éé¢¯ä¸å·ååååªåå­å°å³ å¸¸åºåº å»æ³æ¡æ©¡æ¹ç½ççç¸ç¥¥ç®±ç¿è£³è§´è©³è±¡è³éå¡ç½è³½åï¥¬ç©¡ç´¢è²ç²çç¥ï¥­ç¬å¢å£»å¶¼åºåº¶å¾æææ¿ææææ¸æ æ£²ççç­®çµ®ç·ç½²"],["e0a1","è¥èè¯è¥¿èªéé¤é»é¼ å¤å¥­å¸­æææ³ææ±æ·æ½ç³ç¢©èéé«ä»åååå¬å®£ææ¾ææ¸²ç½çççç¿ç¬ç¦ªç·ç¹ç¾¨èºè³è¹èè¬è©µè·£é¸éé¥é¥é®®å¨å±æ¥æ³æ´©æ¸«èèè¤»è¨­èªªéªé½§å¡æ¹æ®²çºè¾è´ééææ¶ç®ï¥®åå§å®¬æ§æºæææç©ç¹ççç­¬"],["e1a1","èè²è¥èª éä¸å¢æ­²æ´ç¨ç¬¹ç´°ï¥¯è²°å¬å¯å¡å®µå°å°å·¢ææææ­æ¢³æ²¼æ¶æº¯çç¤çç¦çççç¬ç¯ ç°«ç´ ç´¹è¬è­èè¨´éé¡éµé·é¶é¨·ä¿å±¬ææ¶ç²çºè¬è´éå­«å·½æèéé£¡çå®ææ¾æ·è¨èª¦éé å·ï¥°çç¢éè¡°éä¿®åå½ååå£½å«å®å²«å³å¸¥æ"],["e2a1","æææææ¶æ¸æ¨¹æ®æ°´æ´æ¼±ç§ç©ç¸çç²ç¦ç¡ç§ç©ç«ªç²¹ç¶ç¶¬ç¹¡ç¾è©è±èèèªè¢èª°è®è¼¸ééé¬éé¹éé§é¨ééé é¦é«é¬åå¡¾å¤å­°å®¿æ·æ½çç¡ç¹èè½å·¡å¾å¾ªææ¬æ æ¥¯æ©æ®æ´µæ·³ç£ç¾ç¬ç­ç´è£èèè´è£è©¢è«ééé é¦´æè¡è¿°é¥å´å´§"],["e3a1","åµ©çèè¨æ¿æ¾ç¿è¤¶è¥²ä¸ä¹å§ååæ¿æç¹©è éä¾åå¶å§åª¤å°¸å±å±å¸å¼ææ½æ¯ææ¾æ´çç¢ç¤ºç¿èèè¦è©¦è©©è«¡è±è±ºå´å¯å¼æ¯æ­æ¤æ®æ¹çç¯èè­è»¾é£é£¾ä¼¸ä¾ä¿¡å»å¨ å®¸æ¼æ°æ¨ç¼ç³ç¥ç´³èè£èèªèèè¨èº«è¾ï¥±è¿å¤±å®¤å¯¦æå¯©å°å¿æ²"],["e4a1","ï¥²æ·±ççè¯è«¶ä»åï¥³éæ°äºä¿ååå¨¥å³¨æçè½èªè¾è¡è¨é¿éé¤é´éµå å²³å¶½å¹æ¡ææ¡æ¨æ¸¥ééé¡é°é½·å®å²¸æææ¡ç¼ééé¡é®æ¡è¬è»é¼åµå²©å·åºµæçè´éå£æ¼çé´¨ä»°å¤®ææ»æ®ç§§é´¦åååå´æææ¶¯ç¢è¾ééåæ¼ææ¶²ç¸èé¡"],["e5a1","æ«»ç½é¶¯é¸ä¹å»å¶å¤æ¹æ¶æ¤°çºè¶ï¥´éå¼±ï¥µï¥¶ç´è¥è¯è»è¥èºï¥·ä½¯ï¥¸ï¥¹å£¤å­ææææ­æï¥ºæ¥æ¨£æ´çç¬ççç¦³ç©°ï¥»ç¾ï¥¼è¥ï¥½è®éé½ï¥¾é¤åå¾¡æ¼æ¼çç¦¦èªé¦­é­é½¬åæ¶ææªèåå °å½¦çè¨è«ºå­¼èä¿ºå¼å´å¥æ©æ·¹å¶ªæ¥­åäºä½ï¥¿ï¦ï¦å¦ï¦"],["e6a1","ï¦æ­æ±ï¦çµç¤ï¦èèè¹è¼¿è½ï¦é¤ï¦ï¦ï¦äº¦ï¦åå½¹æï¦ï¦ç«ç¹¹è­¯ï¦éé©å¥å §å§¸å¨å®´ï¦å»¶ï¦ï¦ææ»ï¦æ¤½æ²æ²¿æ¶æ¶æ·µæ¼ï¦çç¶çï¦ççï¦ç¡ç¡¯ï¦ç­µç·£ï¦ç¸¯ï¦è¡è»ï¦ï¦ï¦éï¦é³¶ï¦ï¦ï¦ææ¶ï¦ç±ï¦ ï¦¡é±å­ï¦¢ï¦£ï¦¤æï¦¥çç°ç°è¶è"],["e7a1","ï¦¦é»é«¥é¹½æï¦§çèï¦¨ï¦©å¡ï¦ªï¦«å¶¸å½±ï¦¬æ ææ¥¹æ¦®æ°¸æ³³æ¸¶æ½æ¿çç¯ççç°ï¦­çï¦®ççç©çºï¦¯ï¦°è±è© è¿ï¦±éï¦²éï¦³ï¦´ä¹åªï¦µåå¡æ³æ±­æ¿çç¿ç©¢è®èèï¦¶è£è©£è­½è±«ï¦·é³ï¦¸éé äºä¼ä¿å²åå¾å³åå¡¢å¢ºå¥§å¨å¯¤æï¦¹æææ¿æ¤æ¢§æ±æ¾³"],["e8a1","çç¬çç­½èèª¤é°²é¼å±æ²ççéºæº«ç¥çç©©ç¸èåå£æç®çç°ç¿ééé¥æ¸¦ç¦çª©çªªè¥èè¸è¨å©å®å®æ¢¡æ¤æµ£ç©çç¬ç¢ç·©ç¿«èèèè±é®é æ°å¾æºææ±ªçå­å¨æ­ªç®å¤åµ¬å·ç¥çï¦ºï¦»å¥å¹å ¯å¤­å¦å§å¯¥ï¦¼ï¦½å¶¢ææææ¾ï¦¾æï¦¿æ©ï§ç¿ç¤ï§"],["e9a1","çªçª¯ç¹ç¹èè°ï§è¯è¦è¬ éï§éé¥æ¾æ¬²æµ´ç¸è¤¥è¾±ä¿å­åååå¢å®¹åº¸ææ¦æ¶æ¹§æº¶çç¢ç¨ç¬è³è¸èè¸ééï§äºä½å¶åªååå³å®å¯å°¤æææ´ççççç¥ç¦ç¦¹ç´ç¾½èèèè¿ééµéªéé¨é©åå½§æ­æ±æ ¯çç¨¶éé äºï§æ©æ®æ¾çèè¸è"],["eaa1","ééé²é»èé¬±äºçéååå¡ååå£åªå«å¯æ¨æ¿æ´æ²æ´¹æ¹²æºç°ç¿çèè¢è½é ï§é¢é¡é´æè¶éä½ååå±åå§å¨å°æ°ææ¸­ç²çç·¯èèè¦è¿èè¡è¤è¬ééé­ä¹³ä¾ååªï§å¯å©å­ºå®¥å¹¼å¹½åº¾æ æææææ¸æï§ææï§æ¥¡æ¥¢æ²¹æ´§ï§æ¸¸ï§"],["eba1","æ¿¡ç¶ç·ï§çç±ï§çï§ï§ç¶­è¾è¸è£èªè«è«­è¸°è¹éé¾éºééé®ï§ï§å ï§æ¯èè²ï§ï§åå¥«å°¹ï§ï§æ½¤ç§è¤è´ï§ééï§ï§ï§ï§è¿æççµ¨èï§å æ©ææ®·èª¾éé±ä¹åæ·«è­é°é³é£®ææ³£éåæèºé·¹ä¾ååå®ææ¿æ¬æ¤æ¯çç£ç¾©è¤èè»è¡£èª¼"],["eca1","è­°é«äºä»¥ä¼ï§ï§å¤·å§¨ï§å·²å¼å½æ¡ï§ ï§¡ï§¢ï§£ç¾ç¥ï§¤ç°çï§¥ç§»ï§¦èè³èè¡èï§§ï§¨è²½è²³éï§©ï§ªé£´é¤ï§«ï§¬ç·çç¿ç¿ç¿¼è¬äººä»åå°ï§­å½å å§»å¯å¼å¿æ¹®ï§®ï§¯çµªèµï§°èèªï§±é­é·ï§²ï§³ä¸ä½ä½¾å£¹æ¥æº¢é¸é°é¦¹ä»»å£¬å¦å§æï§´ï§µç¨ï§¶èè³å¥å"],["eda1","ï§·ï§¸ï§¹ä»å©å­è¿ä»åºå¨å§å§¿å­å­å­æ£ææ»çç®çç·çµç£ç´«èèªè¨èèè«®è³éä½åºå¼æ«æ¨ç¼ç¸çµç¶½èéééµ²å­±æ£§æ®æ½ºçå²æ«æ½ç®´ç°ªè ¶éä¸ä»å å ´å¢»å£¯å¥¬å°å¸³åºå¼µææ²ææ¨æª£æ¬æ¼¿çï§ºççç« ç²§è¸èè§èè¬è£èèè£è´é¬é·"],["eea1","éååå¨å®°æææ ½æ¢æ¸½æ»ç½ç¸¡è£è²¡è¼é½é½ç­ç®è«éä½ä½å²åå§åºæµæµæ¥®æ¨æ²®æ¸ççªç½ç®¸ç´µè§è¹èè·è©è²¯èºéé¸éé½å£åå«¡å¯ææµæ»´çï§»çç©ç¬ç±ç¸¾ç¿è»è¬«è³èµ¤è·¡è¹è¿ªè¿¹é©éä½ä½ºå³å¨å¸ååªå¡¡å¡¼å¥ å°å±å»ææ°æ æ®¿æ°æ¾±"],["efa1","çç ç°ç¸çç²ç­ç®ç®­ç¯çºè©®è¼¾è½é¿éé¢é«é»é¡é¡«é¤åæªææµç¤ç«ç¯çµ¶å å²¾åºæ¼¸ç¹ç²éé®é»æ¥æºè¶ä¸äºäº­ååµåå§å®å¹åº­å»·å¾ææºæ¿æ´ææ¶æ¸æ¾æ¥¨æªæ­£æ±æ·æ·¨æ¸æ¹çç¡çç½çºçç¢ç¦ç¨ç©½ç²¾ç¶èè¨è«ªè²é­ééé¦éé éé"],["f0a1","éé é¼å¶åå¼å ¤å¸å¼æææ¢¯æ¿ç¥­ç¬¬èèºè£½è«¸è¹éé¤éé½é¡é½ä¿ååå©å²å¼å½«æªææ©ææºæ¹ææ¢æ£æ§½æ¼æ½®ç§ç¥çªçªçºç¥ç¥ç§ç¨ çªç²ç³çµç¹°èè»è¤è©èª¿è¶èºé é­é£é»éé³¥æç°è¶³éå­å°åæçå§å®å¾æ°æ«æ£æ·ç®ç¨®çµç¶ç¸±è«"],["f1a1","è¸ªè¸µé¾éä½åå·¦åº§æ«ç½ªä¸»ä½ä¾åå§èåªå¨å¾å¥å®å·å»ææ±æ±æ ªæ³¨æ´²æ¹æ¾ç·ç çç±ç´ç´¬ç¶¢èèè¨»èªèµ°èºè¼³é±éééé§ç«¹ç²¥ä¿åååå¯¯å³»ææ¨½æµæºæ¿¬çç¯ç«£è ¢é¡éµéé§¿èä¸­ä»²è¡éå½æ«æ¥«æ±èºå¢ææ¾æ¯çççç¹è¸è­è´ä¹åª"],["f2a1","å«å°åå¿æææ¯æ¯æ¨æºææ³æ­¢æ± æ²æ¼¬ç¥ç ¥ç¥ç¥ç´è¢èè³èè·èèªï§¼è´è¶¾é²ç´ç¨ç¨·ç¹è·ååå¡µæ¯æ¢æææ¡­æ¦æ®æ´¥æº±çç¨ç¡çç¹ç¡ççç§¦ç¸ç¸è»è¯è¢è¨ºè³è»«è¾°é²é­é£é³éä¾å±å§ªå«å¸æ¡çç¾ç§©çªè£è­è³ªè·è¿­ææï§½å·æ½ç·è¼¯"],["f3a1","é¶éå¾µæ²æ¾ä¸ä¾ååååµ¯å·®æ¬¡æ­¤ç£ç®ï§¾è¹è»é®ææ¾ççªé¯é¿é½ªæ°æ¾¯ç¦ç¨çç«ç°çºç²²çºè®è´é½é¤é¥å¹å¯æ¦æ­ç´®å­åå¡¹æææºæ¬ç«è®è®åå¡åµå±å¨¼å» å½°æ´æææ¶æ¢æ§æ»æ¼²çç¡çªè¹èèè¼åµå°å¯å¯¨å½©æ¡ç ¦ç¶µèè¡ééµåæµç­"],["f4a1","è²¬åå¦»æ½èåï§¿åå°ºæ½æææ²æ¥æ»ç èè¹ éé»ä»ååå¤©å·ææ³æ·ºçç©¿èè¦è³¤è¸é·é§é¡é¡éå¸å²åå¾¹æ¤æ¾ç¶´è¼è½éµåå°æ²¾æ·»çç»ç°½ç±¤è©¹è«å å¦¾å¸æ·ççç«è«è²¼è¼å»³æ´æ·¸è½èè«éé¯ï¨åæ¿æ¶æ»¯ç· è«¦é®éé«åå¿å¨ææææ¢¢"],["f5a1","æ¤æ¥æ¨µçç¦ç¡ç¤ç¤ç§ç¨èè¸èèèè²è¶é¢éé®ä¿åç­çèè§¸å¯¸å¿æé¨å¢å¡å¯µæ¤ææ ç¸½è°è¥éæ®å¬å´æå¢æ½æ¨æ¤æ¥¸æ¨æ¹«çºç§è»è©è«è¶¨è¿½éééééééé¨¶é°ä¸çç¥ç«ºç­ç¯ç¸®èè¹è¹´è»¸éæ¥æ¤¿çåºæ®é»åå¿ æ²è²è¡è¡·æ´èµè"],["f6a1","è´åå¹å´å¨¶å°±çç¿ èèè­è¶£éé©é·²å´ä»å æ»æ¸¬å±¤ä¾å¤å¤å³å¹æ¥æ¢æ²»æ·ç¾çç´ç¡ç¨ç©ç·ç·»ç½®è´è©è¼éé¦³é½ååé£­è¦ªä¸ææ¼ä¾µå¯¢ææ²æµ¸çç §éé¼èç§¤ç¨±å¿«ä»å¤å¾å¢®å¦¥æ°æææ¶æ¥èµéé¦±é§å¬ååå¼ï¨æï¨æ¢æ«ææ¿æ¿¯ç¢ç¸è¨"],["f7a1","é¸ååå¦å½ææ­çç­ç¶»èªå¥ªè«æ¢çè½è²ªå¡æ­æ¦»å®å¸æ¹¯ï¨è©åå°å¤ªæ ææ®æ±°æ³°ç¬èèè·é°é¢±ï¨ææ¾¤ææåååè¨ææ¡¶ï¨çç­çµ±éå æ§è¿è¤ªéé ¹å¸å¥å¦¬æéé¬ªæç¹éå¡å©å·´ææ­æºæ·æ³¢æ´¾ç¬ç¶ç ´ç½·è­è·é å¤åæ¿çç£è²©è¾¦é"],["f8a1","éªå«å­æä½©åæææ²æµ¿çç½ç¨è¦è²å½­æ¾ç¹è¨æä¾¿åæçç¯ç·¨ç¿©éé­é¨è²¶åªå¹³æ°èè©å å¬å¹£å»¢å¼æèºè½ééä½åååååºåå¸æææ±æï¨æ³¡æµ¦ç±ç ²èè¯èè¡è²è¢è¤ééªé£½é®å¹æ´æççï¨ä¿µå½å½ªæææ¨æ¼ç¢ç¥¨è¡¨è±¹é£é£é©"],["f9a1","åç¨æ¥è«·è±é¢¨é¦®å½¼æ«ç²ç®è¢«é¿éå¹å¼¼å¿æ³çç¢çç­è¾é¦ä¹é¼ä¸ä½å¦å¤å»æ°æ²³çè·è¦è³ééé°å£å­¸èè¬é¶´å¯æ¨ææ±æ±æ¼¢æ¾£çç½ç¿°ééééå²è½å½å«å¸å£åæª»æ¶µç·è¦éé·é¹¹ååçè¤é¤ééäº¢ä¼å§®å«¦å··æææ­æ¡æ²æ¸¯ç¼¸èèª"],["faa1","ï¨ï¨é äº¥åå³åå¥å­©å®³ææ¥·æµ·ç£è¹è§£è©²è«§éé§­éª¸å¾æ ¸åå¹¸æèè¡äº«åå®ç¦éé¿é¤é¥é¦åå¢èè¨±æ²æ«¶ç»è»æ­éªé©å¥çèµ«é©ä¿å³´å¼¦æ¸ææ³«ç«çç¹ç¾ç©ççµçµ¢ç¸£è·è¡ï¨è³¢éé¡¯å­ç©´è¡é å«ä¿ åå¤¾å³½æ¾æµ¹ç¹èèè¢éé °äº¨ååå"],["fba1","å½¢æ³æ»ççç¯çç©ç©èè¢è¡¡éé¢é£é¦¨å®å½æ æ§æ³èè¹é¯éä¹äºå¼å£å£ºå¥½å²µå¼§æ¶æææ§æ¯«æµ©æ·æ¹æ»¸æ¾æ¿ æ¿©ççç¥çç çç¥ç³ç¸è¡è¦è«è¿èèè´è­·è±ªé¬é é¡¥ææé·å©ææ··æ¸¾ç¿é­å¿½æç¬åå¼æ±æ³æ´ªçç´è¹è¨é´»ååå¬æ¨ºç«çµ"],["fca1","ç¦ç¦¾è±è¯è©±è­è²¨é´ï¨æ´æ«ç¢ºç¢»ç©«ä¸¸åå¥å®¦å¹»æ£ææ­¡æ¥æ¡æ¸ç¥ç°ç´éé©©é°¥æ´»æ»ç¾è±éå°å¹å¾¨ææ¶æ°ææææ¦¥æ³æ¹æ»æ½¢çççç¯ç°§èèééé»å¯åå»»å¾æ¢ææ·æ¦ææªæ·®æ¾®ç°çªç¹ªè¾è´èèª¨è³åç²å®æ©«éå®åå­ææææ¢æ¶æ·"],["fda1","ç»è´éµé©ä¾¯åååå¼ååå¸¿å¾æ½ç¦çéåå³å¡¤å£ççç»è°è¨æè¨å§æçè±ååæ¯å½å¾½æ®æçè«±è¼éº¾ä¼æºçç¦è§æ¤è­é·¸åå¶åæ´¶è¸é»ææ¬£ççåå±¹ç´è¨æ¬ æ¬½æ­å¸æ°æ´½ç¿èåååå«åå§¬å¬å¸æææ±ææ¦çç¹çºç§ç¦§ç¨ç¾²è©°"]]');
            }
          ),
          /***/
          74284: (
            /***/
            function(c) {
              c.exports = JSON.parse('[["0","\\u0000",127],["a140","ãï¼ããï¼â§ï¼ï¼ï¼ï¼ï¸°â¦â¥ï¹ï¹ï¹Â·ï¹ï¹ï¹ï¹ï½âï¸±âï¸³â´ï¸´ï¹ï¼ï¼ï¸µï¸¶ï½ï½ï¸·ï¸¸ããï¸¹ï¸ºããï¸»ï¸¼ããï¸½ï¸¾ããï¸¿ï¹ããï¹ï¹ããï¹ï¹ï¹ï¹"],["a1a1","ï¹ï¹ï¹ï¹ââââããâµâ²ï¼ï¼ï¼â»Â§ãâââ³â²ââââââ¡â â½â¼ã£âÂ¯ï¿£ï¼¿Ëï¹ï¹ï¹ï¹ï¹ï¹ï¹ï¹ ï¹¡ï¼ï¼ÃÃ·Â±âï¼ï¼ï¼â¦â§â âââ¡ï¹¢",4,"ï½â©âªâ¥â ââ¿ããâ«â®âµâ´âââââââââââââ¥â£ï¼"],["a240","ï¼¼âï¹¨ï¼ï¿¥ãï¿ ï¿¡ï¼ï¼ ââï¹©ï¹ªï¹«ãããããã¡ãããÂ°ååååå¡å£å§ç©ç³â",7,"ââââââââ¼â´â¬â¤ââââââââââ­"],["a2a1","â®â°â¯âââªâ¡â¢â£â¥â¤â±â²â³ï¼",9,"â ",9,"ã¡",8,"åååï¼¡",25,"ï½",21],["a340","ï½ï½ï½ï½Î",16,"Î£",6,"Î±",16,"Ï",6,"ã",10],["a3a1","ã",25,"ËËËËË"],["a3e1","â¬"],["a440","ä¸ä¹ä¸ä¸ä¹ä¹äºäºäººå¿å¥å«å åååååååä¸ä¸ä¸ä¸ä¸«ä¸¸å¡ä¹ä¹ä¹ä¹äºäº¡åååºååå£åå£«å¤å¤§å¥³å­å­å­å¯¸å°å°¢å°¸å±±å·å·¥å·±å·²å·³å·¾å¹²å»¾å¼å¼æ"],["a4a1","ä¸ä¸ä¸ä¸­ä¸°ä¸¹ä¹å°¹äºäºäºäºäºäº¢ä»ä»ä»ä»ä»ä»ä»ä»ä»ååå§å­å®å¬åå¶åååå»å¾å¿åå¹ååååååååå£¬å¤©å¤«å¤ªå¤­å­å°å°¤å°ºå±¯å·´å¹»å»¿å¼å¼å¿ææ¶æææ¯æææ¤æ¹æ¥æ°ææ¨æ¬ æ­¢æ­¹æ¯æ¯æ¯æ°æ°´ç«çªç¶ç»çççç¬çä¸"],["a540","ä¸ä¸ä¸ä¸ä¸»ä¹ä¹ä¹ä»¥ä»ä»ä»ä»ä»ä»£ä»¤ä»ä»ååååå¬å¹åºå¸åå åååååä»ååå¡å å¯å®å»å¯å¤å³å¬å®å©å¨å¼å¸åµå«å¦åªå²å±å°å¥å­å»ååå¤"],["a5a1","å¤®å¤±å¥´å¥¶å­å®å°¼å·¨å·§å·¦å¸å¸å¹³å¹¼å¼å¼å¼å¿ææææææ¥æ¦æ®æ¬æªæ«æ­æ­£æ¯æ°æ°æ°¸æ±æ±æ°¾ç¯çççç¦ççç¨ç©ç°ç±ç²ç³çç½ç®ç¿ç®çç¢ç³ç¤ºç¦¾ç©´ç«ä¸ä¸ä¹ä¹ä¹©äºäº¤äº¦äº¥ä»¿ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä»²ä»¶ä»»ä»°ä»³ä»½ä¼ä¼ååååå¨"],["a640","å±åå°åååååå£åå¡å å°å±åååååååååååååååå ååå³å°å¨å­å¬å¯å©å¤å¤å¤·å¤¸å¦å¥¸å¦å¥½å¥¹å¦å¦å­å­å®å®å®å®å¯ºå°å±¹å·å¸å¹¶å¹´"],["a6a1","å¼å¼å¿å¿æææææ£æææ¶æ©æ¨æ¬æ­æ²æ³ææ½æ´æ±æµæ¬¡æ­¤æ­»æ°æ±æ±æ±æ±æ± æ±æ±æ±¡æ±æ±æ±ç°ççç¾ç«¹ç±³ç³¸ç¼¶ç¾ç¾½èèèèè³è¿èèèè£èªè³è¼èèèè®è²è¾è«è¡è¡è¡£è¥¿é¡ä¸²äº¨ä½ä½ä½ä½ä½ä¼´ä½ä½ä¼°ä½ä½ä¼½ä¼ºä¼¸ä½ä½ä¼¼ä½ä½£"],["a740","ä½ä½ ä¼¯ä½ä¼¶ä½ä½ä½ä½ååååµå¶å·å¥å¤å©åªå¨å«å©åªå¬å£å³åµåå­åå¾å¦åå§ååå³åååå©åå¹å»å¸å®åµå¶å å¼åå±å«åå¬åªå°å¤å«åååå"],["a7a1","ååå¾ååå»å£¯å¤¾å¦å¦å¦¨å¦å¦£å¦å¦å¦å¦¤å¦å¦å¦¥å­å­å­å­å®å®å®å°¬å±å±å°¿å°¾å²å²å²å²å·«å¸åºåºåºå»·å¼å¼å½¤å½¢å½·å½¹å¿å¿å¿å¿å¿±å¿«å¿¸å¿ªæææææææ¶ææ­ææ¼æ¾æ¹æ³ææ¯ææ®æææææ¹æ»æ¸æ±æ´æææææææææææ "],["a840","æææ­¥æ¯æ±æ±æ²æ²æ²æ²æ²æ²æ±ªæ±ºæ²æ±°æ²æ±¨æ²æ²æ±½æ²æ±²æ±¾æ±´æ²æ±¶æ²æ²æ²æ²ç¶ç¼ç½ç¸ç¢ç¡ç çççç¬ç«ç·ç¸çç¯ç£ç§ç§ç¦¿ç©¶ç³»ç½èèèèèèè²è¯è"],["a8a1","èèè¦è§è¨è°·è±è±è²èµ¤èµ°è¶³èº«è»è¾è¾°è¿è¿è¿è¿å·¡éé¢éªé¦é£éééé²é®é±éªé¬ä¸¦ä¹ä¹³äºäºäºäº«äº¬ä½¯ä¾ä¾ä½³ä½¿ä½¬ä¾ä¾ä¾ä¾ä½°ä½µä¾ä½©ä½»ä¾ä½¾ä¾ä¾ä½ºåååå©å·å¶å¸å½å½å»å¸å·åºå°å®å¶åå¾å»ååååå¦å·å¸å¹åååå³åµ"],["a940","åå¸ååå»å·åååå¼åå±å¶ååå¢å¨åå½ååºåå·åªå©å¡å¦å¤å¼å¤å¥å¥å¥å¥å¥å¦¾å¦»å§å¦¹å¦®å§å§å§å§å§å§å§å¦¯å¦³å§å§å­å­¤å­£å®å®å®å®å®å®å°å±å±"],["a9a1","å±å²·å²¡å²¸å²©å²«å²±å²³å¸å¸å¸å¸å¸å¸å¹¸åºåºåºåºåºå»¶å¼¦å¼§å¼©å¾å¾å½¿å½¼å¿å¿ å¿½å¿µå¿¿æææ¯æµææªææ¡æ§æ©æ«ææææ¿æ¾ææ¿ææææ¿ææ¹æææ«æææææ¨æ½æ¼æææææµææ±æææææ¬ææ¾æ§æ¼æºææææææææææ"],["aa40","ææææ­æææ±ææ³æ·ææææ¯æ°æ¿ææ¾ææµæææ¼æªæ²æ¬£æ­¦æ­§æ­¿æ°æ°æ³£æ³¨æ³³æ²±æ³æ³¥æ²³æ²½æ²¾æ²¼æ³¢æ²«æ³æ³æ²¸æ³æ²¹æ³æ²®æ³æ³æ³±æ²¿æ²»æ³¡æ³æ³æ²¬æ³¯æ³æ³æ³ "],["aaa1","çççççç¬ç­ç¸çç§ç©çççççç©ç¨çç«ç¥ç½çççççç²ç´ç¥ç½ç¤¾ç¥ç¥ç§ç§ç©ºç©¹ç«ºç³¾ç½ç¾ç¾èèºè¥è¢è±è¡è«è©è´èªè¯è¥è¾èè³èèè­è½èè¹è±è¬è¥è¯è¸è£è°è¾è·èè±åè¡¨è»è¿è¿è¿éµé¸é±é¶ééé·éééé¿é»é"],["ab40","éé¹é¨ééäºäº­äº®ä¿¡ä¾µä¾¯ä¾¿ä¿ ä¿ä¿ä¿ä¿ä¾¶ä¿ä¿ä¿ä¿ä¾®ä¿ä¿ä¿ä¿ä¿ä¿ä¾·åååå åååååååååååååå»ååå¬åå¨ååå¸å¦å³ååå½åªå"],["aba1","ååå¯å«å±å»å©å§å¿å¿ååå å£å¢åå®åå¥å¥å¥å¥å¥å§å§å§¿å§£å§¨å¨å§¥å§ªå§å§¦å¨å§»å­©å®£å®¦å®¤å®¢å®¥å°å±å±å±å±å³å³å··å¸å¸¥å¸å¹½åº åº¦å»ºå¼å¼­å½¥å¾å¾å¾å¾å¾å¾å¾æææ æ¥ææ¨ææ°æ¨æ¢æææ¬æ«æªæ¤æææææ¼æ­ææ®æ½ææ±æ·"],["ac40","æ¯æ¬æ¾æ´æææ¿ææ«æ½æ¢æ¥æ­æ æ§æ¯ææ¨æ±æ¤æ·æ¿ææ±æææ¬æ¶æ¯æµæ©æ¯æææ´ææ¥æ¸æææ³æ°ææ¢æææ­ªæ®æ®æ®µæ¯æ¯æ°æ³æ´æ´²æ´ªæµæ´¥æ´æ´±æ´æ´"],["aca1","æ´»æ´½æ´¾æ´¶æ´æ³µæ´¹æ´§æ´¸æ´©æ´®æ´µæ´æ´«ç«çºç³ç¬ç¯ç­ç¸ç®ç¤ç°ç²ç¯ç´ç©ç ç¡ç·çç»ç²ççç³çç­ççççç«ç¤ç¥ç¢ç£ç¸ççççççççç¹ç¸ççç¾ç¼ççç ç ç ç ç¥ç¥ç¥ç¥ç¦¹ç¦ºç§ç§ç§ç©¿çªç«¿ç«½ç±½ç´ç´ç´ç´ç´ç´ç´ç¼¸ç¾ç¾¿è"],["ad40","èèèè¶èè¥èèèèè¡èèèè¤èè´è¢è§èèè£èè¦èè¥èèèèè±èèèèèèèè¯èèè¹è»èºè¡è¡«è¦è§è¨è¨è¨è²è² èµ´èµ³è¶´è»è»è¿°è¿¦è¿¢è¿ªè¿¥"],["ada1","è¿­è¿«è¿¤è¿¨ééééééééééééé¢é©éé­é³é é¢¨é£é£é¦é¦ä¹äº³ååå£ä¿¯å¦å¥ä¿¸å©ååå¼ååååä¿ºååå¨ä¿±å¡åååä¿³ä¿®å­åªä¿¾å«åå¼å¤å¥å¢ååååååååååªå¿åååå¨ååå·å¼å¥å²ååºåå©å­å¡åå®åª"],["ae40","å¦å§åå½åååååååå å¤å¥å¥å¥å¨å¨å¨å¨å¨å¨å§¬å¨ å¨£å¨©å¨¥å¨å¨å­«å±å®°å®³å®¶å®´å®®å®µå®¹å®¸å°å±å±å±å³­å³½å³»å³ªå³¨å³°å³¶å´å³´å·®å¸­å¸«åº«åº­åº§å¼±å¾å¾å¾æ"],["aea1","æ£æ¥æææ­æ©æ¯ææææææææææ³ææ¿ææ¾æ¯ææææææºææ½æªæ«æ¨ææææææææææææææææ¸ææææ ¡æ ¸æ¡æ¡æ¡æ ¹æ¡æ¡æ ©æ¢³æ æ¡æ¡æ ½æ´æ¡æ¡æ ¼æ¡æ ªæ¡æ æ æ¡æ®æ®æ®·æ°£æ°§æ°¨æ°¦æ°¤æ³°æµªæ¶æ¶æ¶æµ¦æµ¸æµ·æµæ¶"],["af40","æµ¬æ¶æµ®æµæµ´æµ©æ¶æ¶æµ¹æ¶æµ¥æ¶ççç¤çççç¹ç¹ç¼ç¹ç½ç¸ç·çç­çç®ç çªççççççç¾ççç²ç³ç½ç¼ç¹çç¸çç°çççç©çç ç¨ç©ç °ç §ç ¸ç ç ´ç ·"],["afa1","ç ¥ç ­ç  ç ç ²ç¥ç¥ç¥ ç¥ç¥ç¥ç¥ç¥ç¥ç§¤ç§£ç§§ç§ç§¦ç§©ç§çªçªç«ç¬ç¬ç²ç´¡ç´ç´ç´ç´ ç´¢ç´ç´ç´ç´ç´ç´ç´ç´ç¼ºç½ç¾ç¿ç¿èèèèèè½è¿è±èè°èè­è´èè¸è³èè½èè¼è¯è­è¬èèèªè«è¨è¬è»è«èèèè¸èèèµè´èè²è¹è¶èèè±è¨è"],["b040","èèèªèè¤è©èè£èè¡°è¡·è¢è¢è¡½è¡¹è¨è¨è¨è¨è¨è¨è¨è¨è¨è¨è¨è±è±ºè±¹è²¡è²¢èµ·èº¬è»è»è»è¾±ééè¿·éè¿ºè¿´éè¿½éè¿¸éé¡éé¢éééééééééé¢é£é¡"],["b0a1","ééé¤ééé»é£¢é¦¬éª¨é«é¬¥é¬²é¬¼ä¹¾åºå½ååååååå¥å¶åååµå´å·ååå¯å­ååå°åªå¯åååååååå¿åå¾åæ¼ååªå¦ååå¡ååå±åååå¯å¤å¸å®åå¬å£å³ååååååå å å å å¤åºå å µå·å¹å¤ å¥¢å¨¶å©å©å©¦å©ªå©"],["b140","å¨¼å©¢å©å©å©å­°å¯å¯å¯å¯å®¿å¯å°å°å°å± å±å±å´å´å´å´å´å´¢å´å´©å´å´å´¤å´§å´å·¢å¸¸å¸¶å¸³å¸·åº·åº¸åº¶åºµåº¾å¼µå¼·å½å½¬å½©å½«å¾å¾å¾å¾å¾¡å¾ å¾æ¿æ£ææ æ¨ææ´æ¦æ½"],["b1a1","ææ»æµææ¼æææææ¸ææææææ æ§æ²ææ¢æ¥æ·æ§ææªæ±æ©ææææ«æ¨ææææ¡æ¬ææææ»æ©æ¨æºæææææåæææææææ¬æææææææ¤æ¨æ¦ææ¹åææ¢æ¢¯æ¢¢æ¢æ¢µæ¡¿æ¡¶æ¢±æ¢§æ¢æ¢°æ¢æ£æ¢­æ¢æ¢æ¢æ¢æ¢¨æ¢æ¢¡æ¢æ¬²æ®º"],["b240","æ¯«æ¯¬æ°«æ¶æ¶¼æ·³æ·æ¶²æ·¡æ·æ·¤æ·»æ·ºæ¸æ·æ·æ¶¯æ·æ¶®æ·æ·¹æ¶¸æ··æ·µæ·æ·æ¸æ¶µæ·æ·«æ·æ·ªæ·±æ·®æ·¨æ·æ·æ¶ªæ·¬æ¶¿æ·¦ç¹ççç½ç¯ç½ç½çççççççççççç¾çç ç¶"],["b2a1","ç·çç¢ç¥ç¦ç¢ç°ççççµççççççç·ç¾ç¼ç¶ç¸çºç¡«ç¡ç¡ç¥¥ç¥¨ç¥­ç§»çªçªç¬ ç¬¨ç¬ç¬¬ç¬¦ç¬ç¬ç¬®ç²ç²ç²çµçµçµ±ç´®ç´¹ç´¼çµç´°ç´³çµç´¯çµç´²ç´±ç¼½ç¾ç¾ç¿ç¿ç¿èèèè¯èè£è«è©è°è¤èèµè·è¶è¹èèèè¸è¢èè½è«èèèèè è·è»è¼"],["b340","èè§èå½ªèèè¶èèµèèè±è¯èè¡è¢è¢è¢«è¢è¢è¢è¢è¦è¦è¨ªè¨è¨£è¨¥è¨±è¨­è¨è¨è¨¢è±è±è²©è²¬è²«è²¨è²ªè²§èµ§èµ¦è¶¾è¶ºè»è»ééééé£éééééé éé¢ééé"],["b3a1","é¨é­é½éééµé¦é£é§é­é©ééªéµé³é¸é°é´é¶é·é¬ééªé©ç« ç«é é é­é³¥é¹µé¹¿éº¥éº»å¢ååååååååæå±å²å´åµå©ååååå¥å»åå§å¼ååååååªååååå³å®åå¾å²åå»å¬å±å¾åå«ååå ¯å ªå ´å ¤å °å ±å ¡å å  å£¹å£ºå¥ "],["b440","å©·åªå©¿åªåªåª§å­³å­±å¯å¯å¯å¯å°å°å°±åµåµå´´åµå·½å¹å¸½å¹å¹å¹¾å»å»å»å»å¼¼å½­å¾©å¾ªå¾¨ææ¡æ²æ¶æ ææ£æºææ°æ»æ´æ¨æ±ææ¶ææææææ£ææææ©æææ"],["b4a1","ææ£ææ¡ææ­æ®æ¶æ´æªææææ¹ææ¦æ¢æ£æææ¯æ®æ°æ´æ¶æ¯ææºæ¾æ·æ¾æ¿æææ£ºæ£æ£ æ£æ£æ¤æ£æ£µæ£®æ£§æ£¹æ£æ£²æ££æ£æ£æ¤æ¤æ¤æ£æ£æ¥®æ£»æ¬¾æ¬ºæ¬½æ®æ®æ®¼æ¯¯æ°®æ°¯æ°¬æ¸¯æ¸¸æ¹æ¸¡æ¸²æ¹§æ¹æ¸ æ¸¥æ¸£æ¸æ¹æ¹æ¸¤æ¹æ¹®æ¸­æ¸¦æ¹¯æ¸´æ¹æ¸ºæ¸¬æ¹æ¸æ¸¾æ»"],["b540","æºæ¸æ¹æ¹£æ¹æ¹²æ¹©æ¹ççç¦ç°ç¡ç¶ç®ççççç¶ç¥ç´ç©çºçªç³ç¢ç¥çµç¶ç´ç¯çç¦ç¨ç¥ç¦ç«çªç¢çç£çççç ç»ç¼ççç´ççç­ç¡ç¡¬ç¡¯ç¨ç¨ç¨ç¨ç¨çª"],["b5a1","çªçªç«¥ç«£ç­ç­ç­ç­ç­ç­ç­ç­ç­ç­ç²ç²¥çµçµçµ¨çµç´«çµ®çµ²çµ¡çµ¦çµ¢çµ°çµ³åç¿ç¿èèèèèèèèè¹èè¾èèè´èèè©èè¸èè èèèè¯è±è´èèè°èèè½è²èè¸èèèèèèèèèè­èèè¤èèè¡è£è£è¢±è¦è¦è¨»è© è©è©è¨¼è©"],["b640","è©è©è©è©è¨´è¨ºè¨¶è©è±¡è²è²¯è²¼è²³è²½è³è²»è³è²´è²·è²¶è²¿è²¸è¶è¶è¶è·è·è·è·è·è·è·è·è»»è»¸è»¼è¾é®éµé±é¸é²é¶ééµéé¾é£é¥éééé£éééééééééé"],["b6a1","ééééééé½éééé²ééééééé¯é²éé é é é£§é£ªé£¯é£©é£²é£­é¦®é¦­é»é»é»äºå­åµå²å³åå¾å¬å·å»å¯åå¿å·å½åå¦å¤å¢å£å¯åå¨åå¦ååååå£å¤å¯åå¡ååå¥åååå¡å¡å¡å¡å¡å¡å¡«å¡å¡­å¡å¡¢å¡å¡å¥§å«å«å«åª¾åª½åª¼"],["b740","åª³å«åª²åµ©åµ¯å¹å¹¹å»å»å¼å½å¾¬å¾®æææææ³ææ¹æææææææ¾æ´æ§æææ·æ¡æ¢ææ¾ææªæ­æ½æ¬æææææ¶ææææ¬ææ°ææææææææææ¦æ¥­"],["b7a1","æ¥æ¥·æ¥ æ¥æ¥µæ¤°æ¦æ¥æ¥¨æ¥«æ¥æ¥æ¥¹æ¦æ¥æ¥£æ¥æ­æ­²æ¯æ®¿æ¯æ¯½æº¢æº¯æ»æº¶æ»æºæºæ»æ»æº¥æºæº¼æººæº«æ»æºæºæ»æ»æºªæº§æº´ççç©ç¤çç§çç¬ç¦çç¥ççç¨ççºçç·çç¿ç¾ç¯çççççç¿çççç¶ç¸çç°çç²ç±çºç¿ç´ç³çççç«ç¦çç£"],["b840","ç¹çªç¬çç¥ç¨ç¢ç®ç¢ç¢°ç¢ç¢ç¢ç¢ç¡¼ç¢ç¢ç¡¿ç¥ºç¥¿ç¦è¬ç¦½ç¨ç¨ç¨ ç¨ç¨ç¨çªçª ç­·ç¯ç­ ç­®ç­§ç²±ç²³ç²µç¶çµ¹ç¶ç¶ç¶çµç½®ç½©ç½ªç½²ç¾©ç¾¨ç¾¤èèèèè±è°è¸è¥è®è³è«"],["b8a1","è¹èºè¦èèèè·è½è±èµè¦è«èè¬èè¼èµè¡è£è©è­èèèèè¹èèèèè¾è»èèèèè¡è£è£è£è£è£è£è£¡è£è£è£è¦è§£è©«è©²è©³è©¦è©©è©°èªè©¼è©£èª è©±èªè©­è©¢è©®è©¬è©¹è©»è¨¾è©¨è±¢è²è²è³è³è³è³è²²è³è³è³è·¡è·è·¨è·¯è·³è·ºè·ªè·¤è·¦èº²è¼è¼è»¾è¼"],["b940","è¾è¾²éééééé¼éééééééé¾éééé¬éªé©éé·éé¸é½éé¾ééé¤éé´éééé¹é¿éééééééééé·é»é¹é¶éé´é¶é é é é é é é£¼é£´"],["b9a1","é£½é£¾é¦³é¦±é¦´é«¡é³©éºé¼é¼é¼ å§å®å¥åå­ååååå±åå©å¢å³ååå±å­å¾åååå½åååååå·ååååå¶ååå¡µå¡¾å¢å¢å¢å¡¹å¢å¡½å£½å¤¥å¤¢å¤¤å¥ªå¥©å«¡å«¦å«©å«å«å«å«£å­µå¯å¯§å¯¡å¯¥å¯¦å¯¨å¯¢å¯¤å¯å°å±¢å¶å¶å¹å¹£å¹å¹å¹å»å»å¼å½å½°å¾¹æ"],["ba40","æ¿ææ·æ¢æ£ææææµæªææææ¤æ¸ææºææ§æ´æ­æ»æ²æ¡æææ¢æ¨ææ¦æ¦¨æ¦æ§æ¦®æ§æ§æ¦æ¦·æ¦»æ¦«æ¦´æ§æ§æ¦­æ§æ¦¦æ§æ¦£æ­æ­æ°³æ¼³æ¼æ»¾æ¼æ»´æ¼©æ¼¾æ¼ æ¼¬æ¼æ¼æ¼¢"],["baa1","æ»¿æ»¯æ¼æ¼±æ¼¸æ¼²æ¼£æ¼æ¼«æ¼¯æ¾æ¼ªæ»¬æ¼æ»²æ»æ»·ççç½çççç¾ççççç¤ç£çªç°ç­ççç§ççççç¡ç£çç½ç¿ç¡ç£ç¢ç¢§ç¢³ç¢©ç¢£ç¦ç¦ç¦ç¨®ç¨±çªªçª©ç«­ç«¯ç®¡ç®ç®ç­µç®ç®ç®ç®ç®¸ç®ç®ç²¹ç²½ç²¾ç¶»ç¶°ç¶ç¶½ç¶¾ç¶ ç·ç¶´ç¶²ç¶±ç¶ºç¶¢ç¶¿ç¶µç¶¸ç¶­ç·ç·ç¶¬"],["bb40","ç½°ç¿ ç¿¡ç¿èèèèèèèèè¿èè§èºèèèèèè¿èèèèè²èèè¸èèèè¼èèè¿èè»è¢è¥è´èèè·è©è£³è¤è£´è£¹è£¸è£½è£¨è¤è£¯èª¦èªèªèª£èªèª¡èªèª¤"],["bba1","èªªèª¥èª¨èªèªèªèª§è±ªè²è²è³è³è³èµ«è¶è¶è·¼è¼è¼è¼è¼è¾£é ééé£ééé¢ééééééµé¸é·é´é¸ééééé»ééé¨é¼éé¡é¨é©é£é¥é¤ééééééé¼éé¶é é é¢¯é¢±é¤é¤é¤é¤é§éª¯éª°é«¦é­é­é³´é³¶é³³éº¼é¼»é½ååå»åµå¹ååååå"],["bc40","åååååå°å²å®å»å¹å²å¿å´å©åååå´å¶å¯å°å¢å¢å¢å¢³å¢å¢®å¢©å¢¦å¥­å¬å«»å¬å«µå¬å¬å¯®å¯¬å¯©å¯«å±¤å±¥å¶å¶å¹¢å¹å¹¡å»¢å»å»å»å»£å» å½å½±å¾·å¾µæ¶æ§æ®æææ"],["bca1","æ¼æ°æ«æ¾æ§ææ«ææ¬ææ¤ææ®æ®æ©æ¯æ¹ææ²æææ°æ¥æææ©ææ®æ­æ«ææ¬ææ¢æ³æµæ·æ¸æ®æ«æ´æ±æ¨£æ¨æ§¨æ¨æ¨æ¨æ§½æ¨¡æ¨æ¨æ§³æ¨æ¨æ§­æ¨æ­æ­æ®¤æ¯æ¯æ¼¿æ½¼æ¾æ½æ½¦æ½æ¾æ½­æ½æ½¸æ½®æ¾æ½ºæ½°æ½¤æ¾æ½æ»æ½¯æ½ æ½çç¬ç±ç¨ççççç©çç"],["bd40","ç¾çç¿ç ç©çç¤ç¦ç¡ç¢ççºç¤çççççç£ç£ç¢ºç£ç¢¾ç£ç¢¼ç£ç¨¿ç¨¼ç©ç¨½ç¨·ç¨»çª¯çª®ç®­ç®±ç¯ç®´ç¯ç¯ç¯ç® ç¯ç³ç· ç·´ç·¯ç·»ç·ç·¬ç·ç·¨ç·£ç·ç·ç·©ç¶ç·ç·²ç·¹ç½µç½·ç¾¯"],["bda1","ç¿©è¦èèèè èèèè½èè®è¬è­èèè£è¡èè¬è¥è¿èèè´è¶è è¦è¸è¨èèèèè¡è¡è¤è¤è¤è¤è¤è¤èª¼è«è«è«èªè«è«¸èª²è«è«èª¿èª°è«è«èª¶èª¹è«è±è±è±¬è³ è³è³¦è³¤è³¬è³­è³¢è³£è³è³ªè³¡èµ­è¶è¶£è¸«è¸è¸è¸¢è¸è¸©è¸è¸¡è¸èººè¼è¼è¼è¼©è¼¦è¼ªè¼è¼"],["be40","è¼¥é©é®é¨é­é·é°é­é§é±éééééé»é·éªé¬é¤éé³é¼ééé°é²é­é±ééééé éééé ¡é «é é¢³é¤é¤é¤é¤é§é§é§é§é§é§é§é§éª·é«®é«¯é¬§é­é­é­·é­¯é´é´"],["bea1","é´éº©éº¾é»å¢¨é½åååååååªåååå³åå«å¹å©å¤å¸åªå¨å¥å±å¯å¬å¢å¶å£å¢¾å£å£å¥®å¬å¬´å­¸å¯°å°å½æ²ææ©æææ¶æ¾æææ°ææææ»æ¼ææææææ¿æææ¾æ´æææ¹æææ¸æ¨½æ¨¸æ¨ºæ©æ©«æ©æ¨¹æ©æ©¢æ©¡æ©æ©æ¨µæ©æ©æ­æ­·æ°æ¿æ¾±æ¾¡"],["bf40","æ¿æ¾¤æ¿æ¾§æ¾³æ¿æ¾¹æ¾¶æ¾¦æ¾ æ¾´ç¾çççççç¹çççççç¨çç£çççç¢ççç´ç¸çºç§ç¥ç ççç¥ç£¨ç£ç£¬ç£§ç¦¦ç©ç©ç©ç©ç©çªºç¯ç°ç¯ç¯¤ç¯ç¯¡ç¯©ç¯¦ç³ç³ç¸"],["bfa1","ç¸ç¸ç¸ç¸£ç¸ç¸ç¸ç¸ç½¹ç¾²ç¿°ç¿±ç¿®è¨è³è©è¨è»èèèèèèè¨è©èèè­èªèèèèè¢èè¡¡è¤ªè¤²è¤¥è¤«è¤¡è¦ªè¦¦è«¦è«ºè««è«±è¬è«è«§è«®è«¾è¬è¬è«·è«­è«³è«¶è«¼è±«è±­è²è³´è¹è¸±è¸´è¹è¸¹è¸µè¼»è¼¯è¼¸è¼³è¾¨è¾¦éµé´é¸é²é¼éºé´éé é¶é¸é³é¯é¢é¼é«éé"],["c040","éé¦é¡éé®éé»é§é¨éªéééééééééé¦éé °é ¸é »é ·é ­é ¹é ¤é¤é¤¨é¤é¤é¤¡é¤é§­é§¢é§±éª¸éª¼é«»é«­é¬¨é®é´é´£é´¦é´¨é´é´é»é»é¾é¾åªåå¡å²åµååååå"],["c0a1","åå£å£å£å£å¬°å¬ªå¬¤å­ºå°·å±¨å¶¼å¶ºå¶½å¶¸å¹«å½å¾½ææææ¦ææ²æ´ææææ æ°æ¦æ¬æ±æ¢æ­æææææªæªæªæª¢æªæ«æª£æ©¾æªæªæª æ­æ®®æ¯æ°æ¿æ¿±æ¿æ¿ æ¿æ¿¤æ¿«æ¿¯æ¾æ¿¬æ¿¡æ¿©æ¿æ¿®æ¿°ç§çç®ç¦ç¥ç­ç¬ç´ç çµçç°ç²ç©ç°ç¦ç¨ççççªç³çªç°ç¬"],["c140","ç§ç­ç¯ç£·ç£ºç£´ç£¯ç¤ç¦§ç¦ªç©çª¿ç°ç°ç¯¾ç¯·ç°ç¯ ç³ ç³ç³ç³¢ç³ç³ç³ç¸®ç¸¾ç¹ç¸·ç¸²ç¹ç¸«ç¸½ç¸±ç¹ç¹ç¸´ç¸¹ç¹ç¸µç¸¿ç¸¯ç½ç¿³ç¿¼è±è²è°è¯è³èèèºèèè¿è½èè¾è¨èè±èª"],["c1a1","èè¾èèèè¯èèè¨èè§èèè³èèè«è»èºèèè¤»è¤¶è¥è¤¸è¤½è¦¬è¬è¬è¬è¬è¬è¬ è¬è¬è¬è±è°¿è±³è³ºè³½è³¼è³¸è³»è¶¨è¹è¹è¹è¹è½è¼¾è½è½è¼¿é¿é½ééééé¹é£ééééé¨éµéé¥ééé¾é¬éé°éééééééé±é¸éééé éé¡é¢¶é¤µé¨"],["c240","é§¿é®®é®«é®ªé®­é´»é´¿éºé»é»é»é»é»é¼¾é½å¢åå®å£å£å¬¸å½æ£æ³æ´æ²æ¾ææºæ»æ·æ·ææ¦æª³æª¬æ«æª»æª¸æ«æª®æª¯æ­æ­¸æ®¯ççæ¿¾çæ¿ºççç»ç¼ç¾ç¸ç·çµç§ç¿ççç"],["c2a1","çç½ç¿ç»ç¼ç¤ç¦®ç©¡ç©¢ç© ç«ç«ç°«ç°§ç°ªç°ç°£ç°¡ç³§ç¹ç¹ç¹ç¹ç¹¡ç¹ç¹ç½ç¿¹ç¿»è·è¶èèèèè©èèèè°èºè¹è¦è¯è¬è²è è¦è¦²è§´è¬¨è¬¹è¬¬è¬«è±è´è¹è¹£è¹¦è¹¤è¹è¹è»è½è½éééé«é¬ééééé¢é³é®é¬é°éééééééé¢ééééé¤é£é¦"],["c340","é­é¹é¡é¡é¡é¡é¡é¢ºé¤¾é¤¿é¤½é¤®é¦¥é¨é«é¬é¬é­é­é­é¯é¯é¯½é¯é¯éµéµéµ é» é¼é¼¬å³å¥å£å£å£¢å¯µé¾å»¬æ²æ·æ¶æµæææ ææ«¥æ«æ«æ«ççç¨çççççççç¢ç¸"],["c3a1","çºç½çç£çççç¡çç¤ç¦±ç©«ç©©ç°¾ç°¿ç°¸ç°½ç°·ç±ç¹«ç¹­ç¹¹ç¹©ç¹ªç¾ç¹³ç¾¶ç¾¹ç¾¸èè©èèªèè¤è¥è·è»è è è¹è¾è¥ è¥è¥è¥è­è­è­è­è­è­è­è­è­è´è´è¹¼è¹²èºè¹¶è¹¬è¹ºè¹´è½è½è¾­ééé±é®é¡éééééééé¢ééé¤éé¨éé´é£éªé§é¡éé»é¡"],["c440","é¡é¡é¢¼é¥é¥é¨é¨é¬é¯¨é¯§é¯é¯é¶éµ¡éµ²éµªéµ¬éºéºéºéº´å¸å¨å·å¶å´å¼å£¤å­å­å­½å¯¶å·æ¸æºææææ¦æ§æ«¬ç¾ç°ç²çç»çç¢ç¥ç¤¦ç¤ªç¤¬ç¤«ç«ç«¶ç±ç±ç±ç³¯ç³°è¾®ç¹½ç¹¼"],["c4a1","çºç½èèè¦è»è¹èèºèèèèè è è¥¤è¦ºè§¸è­°è­¬è­¦è­¯è­è­«è´è´èºèºèºèºé´éééé½é¡é°é£é¥é¥é¦¨é¨«é¨°é¨·é¨µé°é°é¹¹éºµé»¨é¼¯é½é½£é½¡å·å¸åååå¤å±¬å·æ¼æ¾ææææ©æ«»æ¬æ«ºæ®²ççç§ççç©çç±çºçºç¾¼èè­èè £è ¢è ¡è è¥ªè¥¬è¦½è­´"],["c540","è­·è­½è´èºèºèºè½è¾¯éºé®é³éµéºé¸é²é«é¢é¸é¹é²é¿é¡§é¡¥é¥é©é©é©é¨¾é«é­é­é°­é°¥é¶¯é¶´é·é¶¸éºé»¯é¼é½é½¦é½§å¼å»åååå­¿å·å·å½æ¿æ¤æ¬æ­¡çççç¤çç®ç¬"],["c5a1","ç¦³ç± ç±è¾è½èè¥²è¥¯è§¼è®è´è´èºèºè½¡ééééé½é¾ééé¡«é¥é©é©é«é¬é±é°±é°¾é°»é·é·é¼´é½¬é½ªé¾åå·ææ£æ«æªæ¬æ¬çç«ç±¤ç±£ç±¥çºçºçºè¢è¸è¿è ±è®ééé£é é¤é¨é¡¯é¥é©é©é©é«é«é«é±é±é±é·¥éºé»´åå£©æ¬çç±ç²çç½ç¾è ¶è ¹è¡¢è®è®"],["c640","è®è·è´ééªééééé¡°é©é¬¢é­é±é·¹é·ºé¹¼é¹½é¼é½·é½²å»³æ¬ç£ç±¬ç±®è »è§èº¡éé²é°é¡±é¥é«é¬£é»ç¤çè®é·éé©¢é©¥çºè®èºªéé½é¾é¼é±·é±¸é»·è±é¿é¸ç¨é©ªé¬±é¸é¸ç±²"],["c940","ä¹ä¹åµååä¸ä¸ä¹äºåï¨å±®å½³ä¸åä¸ä¸®äºä»ä»ä»åå¼å¬å¹å å¤å¤¬å°å·¿æ¡æ®³æ¯æ°ç¿ä¸±ä¸¼ä»¨ä»ä»©ä»¡ä»ä»åååå¢å£å¤å¤¯å®å®å°å°»å±´å±³å¸åºåºå¿æææ°"],["c9a1","æ°¶æ±æ°¿æ°»ç®ç°çç¦¸èéä¼ä¼ä¼¬ä»µä¼ä»±ä¼ä»·ä¼ä¼ä¼ä¼ä¼¢ä¼ä¼ä»´ä¼å±åååå¦å¢ååååå¡åå®åªå´å¤¼å¦å¥¼å¦å¥»å¥¾å¥·å¥¿å­å°å°¥å±¼å±ºå±»å±¾å·å¹µåºå¼å¼å½´å¿å¿å¿æææ¤æ¡æ¦æ¢ææ ææ¥æ¯æ®æ¾æ¹æ¸æ»æºæ¿æ¼æ³æ°æ±æ±æ±æ±æ±æ±æ±"],["ca40","æ±ç±çç´çµççªç¿ç©µç½è¸è¼èè½è¿èè¥¾éééééé¢é¤é é£ä½ä¼»ä½¢ä½ä½ä½¤ä¼¾ä½§ä½ä½ä½ä½ä¼­ä¼³ä¼¿ä½¡åå¹ååå¡å­å®åå£å²ååå°å·åªååååå¥å"],["caa1","å½ååå¨å¤åå®å§å¥ååååååå¤å¥å¦¦å¦å¦ å¦å¦å¦¢å¦å¦å¦§å¦¡å®å®å°¨å°ªå²å²å²å²å²å²å²å²å²å²å· å¸å¸åºåºåºåºåºå¼å¼å½¸å½¶å¿å¿å¿å¿­å¿¨å¿®å¿³å¿¡å¿¤å¿£å¿ºå¿¯å¿·å¿»æå¿´æºæææææææ±æ»æºæ°æææ·æ½æ²æ´æ·æ°æ´æ³æ²æµææ"],["cb40","æææææææææ¯æ°æ°æ±¸æ±§æ±«æ²æ²æ²æ±±æ±¯æ±©æ²æ±­æ²æ²æ²æ±¦æ±³æ±¥æ±»æ²ç´çºç£ç¿ç½ççççºçççççççºç¹çççç¤½è´èèèèèèèèèèè"],["cba1","èèèè±¸è¿è¾¿éé¡é¥éé§é é°é¨é¯é­ä¸³ä¾ä½¼ä¾ä½½ä¾ä¾ä½¶ä½´ä¾ä¾ä½·ä½ä¾ä½ªä¾ä½¹ä¾ä½¸ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä½«ä½®åå¼å¾åµå²å³åå±å¼ååå¼åååå¿ååååå«åºå¾å¥å¬å´å¦åå¯å¡å åå£å§å¤å·å¹å¯å²å­å«å±å°å¶ååµå»å³å´å¢"],["cc40","å¨å½å¤å¥å¦µå¦ºå§å§å¦²å§å§å¦¶å¦¼å§å§å¦±å¦½å§å§å¦´å§å­¢å­¥å®å®å±å±å²®å²¤å² å²µå²¯å²¨å²¬å²å²£å²­å²¢å²ªå²§å²å²¥å²¶å²°å²¦å¸å¸å¸å¼¨å¼¢å¼£å¼¤å½å¾å½¾å½½å¿å¿¥æ­æ¦ææ²æ"],["cca1","æ´æææ³æææ¬æ¢æææ®æææææææ½æ­æ´ææ¾æªæ¶ææ®æ³æ¯æ»æ©æ°æ¸æ½æ¨æ»ææ¼ææææ»æææææ½æææ¶æææ¬æææ¶æ»ææææ´æææºæææææ½ææ¸æ¹ææ¬¥æ®æ­¾æ¯æ°æ²æ³¬æ³«æ³®æ³æ²¶æ³æ²­æ³§æ²·æ³æ³æ²ºæ³æ³æ³­æ³²"],["cd40","æ³æ³æ²´æ²æ²æ²æ³æ³æ´°æ³æ³æ²°æ³¹æ³æ³©æ³ççççççççççççªççççççççççç¤ç¡ç­ç¦ç¢ç ç¬ççç¨ç¿çç¾ççç¯ç³ç±ç°çµç¸ç¼ç¹ç»çº"],["cda1","ç·ç¥ç¤¿ç§ç©¸ç©»ç«»ç±µç³½èµèè®è£è¸èµè­è è èè«èèèèµè§è®è¼èèºè´è¨è¡è©èè¤èè¶è¢è°è¯è­è®è±è¿è¿è¿è¿è¿è¿è¿é²é´é¯é³é°é¹é½é¼éºéä¿ä¿ä¿ä¾²ä¿ä¿ä¿ä¿ä¿ä¿ä¾»ä¾³ä¿ä¿ä¿ä¾ºä¿ä¾¹ä¿¬ååååå½å¼åååååºå¡å­å¥å"],["ce40","åèå·å®åå¶ååå å°å¼å¢å¾å²åå°åµååå¤ååååååååå¥ååå£´å¤å¥å§¡å§å§®å¨å§±å§å§ºå§½å§¼å§¶å§¤å§²å§·å§å§©å§³å§µå§ å§¾å§´å§­å®¨å±å³å³å³å³å³å³"],["cea1","å³å³å³å³å³å³å³å³å³å³å³å³å³å³¸å·¹å¸¡å¸¢å¸£å¸ å¸¤åº°åº¤åº¢åºåº£åº¥å¼å¼®å½å¾æ·æ¹ææ²æææææææææææ¤æææ¦æ®ææææææµæææ«æ¹æææ¸æ¶ææææºææ»æ°æææªæ¿æ¶æ¡æ²æµææ¦æ¢æ³æ«æºææ´æ¹æ®ææææ²ææº"],["cf40","ææ»æ¸æææ·ææ«æ¤ææµææ³æ·æ¶æ®æ£ææ¹ææ§æ°æ²æ¼ææ­ææ®æ¦ææºææææªææ¬¨æ®æ®æ®¶æ¯æ¯æ¯ æ° æ°¡æ´¨æ´´æ´­æ´æ´¼æ´¿æ´æ´æ³æ´³æ´æ´æ´ºæ´æ´æ´æ´æµ"],["cfa1","æ´æ´æ´·æ´æ´æµæ´æ´ æ´¬æ´æ´¢æ´æ´ç·çç¾ç±ç°ç¡ç´çµç©çççç¬ç°ç³ç®çç¤ç¨ç«ççªç¦ç£çççççç¹ç¶çµç´ç«ç¿çç¾ççç¸çç¬ç®ç®ççç§çªç¹ççççççç·ç»çºç§ç¨ç ç ç ç ç ç ç ç ç ç ç¥ç¥ç¥ç¥ç¥ç§ç§ç§ç§ç§çª"],["d040","ç©¾ç«ç¬ç¬ç±ºç±¸ç±¹ç±¿ç²ç²ç´ç´ç´ç½ç¾ç¾ç¾¾èèèèè·èèè èèèèèè£èèèèèèèè¦èè¿è¡èèè¾è¹èè¨èèèºè«èè´è¬è¡è²èµèè»è¶è°èª"],["d0a1","è¤è èºè³è­è·è´è¼è³è¡è¡è¡§è¡ªè¡©è§è¨è¨èµ²è¿£è¿¡è¿®è¿ é±é½é¿ééé¾éééééééééééååååå¢å°åä¿µä¿´å³å·å¬ä¿¶ä¿·ååå å§åµå¯å±åååååååååå¡åååååå¢åååå¦å¢ååå§å³å¤åå¿ååå«ååå±"],["d140","åå»å·å¸å ååååååå ²åååºåå½å¼å¸å¶å¿ååå¹åå¤å¥å¨å¨å¨­å¨®å¨å¨å¨å¨å¨å¨³å­¬å®§å®­å®¬å°å±å±å³¬å³¿å³®å³±å³·å´å³¹å¸©å¸¨åº¨åº®åºªåº¬å¼³å¼°å½§æææ§"],["d1a1","ææ¢æææææææææææææææ²æææ¬æææ¶ææ¤æ¹æææ¼æ©ææ´ææææ­ææ³æææ¸ææææææææææææææææ æ æ¡æ ²æ ³æ »æ¡æ¡æ æ ±æ æ µæ «æ ­æ ¯æ¡æ¡æ ´æ æ æ æ ¦æ ¨æ ®æ¡æ ºæ ¥æ  æ¬¬æ¬¯æ¬­æ¬±æ¬´æ­­èæ®æ¯¦æ¯¤"],["d240","æ¯¨æ¯£æ¯¢æ¯§æ°¥æµºæµ£æµ¤æµ¶æ´æµ¡æ¶æµæµ¢æµ­æµ¯æ¶æ¶æ·¯æµ¿æ¶æµæµ§æµ æ¶æµ°æµ¼æµæ¶æ¶æ´¯æµ¨æ¶æµ¾æ¶æ¶æ´æ¶æµ»æµ½æµµæ¶çççççç¼¹ç¢çççç çççççççç¡çç¸"],["d2a1","ç·ç¶ççºç´ç¾ç¶ç³ç»çççç¥çç¼ç§ç£ç©ççççççççç¨ççç´çµç¡ççç°çç»ççç¿ç¶çºçççççççç£ççççç¢ç§ç £ç ¬ç ¢ç µç ¯ç ¨ç ®ç «ç ¡ç ©ç ³ç ªç ±ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç§«ç§¬ç§ ç§®ç§­ç§ªç§ç§ç§çªçªçªçªçªçªçªç«ç¬"],["d340","ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç¬ç²ç²ç²ç²ç²ç²ç²ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç½ç½¡ç½ç½ ç½ç½ç¾ç¾ç¿ç¿ç¿èè¾è¹èºè²è¹èµèè»èèè¯è¥è³è­èèèè¥èè¿èè¦èè¢"],["d3a1","èèèèªèè¼èèè¤è è·è¯è©èèèèèè¬èè§èèèè¢è¨èèèèèèèèèèè¥èè¡è§èèèèèèè¡è¡è¡­è¡µè¡¶è¡²è¢è¡±è¡¿è¡¯è¢è¡¾è¡´è¡¼è¨è±è±è±»è²¤è²£èµ¶èµ¸è¶µè¶·è¶¶è»è»è¿¾è¿µéè¿¿è¿»éè¿¼è¿¶éé ééé£éé¥ééééé¤é"],["d440","éééé¢éééé¼é££é«é¬¯ä¹¿å°åªå¡åå åååå²åååååå¢åååå©å«å£å¤ååå®å³åååå«å­å¬å®ååå­ååµå¶å¼ååå´åªåå¢å¶åµå°åå"],["d4a1","åå²å¥åå¹åå­å»ååååå»å å¢å¶åå´å å­å½å å¸å å³åå å®å£å²å¥å¬å¡å å¼å å§å å å±å©å°å å å¥å© å©å©å©§å©å¨¸å¨µå©­å©å©å©¥å©¬å©å©¤å©å©å©å©å©å©å©åªå¨¾å©å¨¹å©å©°å©©å©å©å©å©å©å­²å­®å¯å¯å±å´å´å´å´å´ å´å´¨å´å´¦å´¥å´"],["d540","å´°å´å´£å´å´®å¸¾å¸´åº±åº´åº¹åº²åº³å¼¶å¼¸å¾å¾å¾ææææ¾æ°æºææææ¤ææææ±ææ·ææ¿ææææ²æ¥æææ½æ½ææ­æææ«ææ¯æææ®æ¯æµææ­æ®æ¼æ¤æ»æ"],["d5a1","æ¸æææææ°æææ¥æ¡ææææ¢ææ¡¹æ¢æ¢æ¢æ¡­æ¡®æ¢®æ¢«æ¥æ¡¯æ¢£æ¢¬æ¢©æ¡µæ¡´æ¢²æ¢æ¡·æ¢æ¡¼æ¡«æ¡²æ¢ªæ¢æ¡±æ¡¾æ¢æ¢æ¢æ¢ æ¢æ¢¤æ¡¸æ¡»æ¢æ¢æ¢æ¡½æ¬¶æ¬³æ¬·æ¬¸æ®æ®æ®æ®æ®æ°ªæ·æ¶«æ¶´æ¶³æ¹´æ¶¬æ·©æ·¢æ¶·æ·¶æ·æ¸æ·æ· æ·æ·æ¶¾æ·¥æ·æ·æ·æ·´æ·æ¶½æ·­æ·°æ¶ºæ·æ·æ·æ·"],["d640","æ·æ·²æ·æ·½æ·æ·æ·£æ¶»çºçç·çç´çç°çç³çç¼ç¿çççç¸ç¶çççç¾ç»ç¼ç¿çççççççç¿çççç¶ç¸çµççç½çççºç¼ç¿ççç´çç¤ç£ççç"],["d6a1","çççççççç¹ç¯ç­ç±ç²ç´ç³ç½ç¥ç»çµç¡ç¡ç¡ç¡ç¡ç¡ç ¦ç¡ç¡ç¥¤ç¥§ç¥©ç¥ªç¥£ç¥«ç¥¡ç¦»ç§ºç§¸ç§¶ç§·çªçªçªç¬µç­ç¬´ç¬¥ç¬°ç¬¢ç¬¤ç¬³ç¬ç¬ªç¬ç¬±ç¬«ç¬­ç¬¯ç¬²ç¬¸ç¬ç¬£ç²ç²ç²ç²£ç´µç´½ç´¸ç´¶ç´ºçµç´¬ç´©çµçµç´¾ç´¿çµç´»ç´¨ç½£ç¾ç¾ç¾ç¾ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿è"],["d740","èèèèèèè¥èèè­èè¬èè¡èè§èè¢èè¸è³èºè´è²è´èè£è¨èèºè³è¤è´èèèèèµèè©è½èèèèèªèè¾è¥è¯èèè°è¿è¦èè®è¶èèèè¿è·"],["d7a1","èèèèºè°èè¹è³è¸èè´è»è¼èè½è¾è¡è¢è¢è¢¨è¢¢è¢ªè¢è¢è¢¡è¢è¢è¢§è¢è¢è¢è¢¤è¢¬è¢è¢è¢è¦è§è§è§è¨°è¨§è¨¬è¨è°¹è°»è±è±è±½è²¥èµ½èµ»èµ¹è¶¼è·è¶¹è¶¿è·è»è»è»è»è»è» è»¡é¤ééééé¡é¯éªé°é´é²é³éé«é¬é©éééééé¬é´é±é³é¸é¤é¹éª"],["d840","é«é·é¨é®éºééé¼é­é«é±é¯é¿éªé é£¥é¦åååååå£ååååå¨ååååååååå¤å§åå¨å¥å­å·åå¢ååååµåå£åå¤å½åå¦å¿åå¡ååå ©å ·"],["d8a1","å å å §å £å ¨åµå¡å ¥å å å ³å ¿å ¶å ®å ¹å ¸å ­å ¬å »å¥¡åª¯åªåªå©ºåª¢åªå©¸åª¦å©¼åª¥åª¬åªåª®å¨·åªåªåªåªåªåª©å©»å©½åªåªåªåªåªå¯ªå¯å¯å¯å¯å¯å¯å°å°°å´·åµåµ«åµåµå´¿å´µåµåµåµå´³å´ºåµå´½å´±åµåµå´¹åµå´¸å´¼å´²å´¶åµåµå¹å¹å½å¾¦å¾¥å¾«ææ¹ææ¢æææ"],["d940","æ²ææææµææ¸æ¼æ¾ææææææ¿æææææ±æ°ææ¥æ¨æ¯æææ³ææ æ¶ææ²æµæ¡ææ¾æææææææææææ°æææ²æ§æªæ¤ææ¨æ¥ææææ®ææ"],["d9a1","æ¼æ¬æ»ææ±æ¹æªæ²ææ¤æ£æ¤æ£æ¤ªæ£¬æ£ªæ£±æ¤æ£æ£·æ£«æ£¤æ£¶æ¤æ¤æ£³æ£¡æ¤æ£æ¤æ¥°æ¢´æ¤æ£¯æ£æ¤æ£¸æ£æ£½æ£¼æ£¨æ¤æ¤æ¤æ£æ£æ£æ£æ£¦æ£´æ£æ¤æ£æ£©æ¤æ¤¥æ£æ¬¹æ¬»æ¬¿æ¬¼æ®æ®æ®æ®æ®½æ¯°æ¯²æ¯³æ°°æ·¼æ¹æ¹æ¸æ¹æºæ¸¼æ¸½æ¹æ¹¢æ¸«æ¸¿æ¹æ¹æ¹³æ¸æ¸³æ¹æ¹æ¹æ¸»æ¸æ¸®æ¹"],["da40","æ¹¨æ¹æ¹¡æ¸±æ¸¨æ¹ æ¹±æ¹«æ¸¹æ¸¢æ¸°æ¹æ¹¥æ¸§æ¹¸æ¹¤æ¹·æ¹æ¹¹æ¹æ¹¦æ¸µæ¸¶æ¹ç çç¯ç»ç®ç±ç£ç¥ç¢ç²çç¨çºççççççççççç°ç¢ç±ç³ç§ç²ç­ç¦ç£çµçç®ç¬ç°ç«ç"],["daa1","çç¡ç­ç±ç¤ç£çç©ç ç²ç»ç¯ç¯ç¬ç§çç¡ç¦ççç¤ççççççççççççççç¬ç¡ ç¡¤ç¡¥ç¡ç¡­ç¡±ç¡ªç¡®ç¡°ç¡©ç¡¨ç¡ç¡¢ç¥´ç¥³ç¥²ç¥°ç¨ç¨ç¨ç¨ç¨çªç«¦ç«¤ç­ç¬»ç­ç­ç­ç­ç­ç­ç­ç²¢ç²ç²¨ç²¡çµçµ¯çµ£çµçµçµ§çµªçµçµ­çµçµ«çµçµçµ©çµçµçµç¼¾ç¼¿ç½¥"],["db40","ç½¦ç¾¢ç¾ ç¾¡ç¿èèèè¾èèèèèèè½èèºè¦è®è·è¸è¹èè¼è½è¿èµè»èè¹è£èè¨èè§è¤è¼è¶èèèè«è£è¿èèè¥èè¿è¡èèèèµèèèèèèèè³"],["dba1","èèºèèèªèèè¬è®èè»èè¢èèè¾èè¢è¦èè£èèªèè«èè¬è©èè¨èè¡è¡è¡è¢ºè£è¢¹è¢¸è£è¢¾è¢¶è¢¼è¢·è¢½è¢²è¤è£è¦è¦è¦è§è§è§è©è©è¨¹è©è©è©è©è©è©è©è©è©è©è©è©è±è²è²è²ºè²¾è²°è²¹è²µè¶è¶è¶è·è·è·è·è·è·è·è·è·è·è·è·è»¯è»·è»º"],["dc40","è»¹è»¦è»®è»¥è»µè»§è»¨è»¶è»«è»±è»¬è»´è»©é­é´é¯éé¬éé¿é¼éé¹é»éééééé¡é¤éé¢é ééé¥ééé¦ééééé¿é½ééé§ééé¤ééééé»ééééé¾é"],["dca1","ééééééé±é°é¬é°é®é é¢©é£«é³¦é»¹äºäºäº¶å½å¿åå®ååå´ååå°ååºå±ååå¶å¸ååºå¸å»å¼ååååååååååå©å¿ååååå¢ååå²ååååå¡å¡¨å¡¤å¡å¡å¡å¡¯å¡å¡å¡å¡å¡¥å¡å ½å¡£å¡±å£¼å«å«å«åªºåª¸åª±åªµåª°åª¿å«åª»å«"],["dd40","åª·å«å«åª´åª¶å«åª¹åªå¯å¯å¯å°å°³åµ±åµ£åµåµ¥åµ²åµ¬åµåµ¨åµ§åµ¢å·°å¹å¹å¹å¹å¹å»å»å»å»å»å½å¾¯å¾­æ·æææ«ææ¶æ²æ®ææ¯ææ©ææ é¨æ£æ¥æ¤ææ±æ«ææææ æ¤"],["dda1","æ³æææææ¹æ·æ¢æ£ææ¦æ°æ¨ææµæ¯ææææ¥æ§ææ§ææ®æ¡ææ¯æææææææææææ¸æ æ¥¦æ¥æ¤¸æ¥æ¥¢æ¥±æ¤¿æ¥æ¥ªæ¤¹æ¥æ¥æ¥æ¥ºæ¥æ¥æ¤µæ¥¬æ¤³æ¤½æ¥¥æ£°æ¥¸æ¤´æ¥©æ¥æ¥¯æ¥æ¥¶æ¥æ¥æ¥´æ¥æ¤»æ¥æ¤·æ¥æ¥æ¥æ¤²æ¥æ¤¯æ¥»æ¤¼æ­æ­æ­æ­æ­æ­æ®ï¨æ¯»æ¯¼"],["de40","æ¯¹æ¯·æ¯¸æºæ»æ»æºæ»æºæºæºæº æº±æº¹æ»æ»æº½æ»æºæ»æº·æº°æ»æº¦æ»æº²æº¾æ»æ»æ»æºæºæºæºæº¤æº¡æº¿æº³æ»æ»æºæº®æº£çççç£ç ççç¢ç²ç¸çªç¡ççççç°ççç"],["dea1","çççççççççç¼çç»çºçççççççççççççççççç¡ç¿ç¾ç½çç¹ç·æ¦ç¯ççç·ç¾ç¼ç¹ç¸çç»ç¶ç­çµç½ççµçççç çççç©ç§ççç­ç ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢ç¢¡ç¢ç¡¹ç¢ç¢ç¢ç¡»ç¥¼ç¦ç¥½ç¥¹ç¨ç¨ç¨ç¨ç¨ç¨ç¨¢ç¨"],["df40","ç¨ç¨çª£çª¢çªç««ç­¦ç­¤ç­­ç­´ç­©ç­²ç­¥ç­³ç­±ç­°ç­¡ç­¸ç­¶ç­£ç²²ç²´ç²¯ç¶ç¶ç¶ç¶çµ¿ç¶çµºç¶çµ»ç¶çµ¼ç¶ç¶ç¶çµ½ç¶ç½­ç½«ç½§ç½¨ç½¬ç¾¦ç¾¥ç¾§ç¿ç¿è¡è¤è è·èè©èè¢è²æ¡èè¶è§è¯"],["dfa1","èè¡èèèèèèè±è¿èè¶è¹èèè¥èèèè§è°èè½èèè´è³èèèè·èºè´èºèè¸è²èè©èèè¯èè­èè°è¹èèèè¯èèè»èè¶è³è¨è¾èè«è èè®èèèè·èèºèèµèè¸èèèè¶èèè£è£è£è£è£è£è£è£è£è¦è¦è§è§¥è§¤"],["e040","è§¡è§ è§¢è§è§¦è©¶èªè©¿è©¡è¨¿è©·èªèªè©µèªèªè©´è©ºè°¼è±è±è±¥è±¤è±¦è²è²è²è³èµ¨èµ©è¶è¶è¶è¶è¶è¶è¶è¶è¶è·°è· è·¬è·±è·®è·è·©è·£è·¢è·§è·²è·«è·´è¼è»¿è¼è¼è¼è¼è¼è¼è¼éé¿"],["e0a1","ééé½ééééééééé®é¯ééé°éºé¦é³é¥ééé®ééé­é¬éé é§é¯é¶é¡é°é±éé£éé²ééééé²ééééééééééºé½é¸éµé³é·é¸é²é é é é¢¬é£¶é£¹é¦¯é¦²é¦°é¦µéª­éª«é­é³ªé³­é³§éºé»½å¦ååå¨å³ååªåå¤åå¬å°å¯å£å "],["e140","åååå©å«å°å¬å§åååå¼ååååååºååå¿å¹å¢å¡¼å¢å¢å¢å¢å¡¿å¡´å¢å¡ºå¢å¢å¢å¡¶å¢å¢å¡»å¢å¢å£¾å¥«å«å«®å«¥å«å«ªå«å«­å««å«³å«¢å« å«å«¬å«å«å«å«¨å«å­·å¯ "],["e1a1","å¯£å±£å¶å¶åµ½å¶åµºå¶åµ·å¶å¶å¶åµ¾åµ¼å¶åµ¹åµ¿å¹å¹å¹å»å»å»å»å»å»å»å»å»å½å½å½¯å¾¶æ¬æ¨æææ±æ³æææ²æ¬ææ´ææºææ¥æ»æªæ¡ææ©æ§æ«æ«ææææ´æ¶æ²æ³æ½æµæ¦æ¦æææææææ ææ¿æ¿æ¬æ«ææ¥æ·æ³æ æ¡æ ææææ¢æ¦±æ¦¶æ§"],["e240","æ¦ æ§æ¦æ¦°æ¦¬æ¦¼æ¦æ¦æ¦æ¦§æ¦æ¦©æ¦¾æ¦¯æ¦¿æ§æ¦½æ¦¤æ§æ¦¹æ§æ¦æ§æ¦³æ¦æ¦ªæ¦¡æ¦æ§æ¦æ¦æ§æ¦µæ¦¥æ§æ­æ­æ­æ®æ®æ® æ¯æ¯æ¯¾æ»æ»µæ»±æ¼æ¼¥æ»¸æ¼·æ»»æ¼®æ¼æ½æ¼æ¼æ¼§æ¼æ¼»æ¼æ»­æ¼"],["e2a1","æ¼¶æ½³æ»¹æ»®æ¼­æ½æ¼°æ¼¼æ¼µæ»«æ¼æ¼æ½æ¼æ»½æ»¶æ¼¹æ¼æ»¼æ¼ºæ¼æ¼æ¼æ¼æ¼¡çççççççç»ççççççççççççç¢ç³ç±çµç²ç§ç®çççç½ççççççççç¸çç¼ççç®çç¯ç¾çç¢²ç¢ªç¢´ç¢­ç¢¨ç¡¾ç¢«ç¢ç¢¥ç¢ ç¢¬ç¢¢ç¢¤ç¦ç¦ç¦ç¦ç¦ç¦ç¦"],["e340","ç¦ç¦ç¦ç¦ç¨«ç©ç¨°ç¨¯ç¨¨ç¨¦çª¨çª«çª¬ç«®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç®åç®ç®¤ç®ç²»ç²¿ç²¼ç²ºç¶§ç¶·ç·ç¶£ç¶ªç·ç·ç·ç¶ç·ç·ç·ç·ç·ç¶¯ç¶¹ç¶ç¶¼ç¶ç¶¦ç¶®ç¶©ç¶¡ç·ç½³ç¿¢ç¿£ç¿¥ç¿"],["e3a1","è¤èèèèèèèèèèèè¤è¡èèºèèè¬è®è«è¹è´èèèªèè±èèè§è»è¢èèèèè©è¯è¨èèè¶èè èèèèè°èè¡è³è£è¨è«èè®èè¡èèèè¬èè¾èè è²èªè­è¼èèºè±èµèè¦è§è¸è¤èè°èè£·è£§è£±è£²è£ºè£¾è£®è£¼è£¶è£»"],["e440","è£°è£¬è£«è¦è¦¡è¦è¦è§©è§«è§¨èª«èªèªèªèªèªè°½è±¨è±©è³è³è³è¶è¸è¸è·¿è¸è·½è¸è¸è¸è¸è¸è·¾è¸è¸è¼è¼è¼è¼é£éé é¢éééé¤é¡ééºé²é¹é³é¥é¤é¶ééºé ééªé"],["e4a1","é¦éé«é¹éé¿é£é®éééé¢é½éé¡ééééé§é¾éé©ééé­éé¡é¿éé½éºé¾éééé»ééé¿ééé é¢­é¢®é¤é¤é¤é¦é¦é§é¦¹é¦»é¦ºé§é¦½é§éª±é«£é«§é¬¾é¬¿é­ é­¡é­é³±é³²é³µéº§å¿åå°å¸ååå¶å¾ååå½åååå±å¯ååååµååååå"],["e540","ååå³å½å¬å¾å¸åªåºåå¢«å¢å¢±å¢ å¢£å¢¯å¢¬å¢¥å¢¡å£¿å«¿å«´å«½å«·å«¶å¬å«¸å¬å«¹å¬å¬å¬å¬å±§å¶å¶å¶å¶å¶¢å¶å¶å¶ å¶å¶¡å¶å¶å¹©å¹å¹ å¹ç·³å»å»å»¡å½å¾²æææ¹æ±æ°æ¢æ"],["e5a1","æææ¯æ­æææªæ¡ææ¦æ³æ­æ®æ°ææ ææææææææ£ææ¨æ±ææ¶æºæ¹æ»æ²æ³æµæ°æ©æ²æ·æªæ¯æ¨æ¨æ¨æ§¥æ§¸æ¨æ§±æ§¤æ¨ æ§¿æ§¬æ§¢æ¨æ¨æ§¾æ¨§æ§²æ§®æ¨æ§·æ§§æ©æ¨æ§¦æ§»æ¨æ§¼æ§«æ¨æ¨æ¨æ¨¥æ¨æ§¶æ¨¦æ¨æ§´æ¨æ­æ®¥æ®£æ®¢æ®¦æ°æ°æ¯¿æ°æ½æ¼¦æ½¾æ¾æ¿æ¾"],["e640","æ¾æ¾æ¾æ½¢æ½æ¾æ½æ¾æ½¶æ½¬æ¾æ½æ½²æ½æ½æ½æ¾æ¾æ½æ¼æ½¡æ½«æ½½æ½§æ¾æ½æ¾æ½©æ½¿æ¾æ½£æ½·æ½ªæ½»ç²ç¯çç°ç çç©çµçç¥çç¤ç¡çªçç§ç³ççççççç ççç¡çç"],["e6a1","ç¢çççççç½ççç¼ç¹ççç¾ç¥ççççç£çç¨çççççççççç£ç¢»ç£ç£ç£ç£ç£ç£ç£ç£ç£ç¦ç¦¡ç¦ ç¦ç¦¢ç¦æ­¶ç¨¹çª²çª´çª³ç®·ç¯ç®¾ç®¬ç¯ç®¯ç®¹ç¯ç®µç³ç³ç³ç³ç··ç·ç·ªç·§ç·ç·¡ç¸ç·ºç·¦ç·¶ç·±ç·°ç·®ç·ç½¶ç¾¬ç¾°ç¾­ç¿­ç¿«ç¿ªç¿¬ç¿¦ç¿¨è¤è§è£è"],["e740","èèè¢èèèèèèèèèè¤è»èèè©èèèèèè§èè»è«èºèèè´èªè²èè·è«è³è¼èèªè©èè¾è¨èè®èè½èè¶è±è¦è§è¨è°è¯è¹èè è°èèè¯è¢"],["e7a1","èè£è¤è·è¡è³èèèèè¡èèèè­èªèèèèè¯è¬èºè®èè¥èè»èµè¢è§è©è¡è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¦¢è¦¤è¦£è§­è§°è§¬è«è«èª¸è«è«è«è«èª»è«èª¾è«è«è«è«èªºèª½è«è°¾è±è²è³¥è³è³è³¨è³è³è³§è¶ è¶è¶¡è¶è¸ è¸£è¸¥è¸¤è¸®è¸è¸è¸è¸è¸è¸¦è¸§"],["e840","è¸è¸è¸è¸è¸è¸è¸è¼¬è¼¤è¼è¼è¼ è¼£è¼è¼é³é°é¯é§é«é¯é«é©éªé²é¦é®ééééééééééééé¶éé±ééé©éééé¯éé¨éééé¦éééé éé§éé"],["e8a1","éµé¡éé´é¼é¬é«é®é°é¤é¢ééééééééééé é é ¦é ©é ¨é  é é §é¢²é¤é£ºé¤é¤é¤é¤é¤é§é§é§é§é§é§é§é§é§é§é§é§éª³é«¬é««é«³é«²é«±é­é­é­§é­´é­±é­¦é­¶é­µé­°é­¨é­¤é­¬é³¼é³ºé³½é³¿é³·é´é´é³¹é³»é´é´é´éºé»é¼é¼ååååååå´å¡å°å å®"],["e940","å³å¦å£å­å²åå·ååå£å¢½å£å¢¿å¢ºå£å¢¼å£å¬å¬å¬å¬¡å¬å¬å¬å¬å¬¨å¬å¬ å¬å¯¯å¶¬å¶±å¶©å¶§å¶µå¶°å¶®å¶ªå¶¨å¶²å¶­å¶¯å¶´å¹§å¹¨å¹¦å¹¯å»©å»§å»¦å»¨å»¥å½å¾¼ææ¨æææ´ææææº"],["e9a1","æ¿æ¸æææææææ½ææææ³ææ³æ¿æ¼æ¢ææ¾æææææ½æ»æºææ£æ¨´æ©¦æ©æ©§æ¨²æ©¨æ¨¾æ©æ©­æ©¶æ©æ©æ¨¨æ©æ¨»æ¨¿æ©æ©ªæ©¤æ©æ©æ©æ©¯æ©©æ© æ¨¼æ©æ©æ©æ©æ©æ©æ­æ­æ­æ®§æ®ªæ®«æ¯æ¯æ°æ°æ°æ¾­æ¿æ¾£æ¿æ¾¼æ¿æ¿æ½æ¿æ¾½æ¾æ¿æ¾¨çæ¾¥æ¾®æ¾ºæ¾¬æ¾ªæ¿æ¾¿æ¾¸"],["ea40","æ¾¢æ¿æ¾«æ¿æ¾¯æ¾²æ¾°ççç¿ç¸ççççççççç½çç¼çççççç©ç¦ç§ç¬ç¥ç«çªç¿çç çççç¡ççç¯ç­ç±ç½ç³ç¼çµç²ç°ç»ç¦ççç¡ççç¢ç£çç"],["eaa1","çç£ç£©ç£¥ç£ªç£ç££ç£ç£¡ç£¢ç£­ç£ç£ ç¦¤ç©ç©ç©çª¶çª¸çªµçª±çª·ç¯ç¯£ç¯§ç¯ç¯ç¯¥ç¯ç¯¨ç¯¹ç¯ç¯ªç¯¢ç¯ç¯«ç¯ç¯ç³ç³ç³ç³ç³ç¸ç¸¡ç¸ç¸ç¸ç¸ ç¸ç¸ç¸ç¸ç¸ç¸¢ç¸ç¸ç¸ç¸ç¸ç¸¥ç¸¤ç½ç½»ç½¼ç½ºç¾±ç¿¯èªè©è¬è±è¦è®è¹èµè«è°è¬è´è²è·è§è²èèèèèè«èèè¡è"],["eb40","èèè¤èè¢èèèè£è¾èè±èè®èµèè§è èè¦èèè¥è¬è£è¥è¤èèèèèèèèèè¹èè£èèèèèèèèèè¤è¤¦è¤°è¤­è¤®è¤§è¤±è¤¢è¤©è¤£è¤¯è¤¬è¤è§±è« "],["eba1","è«¢è«²è«´è«µè«è¬è«¤è«è«°è«è«è«¡è«¨è«¿è«¯è«»è²è²è²è³µè³®è³±è³°è³³èµ¬èµ®è¶¥è¶§è¸³è¸¾è¸¸è¹è¹è¸¶è¸¼è¸½è¹è¸°è¸¿èº½è¼¶è¼®è¼µè¼²è¼¹è¼·è¼´é¶é¹é»ééºé³éµé¶éééééé§ééééééºé¸é¼éé£éééé­éééééºé¥éé¹é·é´éé¤é¿é©é¹éµéªéé"],["ec40","éé¾ééé»éé¼éé¾é¹éºé¶é¿éµé½é©éééééééé°é¸é µé ¯é ²é¤¤é¤é¤§é¤©é¦é§®é§¬é§¥é§¤é§°é§£é§ªé§©é§§éª¹éª¿éª´éª»é«¶é«ºé«¹é«·é¬³é®é®é®é­¼é­¾é­»é®é®é®é®é­ºé®"],["eca1","é­½é®é´¥é´é´ é´é´é´©é´é´é´¢é´é´é´éºéºéºéº®éº­é»é»é»ºé¼é¼½å¦å¥å¢å¤å å©å´ååååååå¾åå¿åå£å£å£å£å¬­å¬¥å¬²å¬£å¬¬å¬§å¬¦å¬¯å¬®å­»å¯±å¯²å¶·å¹¬å¹ªå¾¾å¾»ææµæ¼æ§æ æ¥æ¤æ¨ææ¯æ©æ£æ«æ¤æ¨æææ¶æææªæªæªæª¥æªæªæªæª¡æªæªæªæª"],["ed40","æªæªæª¨æª¤æªæ©¿æª¦æªæªæªæªæ­æ®­æ°æ¿æ¾©æ¿´æ¿æ¿£æ¿æ¿­æ¿§æ¿¦æ¿æ¿²æ¿æ¿¢æ¿¨ç¡ç±ç¨ç²ç¤ç°ç¢ç³ç®ç¯çç²ç«ççªç­ç±ç¥ç¯çççççççççç¤ç©çµç«ç²ç·ç¶"],["eda1","ç´ç±ç¨ç°ç£³ç£½ç¤ç£»ç£¼ç£²ç¤ç£¹ç£¾ç¤ç¦«ç¦¨ç©ç©ç©ç©ç©ç©çª¾ç«ç«ç°ç°ç¯²ç°ç¯¿ç¯»ç°ç¯´ç°ç¯³ç°ç°ç°ç°ç¯¸ç¯½ç°ç¯°ç¯±ç°ç°ç³¨ç¸­ç¸¼ç¹ç¸³é¡ç¸¸ç¸ªç¹ç¹ç¹ç¸©ç¹ç¸°ç¸»ç¸¶ç¹ç¸ºç½ç½¿ç½¾ç½½ç¿´ç¿²è¬è»èèèèèè¼è©èèèèèèè§èè èè£è»è¤èè"],["ee40","è·è¼èè¡èºè¸èèèèèèèèè¢èèèè¹è¶èèèè¨è¾èªè­èè°è¬è¹èµè¼è®èèèèè·è¯èèè´è¶è¿è¸è½èè²è¤µè¤³è¤¼è¤¾è¥è¥è¤·è¥è¦­è¦¯è¦®è§²è§³è¬"],["eea1","è¬è¬è¬è¬è¬è¬¢è¬è¬è¬è¬è¬è¬è¬è¬è¬è¬è±è±°è±²è±±è±¯è²è²è³¹èµ¯è¹è¹è¹è¹è¹è¹è½è½éé¾é¸éé¢éééé¡éé é¡éé¯é¤ééé¼ééé¶éééé é­éééªé¹ééééé±é·é»é¡éé£é§ééééééééé·é®é°é¬é éééééé¡é"],["ef40","ééééé±é¡é¡é¡é¡é¡é¡é¤¥é¤«é¤¬é¤ªé¤³é¤²é¤¯é¤­é¤±é¤°é¦é¦£é¦¡é¨é§ºé§´é§·é§¹é§¸é§¶é§»é§½é§¾é§¼é¨éª¾é«¾é«½é¬é«¼é­é®é®¨é®é®é®¦é®¡é®¥é®¤é®é®¢é® é®¯é´³éµéµ§é´¶é´®é´¯é´±é´¸é´°"],["efa1","éµéµéµé´¾é´·éµé´½ç¿µé´­éºéºéºéº°é»é»é»»é»¿é¼¤é¼£é¼¢é½é¾ å±å­å®ååååååå¥°å¬¼å±©å±ªå·å¹­å¹®æææ­æ®æ±æªæ°æ«ææ©æ¿ææ½æ¸æææ¼ææææææ«æª¹æª½æ«¡æ«æªºæª¶æª·æ«æª´æª­æ­æ¯æ°çççççççæ¿¿çæ¿»ç¦æ¿¼æ¿·ççç¿ç¹çç½ç¶"],["f040","ç¸ççµçç¾ç¶ç»ççççç¤çççççç¦ç½ç¬ççºç£¿ç¤ç¤ç¤ç¤ç¤ç¤ç¤ç¦­ç¦¬ç©ç°ç°©ç°ç° ç°ç°­ç°ç°¦ç°¨ç°¢ç°¥ç°°ç¹ç¹ç¹ç¹£ç¹ç¹¢ç¹ç¹ç¹ ç¹ç¹ç¾µç¾³ç¿·ç¿¸èµèè"],["f0a1","èèèè´èèèèè³èµè½èèè¿èèèèè±è¶èè¤è¸è·è¾è©è§è¦è¢èè«èªè¥èè³è¤èèèè­èè£è¤èèè è´è¨èè¥è¥è¥è¥è¥è¥è¥è¥è¬ªè¬§è¬£è¬³è¬°è¬µè­è¬¯è¬¼è¬¾è¬±è¬¥è¬·è¬¦è¬¶è¬®è¬¤è¬»è¬½è¬ºè±è±µè²è²è²è³¾è´è´è´è¹è¹¢è¹ è¹è¹è¹è¹¥è¹§"],["f140","è¹è¹è¹¡è¹è¹©è¹è½è½è½è½é¨éºé»é¾é¨é¥é§é¯éªéµééé·éééé§ééªéé¦éééééé±éé²é¤é¨é´é£é¥éééé³ééå·éééé£é¢é¥é¬é®é¨é«é¤éª"],["f1a1","é¢é¥éééééºé¡é¡é¡é¢¸é¥é¤¼é¤ºé¨é¨é¨é¨é¨é¨é¨é¨é¨é¨é«é«é¬é¬é¬é¬©é¬µé­é­é­é¯é¯é¯é®¿é¯é®µé®¸é¯é®¶é¯é®¹é®½éµéµéµéµéµéµéµéµéµéµéµéµéµéµéµéºéºé»é¼é¼é¼é¼¥é¼«é¼ªé¼©é¼¨é½é½å´åµåå·å´å«å­å¦å§åªå¬å£å£å£å¤å¬½å¬¾å¬¿å·å¹°"],["f240","å¾¿æ»æææææææææææ«§æ« æ«æ«æ«æ«æ«æ«æ«æ««æ«æ«æ«æ­ æ®°æ°çç§ç çç«ç¡ç¢ç£ç©çç¤ççªçççççç¥ç¦ç¤ç£ç¡ççç·ççç çççç±ç¤ç¤"],["f2a1","ç¤¡ç¤ç¤ç¤ç¦°ç©§ç©¨ç°³ç°¼ç°¹ç°¬ç°»ç³¬ç³ªç¹¶ç¹µç¹¸ç¹°ç¹·ç¹¯ç¹ºç¹²ç¹´ç¹¨ç½ç½ç¾ç¾ç¾·ç¿½ç¿¾è¸èèè¤è¡è£è«è±è­èè¡è¨èèè¬è²è¸èèè£èèè°è¦è¯èè¢è èºè è¶è·è è è è è¼è è¿è è è¥¢è¥è¥è¥è¥¡è¥è¥è¥è¥è¦è¦·è¦¶è§¶è­è­è­è­è­è­è­è­è­"],["f340","è­è­è­è­è±è±·è±¶è²è´è´è´è¶¬è¶ªè¶­è¶«è¹­è¹¸è¹³è¹ªè¹¯è¹»è»è½è½è½è½è½è¾´éé¿é°é­ééééééé¹é¬ééé©é¦ééé®é£éééééé§é½ééé¡é©é«é¬é¨é¦"],["f3a1","é³é·é¶éééé¡é¡é¡é¡é¢¿é¢½é¢»é¢¾é¥é¥é¥é¦¦é¦§é¨é¨é¨¥é¨é¨¤é¨é¨¢é¨ é¨§é¨£é¨é¨é¨é«é¬é¬é¬é¬é¬·é¯ªé¯«é¯ é¯é¯¤é¯¦é¯¢é¯°é¯é¯é¯¬é¯é¯é¯¥é¯é¯¡é¯éµ·é¶é¶é¶é¶éµ±é¶éµ¸é¶é¶é¶éµ½éµ«éµ´éµµéµ°éµ©é¶éµ³éµ»é¶éµ¯éµ¹éµ¿é¶éµ¨éºéºé»é»¼é¼­é½é½é½é½é½é½å·å²"],["f440","åµå³å££å­å·å·å»®å»¯å¿å¿æ¹ææææææ¨æ£æ¤æ«³æ«°æ«ªæ«¨æ«¹æ«±æ«®æ«¯ç¼çµç¯ç·ç´ç±çç¸ç¿çºç¹çç»ç³çççç¨ç½ç¼çºç«çªç¾ç­ççççç²ç¤¥ç¤£ç¤§ç¤¨ç¤¤ç¤©"],["f4a1","ç¦²ç©®ç©¬ç©­ç«·ç±ç±ç±ç±ç±ç³®ç¹»ç¹¾çºçºç¾ºç¿¿è¹èèèè¨è©è¢è¿èè¾èèè¶èèèèè½è è è è è è è¥£è¥¦è¦¹è§·è­ è­ªè­è­¨è­£è­¥è­§è­­è¶®èºèºèºè½è½è½è½è½è½éééé·éµé²é³ééé»é ééé¾ééé¨éééµéé·éééééºéé¸éé¿"],["f540","é¼éé¶éééé éé®é¯é¹é»é½é¾é¡ é¡¢é¡£é¡é£é£é¥é¥é¥é¥é¥é¥é¨²é¨´é¨±é¨¬é¨ªé¨¶é¨©é¨®é¨¸é¨­é«é«é«é¬é¬é¬é°é°é¯·é°é°é¯¸é±é°é°é°é°é°é°é¶é¶é¶¤é¶é¶é¶é¶é¶"],["f5a1","é¶ é¶é¶é¶ªé¶é¶¡é¶é¶¢é¶¨é¶é¶£é¶¿é¶©é¶é¶¦é¶§éºéºéºé»¥é»¤é»§é»¦é¼°é¼®é½é½ é½é½é½é¾åºå¹åååå½å¾å­å­å·å·å»±æ½ææ¬æ«¼æ¬æ«¸æ¬ççççççççççç¾ççªçç¤­ç¤±ç¤¯ç±ç±ç³²çºçºçºçºçºçºç½ç¾»è°èèèªè¦èè£èèè§è®è¡è è©èè¥"],["f640","è ©è è è  è ¤è è «è¡è¥­è¥©è¥®è¥«è§ºè­¹è­¸è­è­ºè­»è´è´è¶¯èºèºè½è½è½éééé¹é¿é»é¶é©é½é¼é°é¹éªé·é¬éé±é¥é¤é£éµéºé¿é¡é¡¤é£é£é£é¥é¥é¨¹é¨½é©é©é©é©é¨º"],["f6a1","é¨¿é«é¬é¬é¬é¬é¬ºé­é°«é°é°é°¬é°£é°¨é°©é°¤é°¡é¶·é¶¶é¶¼é·é·é·é·é¶¾é·é·é¶»é¶µé·é¶¹é¶ºé¶¬é·é¶±é¶­é·é¶³é·é¶²é¹ºéºé»«é»®é»­é¼é¼é¼é¼±é½é½¥é½¤é¾äº¹åååå¥±å­å­å·å·å»²æ¡æ æ¦æ¢æ¬æ¬æ¬æ°ççççççç©ç¿ççççç­ç­ç¤µç¦´ç©°ç©±ç±ç±ç±ç±ç±"],["f740","ç³´ç³±çºç½ç¾èè«è´èµè³è¬è²è¶è ¬è ¨è ¦è ªè ¥è¥±è¦¿è¦¾è§»è­¾è®è®è®è®è­¿è´èºèºèºèºèºèºèºè½ è½¢éééééééééééé¿é£é¡ªé¡©é£é¥é¥é©é©é©é©é©é©é©"],["f7a1","é©é©é©é«é¬é¬«é¬»é­é­é±é±é°¿é±é°¹é°³é±é°¼é°·é°´é°²é°½é°¶é·é·é·é·é·é·é·é·é·é·©é·é·é·é·µé·é·éº¶é»°é¼µé¼³é¼²é½é½«é¾é¾¢å½åå£¨å£§å¥²å­å·è ¯å½ææææ©æ¥ææ«æ¬æ¬æ¬æ¯ççç¢çççç°çç±§ç±¦çºè¬èºèè¹è¼è±è»è¾è °è ²è ®è ³è¥¶è¥´è¥³è§¾"],["f840","è®è®è®è®è±è´èºè½¤è½£é¼é¢ééééééé é©é©é¬é¬é¬ é±é±é±é±é±é±é±é±é±é±é·»é··é·¯é·£é·«é·¸é·¤é·¶é·¡é·®é·¦é·²é·°é·¢é·¬é·´é·³é·¨é·­é»é»é»²é»³é¼é¼é¼¸é¼·é¼¶é½é½"],["f8a1","é½±é½°é½®é½¯ååå­å±­æ­æ­æ®æ¬çç¡çç ç£çç¥çç¤¸ç¦·ç¦¶ç±ªçºç¾è­èè ¸è ·è µè¡è®è®èºèºèº èºé¾é½éé«é¨é©é¥ééééé¥é©é«é­é±£é±§é±¦é±¢é±é± é¸é·¾é¸é¸é¸é¸é¸é¸é¸é·¿é·½é¸éº é¼é½é½´é½µé½¶åæ®æ¸æ¬æ¬æ¬æ¬ç¢ç¦çªççç¤¹ç±©ç±«ç³¶çº"],["f940","çºçºçºè è¡èèèè¥¹è¥ºè¥¼è¥»è§¿è®è®èº¥èº¤èº£é®é­é¯é±é³éé¡²é¥é±¨é±®é±­é¸é¸é¸é¸é¸é¸éº¡é»µé¼é½é½¸é½»é½ºé½¹åç¦ç±¯è ¼è¶²èº¦éé´é¸é¶éµé© é±´é±³é±±é±µé¸é¸é»¶é¼"],["f9a1","é¾¤ç¨ç¥ç³·èªè ¾è ½è ¿è®è²èº©è»éé¡³é¡´é£é¥¡é¦«é©¤é©¦é©§é¬¤é¸é¸é½ææ¬ç§èèº¨éééé©©é©¨é¬®é¸ç©èè®éé±¹éº·çµé©«é±ºé¸ç©çªéº¤é½¾é½é¾ç¢é¹è£å¢»æç²§å«ºââ¦ââ â¬â£ââ©âââ¤âââªâ¡ââ§âââ¥âââ«â¢ââ¨ââââ­â®â°â¯â"]]');
            }
          ),
          /***/
          31532: (
            /***/
            function(c) {
              c.exports = JSON.parse('[["0","\\u0000",127],["8ea1","ï½¡",62],["a1a1","ãããï¼ï¼ã»ï¼ï¼ï¼ï¼ããÂ´ï½Â¨ï¼¾ï¿£ï¼¿ã½ã¾ãããä»ãããã¼ââï¼ï¼¼ï½â¥ï½â¦â¥ââââï¼ï¼ããï¼»ï¼½ï½ï½ã",9,"ï¼ï¼Â±ÃÃ·ï¼â ï¼ï¼â¦â§ââ´ââÂ°â²â³âï¿¥ï¼ï¿ ï¿¡ï¼ï¼ï¼ï¼ï¼ Â§ââââââ"],["a2a1","ââ¡â â³â²â½â¼â»ãââââã"],["a2ba","âââââââªâ©"],["a2ca","â§â¨ï¿¢ââââ"],["a2dc","â â¥ââââ¡ââªâ«ââ½ââµâ«â¬"],["a2f2","â«â°â¯â­âªâ â¡Â¶"],["a2fe","â¯"],["a3b0","ï¼",9],["a3c1","ï¼¡",25],["a3e1","ï½",25],["a4a1","ã",82],["a5a1","ã¡",85],["a6a1","Î",16,"Î£",6],["a6c1","Î±",16,"Ï",6],["a7a1","Ð",5,"ÐÐ",25],["a7d1","Ð°",5,"ÑÐ¶",25],["a8a1","ââââââââ¬â¤â´â¼âââââââ£â³â«â»ââ â¯â¨â·â¿ââ°â¥â¸â"],["ada1","â ",19,"â ",9],["adc0","ããã¢ããã§ãã¶ãããã¦ã£ã«ãã»ããããããã¡"],["addf","ã»ããâãâ¡ã¤",4,"ã±ã²ã¹ã¾ã½ã¼ââ¡â«â®âââ¥â ââ¿âµâ©âª"],["b0a1","äºåå¨é¿åææ¨å§¶é¢èµèç©æªæ¡æ¸¥æ­è¦è¦é¯µæ¢å§æ¡æ±å®å§è»é£´çµ¢ç¶¾é®æç²è¢·å®åºµæææ¡ééæä»¥ä¼ä½ä¾åå²å¤·å§å¨å°æææ°ææ¤çºçç°ç§»ç¶­ç·¯èèè¡£è¬ééºå»äºäº¥åè²éç£¯ä¸å£±æº¢é¸ç¨²è¨èé°¯åå°å½å¡å å§»å¼é£²æ·«è¤è­"],["b1a1","é¢é°é é»åå³å®çç¾½è¿é¨å¯éµçªºä¸ç¢è¼æ¸¦ååæ¬èé°»å§¥å©æµ¦çéåäºéé²èé¤å¡å¶å¬°å½±æ æ³æ æ°¸æ³³æ´©ççç©é ´è±è¡è© é­æ¶²ç«çé§æ¦è¬è¶é²æ¦å­ååå °å¥å®´å»¶æ¨æ©æ´æ²¿æ¼ççççç¿ç¸è¶èèé éé´å¡©æ¼æ±ç¥å¹å¤®å¥¥å¾å¿"],["b2a1","æ¼æºæ¨ªæ¬§æ®´çç¿è¥é´¬é´é»å²¡æ²è»åå±æ¶èæ¡¶ç¡ä¹ä¿ºå¸æ©æ¸©ç©é³ä¸åä»®ä½ä¼½ä¾¡ä½³å å¯åå¤å«å®¶å¯¡ç§æææ¶æ­æ²³ç«çç¦ç¦¾ç¨¼ç®è±èèè·è¯èè¦èª²å©è²¨è¿¦ééèä¿å³¨æçç»è¥è½è¾è³éé¤é§ä»ä¼è§£åå¡å£å»»å¿«æªææ¢ææææ¹"],["b3a1","é­æ¦æ¢°æµ·ç°çççµµè¥è¹ééè²å±å¾å¤å³å®³å´æ¨æ¦æ¶¯ç¢èè¡è©²é§éª¸æµ¬é¦¨èå£æ¿èéåååå»æ¡æ¹æ ¼æ ¸æ®»ç²ç¢ºç©«è¦è§èµ«è¼é­é£éé©å­¦å²³æ¥½é¡é¡æç¬ æ¨«æ©¿æ¢¶é°æ½å²åæ°æ¬æ´»æ¸æ»èè¤è½ä¸é°¹å¶æ¤æ¨ºéæ ªåç«è²ééåé´¨æ ¢èè±"],["b4a1","ç²¥åèç¦ä¹¾ä¾å å¯ååå§å·»åå ªå§¦å®å®å¯å¹²å¹¹æ£ææ£æ¾ææ¢ææ¡æ£ºæ¬¾æ­æ±æ¼¢æ¾æ½ç°çç£çç«¿ç®¡ç°¡ç·©ç¼¶ç¿°èè¦èè¦³è«è²«ééééé¢é¥éé¤¨èä¸¸å«å²¸å·ç©çç¼å²©ç¿«è´éé é¡é¡ä¼ä¼å±åå¨åºå¥å¬å¯å²å¸å¹¾å¿æ®æºææ¢ææ£æ£"],["b5a1","æ©å¸°æ¯æ°æ±½ç¿ç¥å­£ç¨ç´å¾½è¦è¨è²´èµ·è»è¼é£¢é¨é¬¼äºå½åå¦å®æ¯ææ¬æ¬ºç çç¥ç¾©è»èª¼è­°æ¬èé ååå«æ¡æ©è©°ç §æµé»å´å®¢èèéä¸ä¹ä»ä¼åå¸å®®å¼æ¥ææ½æ±æ±²æ³£ç¸çç©¶çª®ç¬ç´ç³¾çµ¦æ§çå»å±å·¨ææ ææ¸ èè¨±è·é¸æ¼ç¦¦é­äº¨äº«äº¬"],["b6a1","ä¾ä¾ ååç«¶å±å¶åå¡å¿å«å¬å¢å³¡å¼·å½æ¯ææ­æææ©æ³çç­ç¯è¸èèèé·é¡é¿é¥é©ä»°åå°­ææ¥­å±æ²æ¥µçæ¡ç²åå¤åå·¾é¦æ¤æ¬£æ¬½ç´ç¦ç¦½ç­ç·è¹èè¡¿è¥è¬¹è¿éåéä¹å¶å¥åºççç©è¦èº¯é§é§é§å·æèå°ç©ºå¶å¯ééä¸²æ«é§å±å±"],["b7a1","æçªæ²é´è½¡çªªçéç²æ ç¹°æ¡é¬å²åè«è¨ç¾¤è»é¡å¦è¢ç¥ä¿å¾åååå­çªåå¥å½¢å¾æµæ¶æ§æ©æ²æºæ¬æ¯æ¡æ¸ç¦ç¨½ç³»çµç¶ç¹ç½«èèèè¨è©£è­¦è»½é é¶è¸è¿é¯¨åæææ¿éæ¡åæ¬ æ±ºæ½ç©´çµè¡è¨£æä»¶å¹å¦å¥å¼å¸å£å§åå å«å»ºæ²æ¸æ³æ²"],["b8a1","æ¤æ¨©ç½ç¬ç®ç ç¡¯çµ¹çè©è¦è¬è³¢è»é£éµéºé¡é¨é¹¸ååå³å¹»å¼¦æ¸æºçç¾çµè·è¨è«ºéä¹åå¤å¼åºå§å­¤å·±åº«å¼§æ¸ææ¯æ¹çç³è¢´è¡è¡è°èèªè·¨é·éé¡§é¼äºäºä¼ååå¾å¨¯å¾å¾¡ææ¢§æªçç¢èªèª¤è­·éä¹é¯äº¤ä½¼ä¾¯åååå¬åå¹å¾åå£å"],["b9a1","åååå¢å¥½å­å­å®å·¥å·§å··å¹¸åºåºåº·å¼æææææ§æ»æææ´æ­æ ¡æ¢æ§æ±æ´ªæµ©æ¸¯æºç²çç¡¬ç¨¿ç³ ç´ç´çµç¶±èèè¯è±èèèªèè¡è¡¡è¬è²¢è³¼ééµé±ç ¿é¼é¤éé é¦é«é´»åå«å·åå£æ·æ¿ è±ªè½éº¹åå»åå½ç©é·éµ é»çæ¼è°çå¿½æéª¨çè¾¼"],["baa1","æ­¤é ä»å°å¤å¢¾å©æ¨ææææ ¹æ¢±æ··çç´ºè®é­äºä½åååµ¯å·¦å·®æ»æ²ç³ç è©éè£ååº§æ«åµå¬åæåå¡å¦»å®°å½©ææ¡æ ½æ­³æ¸ç½éçç ç ¦ç¥­æç´°èè£è¼éå¤å¨æç½ªè²¡å´åéªå ºæ¦è´å²å´å¼ç¢é·ºä½ååæ¾æ¨ææµçªç­ç´¢é¯æ¡é®­ç¬¹ååå·"],["bba1","å¯æ¶æ®æ¦æ­æ®ºè©éçé¯æéé®«ç¿æä¸ååå±±æ¨ææ£æ¡ç¦çç£ç®çºèè®è³é¸é¤æ¬æ«æ®ä»ä»ä¼ºä½¿åºå¸å²å£åå£«å§å§å§¿å­å±å¸å¸«å¿æææ¯å­æ¯æ½æ¨ææ­¢æ­»æ°çç¥ç§ç³¸ç´ç´«è¢èè³è¦è©è©©è©¦èªè«®è³è³éé£¼æ­¯äºä¼¼ä¾åå­å¯ºæææ"],["bca1","æ¬¡æ»æ²»ç¾ç½çç£ç¤ºèè³èªèè¾æ±é¹¿å¼è­é´«ç«ºè»¸å®é«ä¸å±å·å¤±å«å®¤ææ¹¿æ¼ç¾è³ªå®èç¯ å²æ´èå±¡èç¸èåå°æ¨èµ¦æç®ç¤¾ç´èè¬è»é®èéªååºå°ºæç¼çµééé«è¥å¯å¼±æ¹ä¸»åå®ææ±æ®ç©ç ç¨®è«è¶£éé¦åååªå¯¿ææ¨¹ç¶¬éååå¨"],["bda1","å®å°±å·ä¿®ææ¾æ´²ç§ç§çµç¹ç¿è­èèè¡è¥²è®è¹´è¼¯é±éé¬ééä»ä½ååå¾æææ±æ¸ç£ç¸¦ééåå¤å®¿æ·ç¥ç¸®ç²å¡¾çåºè¡è¿°ä¿å³»æ¥ç¬ç«£èé§¿åå¾ªæ¬æ¥¯æ®æ·³æºæ½¤ç¾ç´å·¡éµéé å¦åææææ¸åº¶ç·ç½²æ¸è¯è·è«¸å©åå¥³åºå¾æé¤é¤å·å"],["bea1","åå åå¬å¨åå±åå¥¨å¦¾å¨¼å®µå°å°å°å°åºåºå» å½°æ¿ææææ·æææ­æ¶æ¾æ¢¢æ¨æ¨µæ²¼æ¶æ¸æ¹ç¼ç¦ç§ççç¡ç¤ç¥¥ç§°ç« ç¬ç²§ç´¹èèèèè¡è£³è¨è¨¼è©è©³è±¡è³é¤é¦é¾éééä¸ä¸ä¸ä¹åå°åå ´å£å¬¢å¸¸ææ¾æ¡ææµç¶ç³ç©£è¸è­²é¸é å±å´é£¾"],["bfa1","æ­æ¤æ®ç­ç¹è·è²è§¦é£èè¾±å°»ä¼¸ä¿¡ä¾µåå¨ å¯å¯©å¿ææ¯æ°ææ£®æ¦æµ¸æ·±ç³ç¹çç¥ç§¦ç´³è£è¯èªè¦ªè¨ºèº«è¾é²ééäººä»åå¡µå£¬å°çå°½èè¨è¿é£é­ç¬¥è«é é¢å³å¨éå¹åå¸¥æ¨æ°´çç¡ç²ç¿ è¡°éééééçé«å´åµ©æ°æ¢è¶¨éæ®ææ¤èé éè£¾"],["c0a1","æ¾æºå¯¸ä¸ç¬çæ¯åå¶å¢å§å¾æ§ææ¿æ´ææ´æ£²æ æ­£æ¸ç²ççç²¾èå£°è£½è¥¿èª èªè«ééééæç¨èé»å¸­æææ¥ææç³ç©ç±ç¸¾èè²¬èµ¤è·¡è¹ç¢©åææ¥ææè¨­çªç¯èª¬éªçµ¶èèä»ååå å®£å°å°å·æ¦ææ°æ æ ´æ³æµæ´ææ½çç½æç©¿ç®­ç·"],["c1a1","ç¹ç¾¨èºèè¹è¦è©®è³è·µé¸é·é­ééé®®ååæ¼¸ç¶å¨ç¦ç¹è³ç³åå¡å²¨æªæ¾æ½æ¥çççç¤ç¥ç§ç²ç´ çµèè¨´é»é¡é¼ å§åµåå¢ååªå£®å¥ç½å®å±¤åæ£æ³æææ¿æ»ææ©æ¹å·£æ§æ§½æ¼ç¥äºç©ç¸çªç³ç·ç¶è¡èèè¬è¼è»è£èµ°éé­ééé¨åå¢æ"],["c2a1","èèµè´é ä¿å´åå³æ¯æææ¸¬è¶³éä¿å±è³æç¶åè¢å¶æå­å­«å°ææéä»å¤å¤ªæ±°è©å¾å å¦¥æ°ææèµæ¥éé§é¨¨ä½å å¯¾èå²±å¸¯å¾æ ææ´æ¿æ³°æ»èè¿èè¢è²¸éé®éé»é¯ä»£å°å¤§ç¬¬éé¡é·¹æ»ç§ååå®ææææ²¢æ¿¯ç¢è¨é¸æ¿è«¾è¸å§è¸åª"],["c3a1","å©ä½éè¾°å¥ªè±å·½ç«ªè¾¿æ£è°·ç¸é±æ¨½èª°ä¸¹ååå¦ææ¢æ¦æ­æ·¡æ¹ç­ç­ç«¯ç®ªç¶»è½èèèªéå£å£å¼¾æ­ææªæ®µç·è«å¤ç¥å°å¼æ¥æºæ± ç´ç¨ç½®è´èéé¦³ç¯çç«¹ç­èéç§©çªè¶å«¡çä¸­ä»²å®å¿ æ½æ¼æ±æ³¨è«è¡·è¨»éé³é§æ¨ç¦çªè§èè²¯ä¸åååå¯µ"],["c4a1","å¸å¸³åºå¼å¼µå½«å¾´æ²ææ¢ææ½®ççºçºè´è¹è¸è¶èª¿è«è¶è·³éé·é é³¥åæç´ææ²çè³é®é³æ´¥å¢æ¤æ§è¿½éçéå¡æ æ´æ§»ä½æ¼¬æè¾»è¦ç¶´éæ¤¿æ½°åªå£·å¬¬ç´¬çªåé£é¶´äº­ä½ååµåè²åå ¤å®å¸åºåº­å»·å¼ææµæºææ¢¯æ±ç¢ç¦ç¨ç· èè¨è«¦è¹é"],["c5a1","é¸é­éé¼æ³¥ææ¢æµæ»´çç¬é©éæººå²å¾¹æ¤è½è¿­éå¸å¡«å¤©å±åºæ·»çºçè²¼è»¢é¡ç¹ä¼æ®¿æ¾±ç°é»ååå µå¡å¦¬å± å¾æææ¸¡ç»èè³­éé½éç ¥ç ºåªåº¦åå¥´æååå¬åååå¡å¡å¥å®å³¶å¶æ¼ææ­æ±æ¡æ¢¼æ£çæ·æ¹¯æ¶ç¯çå½çç¥·ç­ç­ç­ç³çµ±å°"],["c6a1","è£è©è¤è¨è¬è±è¸éééé¶é ­é¨°éåååå å°æ§ææ´ç³ç«¥è´èééå³ é´å¿å¾å¾³æ¶ç¹ç£ç¦¿ç¯¤æ¯ç¬èª­æ æ©¡å¸çªæ¤´å±é³¶è«å¯éçå¸å±¯ææ¦æ²è±éé åæéå¥é£åä¹åªèè¬çæºéæ¥¢é¦´ç¸ç·åæ¥ è»é£æ±äºå°¼å¼è¿©åè³èè¹å»¿æ¥ä¹³å¥"],["c7a1","å¦å°¿é®ä»»å¦å¿èªæ¿¡ç¦°ç¥¢å¯§è±ç«ç±å¹´å¿µæ»æçç²ä¹å»¼ä¹åå¢æ©æ¿ç´è½è³è¿è¾²è¦è¤å·´ææ­è¦æ·æ³¢æ´¾ç¶ç ´å©ç½µè­é¦¬ä¿³å»ææææ¯ççèèºè¼©éåå¹åªæ¢æ¥³ç¤ç½è²·å£²è³ éªéè¿ç§¤ç§è©ä¼¯å¥åæææ³ç½ç®ç²è¶èè¿«ææ¼ çç¸è«é§éº¦"],["c8a1","å½ç®±ç¡²ç®¸èç­æ«¨å¹¡èçç å«é¢æºçºéé«ªä¼ç½°æç­é¥é³©åºå¡è¤é¼ä¼´å¤åååå¸æ¬ææ¿æ°¾æ±çç¯ç­çç¹è¬è©è²©ç¯éç©é é£¯æ½æ©çªç¤ç£èè®åªåå¦å¦åºå½¼æ²ææ¹æ«ææ¯æ³ç²ç®ç¢ç§ç·ç½·è¥è¢«èª¹è²»é¿éé£æ¨ç°¸åå°¾å¾®ææ¯çµçç¾"],["c9a1","é¼»æç¨å¹çé«­å½¦èè±èå¼¼å¿ç¢ç­é¼æ¡§å§«åªç´ç¾è¬¬ä¿µå½ªæ¨æ°·æ¼ç¢ç¥¨è¡¨è©è±¹å»æçç§èé¨é²èè­é°­åå½¬ææµçè²§è³é »æç¶ä¸ä»å å¤«å©¦å¯å¨å¸åºææ¶æ·æ§æ®æµ®ç¶ç¬¦èèèè­è² è³¦èµ´ééä¾®æ«æ­¦èè¡èªé¨å°æ¥é¢¨èºèä¼å¯å¾©å¹æ"],["caa1","ç¦è¹è¤è¦æ·µå¼ææ²¸ä»ç©é®åå»å´å¢³æ¤æ®çå¥®ç²ç³ç´é°æèä¸ä½µåµå¡å¹£å¹³å¼æä¸¦è½ééç±³é å»å£çç¢§å¥ç¥èç®åå¤çç¯ç·¨è¾ºè¿éä¾¿åå¨©å¼é­ä¿èéªåææ­©ç«è£è¼ç©åå¢æææ®æ¯ç°¿è©å£ä¿¸ååå ±å¥å®å³°å³¯å´©åºæ±æ§æ¾æ¹æ"],["cba1","æ³æ³¡ç¹ç ²ç¸«èè³èè¬èè¤è¨ªè±é¦éé£½é³³éµ¬ä¹äº¡åååå¦¨å¸½å¿å¿æ¿æ´æææ£åç´¡èªè¨è¬è²è²¿é¾é²å é ¬åååå¢¨æ²æ´ç§ç¦ç©é¦åæ²¡æ®å å¹å¥æ¬ç¿»å¡çæ©ç£¨é­éº»åå¦¹æ§ææ¯å©æ§å¹èæé®ªæ¾é±æ¡äº¦ä¿£åæ¹æ«æ²«è¿ä¾­ç¹­éº¿ä¸æ¢æº"],["cca1","æ¼«èå³æªé­å·³ç®å²¬å¯èæ¹èç¨èå¦ç²æ°ç åå¤¢ç¡ççé§éµ¡æ¤å©¿å¨å¥åå½æçè¿·éé³´å§ªçæ»åæ£ç¶¿ç·¬é¢éººæ¸æ¨¡èå¦å­æ¯çç²ç¶²èèå²æ¨é»ç®æ¢å¿é¤å°¤æ»ç±¾è²°åæ¶ç´éåä¹å¶å¤çºè¶éå¼¥ç¢åå½¹ç´è¬è¨³èºéæ³è®éæææ²¹ç"],["cda1","è«­è¼¸å¯ä½åªååå®¥å¹½æ æææææ¹§æ¶ç¶ç·ç±ç¥è£èªéééµéèå¤äºä½ä¸èªè¼¿é å­å¹¼å¦å®¹åº¸ææºæææ¥æ§æ´æº¶çç¨çª¯ç¾èèèè¦è¬¡è¸é¥é½é¤æ¾ææ¬²æ²æµ´ç¿ç¿¼æ·ç¾èºè£¸æ¥è±é ¼é·æ´çµ¡è½éªä¹±åµåµæ¬æ¿«èè­è¦§å©åå±¥ææ¢¨çç"],["cea1","ç¢è£è£¡éé¢é¸å¾çç«èæ ç¥åæµæºççç¡«ç²éç«é¾ä¾¶æ®æèäºäº®åä¸¡åå¯®ææ¢æ¶¼ççç­ç¨ç³§è¯è«é¼ééµé åç·å«åææ·çç³è¨è¼ªé£é±éºç å¡æ¶ç´¯é¡ä»¤ä¼¶ä¾å·å±å¶ºæç²ç¤¼èé´é·é¶ééºé½¢æ¦æ­´åå£çè£å»æææ¼£çç°¾ç·´è¯"],["cfa1","è®é£é¬åé­¯æ«çè³è·¯é²å´å©å»å¼ææ¥¼æ¦æµªæ¼ç¢ç¼ç¯­èè¾èéå­éºç¦èé²è«å­åè©±æ­ªè³èææ é·²äºäºé°è©«èè¨æ¤æ¹¾ç¢è"],["d0a1","å¼ä¸ä¸ä¸ªä¸±ä¸¶ä¸¼ä¸¿ä¹ä¹ä¹äºäºè±«äºèå¼äºäºäºäº äº¢äº°äº³äº¶ä»ä»ä»ä»ä»ä»ä»ä»­ä»ä»·ä¼ä½ä¼°ä½ä½ä½ä½ä½¶ä¾ä¾ä¾ä½»ä½©ä½°ä¾ä½¯ä¾ä¾åä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿¤ä¿¥åå¨ååªå¥åä¼ä¿¶å¡å©å¬ä¿¾ä¿¯ååååæåååååå¬å¸åååå´å²"],["d1a1","ååå³åååå¥å­å£å®å¹åµåååååååå¡åºå·å¼å»å¿ååååå¢ç«¸å©åªå®ååååååååååå¤å¦å¢å©åªå«å³å±å²å°åµå½åååå èå©å­å°åµå¾ååååå§åªå®å³å¹åååååååªå´å©å³å¿å½åååå±ååè¾¨"],["d2a1","è¾§å¬å­å¼åµååååå£å¦é£­å å³åµå¸å¹ååç¸åååååå£å¯å±å³å¸åååä¸ååååå©å®å¤å»å·ååå å¦å¥å®å°å¶åç°éåæ¼ç®å®å¨å­åºåå½åå¬å­å¼å®å¶å©ååååµååå±å·å°åå»åå¶ååååå¢å¸å¥å¬ååå¨"],["d3a1","å«åå¤å¾å¼åå¥å¦ååå½å®å­åºå¢å¹åå£åå®ååååå¸å³åååå¯ååå»å¾ååå®å¼åå©åå¨åååååå¤ååå·åå¾å½åå¹ååçå´å¶å²å¸å«å¤å¯å¬åªåååå ååå¥å®å¶å´åå¼ååååååååå®å¹åå¿åå"],["d4a1","ååååååååå¦å·å¸åå»ååå©ååå¡å¿ååå å³å¤åªå°åååååå åå£å å å å¡²å ¡å¡¢å¡å¡°æ¯å¡å ½å¡¹å¢å¢¹å¢å¢«å¢ºå£å¢»å¢¸å¢®å£å£å£å£å£å£å£¥å£å£¤å£å£¯å£ºå£¹å£»å£¼å£½å¤å¤å¤å¤æ¢¦å¤¥å¤¬å¤­å¤²å¤¸å¤¾ç«å¥å¥å¥å¥å¥å¥¢å¥ å¥§å¥¬å¥©"],["d5a1","å¥¸å¦å¦ä½ä¾«å¦£å¦²å§å§¨å§å¦å§å§å¨¥å¨å¨å¨å¨å¨å©å©¬å©å¨µå¨¶å©¢å©ªåªåª¼åª¾å«å«åª½å«£å«å«¦å«©å«å«ºå«»å¬å¬å¬å¬²å«å¬ªå¬¶å¬¾å­å­å­å­å­å­å­å­¥å­©å­°å­³å­µå­¸æå­ºå®å®å®¦å®¸å¯å¯å¯å¯å¯å¯¤å¯¦å¯¢å¯å¯¥å¯«å¯°å¯¶å¯³å°å°å°å°å°å° å°¢å°¨å°¸å°¹å±å±å±å±"],["d6a1","å±å±å­±å±¬å±®ä¹¢å±¶å±¹å²å²å²å¦å²«å²»å²¶å²¼å²·å³å²¾å³å³å³©å³½å³ºå³­å¶å³ªå´å´å´åµå´å´å´å´å´¢å´å´å´åµåµåµåµåµ¬åµ³åµ¶å¶å¶å¶å¶¢å¶å¶¬å¶®å¶½å¶å¶·å¶¼å·å·å·å·å·å·å·«å·²å·µå¸å¸å¸å¸å¸å¸¶å¸·å¹å¹å¹å¹å¹å¹å¹å¹¢å¹¤å¹å¹µå¹¶å¹ºéº¼å¹¿åº å»å»å»å»å»"],["d7a1","å»å»£å»å»å»å»¢å»¡å»¨å»©å»¬å»±å»³å»°å»´å»¸å»¾å¼å¼å½å½å¼å¼å¼å¼©å¼­å¼¸å½å½å½å½å¼¯å½å½å½å½å½¡å½­å½³å½·å¾å¾å½¿å¾å¾å¾å¾å¾å¾å¾å¾ å¾¨å¾­å¾¼å¿å¿»å¿¤å¿¸å¿±å¿æ³å¿¿æ¡æ æææ©ææ±æææ«æ¦ææºæææªæ·æææææ£ææ¤ææ¬æ«ææææ§ææ"],["d8a1","ææææææ§ææ¡æ¸æ ææ´å¿°æ½ææµæææææ¶æ·ææ´æºææ¡æ»æ±ææææ¾æ¨æ§ææ¿æ¼æ¬æ´æ½æææ³æ·ææææ«æ´æ¯æ¥æ±ææææµææææ¬æææææ«æ®ææææ·ææææºæç½¹ææ¦æ£æ¶æºæ´æ¿æ½æ¼æ¾æææææææ"],["d9a1","ææ¡æªæ®æ°æ²æ³ææææ£ææ æ¨æ¼æææ¾æææææææææ»ææ¿ææææææææææææ®æ±æ§æææ¯æµææ¾æææææææ«æ¶æ£ææææµæ«æ©æ¾æ©æææ£æææ¶æææ´æææ¦æ¶æææ¨ææ§æ¯æ¶ææªæææ¥æ©ææ¼"],["daa1","æææææ»æææ±æ§èæ æ¡æ¬æ£æ¯æ¬æ¶æ´æ²æºææ½ææææ¤æ£æ«æ´æµæ·æ¶æ¸çææææææææ²æ¸ææè®æææ«æ·æææææææææ æ¡æ±æ²æææ»æ³æµæ¶æ´ææææææææ¤æ§æ¨ææ¢æ°æææææææææ¹ææ¾æ¼"],["dba1","ææ¸æææ æ¿æ¦æ©æ°æµæ·ææææ¦æ§é¸æ®æ¿æ¶ææ¸æ·æææ ææ£æ¤ææ°æ©æ¼æªæææ¦æ¡ææ·æ¯æ´æ¬æ³æ©æ¸æ¤æææ¢æ®æ¹æææ§æªæ æ¡æ ©æ¡æ¡æ ²æ¡æ¢³æ «æ¡æ¡£æ¡·æ¡¿æ¢æ¢æ¢­æ¢æ¢æ¢æ¢æª®æ¢¹æ¡´æ¢µæ¢ æ¢ºæ¤æ¢æ¡¾æ¤æ£æ¤æ£æ¤¢æ¤¦æ£¡æ¤æ£"],["dca1","æ£æ£§æ£æ¤¶æ¤æ¤æ£æ££æ¤¥æ£¹æ£ æ£¯æ¤¨æ¤ªæ¤æ¤£æ¤¡æ£æ¥¹æ¥·æ¥æ¥¸æ¥«æ¥æ¥¾æ¥®æ¤¹æ¥´æ¤½æ¥æ¤°æ¥¡æ¥æ¥æ¦æ¥ªæ¦²æ¦®æ§æ¦¿æ§æ§æ¦¾æ§å¯¨æ§æ§æ¦»æ§æ¦§æ¨®æ¦æ¦ æ¦æ¦æ¦´æ§æ§¨æ¨æ¨æ§¿æ¬æ§¹æ§²æ§§æ¨æ¦±æ¨æ§­æ¨æ§«æ¨æ¨æ«æ¨£æ¨æ©æ¨æ©²æ¨¶æ©¸æ©æ©¢æ©æ©¦æ©æ¨¸æ¨¢æªæªæª æªæª¢æª£"],["dda1","æªèæª»æ«æ«æª¸æª³æª¬æ«æ«æ«æªªæ«æ«ªæ«»æ¬èæ«ºæ¬æ¬é¬±æ¬æ¬¸æ¬·çæ¬¹é£®æ­æ­æ­æ­æ­æ­æ­æ­æ­¡æ­¸æ­¹æ­¿æ®æ®æ®æ®æ®æ®æ®æ®¤æ®ªæ®«æ®¯æ®²æ®±æ®³æ®·æ®¼æ¯æ¯æ¯æ¯æ¯¬æ¯«æ¯³æ¯¯éº¾æ°æ°æ°æ°æ°¤æ°£æ±æ±æ±¢æ±ªæ²æ²æ²æ²æ²æ±¾æ±¨æ±³æ²æ²æ³æ³±æ³æ²½æ³æ³æ³æ²®æ²±æ²¾"],["dea1","æ²ºæ³æ³¯æ³æ³ªæ´è¡æ´¶æ´«æ´½æ´¸æ´æ´µæ´³æ´æ´æµ£æ¶æµ¤æµæµ¹æµæ¶æ¶æ¿¤æ¶æ·¹æ¸æ¸æ¶µæ·æ·¦æ¶¸æ·æ·¬æ·æ·æ·¨æ·æ·æ·ºæ·æ·¤æ·æ·ªæ·®æ¸­æ¹®æ¸®æ¸æ¹²æ¹æ¸¾æ¸£æ¹«æ¸«æ¹¶æ¹æ¸æ¹æ¸ºæ¹æ¸¤æ»¿æ¸æ¸¸æºæºªæºæ»æº·æ»æº½æº¯æ»æº²æ»æ»æºæº¥æ»æºæ½æ¼çæ»¬æ»¸æ»¾æ¼¿æ»²æ¼±æ»¯æ¼²æ»"],["dfa1","æ¼¾æ¼æ»·æ¾æ½ºæ½¸æ¾æ¾æ½¯æ½æ¿³æ½­æ¾æ½¼æ½æ¾æ¾æ¿æ½¦æ¾³æ¾£æ¾¡æ¾¤æ¾¹æ¿æ¾ªæ¿æ¿æ¿¬æ¿æ¿æ¿±æ¿®æ¿ççæ¿ºçççæ¿¾ççæ½´çççç°ç¾ç²çç£ççç¯ç±ç¬ç¸ç³ç®çççççç½ççç¥ççç¦ç¢ççç¬çç»ççç¨ç¬çç¹ç¾ççççç ç¬ç§çµç¼"],["e0a1","ç¹ç¿çççç¨ç­ç¬ç°ç²ç»ç¼ç¿ççççç´ç¾çççççç¢ç§ç¹ç²çççççç¢ç ç¡ç¹ç·åçççççç´ç¯ç©ç¥ç¾ççé»ççªç¨ç°ç¸çµç»çºçç³çç»çç¥ç®çç¢çç¯ç¥ç¸ç²çºçç¿ççççç©ç°ç£çªç¶ç¾ççç§çççç±"],["e1a1","ç ç£ç§ç©ç®ç²ç°ç±ç¸ç·çççççççççç¦ç¬ç¼çççççççç©ç¤ç§ç«ç­ç¸ç¶ççç´ççççççç¥ç£çç³ççµç½ç¸ç¼ç±ççççç£çç¾ç¿ç¼çç°çºç²ç³ççççç§ç ç¡ç¢ç¤ç´ç°ç»çççççç¡ç¢ç¨ç©çªç§ç¬ç°"],["e2a1","ç²ç¶ç¸ç¼çççççççççç°ç´ç¸ç¹çºçççççç¡ç¥ç§çªè¯ç»çççç©ç¤çç¥ç¦çç·ç¸ççç¨ç«çç¥ç¿ç¾ç¹çççç çç°ç¶ç¹ç¿ç¼ç½ç»çççççç£ç®ç¼ç ç ç¤¦ç  ç¤ªç¡ç¢ç¡´ç¢ç¡¼ç¢ç¢ç¢£ç¢µç¢ªç¢¯ç£ç£ç£ç£ç¢¾ç¢¼ç£ç£ç£¬"],["e3a1","ç£§ç£ç£½ç£´ç¤ç¤ç¤ç¤ç¤¬ç¤«ç¥ç¥ ç¥ç¥ç¥ç¥ç¥ç¥ºç¥¿ç¦ç¦ç¦§é½ç¦ªç¦®ç¦³ç¦¹ç¦ºç§ç§ç§§ç§¬ç§¡ç§£ç¨ç¨ç¨ç¨ç¨ ç¨ç¦ç¨±ç¨»ç¨¾ç¨·ç©ç©ç©ç©¡ç©¢ç©©é¾ç©°ç©¹ç©½çªçªçªçªçªçª©ç«çª°çª¶ç«ç«çª¿éç«ç«ç«ç«ç«ç«ç«ç«ç«ç«¡ç«¢ç«¦ç«­ç«°ç¬ç¬ç¬ç¬ç¬³ç¬ç¬ç¬ç¬µç¬¨ç¬¶ç­"],["e4a1","ç­ºç¬ç­ç¬ç­ç­ç­µç­¥ç­´ç­§ç­°ç­±ç­¬ç­®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç­ç®ç¯ç¯ç¯ç¯ç®´ç¯ç¯ç¯©ç°ç°ç¯¦ç¯¥ç± ç°ç°ç°ç¯³ç¯·ç°ç°ç¯¶ç°£ç°§ç°ªç°ç°·ç°«ç°½ç±ç±ç±ç±ç±ç±ç±ç±ç±¤ç±ç±¥ç±¬ç±µç²ç²ç²¤ç²­ç²¢ç²«ç²¡ç²¨ç²³ç²²ç²±ç²®ç²¹ç²½ç³ç³ç³ç³ç³ç³ç³¢é¬»ç³¯ç³²ç³´ç³¶ç³ºç´"],["e5a1","ç´ç´ç´ç´çµçµç´®ç´²ç´¿ç´µçµçµ³çµçµçµ²çµ¨çµ®çµçµ£ç¶ç¶çµç¶çµ½ç¶ç¶ºç¶®ç¶£ç¶µç·ç¶½ç¶«ç¸½ç¶¢ç¶¯ç·ç¶¸ç¶ç¶°ç·ç·ç·¤ç·ç·»ç·²ç·¡ç¸ç¸ç¸£ç¸¡ç¸ç¸±ç¸ç¸ç¸ç¸¢ç¹ç¹¦ç¸»ç¸µç¸¹ç¹ç¸·ç¸²ç¸ºç¹§ç¹ç¹ç¹ç¹ç¹ç¹¹ç¹ªç¹©ç¹¼ç¹»çºç·ç¹½è¾®ç¹¿çºçºçºçºçºçºçºçºçºçºçºç¼¸ç¼º"],["e6a1","ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ ç½¨ç½©ç½§ç½¸ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾£ç¾¯ç¾²ç¾¹ç¾®ç¾¶ç¾¸è­±ç¿ç¿ç¿ç¿ç¿ç¿¡ç¿¦ç¿©ç¿³ç¿¹é£èèèèèèèè¡è¨è¿è»èèèèèèè¢è¨è³è²è°è¶è¹è½è¿èèèèèèè­åè¬èè¥èèèèèèè¯è±èè©è£è¯è"],["e7a1","éèè¾èèè¼è±è®è¥è¦è´èèèèèè èè¤è£èèè©è°èµè¾è¸è½èèèºèèèèèèèèè è§èºè»è¾èèèèèèèèè©è«è¸è³èèèèèèè¤è¢è¨èªè«è®è±è·è¸è¾èèè«èè»è¬è¡è£èèè´è³èºèèè»è¹èèèèè"],["e8a1","èµè´èè²è±èè¹èèè¯è«èèèèèªèè¢èè£èèèè¼èµè³èµè èè¨è´èè«èè½èèèèè·èè è²èè¢è è½è¸èè»è­èªè¼èèè·è«è­è®èè©èè¬è¯è¹èµèè¢è¹è¿èèèè»èèèèèè¡è¡è¿è´èèè¬èèèè¼èè£èè"],["e9a1","èèèèèè¤èèèè¨è­èèèªèèè·è¾èèèºèè¹èèèè¥èè¹èèèè¾èºèè¢èè°è¿èä¹èèè§è±èè£è©èªèèè¶è¯èèè°èè £è«èèè©è¬èèè¯èèèèèè»èèèè¹èè´è¿è·è»è¥è©èè èè¸èèè´èè¨è®è"],["eaa1","èè£èªè è¢èèè¯èè½èèéè«èè³èèè»è¯è²è è è è¾è¶è·è èè è è è ¢è ¡è ±è ¶è ¹è §è »è¡è¡è¡è¡è¡è¡¢è¡«è¢è¡¾è¢è¡µè¡½è¢µè¡²è¢è¢è¢è¢®è¢è¢¢è¢è¢¤è¢°è¢¿è¢±è£è£è£è£è£è£è£¹è¤è£¼è£´è£¨è£²è¤è¤è¤è¤è¥è¤è¤¥è¤ªè¤«è¥è¥è¤»è¤¶è¤¸è¥è¤è¥ è¥"],["eba1","è¥¦è¥¤è¥­è¥ªè¥¯è¥´è¥·è¥¾è¦è¦è¦è¦è¦è¦¡è¦©è¦¦è¦¬è¦¯è¦²è¦ºè¦½è¦¿è§è§è§è§è§§è§´è§¸è¨è¨è¨è¨è¨è¨è¨¥è¨¶è©è©è©è©è©è©¼è©­è©¬è©¢èªèªèªèª¨èª¡èªèª¥èª¦èªèª£è«è«è«è«è««è«³è«§è«¤è«±è¬è« è«¢è«·è«è«è¬è¬è¬è«¡è¬è¬è¬è¬ è¬³é«è¬¦è¬«è¬¾è¬¨è­è­è­è­è­è­è­è­è­«"],["eca1","è­è­¬è­¯è­´è­½è®è®è®è®è®è®è®è®è°ºè±è°¿è±è±è±è±è±è±¢è±¬è±¸è±ºè²è²è²è²è²è²è²è±¼è²æè²­è²ªè²½è²²è²³è²®è²¶è³è³è³¤è³£è³è³½è³ºè³»è´è´è´è´è´è´è´é½è´è³è´è´èµ§èµ­èµ±èµ³è¶è¶è·è¶¾è¶ºè·è·è·è·è·è·è·ªè·«è·è·£è·¼è¸è¸è·¿è¸è¸è¸è¸è¹è¸µè¸°è¸´è¹"],["eda1","è¹è¹è¹è¹è¹è¹è¹¤è¹ è¸ªè¹£è¹è¹¶è¹²è¹¼èºèºèºèºèºèºèºèºèºèºèºªèº¡èº¬èº°è»èº±èº¾è»è»è»è»è»£è»¼è»»è»«è»¾è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼¦è¼³è¼»è¼¹è½è½è¼¾è½è½è½è½è½è½è½¢è½£è½¤è¾è¾è¾£è¾­è¾¯è¾·è¿è¿¥è¿¢è¿ªè¿¯éè¿´éè¿¹è¿ºééé¡ééééé§é¶éµé¹è¿¸"],["eea1","ééééééé¾éééé¨é¯é¶é¨é²éé½éééééé¨é¯é±éµé¢é¤æééééé²é°éééé£é¥é©é³é²éééé¢é«é¯éªéµé´éºéééééééé¡éé¼éµé¶éé¿éé¬ééééééé¤ééé¿ééééééééé¹é·é©ééºéé®"],["efa1","éé¢éé£éºéµé»éé é¼é®éé°é¬é­éé¹ééé¨é¥éééééé¤ééééééé¶é«éµé¡éºééééé é¢ééªé©é°éµé·é½éé¼é¾éé¿éééééééé é¨é§é­é¼é»é¹é¾éæ¿¶éééééééé¡é¥é¢é¡é¨é®é¯ééééé·éé"],["f0a1","ééé¦é²é¬éééééªé§é±é²é°é´é¶é¸é¹ééééè¥éééé¹éééééééééé¤éªé°é¹é½é¾ééééééé é¤é¦é¨åé«é±é¹éé¼ééºéééééé¨é¦é£é³é´éééééé­é½é²ç«é¶éµé é é ¸é ¤é ¡é ·é ½é¡é¡é¡é¡«é¡¯é¡°"],["f1a1","é¡±é¡´é¡³é¢ªé¢¯é¢±é¢¶é£é£é£é£©é£«é¤é¤é¤é¤é¤é¤¡é¤é¤é¤¤é¤ é¤¬é¤®é¤½é¤¾é¥é¥é¥é¥é¥é¥é¥é¥é¥é¦é¦é¦¥é¦­é¦®é¦¼é§é§é§é§é§é§­é§®é§±é§²é§»é§¸é¨é¨é¨é§¢é¨é¨«é¨·é©é©é©é©é¨¾é©é©é©é©é©é©¢é©¥é©¤é©©é©«é©ªéª­éª°éª¼é«é«é«é«é«é«é«é«¢é«£é«¦é«¯é««é«®é«´é«±é«·"],["f2a1","é«»é¬é¬é¬é¬é¬¢é¬£é¬¥é¬§é¬¨é¬©é¬ªé¬®é¬¯é¬²é­é­é­é­é­é­é­é­´é®é®é®é®é®é®é® é®¨é®´é¯é¯é®¹é¯é¯é¯é¯é¯£é¯¢é¯¤é¯é¯¡é°ºé¯²é¯±é¯°é°é°é°é°é°é°é°é°é°é°é°®é°é°¥é°¤é°¡é°°é±é°²é±é°¾é±é± é±§é±¶é±¸é³§é³¬é³°é´é´é³«é´é´é´ªé´¦é¶¯é´£é´éµé´é´éµé´¿é´¾éµéµ"],["f3a1","éµéµéµ¤éµéµéµéµ²é¶é¶é¶«éµ¯éµºé¶é¶¤é¶©é¶²é·é·é¶»é¶¸é¶ºé·é·é·é·é·é·¸é·¦é·­é·¯é·½é¸é¸é¸é¹µé¹¹é¹½éºéºéºéºéºéºéºéºéº¥éº©éº¸éºªéº­é¡é»é»é»é»é»é»é»é»é» é»¥é»¨é»¯é»´é»¶é»·é»¹é»»é»¼é»½é¼é¼ç·é¼é¼¡é¼¬é¼¾é½é½é½é½£é½é½ é½¡é½¦é½§é½¬é½ªé½·é½²é½¶é¾é¾é¾ "],["f4a1","å ¯æ§éç¤åç"],["f9a1","çºè¤ééèä¿ç»æ±æ£é¹æ»å½ä¸¨ä»¡ä»¼ä¼ä¼ä¼¹ä½ä¾ä¾ä¾ä¾ä¿åå¢ä¿¿ååå°ååå´ååå¤åå¾å¬ååå¦ååååå¤å²åå²åï¨ååå©å¿ååå¥å¬ååï¨ï¨å¢å¢²å¤å¥å¥å¥å¥£å¦¤å¦ºå­å¯ç¯å¯å¯¬å°å²¦å²ºå³µå´§åµï¨åµåµ­å¶¸å¶¹å·å¼¡å¼´å½§å¾·"],["faa1","å¿ææææææ æ²ææ·æ°æææ¦æµæ ææææææ»ææ®ææ¤æ¥ææï¨æ³ææ æ²æ¿æºæï¤©æ¦æ»æ¡ææ æ¡æ£ï¨æ¥¨ï¨æ¦æ§¢æ¨°æ©«æ©æ©³æ©¾æ«¢æ«¤æ¯æ°¿æ±æ²æ±¯æ³æ´æ¶æµ¯æ¶æ¶¬æ·æ·¸æ·²æ·¼æ¸¹æ¹æ¸§æ¸¼æº¿æ¾æ¾µæ¿µççç¨çç«çççççï¨çç¾ç±"],["fba1","ç¾ç¤ï¨ç·ç½ççç£çççµç¦çªç©ç®ç¢çççç¯ççççç¦ï¨çå¯ç ¡ç¡ç¡¤ç¡ºç¤°ï¨ï¨ï¨ç¦ï¨ç¦ç«ç«§ï¨ç««ç®ï¨çµçµç¶·ç¶ ç·ç¹ç½ç¾¡ï¨èè¢è¿èè¶èè´èèè«ï¨è°ï¨ ï¨¡è è£µè¨è¨·è©¹èª§èª¾è«ï¨¢è«¶è­è­¿è³°è³´è´èµ¶ï¨£è»ï¨¤ï¨¥é§éï¨¦éé§é"],["fca1","ééé­é®é¤é¥ééééºéé¼éééé¹é§é§é·é¸é§éééï¨§éé éé¥é¡é»ï¨¨éé¿ééé°éé¤ééé¸é±éééï§ï¨©éé¯é³é»éééééé¡é¡¥ï¨ªï¨«é¤§ï¨¬é¦é©é«é«é­µé­²é®é®±é®»é°éµ°éµ«ï¨­é¸é»"],["fcf1","â°",9,"ï¿¢ï¿¤ï¼ï¼"],["8fa2af","ËËÂ¸ËËÂ¯ËËï½ÎÎ"],["8fa2c2","Â¡Â¦Â¿"],["8fa2eb","ÂºÂªÂ©Â®â¢Â¤â"],["8fa6e1","ÎÎÎÎÎª"],["8fa6e7","Î"],["8fa6e9","ÎÎ«"],["8fa6ec","Î"],["8fa6f1","Î¬Î­Î®Î¯ÏÎÏÏÏÏÎ°Ï"],["8fa7c2","Ð",10,"ÐÐ"],["8fa7f2","Ñ",10,"ÑÑ"],["8fa9a1","ÃÄ"],["8fa9a4","Ä¦"],["8fa9a6","Ä²"],["8fa9a8","ÅÄ¿"],["8fa9ab","ÅÃÅ"],["8fa9af","Å¦Ã"],["8fa9c1","Ã¦ÄÃ°Ä§Ä±Ä³Ä¸ÅÅÅÅÃ¸ÅÃÅ§Ã¾"],["8faaa1","ÃÃÃÃÄÇÄÄÃÃÄÄÄÃÄÄÃÃÃÃÄÄÄÄ"],["8faaba","ÄÄÄ¢Ä Ä¤ÃÃÃÃÇÄ°ÄªÄ®Ä¨Ä´Ä¶Ä¹Ä½Ä»ÅÅÅÃÃÃÃÃÇÅÅÃÅÅÅÅÅÅ ÅÅ¤Å¢ÃÃÃÃÅ¬ÇÅ°ÅªÅ²Å®Å¨ÇÇÇÇÅ´ÃÅ¸Å¶Å¹Å½Å»"],["8faba1","Ã¡Ã Ã¤Ã¢ÄÇÄÄÃ¥Ã£ÄÄÄÃ§ÄÄÃ©Ã¨Ã«ÃªÄÄÄÄÇµÄÄ"],["8fabbd","Ä¡Ä¥Ã­Ã¬Ã¯Ã®Ç"],["8fabc5","Ä«Ä¯Ä©ÄµÄ·ÄºÄ¾Ä¼ÅÅÅÃ±Ã³Ã²Ã¶Ã´ÇÅÅÃµÅÅÅÅÅÅ¡ÅÅ¥Å£ÃºÃ¹Ã¼Ã»Å­ÇÅ±Å«Å³Å¯Å©ÇÇÇÇÅµÃ½Ã¿Å·ÅºÅ¾Å¼"],["8fb0a1","ä¸ä¸ä¸ä¸ä¸ä¸ä¸£ä¸¤ä¸¨ä¸«ä¸®ä¸¯ä¸°ä¸µä¹ä¹ä¹ä¹ä¹ä¹ä¹ä¹£ä¹¨ä¹©ä¹´ä¹µä¹¹ä¹¿äºäºäºäºäº¯äº¹ä»ä»ä»ä»ä» ä»¡ä»¢ä»¨ä»¯ä»±ä»³ä»µä»½ä»¾ä»¿ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼ä¼®ä¼±ä½ ä¼³ä¼µä¼·ä¼¹ä¼»ä¼¾ä½ä½ä½ä½ä½ä½ä½ä½ä½ä½ä½ä½£ä½ªä½¬ä½®ä½±ä½·ä½¸ä½¹ä½ºä½½ä½¾ä¾ä¾ä¾"],["8fb1a1","ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾ä¾²ä¾·ä¾¹ä¾»ä¾¼ä¾½ä¾¾ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ ä¿¢ä¿°ä¿²ä¿¼ä¿½ä¿¿åååååååååååååååå¢å§å®å°å²å³åµååååååååååååååå å¢å£å¦å§åªå­å°å±å»åååååååå"],["8fb2a1","ååååååå",4,"åªå¯å°å¹åºå½åååååååååååååå¢å¤å¦å¨å©å¯å±å¶åºå¾ååååååååå²åååååååå£å§å¨å¬å­å¯å±å³å´åµå¸å¹ååååååååå¤å¦å¾ååååååå¡å£å­å¸åºå¼å¾å¿å"],["8fb3a1","ååååååååå¢å¥å®å²å³å´å·ååååååååå¢å¨å±å²åµå¼ååååååååå å¡å¦å®å·å¸å¹ååååååååååååå¤å¥å¦å§å¯å°å¶å·å¸åºå»å½åååååååååååå¡å¥å¨å©åªå¬å°å±å´å¶å·åååå"],["8fb4a1","ååååååååå¥å§å¨å©å«å¬å­å°å²åµå¼å½å¾åååååå¡å£å¥å¬å­å²å¹å¾ååååååååå¡å¤åªå«å¯å²å´åµå·å¸åºå½åååååååååå å¦å§åµåååå¡å§å¨åªå¯å±å´åµååååååå¢å¤å¦å§å©å«å­å®å´å¿"],["8fb5a1","åååååååååååå¡å¦å§å©åªå­å®å±å·å¹åºå»å¿ååååå åªå¬å¯å¶å¼å¾å¿ååååååååååªå«å²åµå¶å»å¼å½åååååååååååå å¡å¤å¦å¿åååååååååååå£å¤å­å²å¿ååååååååå"],["8fb6a1","åååååå¢å©å¶å¿åååå",5,"åå¬å°å³åµå·å¹å»å¼å½å¿åååååååååååå å¡å¢å£å¦å©å­å¯å±å²åµåååååååååååå¦å§å¨å©å«å¬å­å±å³å·å¾ååååååååååååå¡å¤",4,"å±å«å­"],["8fb7a1","å¶å·ååååååååååå å¢å£å¤å¥å©åªå¬å®å¯å³å´å½å¾å¿åååååå¢å¥å§å¨å«å­",4,"å³å´åµå·å¹åºå»å¼å¾åååååååååååå¡åå§å¨å©å¬å¸å½åååååååå¤å¦å§å©å­å°åµå¶å¸å½å¾å¿å å å å å¡"],["8fb8a1","å å å å å å  å ¦å §å ­å ²å ¹å ¿å¡å¡å¡å¡å¡å¡å¡å¡¡å¡¤å¡§å¡¨å¡¸å¡¼å¡¿å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢å¢ å¢¡å¢¢å¢¦å¢©å¢±å¢²å£å¢¼å£å£å£å£å£å£å£å£å£å£å£¡å£¢å£©å£³å¤å¤å¤å¤å¤å¤å¤èå¤å¤¡å¤£å¤¤å¤¨å¤¯å¤°å¤³å¤µå¤¶å¤¿å¥å¥å¥å¥å¥å¥å¥å¥å¥å¥¡å¥£å¥«å¥­"],["8fb9a1","å¥¯å¥²å¥µå¥¶å¥¹å¥»å¥¼å¦å¦å¦å¦å¦å¦å¦å¦¤å¦§å¦­å¦®å¦¯å¦°å¦³å¦·å¦ºå¦¼å§å§å§å§å§å§å§å§å§å§å§£å§¤å§§å§®å§¯å§±å§²å§´å§·å¨å¨å¨å¨å¨å¨å¨å¨å¨£å¨¤å¨§å¨¨å¨ªå¨­å¨°å©å©å©å©å©å©å©å©å©£å©¥å©§å©­å©·å©ºå©»å©¾åªåªåªåªåªåªåªåªåª åª¢åª§åª¬åª±åª²åª³åªµåª¸åªºåª»åª¿"],["8fbaa1","å«å«å«å«å«å«å« å«¥å«ªå«®å«µå«¶å«½å¬å¬å¬å¬å¬´å¬å¬å¬å¬¡å¬¥å¬­å¬¸å­å­å­å­å­å­å­¨å­®å­¯å­¼å­½å­¾å­¿å®å®å®å®å®å®å®å®å®å®å®¨å®©å®¬å®­å®¯å®±å®²å®·å®ºå®¼å¯å¯å¯å¯å¯",4,"å¯ å¯¯å¯±å¯´å¯½å°å°å°å°å°£å°¦å°©å°«å°¬å°®å°°å°²å°µå°¶å±å±å±å±¢å±£å±§å±¨å±©"],["8fbba1","å±­å±°å±´å±µå±ºå±»å±¼å±½å²å²å²å²å²å²å²å² å²¢å²£å²¦å²ªå²²å²´å²µå²ºå³å³å³å³å³å³®å³±å³²å³´å´å´å´å´å´«å´£å´¤å´¦å´§å´±å´´å´¹å´½å´¿åµåµåµåµåµåµåµåµåµåµ åµ¡åµ¢åµ¤åµªåµ­åµ°åµ¹åµºåµ¾åµ¿å¶å¶å¶å¶å¶å¶å¶å¶å¶å¶å¶å¶ å¶§å¶«å¶°å¶´å¶¸å¶¹å·å·å·å·å·å·å·å· å·¤"],["8fbca1","å·©å·¸å·¹å¸å¸å¸å¸å¸å¸å¸å¸å¸ å¸®å¸¨å¸²å¸µå¸¾å¹å¹å¹å¹å¹å¹å¹å¹å¹å¹¨å¹ª",4,"å¹°åºåºåºåº¢åº¤åº¥åº¨åºªåº¬åº±åº³åº½åº¾åº¿å»å»å»å»å»å»å»å»å»å»å»¥å»«å¼å¼å¼å¼å¼å¼å¼å¼å¼¡å¼¢å¼£å¼¤å¼¨å¼«å¼¬å¼®å¼°å¼´å¼¶å¼»å¼½å¼¿å½å½å½å½å½å½å½å½å½å½ å½£å½¤å½§"],["8fbda1","å½¯å½²å½´å½µå½¸å½ºå½½å½¾å¾å¾å¾å¾å¾å¾å¾¢å¾§å¾«å¾¤å¾¬å¾¯å¾°å¾±å¾¸å¿å¿å¿å¿å¿å¿",4,"å¿å¿¡å¿¢å¿¨å¿©å¿ªå¿¬å¿­å¿®å¿¯å¿²å¿³å¿¶å¿ºå¿¼ææææææææææ¤æ­æ³æµæææææææææææ¡æ§æ±æ¾æ¿ææææææææææææ¢æ¤æ¥æ¨æ°æ±æ·"],["8fbea1","æ»æ¾æææææææææææææææ¢æ¥æ²æµæ¸æ¼æ½æææææ",4,"ææææææ¢æªæ«æ°æ±æµæ¶æ·æ¹ææææææ æ¬æ²æ¸æ»æ¼æ¿ææææææææææææææ æ¥æ¨æªæ­æ¸æ¹æ¼æææææææææææ¡æ¢æ§æ©æ¥"],["8fbfa1","æ¬æ­æ¯ææææææææ æ¢æ£æ§æ©æ«æ¹æ½æææææææææææææ¤æ­æ¯æ³æºæ½æææææ¦æ¨æ³æ¶æ·æºæ¾æ¿ææææææªæ²æ´æ¼æ½ææææææææææ©æªæ­æµæ¶æ¹æ¼ææææææææææææææ¥æ¦æ¬æ­æ±æ´æµ"],["8fc0a1","æ¸æ¼æ½æ¿æææææææææææ¤æ¦æ­æ®æ¯æ½ææææææææææ æ¥æªæ¬æ²æ³æµæ¸æ¹ææææææææ æ¢æ¤æ¥æ©æªæ¯æ°æµæ½æ¿ææææææææææææ æ¡æ£æ­æ³æ´æ»æ½æææææææææææ¡æ£æ¦æ¨æ¬æ³æ½æ¾æ¿"],["8fc1a1","æææææææææææ¤æ¥æ©æªæ­æ°æµæ·æ»æ¿ææææææææææææææ¢æ¦æ©æ®æ±æºæ¼æ½ææææææææ æ§æ«æºæ½ææææææææ æ£æ¦æ®æ²æ³æ´æ¿ææææææææææ°æ²æ´æµæ¹æ¾æ¿ææææææææææ"],["8fc2a1","ææ¡æ¢æ£æ¤æ¦æ©æªæ«æ¬æ®æ°æ±æ³æ¹æ·æææææææææææææ æ¡æ»æªæ«æ¬æ¾æ³æµæ¿æ·æ¸æ¹æ»ææ¼æææææææææææ æ¤æ­æ±æ²æµæ»æ¿æææææææææææ¨æ«æ¬æ®æºæææææææ æ¢æ³æ¾æææææææ"],["8fc3a1","æ¦æ¬æ®æ´æ¶æ»æææææææææææ°æ±æ²æµæ»æ¼æ½æ¹æææææææææææ¡æ¦æ°æ²æ¶æ·æ¡æ æ æ æ æ ¨æ §æ ¬æ ­æ ¯æ °æ ±æ ³æ »æ ¿æ¡æ¡æ¡æ¡æ¡æ¡æ¡æ¡æ¡«æ¡®",4,"æ¡µæ¡¹æ¡ºæ¡»æ¡¼æ¢æ¢æ¢æ¢æ¢æ¢æ¢æ¢æ¢¡æ¢£æ¢¥æ¢©æ¢ªæ¢®æ¢²æ¢»æ£æ£æ£æ£"],["8fc4a1","æ£æ£æ£æ£æ£æ£æ£æ£¥æ£¨æ£ªæ£«æ£¬æ£­æ£°æ£±æ£µæ£¶æ£»æ£¼æ£½æ¤æ¤æ¤æ¤æ¤æ¤æ¤æ¤æ¤±æ¤³æ¤µæ¤¸æ¤»æ¥æ¥æ¥æ¥æ¥æ¥æ¥£æ¥¤æ¥¥æ¥¦æ¥¨æ¥©æ¥¬æ¥°æ¥±æ¥²æ¥ºæ¥»æ¥¿æ¦æ¦æ¦æ¦æ¦æ¦¡æ¦¥æ¦¦æ¦¨æ¦«æ¦­æ¦¯æ¦·æ¦¸æ¦ºæ¦¼æ§æ§æ§æ§æ§æ§¢æ§¥æ§®æ§¯æ§±æ§³æ§µæ§¾æ¨æ¨æ¨æ¨æ¨æ¨æ¨æ¨æ¨ æ¨¤æ¨¨æ¨°æ¨²"],["8fc5a1","æ¨´æ¨·æ¨»æ¨¾æ¨¿æ©æ©æ©æ©æ©æ©æ©æ©æ©æ©æ©æ©¤æ©§æ©ªæ©±æ©³æ©¾æªæªæªæªæªæªæªæªæªæªæªæª¥æª«æª¯æª°æª±æª´æª½æª¾æª¿æ«æ«æ«æ«æ«æ«æ«æ«æ«æ«æ«¤æ«§æ«¬æ«°æ«±æ«²æ«¼æ«½æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬æ¬¤æ¬¨æ¬«æ¬¬æ¬¯æ¬µæ¬¶æ¬»æ¬¿æ­æ­æ­æ­æ­æ­æ­æ­ æ­§æ­«æ­®æ­°æ­µæ­½"],["8fc6a1","æ­¾æ®æ®æ®æ®æ®æ® æ®¢æ®£æ®¨æ®©æ®¬æ®­æ®®æ®°æ®¸æ®¹æ®½æ®¾æ¯æ¯æ¯æ¯æ¯æ¯æ¯¡æ¯£æ¯¦æ¯§æ¯®æ¯±æ¯·æ¯¹æ¯¿æ°æ°æ°æ°æ°æ°æ°æ°æ°æ°æ°¦æ°§æ°¨æ°¬æ°®æ°³æ°µæ°¶æ°ºæ°»æ°¿æ±æ±æ±æ±æ±æ±æ±æ±æ±æ±«æ±­æ±¯æ±´æ±¶æ±¸æ±¹æ±»æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²æ²°æ²²æ²´æ³æ³æ³æ³æ³æ³æ³æ³æ³"],["8fc7a1","æ³æ³æ³ æ³§æ³©æ³«æ³¬æ³®æ³²æ³´æ´æ´æ´æ´æ´æ´æ´æ´æ´¦æ´§æ´¨æ±§æ´®æ´¯æ´±æ´¹æ´¼æ´¿æµæµæµæµ¡æµ¥æµ§æµ¯æµ°æµ¼æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶æ¶ªæ¶¬æ¶´æ¶·æ¶¹æ¶½æ¶¿æ·æ·æ·æ·æ·æ·æ·æ·æ·æ· æ·¢æ·¥æ·©æ·¯æ·°æ·´æ·¶æ·¼æ¸æ¸æ¸æ¸¢æ¸§æ¸²æ¸¶æ¸¹æ¸»æ¸¼æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹æ¹"],["8fc8a1","æ¹¢æ¹£æ¹¨æ¹³æ¹»æ¹½æºæºæºæº æº§æº­æº®æº±æº³æº»æº¿æ»æ»æ»æ»æ»æ»æ»æ»æ»æ»«æ»­æ»®æ»¹æ»»æ»½æ¼æ¼æ¼æ¼æ¼æ¼æ¼æ¼æ¼æ¼¦æ¼©æ¼ªæ¼¯æ¼°æ¼³æ¼¶æ¼»æ¼¼æ¼­æ½æ½æ½æ½æ½æ½æ½æ½æ½æ½¡æ½¢æ½¨æ½¬æ½½æ½¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾æ¾ æ¾¥æ¾¦æ¾§æ¾¨æ¾®æ¾¯æ¾°æ¾µæ¾¶æ¾¼æ¿æ¿æ¿æ¿"],["8fc9a1","æ¿æ¿æ¿¨æ¿©æ¿°æ¿µæ¿¹æ¿¼æ¿½ççççççç ç£ç¯ç´ç·ç¹ç¼çççççççççççç¤ç¥ç¬ç®çµç¶ç¾çççç",4,"çç¤ç«ç°ç±ç´ç·ççççççççç¤çºç",4,"ççççç ç«ç­ç¯ç°ç±ç¸ççççççççççççç "],["8fcaa1","ç¨ç¹çççççççç ç¢ç¯ç°ç²ç³çºç¿ççççççççççç¸ç¾çççççççççç¤ç«ç¯ç´ç¸ç¹çççççççççççççç ç£ç¨ç«ç®ç¯ç±ç·ç¸ç»ç¼ç¿ççççççç¨ç­ç®ç±ç´ç¾ççççççççç¥ç³ç´çºç»"],["8fcba1","ç¾çççççççççççç¢ç¤ç§ç¨ç¬ç±ç²çµçºç»ç½çççççççççç ç¦ç§ç©ç«ç¬ç®ç¯ç±ç·ç¹ç¼ççççççççççççççç ç¢ç¥ç¦çªç«ç­çµç·ç¹ç¼ç½ç¿çççççççççççç¡ç£ç¦ç§ç©ç´çµç·ç¹çºç»ç½"],["8fcca1","ç¿ççççççççç¤ç¦ç¨",9,"ç¹çççççççççççç¢ç¦ç§ç¨ç«ç­ç®ç±ç²çççççççççççççççç ç¡ç£ç¦ç¨ç©çªç«ç®ç¯ç±ç²çµç¹ç»ç¿ççççççççççç¤ç¨çªç«ç¯ç´çºç»ç¼ç¿ç"],["8fcda1","çççç ç¡ç¤ç§ç©çªç¯ç¶ç¹ç½ç¾ç¿ççççççççççç¡ç¯ç±ç¹",5,"ççççççççç¢ç¤ç´çºç¿ççççççççççç ç¡ç¤ç§ç¬ç®ç¯ç±ç¹ççççççççççççççççççç£ç¥ç¦ç©ç­ç²ç³çµç¸ç¹"],["8fcea1","çºç¼çççççççççççç¤ç¥ç­ç®ç¯ç±ç´çççççççççç ç¢",6,"çªç­ç½ççççççççç ç¦ç¨ç¬ç°ç±ç¶ç¹ç¼çççççççççççç¢ç¨ç­ç®ç¯ç´çµç¶ç¹ç½ç¾çççççççççççççç ç¢"],["8fcfa1","ç¤ç§çªç¬ç°ç²ç³ç´çºç½çççççççççç¢ç§çªç®ç¯ç±çµç¾ççççççççç ç¤ç¦çªç¬ç°ç±ç´ç¸ç»ç ç ç ç ç ç ç ç ¡ç ¢ç £ç ­ç ®ç °ç µç ·ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ç¡ ç¡¡ç¡£ç¡¤ç¡¨ç¡ªç¡®ç¡ºç¡¾ç¢ç¢ç¢ç¢ç¢¡ç¢ç¢ç¢ç¢¤ç¢¨ç¢¬ç¢­ç¢°ç¢±ç¢²ç¢³"],["8fd0a1","ç¢»ç¢½ç¢¿ç£ç£ç£ç£ç£ç£ç£ç£ç£ç£¤ç£ç£ç£ ç£¡ç£¦ç£ªç£²ç£³ç¤ç£¶ç£·ç£ºç£»ç£¿ç¤ç¤ç¤ç¤ç¤ç¤ç¤ç¤ ç¤¥ç¤§ç¤©ç¤­ç¤±ç¤´ç¤µç¤»ç¤½ç¤¿ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥ç¥§ç¥©ç¥«ç¥²ç¥¹ç¥»ç¥¼ç¥¾ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦ç¦¡ç¦¨ç¦©ç¦«ç¦¯ç¦±ç¦´ç¦¸ç¦»ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§ç§"],["8fd1a1","ç§ ç§¢ç§¥ç§ªç§«ç§­ç§±ç§¸ç§¼ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨ç¨¡ç¨§ç¨«ç¨­ç¨¯ç¨°ç¨´ç¨µç¨¸ç¨¹ç¨ºç©ç©ç©ç©ç©ç©ç©ç©ç©ç©ç©ç© ç©¥ç©§ç©ªç©­ç©µç©¸ç©¾çªçªçªçªçªçªçªçªçªçªçª çª£çª¬çª³çªµçª¹çª»çª¼ç«ç«ç«ç«ç«ç«ç«¨ç«©ç««ç«¬ç«±ç«´ç«»ç«½ç«¾ç¬ç¬ç¬ç¬£ç¬§ç¬©ç¬ªç¬«ç¬­ç¬®ç¬¯ç¬°"],["8fd2a1","ç¬±ç¬´ç¬½ç¬¿ç­ç­ç­ç­ç­ç­ ç­¤ç­¦ç­©ç­ªç­­ç­¯ç­²ç­³ç­·ç®ç®ç®ç®ç®ç®ç®ç®ç® ç®¥ç®¬ç®¯ç®°ç®²ç®µç®¶ç®ºç®»ç®¼ç®½ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯ç¯¨ç¯ªç¯²ç¯´ç¯µç¯¸ç¯¹ç¯ºç¯¼ç¯¾ç°ç°ç°ç°ç°ç°ç°ç°ç°ç°ç°ç°ç° ç°¥ç°¦ç°¨ç°¬ç°±ç°³ç°´ç°¶ç°¹ç°ºç±ç±ç±ç±ç±ç±ç±",5],["8fd3a1","ç±¡ç±£ç±§ç±©ç±­ç±®ç±°ç±²ç±¹ç±¼ç±½ç²ç²ç²ç²ç²ç² ç²¦ç²°ç²¶ç²·ç²ºç²»ç²¼ç²¿ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³ç³¦ç³©ç³«ç³µç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´ç´£ç´¦ç´ªç´­ç´±ç´¼ç´½ç´¾çµçµçµçµçµçµçµçµçµçµçµçµçµ¥çµ§çµªçµ°çµ¸çµºçµ»çµ¿ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶ç¶"],["8fd4a1","ç¶ç¶¦ç¶§ç¶ªç¶³ç¶¶ç¶·ç¶¹ç·",4,"ç·ç·ç·ç·ç·ç¸ç·¢ç·¥ç·¦ç·ªç·«ç·­ç·±ç·µç·¶ç·¹ç·ºç¸ç¸ç¸ç¸ç¸ç¸ç¸ç¸ ç¸§ç¸¨ç¸¬ç¸­ç¸¯ç¸³ç¸¶ç¸¿ç¹ç¹ç¹ç¹ç¹ç¹ç¹ç¹ç¹¡ç¹¢ç¹¥ç¹«ç¹®ç¹¯ç¹³ç¹¸ç¹¾çºçºçºçºçºçºçºçºçºçºçºç¼¼ç¼»ç¼½ç¼¾ç¼¿ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½¡ç½£ç½¤ç½¥ç½¦ç½­"],["8fd5a1","ç½±ç½½ç½¾ç½¿ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾¡ç¾¢ç¾¦ç¾ªç¾­ç¾´ç¾¼ç¾¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿ç¿£ç¿¥ç¿¨ç¿¬ç¿®ç¿¯ç¿²ç¿ºç¿½ç¿¾ç¿¿èèèèèèèèèèèèèè è¤è¦è¬è®è°è´èµè·è¹èºè¼è¾èèè è¤è¦è­è±èµèèèèèè¦è§è«è¸è¹èèèèèèèèè è­è®"],["8fd6a1","è°è²è³è¶è¹èºè¾èèèèèèèè è¤è§è¬è°èµèºè¼èèèèèèè è¡è§è¨è©è­è¯è·èèèèèèèèèèèè¢è®è²è´è»èèèèèèèèèèèè¡è¤è«è¬è°è±è²èµè¶è¸è¹è½è¿èèèèèèèèè¡è¢è¨è²è´èºèèèè"],["8fd7a1","èèèèèèè è£è§è­è´è»è½è¿èèèèèèèèèèèèèèè è¡è£è¤è§è¨è©èªè®è°è²è´è·èºè¼è¾è¿èèèèè è¢è¤è¨èªè­è¯è¶è·è½è¾èèèèèèèèèèèè¡è¢è¬è­è®è°è³è·èºè¼è½èèèèèèèèèèè°è¸"],["8fd8a1","è½è¿èèèèèèèèèèèèèè¦è§è©è¬è¾è¿èèèèèèèèèè¨èªè¶è¸è¹è¼èèèèèèèè­è¯è¹èèèèèèèèèèèèèè è¤è¥è§èªè°è³è´è¶è¸è¼è½èèèèèèè¦è¨è©èªè¯è±è´èºè½è¾èèèèèèè"],["8fd9a1","èè§èªè¯è°è±è²è·è²èºè»è½èèèèèèèèè¢è£è¤è¥è§èªè«è¯è³è´è¶è¿èè",4,"èèè",6,"è¤è«è¯è¹èºè»è½è¿èèèèèèèèèèèè è¢è¥è§è´è¶è·è¸è¼è½è¾è¿èèèèèè­èèèè è¦è¨è­è³è¶è¼"],["8fdaa1","è¿èèèèèèèèèèèèè¡è§è©è¶è¸èºè¼è½èèèèèèèèèèè ",4,"è©è¬è¯èµè¶è·èºèèèèèèè¡è¦è§è¨è­è±è³è´èµè·è¸è¹è¿èèèèèèèèèèè è£è¥è§èèºè¼è½èèèèèèèèèèèèè¡è£"],["8fdba1","è¨è®è¯è±è²è¹èºè¼è½è¾èèèèèèè¡è¤è¥è¯è±è²è»è",6,"èèèèèèèèèè è£è§è¬è­è®è±èµè¾è¿èèèèèèèèèèèè¢è£è¤èªè«è­è±è³è¸èºè¿è è è è è è è è è è è è è è è è è è ¨è ­è ®è °è ²è µ"],["8fdca1","è ºè ¼è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡è¡ è¡¤è¡©è¡±è¡¹è¡»è¢è¢è¢è¢è¢è¢è¢ è¢¨è¢ªè¢ºè¢½è¢¾è£è£",4,"è£è£è£è£è£è£§è£¯è£°è£±è£µè£·è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤è¤ è¤¦è¤§è¤¨è¤°è¤±è¤²è¤µè¤¹è¤ºè¤¾è¥è¥è¥è¥è¥è¥è¥è¥è¥è¥è¥è¥¡è¥¢è¥£è¥«è¥®è¥°è¥³è¥µè¥º"],["8fdda1","è¥»è¥¼è¥½è¦è¦è¦è¦è¦è¦è¦è¦è¦ è¦¥è¦°è¦´è¦µè¦¶è¦·è¦¼è§",4,"è§¥è§©è§«è§­è§±è§³è§¶è§¹è§½è§¿è¨è¨è¨è¨è¨è¨è¨è¨è¨è¨ è¨¢è¨¤è¨¦è¨«è¨¬è¨¯è¨µè¨·è¨½è¨¾è©è©è©è©è©è©è©è©è©è©è©è©è©è©¡è©¥è©§è©µè©¶è©·è©¹è©ºè©»è©¾è©¿èªèªèªèªèªèªèªèªèªèªèªèª§èª©èª®èª¯èª³"],["8fdea1","èª¶èª·èª»èª¾è«è«è«è«è«è«è«è«è«è«è«è«è«¬è«°è«´è«µè«¶è«¼è«¿è¬è¬è¬è¬è¬è¬è¬è¬è¬­è¬°è¬·è¬¼è­",4,"è­è­è­è­è­è­è­è­£è­­è­¶è­¸è­¹è­¼è­¾è®è®è®è®è®è®è®è®è®è®è®è°¸è°¹è°½è°¾è±è±è±è±è±è±è±è±è±è±è±è±è±è±£è±¤è±¦è±¨è±©è±­è±³è±µè±¶è±»è±¾è²"],["8fdfa1","è²è²è²è²è²è²è²è²è²¤è²¹è²ºè³è³è³è³è³è³è³è³è³è³¡è³¨è³¬è³¯è³°è³²è³µè³·è³¸è³¾è³¿è´è´è´è´è´è´èµ¥èµ©èµ¬èµ®èµ¿è¶è¶è¶è¶è¶è¶è¶è¶è¶è¶ è¶¦è¶«è¶¬è¶¯è¶²è¶µè¶·è¶¹è¶»è·è·è·è·è·è·è·è·è·è·è·è·è·¤è·¥è·§è·¬è·°è¶¼è·±è·²è·´è·½è¸è¸è¸è¸è¸è¸è¸è¸è¸ è¸¡è¸¢"],["8fe0a1","è¸£è¸¦è¸§è¸±è¸³è¸¶è¸·è¸¸è¸¹è¸½è¹è¹è¹è¹è¹è¹è¹è¹è¹è¹è¹è¹¡è¹¢è¹©è¹¬è¹­è¹¯è¹°è¹±è¹¹è¹ºè¹»èºèºèºèºèºèºèºèºèºèºèº¢èº§èº©èº­èº®èº³èºµèººèº»è»è»è»è»è»è»è»è»è»è»¨è»®è»°è»±è»·è»¹è»ºè»­è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼ è¼¡è¼£è¼¥è¼§è¼¨è¼¬è¼­è¼®è¼´è¼µè¼¶è¼·è¼ºè½è½"],["8fe1a1","è½è½è½è½",4,"è½è½è½è½¥è¾è¾ è¾¡è¾¤è¾¥è¾¦è¾µè¾¶è¾¸è¾¾è¿è¿è¿è¿è¿è¿è¿è¿è¿è¿è¿ è¿£è¿¤è¿¨è¿®è¿±è¿µè¿¶è¿»è¿¾ééééééé¨é©é¯éªé¬é­é³é´é·é¿éééééé¢é¦é§é¬é°é´é¹éééééééééééé é¡é¢é¥é°é²é³é´é¶é½éé¾é"],["8fe2a1","éééééééééééé¥éé¶é«é¯é°é´é¾é¿ééééééééééééééé é¥é¢é£é§é©é®é¯é±é´é¶é·é¹éºé¼é½éééééééééé¡é¤é§é­é´é¹éºé»ééééééééééééé¡é¦é¨é¬é­é®é°é±é²é³é¶é»é¼é½é¿"],["8fe3a1","éééééééééé¤é¥é©éªé¬",5,"é·é¹é»é½ééééééééééééééééé£é¤é¥é¦é¨é®é¯é°é³éµé¶é¸é¹éºé¼é¾ééééééééééééééé é¡é¥é§é¨é©é®é¯é°éµ",4,"é»é¼é½é¿ééééééé"],["8fe4a1","ééé é¤é¥é§é¨é«é¯é²é¶é¸éºé»é¼é½é¿",4,"éééééééééééééééééé é¡é£é¥é§é¨é¬é®é°é¹é»é¿éééééééééééé¡é¤é¥é§é©éªé³é´é¶é·éééééééééééé¤é¥é§é©éªé­é¯é°é±é³é´é¶"],["8fe5a1","éºé½é¿éééééééééééééé¡é£é¤é¦é¨é«é´éµé¶éºé©éééééé",4,"éééééé¢é¦é§é¹é·é¸éºé»é½ééééééééééééé®é¯é±é²é³é´é»é¿é½éééééééééé¡é£é¨é«é­é®é¯é±é²ééé¸é¹"],["8fe6a1","é¾ééééééééé¡é¦é©é«é¬é´é¶éºé½é¿éééééééééééééé é¤é¦ééé¢é¤é¥é¦é¬é±é³é·é¸é¹éºé¼é½ééééééé¡é®é´é»é¼é¾é¿ééééééééééé¤é¥é¦é©é®é¯é³éºééå¶²éééééé©é¯é±éºé"],["8fe7a1","ééééééé¡é¢é£é¨é±é³ééééééééééé£é§éªé®é³é¶é·é¸é»é½é¿éééééééééé¢é¬é®é±é²éµé¶é¸é¹éºé¼é¾é¿éééééééééééééééééé éé¡é¤é¯é±é´é·é¸éºé é é é é é é é é é  é £é ¦"],["8fe8a1","é «é ®é ¯é °é ²é ³é µé ¥é ¾é¡é¡é¡é¡é¡é¡é¡é¡é¡é¡é¡¢é¡£é¡¥é¡¦é¡ªé¡¬é¢«é¢­é¢®é¢°é¢´é¢·é¢¸é¢ºé¢»é¢¿é£é£é£é£é£¡é££é£¥é£¦é£§é£ªé£³é£¶é¤é¤é¤é¤é¤é¤é¤é¤é¤é¤é¤é¤¢é¤¦é¤§é¤«é¤±",4,"é¤¹é¤ºé¤»é¤¼é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥é¥ é¦é¦é¦é¦¦é¦°é¦±é¦²é¦µ"],["8fe9a1","é¦¹é¦ºé¦½é¦¿é§é§é§é§é§é§é§é§é§§é§ªé§«é§¬é§°é§´é§µé§¹é§½é§¾é¨é¨é¨é¨é¨é¨é¨é¨é¨é¨ é¨¢é¨£é¨¤é¨§é¨­é¨®é¨³é¨µé¨¶é¨¸é©é©é©é©é©é©é©é©é©é©é©éªªéª¬éª®éª¯éª²éª´éªµéª¶éª¹éª»éª¾éª¿é«é«é«é«é«é«é«é«é«é«é«é«é« é«¤é«¥é«§é«©é«¬é«²é«³é«µé«¹é«ºé«½é«¿",4],["8feaa1","é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬é¬ é¬¦é¬«é¬­é¬³é¬´é¬µé¬·é¬¹é¬ºé¬½é­é­é­é­é­é­é­é­é­¡é­£é­¥é­¦é­¨é­ª",4,"é­³é­µé­·é­¸é­¹é­¿é®é®é®é®é®é®é®é®é®é®é®é®é®é®é®é®¦é®§é®©é®¬é®°é®±é®²é®·é®¸é®»é®¼é®¾é®¿é¯é¯é¯é¯é¯é¯é¯é¯é¯é¯¥é¯§é¯ªé¯«é¯¯é¯³é¯·é¯¸"],["8feba1","é¯¹é¯ºé¯½é¯¿é°é°é°é°é°é°é°é°é°é°é°é°¢é°£é°¦",4,"é°±é°µé°¶é°·é°½é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±é±£é±©é±ªé±é±«é±¨é±®é±°é±²é±µé±·é±»é³¦é³²é³·é³¹é´é´é´é´é´é´é´é´é´¯é´°é´²é´³é´´é´ºé´¼éµé´½éµéµéµéµéµéµéµéµ£éµ¢éµ¥éµ©éµªéµ«éµ°éµ¶éµ·éµ»"],["8feca1","éµ¼éµ¾é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶é¶¡é¶ªé¶¬é¶®é¶±é¶µé¶¹é¶¼é¶¿é·é·é·é·é·é·é·é·é·é·é·é· é·¥é·§é·©é·«é·®é·°é·³é·´é·¾é¸é¸é¸é¸é¸é¸é¸é¸é¸é¸é¸é¸é¹ºé¹»é¹¼éºéºéºéºéºéºéºéºéºéºéºéºéº¤éº¨éº¬éº®éº¯éº°éº³éº´éºµé»é»é»é»é»é»¤é»§é»¬é»­é»®é»°é»±é»²é»µ"],["8feda1","é»¸é»¿é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼é¼¢é¼¦é¼ªé¼«é¼¯é¼±é¼²é¼´é¼·é¼¹é¼ºé¼¼é¼½é¼¿é½é½",4,"é½é½é½é½é½é½é½é½é½¨é½©é½­",4,"é½³é½µé½ºé½½é¾é¾é¾é¾é¾é¾é¾é¾é¾¡é¾¢é¾£é¾¥"]]');
            }
          ),
          /***/
          36258: (
            /***/
            function(c) {
              c.exports = JSON.parse('{"uChars":[128,165,169,178,184,216,226,235,238,244,248,251,253,258,276,284,300,325,329,334,364,463,465,467,469,471,473,475,477,506,594,610,712,716,730,930,938,962,970,1026,1104,1106,8209,8215,8218,8222,8231,8241,8244,8246,8252,8365,8452,8454,8458,8471,8482,8556,8570,8596,8602,8713,8720,8722,8726,8731,8737,8740,8742,8748,8751,8760,8766,8777,8781,8787,8802,8808,8816,8854,8858,8870,8896,8979,9322,9372,9548,9588,9616,9622,9634,9652,9662,9672,9676,9680,9702,9735,9738,9793,9795,11906,11909,11913,11917,11928,11944,11947,11951,11956,11960,11964,11979,12284,12292,12312,12319,12330,12351,12436,12447,12535,12543,12586,12842,12850,12964,13200,13215,13218,13253,13263,13267,13270,13384,13428,13727,13839,13851,14617,14703,14801,14816,14964,15183,15471,15585,16471,16736,17208,17325,17330,17374,17623,17997,18018,18212,18218,18301,18318,18760,18811,18814,18820,18823,18844,18848,18872,19576,19620,19738,19887,40870,59244,59336,59367,59413,59417,59423,59431,59437,59443,59452,59460,59478,59493,63789,63866,63894,63976,63986,64016,64018,64021,64025,64034,64037,64042,65074,65093,65107,65112,65127,65132,65375,65510,65536],"gbChars":[0,36,38,45,50,81,89,95,96,100,103,104,105,109,126,133,148,172,175,179,208,306,307,308,309,310,311,312,313,341,428,443,544,545,558,741,742,749,750,805,819,820,7922,7924,7925,7927,7934,7943,7944,7945,7950,8062,8148,8149,8152,8164,8174,8236,8240,8262,8264,8374,8380,8381,8384,8388,8390,8392,8393,8394,8396,8401,8406,8416,8419,8424,8437,8439,8445,8482,8485,8496,8521,8603,8936,8946,9046,9050,9063,9066,9076,9092,9100,9108,9111,9113,9131,9162,9164,9218,9219,11329,11331,11334,11336,11346,11361,11363,11366,11370,11372,11375,11389,11682,11686,11687,11692,11694,11714,11716,11723,11725,11730,11736,11982,11989,12102,12336,12348,12350,12384,12393,12395,12397,12510,12553,12851,12962,12973,13738,13823,13919,13933,14080,14298,14585,14698,15583,15847,16318,16434,16438,16481,16729,17102,17122,17315,17320,17402,17418,17859,17909,17911,17915,17916,17936,17939,17961,18664,18703,18814,18962,19043,33469,33470,33471,33484,33485,33490,33497,33501,33505,33513,33520,33536,33550,37845,37921,37948,38029,38038,38064,38065,38066,38069,38075,38076,38078,39108,39109,39113,39114,39115,39116,39265,39394,189000]}');
            }
          ),
          /***/
          44346: (
            /***/
            function(c) {
              c.exports = JSON.parse('[["a140","î",62],["a180","î",32],["a240","î¦",62],["a280","î¥",32],["a2ab","î¦",5],["a2e3","â¬î­"],["a2ef","î®î¯"],["a2fd","î°î±"],["a340","î",62],["a380","î",31,"ã"],["a440","î¦",62],["a480","î¥",32],["a4f4","î²",10],["a540","î",62],["a580","î",32],["a5f7","î½",7],["a640","î¦",62],["a680","î¥",32],["a6b9","î",7],["a6d9","î",6],["a6ec","îî"],["a6f3","î"],["a6f6","î",8],["a740","î",62],["a780","î",32],["a7c2","î ",14],["a7f2","î¯",12],["a896","î¼",10],["a8bc","á¸¿"],["a8bf","Ç¹"],["a8c1","îîîî"],["a8ea","î",20],["a958","î¢"],["a95b","î£"],["a95d","î¤î¥î¦"],["a989","ã¾â¿°",11],["a997","î´",12],["a9f0","î ",14],["aaa1","î",93],["aba1","î",93],["aca1","î¼",93],["ada1","î",93],["aea1","î¸",93],["afa1","î",93],["d7fa","î ",4],["f8a1","î´",93],["f9a1","î",93],["faa1","î°",93],["fba1","î",93],["fca1","î¬",93],["fda1","î",93],["fe50","âºî î î âºã³ãâºâºî ãããâºâºã¥®ã¤î ¦ã§ã§ã©³ã§î «î ¬ã­ã±®ã³ âº§î ±î ²âºªääâº®ä·âº³âº¶âº·î »ä±ä¬âº»äää¡äî¡"],["fe80","ä£ä©ä¼äâ»ä¥ä¥ºä¥½ä¦ä¦ä¦ä¦ä¦ä¦ä¦·ä¦¶î¡î¡ä²£ä²ä² ä²¡ä±·ä²¢ä´",6,"ä¶®î¡¤î¨",93],["8135f437","î"]]');
            }
          ),
          /***/
          27014: (
            /***/
            function(c) {
              c.exports = JSON.parse('[["0","\\u0000",128],["a1","ï½¡",62],["8140","ãããï¼ï¼ã»ï¼ï¼ï¼ï¼ããÂ´ï½Â¨ï¼¾ï¿£ï¼¿ã½ã¾ãããä»ãããã¼ââï¼ï¼¼ï½â¥ï½â¦â¥ââââï¼ï¼ããï¼»ï¼½ï½ï½ã",9,"ï¼ï¼Â±Ã"],["8180","Ã·ï¼â ï¼ï¼â¦â§ââ´ââÂ°â²â³âï¿¥ï¼ï¿ ï¿¡ï¼ï¼ï¼ï¼ï¼ Â§ââââââââ¡â â³â²â½â¼â»ãââââã"],["81b8","âââââââªâ©"],["81c8","â§â¨ï¿¢ââââ"],["81da","â â¥ââââ¡ââªâ«ââ½ââµâ«â¬"],["81f0","â«â°â¯â­âªâ â¡Â¶"],["81fc","â¯"],["824f","ï¼",9],["8260","ï¼¡",25],["8281","ï½",25],["829f","ã",82],["8340","ã¡",62],["8380","ã ",22],["839f","Î",16,"Î£",6],["83bf","Î±",16,"Ï",6],["8440","Ð",5,"ÐÐ",25],["8470","Ð°",5,"ÑÐ¶",7],["8480","Ð¾",17],["849f","ââââââââ¬â¤â´â¼âââââââ£â³â«â»ââ â¯â¨â·â¿ââ°â¥â¸â"],["8740","â ",19,"â ",9],["875f","ããã¢ããã§ãã¶ãããã¦ã£ã«ãã»ããããããã¡"],["877e","ã»"],["8780","ããâãâ¡ã¤",4,"ã±ã²ã¹ã¾ã½ã¼ââ¡â«â®âââ¥â ââ¿âµâ©âª"],["889f","äºåå¨é¿åææ¨å§¶é¢èµèç©æªæ¡æ¸¥æ­è¦è¦é¯µæ¢å§æ¡æ±å®å§è»é£´çµ¢ç¶¾é®æç²è¢·å®åºµæææ¡ééæä»¥ä¼ä½ä¾åå²å¤·å§å¨å°æææ°ææ¤çºçç°ç§»ç¶­ç·¯èèè¡£è¬ééºå»äºäº¥åè²éç£¯ä¸å£±æº¢é¸ç¨²è¨èé°¯åå°å½å¡å å§»å¼é£²æ·«è¤è­"],["8940","é¢é°é é»åå³å®çç¾½è¿é¨å¯éµçªºä¸ç¢è¼æ¸¦ååæ¬èé°»å§¥å©æµ¦çéåäºéé²èé¤å¡å¶å¬°å½±æ æ³æ æ°¸æ³³æ´©ççç©é ´è±è¡è© é­æ¶²ç«çé§æ¦è¬è¶é²æ¦å­å"],["8980","åå °å¥å®´å»¶æ¨æ©æ´æ²¿æ¼ççççç¿ç¸è¶èèé éé´å¡©æ¼æ±ç¥å¹å¤®å¥¥å¾å¿æ¼æºæ¨ªæ¬§æ®´çç¿è¥é´¬é´é»å²¡æ²è»åå±æ¶èæ¡¶ç¡ä¹ä¿ºå¸æ©æ¸©ç©é³ä¸åä»®ä½ä¼½ä¾¡ä½³å å¯åå¤å«å®¶å¯¡ç§æææ¶æ­æ²³ç«çç¦ç¦¾ç¨¼ç®è±èèè·è¯èè¦èª²å©è²¨è¿¦ééèä¿å³¨æçç»è¥è½è¾è³éé¤é§ä»ä¼è§£åå¡å£å»»å¿«æªææ¢ææææ¹"],["8a40","é­æ¦æ¢°æµ·ç°çççµµè¥è¹ééè²å±å¾å¤å³å®³å´æ¨æ¦æ¶¯ç¢èè¡è©²é§éª¸æµ¬é¦¨èå£æ¿èéåååå»æ¡æ¹æ ¼æ ¸æ®»ç²ç¢ºç©«è¦è§èµ«è¼é­é£éé©å­¦å²³æ¥½é¡é¡æç¬ æ¨«"],["8a80","æ©¿æ¢¶é°æ½å²åæ°æ¬æ´»æ¸æ»èè¤è½ä¸é°¹å¶æ¤æ¨ºéæ ªåç«è²ééåé´¨æ ¢èè±ç²¥åèç¦ä¹¾ä¾å å¯ååå§å·»åå ªå§¦å®å®å¯å¹²å¹¹æ£ææ£æ¾ææ¢ææ¡æ£ºæ¬¾æ­æ±æ¼¢æ¾æ½ç°çç£çç«¿ç®¡ç°¡ç·©ç¼¶ç¿°èè¦èè¦³è«è²«ééééé¢é¥éé¤¨èä¸¸å«å²¸å·ç©çç¼å²©ç¿«è´éé é¡é¡ä¼ä¼å±åå¨åºå¥å¬å¯å²å¸å¹¾å¿æ®æºææ¢ææ£æ£"],["8b40","æ©å¸°æ¯æ°æ±½ç¿ç¥å­£ç¨ç´å¾½è¦è¨è²´èµ·è»è¼é£¢é¨é¬¼äºå½åå¦å®æ¯ææ¬æ¬ºç çç¥ç¾©è»èª¼è­°æ¬èé ååå«æ¡æ©è©°ç §æµé»å´å®¢èèéä¸ä¹ä»ä¼åå¸å®®å¼æ¥æ"],["8b80","æ½æ±æ±²æ³£ç¸çç©¶çª®ç¬ç´ç³¾çµ¦æ§çå»å±å·¨ææ ææ¸ èè¨±è·é¸æ¼ç¦¦é­äº¨äº«äº¬ä¾ä¾ ååç«¶å±å¶åå¡å¿å«å¬å¢å³¡å¼·å½æ¯ææ­æææ©æ³çç­ç¯è¸èèèé·é¡é¿é¥é©ä»°åå°­ææ¥­å±æ²æ¥µçæ¡ç²åå¤åå·¾é¦æ¤æ¬£æ¬½ç´ç¦ç¦½ç­ç·è¹èè¡¿è¥è¬¹è¿éåéä¹å¶å¥åºççç©è¦èº¯é§é§é§å·æèå°ç©ºå¶å¯ééä¸²æ«é§å±å±"],["8c40","æçªæ²é´è½¡çªªçéç²æ ç¹°æ¡é¬å²åè«è¨ç¾¤è»é¡å¦è¢ç¥ä¿å¾åååå­çªåå¥å½¢å¾æµæ¶æ§æ©æ²æºæ¬æ¯æ¡æ¸ç¦ç¨½ç³»çµç¶ç¹ç½«èèèè¨è©£è­¦è»½é é¶è¸è¿é¯¨"],["8c80","åæææ¿éæ¡åæ¬ æ±ºæ½ç©´çµè¡è¨£æä»¶å¹å¦å¥å¼å¸å£å§åå å«å»ºæ²æ¸æ³æ²æ¤æ¨©ç½ç¬ç®ç ç¡¯çµ¹çè©è¦è¬è³¢è»é£éµéºé¡é¨é¹¸ååå³å¹»å¼¦æ¸æºçç¾çµè·è¨è«ºéä¹åå¤å¼åºå§å­¤å·±åº«å¼§æ¸ææ¯æ¹çç³è¢´è¡è¡è°èèªè·¨é·éé¡§é¼äºäºä¼ååå¾å¨¯å¾å¾¡ææ¢§æªçç¢èªèª¤è­·éä¹é¯äº¤ä½¼ä¾¯åååå¬åå¹å¾åå£å"],["8d40","åååå¢å¥½å­å­å®å·¥å·§å··å¹¸åºåºåº·å¼æææææ§æ»æææ´æ­æ ¡æ¢æ§æ±æ´ªæµ©æ¸¯æºç²çç¡¬ç¨¿ç³ ç´ç´çµç¶±èèè¯è±èèèªèè¡è¡¡è¬è²¢è³¼ééµé±ç ¿é¼é¤é"],["8d80","é é¦é«é´»åå«å·åå£æ·æ¿ è±ªè½éº¹åå»åå½ç©é·éµ é»çæ¼è°çå¿½æéª¨çè¾¼æ­¤é ä»å°å¤å¢¾å©æ¨ææææ ¹æ¢±æ··çç´ºè®é­äºä½åååµ¯å·¦å·®æ»æ²ç³ç è©éè£ååº§æ«åµå¬åæåå¡å¦»å®°å½©ææ¡æ ½æ­³æ¸ç½éçç ç ¦ç¥­æç´°èè£è¼éå¤å¨æç½ªè²¡å´åéªå ºæ¦è´å²å´å¼ç¢é·ºä½ååæ¾æ¨ææµçªç­ç´¢é¯æ¡é®­ç¬¹ååå·"],["8e40","å¯æ¶æ®æ¦æ­æ®ºè©éçé¯æéé®«ç¿æä¸ååå±±æ¨ææ£æ¡ç¦çç£ç®çºèè®è³é¸é¤æ¬æ«æ®ä»ä»ä¼ºä½¿åºå¸å²å£åå£«å§å§å§¿å­å±å¸å¸«å¿æææ¯å­æ¯æ½æ¨ææ­¢"],["8e80","æ­»æ°çç¥ç§ç³¸ç´ç´«è¢èè³è¦è©è©©è©¦èªè«®è³è³éé£¼æ­¯äºä¼¼ä¾åå­å¯ºææææ¬¡æ»æ²»ç¾ç½çç£ç¤ºèè³èªèè¾æ±é¹¿å¼è­é´«ç«ºè»¸å®é«ä¸å±å·å¤±å«å®¤ææ¹¿æ¼ç¾è³ªå®èç¯ å²æ´èå±¡èç¸èåå°æ¨èµ¦æç®ç¤¾ç´èè¬è»é®èéªååºå°ºæç¼çµééé«è¥å¯å¼±æ¹ä¸»åå®ææ±æ®ç©ç ç¨®è«è¶£éé¦åååªå¯¿ææ¨¹ç¶¬éååå¨"],["8f40","å®å°±å·ä¿®ææ¾æ´²ç§ç§çµç¹ç¿è­èèè¡è¥²è®è¹´è¼¯é±éé¬ééä»ä½ååå¾æææ±æ¸ç£ç¸¦ééåå¤å®¿æ·ç¥ç¸®ç²å¡¾çåºè¡è¿°ä¿å³»æ¥ç¬ç«£èé§¿åå¾ªæ¬æ¥¯æ®æ·³"],["8f80","æºæ½¤ç¾ç´å·¡éµéé å¦åææææ¸åº¶ç·ç½²æ¸è¯è·è«¸å©åå¥³åºå¾æé¤é¤å·ååå åå¬å¨åå±åå¥¨å¦¾å¨¼å®µå°å°å°å°åºåºå» å½°æ¿ææææ·æææ­æ¶æ¾æ¢¢æ¨æ¨µæ²¼æ¶æ¸æ¹ç¼ç¦ç§ççç¡ç¤ç¥¥ç§°ç« ç¬ç²§ç´¹èèèèè¡è£³è¨è¨¼è©è©³è±¡è³é¤é¦é¾éééä¸ä¸ä¸ä¹åå°åå ´å£å¬¢å¸¸ææ¾æ¡ææµç¶ç³ç©£è¸è­²é¸é å±å´é£¾"],["9040","æ­æ¤æ®ç­ç¹è·è²è§¦é£èè¾±å°»ä¼¸ä¿¡ä¾µåå¨ å¯å¯©å¿ææ¯æ°ææ£®æ¦æµ¸æ·±ç³ç¹çç¥ç§¦ç´³è£è¯èªè¦ªè¨ºèº«è¾é²ééäººä»åå¡µå£¬å°çå°½èè¨è¿é£é­ç¬¥è«é é¢å³å¨"],["9080","éå¹åå¸¥æ¨æ°´çç¡ç²ç¿ è¡°éééééçé«å´åµ©æ°æ¢è¶¨éæ®ææ¤èé éè£¾æ¾æºå¯¸ä¸ç¬çæ¯åå¶å¢å§å¾æ§ææ¿æ´ææ´æ£²æ æ­£æ¸ç²ççç²¾èå£°è£½è¥¿èª èªè«ééééæç¨èé»å¸­æææ¥ææç³ç©ç±ç¸¾èè²¬èµ¤è·¡è¹ç¢©åææ¥ææè¨­çªç¯èª¬éªçµ¶èèä»ååå å®£å°å°å·æ¦ææ°æ æ ´æ³æµæ´ææ½çç½æç©¿ç®­ç·"],["9140","ç¹ç¾¨èºèè¹è¦è©®è³è·µé¸é·é­ééé®®ååæ¼¸ç¶å¨ç¦ç¹è³ç³åå¡å²¨æªæ¾æ½æ¥çççç¤ç¥ç§ç²ç´ çµèè¨´é»é¡é¼ å§åµåå¢ååªå£®å¥ç½å®å±¤åæ£æ³æææ¿æ»"],["9180","ææ©æ¹å·£æ§æ§½æ¼ç¥äºç©ç¸çªç³ç·ç¶è¡èèè¬è¼è»è£èµ°éé­ééé¨åå¢æèèµè´é ä¿å´åå³æ¯æææ¸¬è¶³éä¿å±è³æç¶åè¢å¶æå­å­«å°ææéä»å¤å¤ªæ±°è©å¾å å¦¥æ°ææèµæ¥éé§é¨¨ä½å å¯¾èå²±å¸¯å¾æ ææ´æ¿æ³°æ»èè¿èè¢è²¸éé®éé»é¯ä»£å°å¤§ç¬¬éé¡é·¹æ»ç§ååå®ææææ²¢æ¿¯ç¢è¨é¸æ¿è«¾è¸å§è¸åª"],["9240","å©ä½éè¾°å¥ªè±å·½ç«ªè¾¿æ£è°·ç¸é±æ¨½èª°ä¸¹ååå¦ææ¢æ¦æ­æ·¡æ¹ç­ç­ç«¯ç®ªç¶»è½èèèªéå£å£å¼¾æ­ææªæ®µç·è«å¤ç¥å°å¼æ¥æºæ± ç´ç¨ç½®è´èéé¦³ç¯çç«¹ç­è"],["9280","éç§©çªè¶å«¡çä¸­ä»²å®å¿ æ½æ¼æ±æ³¨è«è¡·è¨»éé³é§æ¨ç¦çªè§èè²¯ä¸åååå¯µå¸å¸³åºå¼å¼µå½«å¾´æ²ææ¢ææ½®ççºçºè´è¹è¸è¶èª¿è«è¶è·³éé·é é³¥åæç´ææ²çè³é®é³æ´¥å¢æ¤æ§è¿½éçéå¡æ æ´æ§»ä½æ¼¬æè¾»è¦ç¶´éæ¤¿æ½°åªå£·å¬¬ç´¬çªåé£é¶´äº­ä½ååµåè²åå ¤å®å¸åºåº­å»·å¼ææµæºææ¢¯æ±ç¢ç¦ç¨ç· èè¨è«¦è¹é"],["9340","é¸é­éé¼æ³¥ææ¢æµæ»´çç¬é©éæººå²å¾¹æ¤è½è¿­éå¸å¡«å¤©å±åºæ·»çºçè²¼è»¢é¡ç¹ä¼æ®¿æ¾±ç°é»ååå µå¡å¦¬å± å¾æææ¸¡ç»èè³­éé½éç ¥ç ºåªåº¦åå¥´æååå¬"],["9380","åååå¡å¡å¥å®å³¶å¶æ¼ææ­æ±æ¡æ¢¼æ£çæ·æ¹¯æ¶ç¯çå½çç¥·ç­ç­ç­ç³çµ±å°è£è©è¤è¨è¬è±è¸éééé¶é ­é¨°éåååå å°æ§ææ´ç³ç«¥è´èééå³ é´å¿å¾å¾³æ¶ç¹ç£ç¦¿ç¯¤æ¯ç¬èª­æ æ©¡å¸çªæ¤´å±é³¶è«å¯éçå¸å±¯ææ¦æ²è±éé åæéå¥é£åä¹åªèè¬çæºéæ¥¢é¦´ç¸ç·åæ¥ è»é£æ±äºå°¼å¼è¿©åè³èè¹å»¿æ¥ä¹³å¥"],["9440","å¦å°¿é®ä»»å¦å¿èªæ¿¡ç¦°ç¥¢å¯§è±ç«ç±å¹´å¿µæ»æçç²ä¹å»¼ä¹åå¢æ©æ¿ç´è½è³è¿è¾²è¦è¤å·´ææ­è¦æ·æ³¢æ´¾ç¶ç ´å©ç½µè­é¦¬ä¿³å»ææææ¯ççèèºè¼©éåå¹åªæ¢"],["9480","æ¥³ç¤ç½è²·å£²è³ éªéè¿ç§¤ç§è©ä¼¯å¥åæææ³ç½ç®ç²è¶èè¿«ææ¼ çç¸è«é§éº¦å½ç®±ç¡²ç®¸èç­æ«¨å¹¡èçç å«é¢æºçºéé«ªä¼ç½°æç­é¥é³©åºå¡è¤é¼ä¼´å¤åååå¸æ¬ææ¿æ°¾æ±çç¯ç­çç¹è¬è©è²©ç¯éç©é é£¯æ½æ©çªç¤ç£èè®åªåå¦å¦åºå½¼æ²ææ¹æ«ææ¯æ³ç²ç®ç¢ç§ç·ç½·è¥è¢«èª¹è²»é¿éé£æ¨ç°¸åå°¾å¾®ææ¯çµçç¾"],["9540","é¼»æç¨å¹çé«­å½¦èè±èå¼¼å¿ç¢ç­é¼æ¡§å§«åªç´ç¾è¬¬ä¿µå½ªæ¨æ°·æ¼ç¢ç¥¨è¡¨è©è±¹å»æçç§èé¨é²èè­é°­åå½¬ææµçè²§è³é »æç¶ä¸ä»å å¤«å©¦å¯å¨å¸åºææ¶æ·"],["9580","æ§æ®æµ®ç¶ç¬¦èèèè­è² è³¦èµ´ééä¾®æ«æ­¦èè¡èªé¨å°æ¥é¢¨èºèä¼å¯å¾©å¹æç¦è¹è¤è¦æ·µå¼ææ²¸ä»ç©é®åå»å´å¢³æ¤æ®çå¥®ç²ç³ç´é°æèä¸ä½µåµå¡å¹£å¹³å¼æä¸¦è½ééç±³é å»å£çç¢§å¥ç¥èç®åå¤çç¯ç·¨è¾ºè¿éä¾¿åå¨©å¼é­ä¿èéªåææ­©ç«è£è¼ç©åå¢æææ®æ¯ç°¿è©å£ä¿¸ååå ±å¥å®å³°å³¯å´©åºæ±æ§æ¾æ¹æ"],["9640","æ³æ³¡ç¹ç ²ç¸«èè³èè¬èè¤è¨ªè±é¦éé£½é³³éµ¬ä¹äº¡åååå¦¨å¸½å¿å¿æ¿æ´æææ£åç´¡èªè¨è¬è²è²¿é¾é²å é ¬åååå¢¨æ²æ´ç§ç¦ç©é¦åæ²¡æ®å å¹å¥æ¬ç¿»å¡ç"],["9680","æ©ç£¨é­éº»åå¦¹æ§ææ¯å©æ§å¹èæé®ªæ¾é±æ¡äº¦ä¿£åæ¹æ«æ²«è¿ä¾­ç¹­éº¿ä¸æ¢æºæ¼«èå³æªé­å·³ç®å²¬å¯èæ¹èç¨èå¦ç²æ°ç åå¤¢ç¡ççé§éµ¡æ¤å©¿å¨å¥åå½æçè¿·éé³´å§ªçæ»åæ£ç¶¿ç·¬é¢éººæ¸æ¨¡èå¦å­æ¯çç²ç¶²èèå²æ¨é»ç®æ¢å¿é¤å°¤æ»ç±¾è²°åæ¶ç´éåä¹å¶å¤çºè¶éå¼¥ç¢åå½¹ç´è¬è¨³èºéæ³è®éæææ²¹ç"],["9740","è«­è¼¸å¯ä½åªååå®¥å¹½æ æææææ¹§æ¶ç¶ç·ç±ç¥è£èªéééµéèå¤äºä½ä¸èªè¼¿é å­å¹¼å¦å®¹åº¸ææºæææ¥æ§æ´æº¶çç¨çª¯ç¾èèèè¦è¬¡è¸é¥é½é¤æ¾ææ¬²"],["9780","æ²æµ´ç¿ç¿¼æ·ç¾èºè£¸æ¥è±é ¼é·æ´çµ¡è½éªä¹±åµåµæ¬æ¿«èè­è¦§å©åå±¥ææ¢¨ççç¢è£è£¡éé¢é¸å¾çç«èæ ç¥åæµæºççç¡«ç²éç«é¾ä¾¶æ®æèäºäº®åä¸¡åå¯®ææ¢æ¶¼ççç­ç¨ç³§è¯è«é¼ééµé åç·å«åææ·çç³è¨è¼ªé£é±éºç å¡æ¶ç´¯é¡ä»¤ä¼¶ä¾å·å±å¶ºæç²ç¤¼èé´é·é¶ééºé½¢æ¦æ­´åå£çè£å»æææ¼£çç°¾ç·´è¯"],["9840","è®é£é¬åé­¯æ«çè³è·¯é²å´å©å»å¼ææ¥¼æ¦æµªæ¼ç¢ç¼ç¯­èè¾èéå­éºç¦èé²è«å­åè©±æ­ªè³èææ é·²äºäºé°è©«èè¨æ¤æ¹¾ç¢è"],["989f","å¼ä¸ä¸ä¸ªä¸±ä¸¶ä¸¼ä¸¿ä¹ä¹ä¹äºäºè±«äºèå¼äºäºäºäº äº¢äº°äº³äº¶ä»ä»ä»ä»ä»ä»ä»ä»­ä»ä»·ä¼ä½ä¼°ä½ä½ä½ä½ä½¶ä¾ä¾ä¾ä½»ä½©ä½°ä¾ä½¯ä¾ä¾åä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿ä¿¤ä¿¥åå¨ååªå¥åä¼ä¿¶å¡å©å¬ä¿¾ä¿¯ååååæåååååå¬å¸åååå´å²"],["9940","ååå³åååå¥å­å£å®å¹åµåååååååå¡åºå·å¼å»å¿ååååå¢ç«¸å©åªå®ååååååååååå¤å¦å¢å©åªå«å³å±å²å°åµå½åååå èå©å­"],["9980","å°åµå¾ååååå§åªå®å³å¹åååååååªå´å©å³å¿å½åååå±ååè¾¨è¾§å¬å­å¼åµååååå£å¦é£­å å³åµå¸å¹ååç¸åååååå£å¯å±å³å¸åååä¸ååååå©å®å¤å»å·ååå å¦å¥å®å°å¶åç°éåæ¼ç®å®å¨å­åºåå½åå¬å­å¼å®å¶å©ååååµååå±å·å°åå»åå¶ååååå¢å¸å¥å¬ååå¨"],["9a40","å«åå¤å¾å¼åå¥å¦ååå½å®å­åºå¢å¹åå£åå®ååååå¸å³åååå¯ååå»å¾ååå®å¼åå©åå¨åååååå¤ååå·åå¾å½åå¹ååçå´å¶å²å¸"],["9a80","å«å¤å¯å¬åªåååå ååå¥å®å¶å´åå¼ååååååååå®å¹åå¿ååååååååååå¦å·å¸åå»ååå©ååå¡å¿ååå å³å¤åªå°åååååå åå£å å å å¡²å ¡å¡¢å¡å¡°æ¯å¡å ½å¡¹å¢å¢¹å¢å¢«å¢ºå£å¢»å¢¸å¢®å£å£å£å£å£å£å£¥å£å£¤å£å£¯å£ºå£¹å£»å£¼å£½å¤å¤å¤å¤æ¢¦å¤¥å¤¬å¤­å¤²å¤¸å¤¾ç«å¥å¥å¥å¥å¥å¥¢å¥ å¥§å¥¬å¥©"],["9b40","å¥¸å¦å¦ä½ä¾«å¦£å¦²å§å§¨å§å¦å§å§å¨¥å¨å¨å¨å¨å¨å©å©¬å©å¨µå¨¶å©¢å©ªåªåª¼åª¾å«å«åª½å«£å«å«¦å«©å«å«ºå«»å¬å¬å¬å¬²å«å¬ªå¬¶å¬¾å­å­å­å­å­å­å­å­¥å­©å­°å­³å­µå­¸æå­ºå®"],["9b80","å®å®¦å®¸å¯å¯å¯å¯å¯å¯¤å¯¦å¯¢å¯å¯¥å¯«å¯°å¯¶å¯³å°å°å°å°å°å° å°¢å°¨å°¸å°¹å±å±å±å±å±å±å­±å±¬å±®ä¹¢å±¶å±¹å²å²å²å¦å²«å²»å²¶å²¼å²·å³å²¾å³å³å³©å³½å³ºå³­å¶å³ªå´å´å´åµå´å´å´å´å´¢å´å´å´åµåµåµåµåµ¬åµ³åµ¶å¶å¶å¶å¶¢å¶å¶¬å¶®å¶½å¶å¶·å¶¼å·å·å·å·å·å·å·«å·²å·µå¸å¸å¸å¸å¸å¸¶å¸·å¹å¹å¹å¹å¹å¹å¹å¹¢å¹¤å¹å¹µå¹¶å¹ºéº¼å¹¿åº å»å»å»å»å»"],["9c40","å»å»£å»å»å»å»¢å»¡å»¨å»©å»¬å»±å»³å»°å»´å»¸å»¾å¼å¼å½å½å¼å¼å¼å¼©å¼­å¼¸å½å½å½å½å¼¯å½å½å½å½å½¡å½­å½³å½·å¾å¾å½¿å¾å¾å¾å¾å¾å¾å¾å¾ å¾¨å¾­å¾¼å¿å¿»å¿¤å¿¸å¿±å¿æ³å¿¿æ¡æ "],["9c80","æææ©ææ±æææ«æ¦ææºæææªæ·æææææ£ææ¤ææ¬æ«ææææ§ææææææææ§ææ¡æ¸æ ææ´å¿°æ½ææµæææææ¶æ·ææ´æºææ¡æ»æ±ææææ¾æ¨æ§ææ¿æ¼æ¬æ´æ½æææ³æ·ææææ«æ´æ¯æ¥æ±ææææµææææ¬æææææ«æ®ææææ·ææææºæç½¹ææ¦æ£æ¶æºæ´æ¿æ½æ¼æ¾æææææææ"],["9d40","ææ¡æªæ®æ°æ²æ³ææææ£ææ æ¨æ¼æææ¾æææææææææ»ææ¿ææææææææææææ®æ±æ§æææ¯æµææ¾æææææææ«æ¶æ£ææææµæ«"],["9d80","æ©æ¾æ©æææ£æææ¶æææ´æææ¦æ¶æææ¨ææ§æ¯æ¶ææªæææ¥æ©ææ¼æææææ»æææ±æ§èæ æ¡æ¬æ£æ¯æ¬æ¶æ´æ²æºææ½ææææ¤æ£æ«æ´æµæ·æ¶æ¸çææææææææ²æ¸ææè®æææ«æ·æææææææææ æ¡æ±æ²æææ»æ³æµæ¶æ´ææææææææ¤æ§æ¨ææ¢æ°æææææææææ¹ææ¾æ¼"],["9e40","ææ¸æææ æ¿æ¦æ©æ°æµæ·ææææ¦æ§é¸æ®æ¿æ¶ææ¸æ·æææ ææ£æ¤ææ°æ©æ¼æªæææ¦æ¡ææ·æ¯æ´æ¬æ³æ©æ¸æ¤æææ¢æ®æ¹æææ§æªæ æ¡æ ©æ¡æ¡æ ²æ¡"],["9e80","æ¢³æ «æ¡æ¡£æ¡·æ¡¿æ¢æ¢æ¢­æ¢æ¢æ¢æ¢æª®æ¢¹æ¡´æ¢µæ¢ æ¢ºæ¤æ¢æ¡¾æ¤æ£æ¤æ£æ¤¢æ¤¦æ£¡æ¤æ£æ£æ£§æ£æ¤¶æ¤æ¤æ£æ££æ¤¥æ£¹æ£ æ£¯æ¤¨æ¤ªæ¤æ¤£æ¤¡æ£æ¥¹æ¥·æ¥æ¥¸æ¥«æ¥æ¥¾æ¥®æ¤¹æ¥´æ¤½æ¥æ¤°æ¥¡æ¥æ¥æ¦æ¥ªæ¦²æ¦®æ§æ¦¿æ§æ§æ¦¾æ§å¯¨æ§æ§æ¦»æ§æ¦§æ¨®æ¦æ¦ æ¦æ¦æ¦´æ§æ§¨æ¨æ¨æ§¿æ¬æ§¹æ§²æ§§æ¨æ¦±æ¨æ§­æ¨æ§«æ¨æ¨æ«æ¨£æ¨æ©æ¨æ©²æ¨¶æ©¸æ©æ©¢æ©æ©¦æ©æ¨¸æ¨¢æªæªæª æªæª¢æª£"],["9f40","æªèæª»æ«æ«æª¸æª³æª¬æ«æ«æ«æªªæ«æ«ªæ«»æ¬èæ«ºæ¬æ¬é¬±æ¬æ¬¸æ¬·çæ¬¹é£®æ­æ­æ­æ­æ­æ­æ­æ­æ­¡æ­¸æ­¹æ­¿æ®æ®æ®æ®æ®æ®æ®æ®¤æ®ªæ®«æ®¯æ®²æ®±æ®³æ®·æ®¼æ¯æ¯æ¯æ¯æ¯¬æ¯«æ¯³æ¯¯"],["9f80","éº¾æ°æ°æ°æ°æ°¤æ°£æ±æ±æ±¢æ±ªæ²æ²æ²æ²æ²æ±¾æ±¨æ±³æ²æ²æ³æ³±æ³æ²½æ³æ³æ³æ²®æ²±æ²¾æ²ºæ³æ³¯æ³æ³ªæ´è¡æ´¶æ´«æ´½æ´¸æ´æ´µæ´³æ´æ´æµ£æ¶æµ¤æµæµ¹æµæ¶æ¶æ¿¤æ¶æ·¹æ¸æ¸æ¶µæ·æ·¦æ¶¸æ·æ·¬æ·æ·æ·¨æ·æ·æ·ºæ·æ·¤æ·æ·ªæ·®æ¸­æ¹®æ¸®æ¸æ¹²æ¹æ¸¾æ¸£æ¹«æ¸«æ¹¶æ¹æ¸æ¹æ¸ºæ¹æ¸¤æ»¿æ¸æ¸¸æºæºªæºæ»æº·æ»æº½æº¯æ»æº²æ»æ»æºæº¥æ»æºæ½æ¼çæ»¬æ»¸æ»¾æ¼¿æ»²æ¼±æ»¯æ¼²æ»"],["e040","æ¼¾æ¼æ»·æ¾æ½ºæ½¸æ¾æ¾æ½¯æ½æ¿³æ½­æ¾æ½¼æ½æ¾æ¾æ¿æ½¦æ¾³æ¾£æ¾¡æ¾¤æ¾¹æ¿æ¾ªæ¿æ¿æ¿¬æ¿æ¿æ¿±æ¿®æ¿ççæ¿ºçççæ¿¾ççæ½´çççç°ç¾ç²çç£ççç¯ç±ç¬ç¸ç³ç®ççç"],["e080","ççç½ççç¥ççç¦ç¢ççç¬çç»ççç¨ç¬çç¹ç¾ççççç ç¬ç§çµç¼ç¹ç¿çççç¨ç­ç¬ç°ç²ç»ç¼ç¿ççççç´ç¾çççççç¢ç§ç¹ç²çççççç¢ç ç¡ç¹ç·åçççççç´ç¯ç©ç¥ç¾ççé»ççªç¨ç°ç¸çµç»çºçç³çç»çç¥ç®çç¢çç¯ç¥ç¸ç²çºçç¿ççççç©ç°ç£çªç¶ç¾ççç§çççç±"],["e140","ç ç£ç§ç©ç®ç²ç°ç±ç¸ç·çççççççççç¦ç¬ç¼çççççççç©ç¤ç§ç«ç­ç¸ç¶ççç´ççççççç¥ç£çç³ççµç½ç¸ç¼ç±ççççç£çç¾ç¿"],["e180","ç¼çç°çºç²ç³ççççç§ç ç¡ç¢ç¤ç´ç°ç»çççççç¡ç¢ç¨ç©çªç§ç¬ç°ç²ç¶ç¸ç¼çççççççççç°ç´ç¸ç¹çºçççççç¡ç¥ç§çªè¯ç»çççç©ç¤çç¥ç¦çç·ç¸ççç¨ç«çç¥ç¿ç¾ç¹çççç çç°ç¶ç¹ç¿ç¼ç½ç»çççççç£ç®ç¼ç ç ç¤¦ç  ç¤ªç¡ç¢ç¡´ç¢ç¡¼ç¢ç¢ç¢£ç¢µç¢ªç¢¯ç£ç£ç£ç£ç¢¾ç¢¼ç£ç£ç£¬"],["e240","ç£§ç£ç£½ç£´ç¤ç¤ç¤ç¤ç¤¬ç¤«ç¥ç¥ ç¥ç¥ç¥ç¥ç¥ç¥ºç¥¿ç¦ç¦ç¦§é½ç¦ªç¦®ç¦³ç¦¹ç¦ºç§ç§ç§§ç§¬ç§¡ç§£ç¨ç¨ç¨ç¨ç¨ ç¨ç¦ç¨±ç¨»ç¨¾ç¨·ç©ç©ç©ç©¡ç©¢ç©©é¾ç©°ç©¹ç©½çªçªçªçªçªçª©ç«çª°"],["e280","çª¶ç«ç«çª¿éç«ç«ç«ç«ç«ç«ç«ç«ç«ç«¡ç«¢ç«¦ç«­ç«°ç¬ç¬ç¬ç¬ç¬³ç¬ç¬ç¬ç¬µç¬¨ç¬¶ç­ç­ºç¬ç­ç¬ç­ç­ç­µç­¥ç­´ç­§ç­°ç­±ç­¬ç­®ç®ç®ç®ç®ç®ç®ç®ç®ç®ç­ç®ç¯ç¯ç¯ç¯ç®´ç¯ç¯ç¯©ç°ç°ç¯¦ç¯¥ç± ç°ç°ç°ç¯³ç¯·ç°ç°ç¯¶ç°£ç°§ç°ªç°ç°·ç°«ç°½ç±ç±ç±ç±ç±ç±ç±ç±ç±¤ç±ç±¥ç±¬ç±µç²ç²ç²¤ç²­ç²¢ç²«ç²¡ç²¨ç²³ç²²ç²±ç²®ç²¹ç²½ç³ç³ç³ç³ç³ç³ç³¢é¬»ç³¯ç³²ç³´ç³¶ç³ºç´"],["e340","ç´ç´ç´ç´çµçµç´®ç´²ç´¿ç´µçµçµ³çµçµçµ²çµ¨çµ®çµçµ£ç¶ç¶çµç¶çµ½ç¶ç¶ºç¶®ç¶£ç¶µç·ç¶½ç¶«ç¸½ç¶¢ç¶¯ç·ç¶¸ç¶ç¶°ç·ç·ç·¤ç·ç·»ç·²ç·¡ç¸ç¸ç¸£ç¸¡ç¸ç¸±ç¸ç¸ç¸ç¸¢ç¹ç¹¦ç¸»ç¸µç¸¹ç¹ç¸·"],["e380","ç¸²ç¸ºç¹§ç¹ç¹ç¹ç¹ç¹ç¹¹ç¹ªç¹©ç¹¼ç¹»çºç·ç¹½è¾®ç¹¿çºçºçºçºçºçºçºçºçºçºçºç¼¸ç¼ºç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ç½ ç½¨ç½©ç½§ç½¸ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾ç¾£ç¾¯ç¾²ç¾¹ç¾®ç¾¶ç¾¸è­±ç¿ç¿ç¿ç¿ç¿ç¿¡ç¿¦ç¿©ç¿³ç¿¹é£èèèèèèèè¡è¨è¿è»èèèèèèè¢è¨è³è²è°è¶è¹è½è¿èèèèèèè­åè¬èè¥èèèèèèè¯è±èè©è£è¯è"],["e440","éèè¾èèè¼è±è®è¥è¦è´èèèèèè èè¤è£èèè©è°èµè¾è¸è½èèèºèèèèèèèèè è§èºè»è¾èèèèèèèèè©è«è¸è³èèèèèèè¤"],["e480","è¢è¨èªè«è®è±è·è¸è¾èèè«èè»è¬è¡è£èèè´è³èºèèè»è¹èèèèèèµè´èè²è±èè¹èèè¯è«èèèèèªèè¢èè£èèèè¼èµè³èµè èè¨è´èè«èè½èèèèè·èè è²èè¢è è½è¸èè»è­èªè¼èèè·è«è­è®èè©èè¬è¯è¹èµèè¢è¹è¿èèèè»èèèèèè¡è¡è¿è´èèè¬èèèè¼èè£èè"],["e540","èèèèèè¤èèèè¨è­èèèªèèè·è¾èèèºèè¹èèèè¥èè¹èèèè¾èºèè¢èè°è¿èä¹èèè§è±èè£è©èªèèè¶è¯èèè°èè £è«èèè©è¬"],["e580","èèè¯èèèèèè»èèèè¹èè´è¿è·è»è¥è©èè èè¸èèè´èè¨è®èèè£èªè è¢èèè¯èè½èèéè«èè³èèè»è¯è²è è è è¾è¶è·è èè è è è ¢è ¡è ±è ¶è ¹è §è »è¡è¡è¡è¡è¡è¡¢è¡«è¢è¡¾è¢è¡µè¡½è¢µè¡²è¢è¢è¢è¢®è¢è¢¢è¢è¢¤è¢°è¢¿è¢±è£è£è£è£è£è£è£¹è¤è£¼è£´è£¨è£²è¤è¤è¤è¤è¥è¤è¤¥è¤ªè¤«è¥è¥è¤»è¤¶è¤¸è¥è¤è¥ è¥"],["e640","è¥¦è¥¤è¥­è¥ªè¥¯è¥´è¥·è¥¾è¦è¦è¦è¦è¦è¦¡è¦©è¦¦è¦¬è¦¯è¦²è¦ºè¦½è¦¿è§è§è§è§è§§è§´è§¸è¨è¨è¨è¨è¨è¨è¨¥è¨¶è©è©è©è©è©è©¼è©­è©¬è©¢èªèªèªèª¨èª¡èªèª¥èª¦èªèª£è«è«è«è«è««è«³è«§"],["e680","è«¤è«±è¬è« è«¢è«·è«è«è¬è¬è¬è«¡è¬è¬è¬è¬ è¬³é«è¬¦è¬«è¬¾è¬¨è­è­è­è­è­è­è­è­è­«è­è­¬è­¯è­´è­½è®è®è®è®è®è®è®è®è°ºè±è°¿è±è±è±è±è±è±¢è±¬è±¸è±ºè²è²è²è²è²è²è²è±¼è²æè²­è²ªè²½è²²è²³è²®è²¶è³è³è³¤è³£è³è³½è³ºè³»è´è´è´è´è´è´è´é½è´è³è´è´èµ§èµ­èµ±èµ³è¶è¶è·è¶¾è¶ºè·è·è·è·è·è·è·ªè·«è·è·£è·¼è¸è¸è·¿è¸è¸è¸è¸è¹è¸µè¸°è¸´è¹"],["e740","è¹è¹è¹è¹è¹è¹è¹¤è¹ è¸ªè¹£è¹è¹¶è¹²è¹¼èºèºèºèºèºèºèºèºèºèºèºªèº¡èº¬èº°è»èº±èº¾è»è»è»è»è»£è»¼è»»è»«è»¾è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼è¼¦è¼³è¼»è¼¹è½è½è¼¾è½è½è½è½è½è½"],["e780","è½¢è½£è½¤è¾è¾è¾£è¾­è¾¯è¾·è¿è¿¥è¿¢è¿ªè¿¯éè¿´éè¿¹è¿ºééé¡ééééé§é¶éµé¹è¿¸ééééééé¾éééé¨é¯é¶é¨é²éé½éééééé¨é¯é±éµé¢é¤æééééé²é°éééé£é¥é©é³é²éééé¢é«é¯éªéµé´éºéééééééé¡éé¼éµé¶éé¿éé¬ééééééé¤ééé¿ééééééééé¹é·é©ééºéé®"],["e840","éé¢éé£éºéµé»éé é¼é®éé°é¬é­éé¹ééé¨é¥éééééé¤ééééééé¶é«éµé¡éºééééé é¢ééªé©é°éµé·é½éé¼é¾éé¿ééééééé"],["e880","é é¨é§é­é¼é»é¹é¾éæ¿¶éééééééé¡é¥é¢é¡é¨é®é¯ééééé·ééééé¦é²é¬éééééªé§é±é²é°é´é¶é¸é¹ééééè¥éééé¹éééééééééé¤éªé°é¹é½é¾ééééééé é¤é¦é¨åé«é±é¹éé¼ééºéééééé¨é¦é£é³é´éééééé­é½é²ç«é¶éµé é é ¸é ¤é ¡é ·é ½é¡é¡é¡é¡«é¡¯é¡°"],["e940","é¡±é¡´é¡³é¢ªé¢¯é¢±é¢¶é£é£é£é£©é£«é¤é¤é¤é¤é¤é¤¡é¤é¤é¤¤é¤ é¤¬é¤®é¤½é¤¾é¥é¥é¥é¥é¥é¥é¥é¥é¥é¦é¦é¦¥é¦­é¦®é¦¼é§é§é§é§é§é§­é§®é§±é§²é§»é§¸é¨é¨é¨é§¢é¨é¨«é¨·é©é©é©é©"],["e980","é¨¾é©é©é©é©é©é©¢é©¥é©¤é©©é©«é©ªéª­éª°éª¼é«é«é«é«é«é«é«é«¢é«£é«¦é«¯é««é«®é«´é«±é«·é«»é¬é¬é¬é¬é¬¢é¬£é¬¥é¬§é¬¨é¬©é¬ªé¬®é¬¯é¬²é­é­é­é­é­é­é­é­´é®é®é®é®é®é®é® é®¨é®´é¯é¯é®¹é¯é¯é¯é¯é¯£é¯¢é¯¤é¯é¯¡é°ºé¯²é¯±é¯°é°é°é°é°é°é°é°é°é°é°é°®é°é°¥é°¤é°¡é°°é±é°²é±é°¾é±é± é±§é±¶é±¸é³§é³¬é³°é´é´é³«é´é´é´ªé´¦é¶¯é´£é´éµé´é´éµé´¿é´¾éµéµ"],["ea40","éµéµéµ¤éµéµéµéµ²é¶é¶é¶«éµ¯éµºé¶é¶¤é¶©é¶²é·é·é¶»é¶¸é¶ºé·é·é·é·é·é·¸é·¦é·­é·¯é·½é¸é¸é¸é¹µé¹¹é¹½éºéºéºéºéºéºéºéºéº¥éº©éº¸éºªéº­é¡é»é»é»é»é»é»é»é»é» é»¥é»¨é»¯"],["ea80","é»´é»¶é»·é»¹é»»é»¼é»½é¼é¼ç·é¼é¼¡é¼¬é¼¾é½é½é½é½£é½é½ é½¡é½¦é½§é½¬é½ªé½·é½²é½¶é¾é¾é¾ å ¯æ§éç¤åç"],["ed40","çºè¤ééèä¿ç»æ±æ£é¹æ»å½ä¸¨ä»¡ä»¼ä¼ä¼ä¼¹ä½ä¾ä¾ä¾ä¾ä¿åå¢ä¿¿ååå°ååå´ååå¤åå¾å¬ååå¦ååååå¤å²åå²åï¨ååå©å¿ååå¥å¬ååï¨"],["ed80","ï¨å¢å¢²å¤å¥å¥å¥å¥£å¦¤å¦ºå­å¯ç¯å¯å¯¬å°å²¦å²ºå³µå´§åµï¨åµåµ­å¶¸å¶¹å·å¼¡å¼´å½§å¾·å¿ææææææ æ²ææ·æ°æææ¦æµæ ææææææ»ææ®ææ¤æ¥ææï¨æ³ææ æ²æ¿æºæï¤©æ¦æ»æ¡ææ æ¡æ£ï¨æ¥¨ï¨æ¦æ§¢æ¨°æ©«æ©æ©³æ©¾æ«¢æ«¤æ¯æ°¿æ±æ²æ±¯æ³æ´æ¶æµ¯æ¶æ¶¬æ·æ·¸æ·²æ·¼æ¸¹æ¹æ¸§æ¸¼æº¿æ¾æ¾µæ¿µççç¨çç«çççççï¨çç¾ç±"],["ee40","ç¾ç¤ï¨ç·ç½ççç£çççµç¦çªç©ç®ç¢çççç¯ççççç¦ï¨çå¯ç ¡ç¡ç¡¤ç¡ºç¤°ï¨ï¨ï¨ç¦ï¨ç¦ç«ç«§ï¨ç««ç®ï¨çµçµç¶·ç¶ ç·ç¹ç½ç¾¡ï¨èè¢è¿èè¶èè´èè"],["ee80","è«ï¨è°ï¨ ï¨¡è è£µè¨è¨·è©¹èª§èª¾è«ï¨¢è«¶è­è­¿è³°è³´è´èµ¶ï¨£è»ï¨¤ï¨¥é§éï¨¦éé§éééé­é®é¤é¥ééééºéé¼éééé¹é§é§é·é¸é§éééï¨§éé éé¥é¡é»ï¨¨éé¿ééé°éé¤ééé¸é±éééï§ï¨©éé¯é³é»éééééé¡é¡¥ï¨ªï¨«é¤§ï¨¬é¦é©é«é«é­µé­²é®é®±é®»é°éµ°éµ«ï¨­é¸é»"],["eeef","â°",9,"ï¿¢ï¿¤ï¼ï¼"],["f040","î",62],["f080","î¿",124],["f140","î¼",62],["f180","î»",124],["f240","î¸",62],["f280","î·",124],["f340","î´",62],["f380","î³",124],["f440","î°",62],["f480","î¯",124],["f540","î¬",62],["f580","î«",124],["f640","î¨",62],["f680","î§",124],["f740","î¤",62],["f780","î£",124],["f840","î ",62],["f880","î",124],["f940","î"],["fa40","â°",9,"â ",9,"ï¿¢ï¿¤ï¼ï¼ã±ââ¡âµçºè¤ééèä¿ç»æ±æ£é¹æ»å½ä¸¨ä»¡ä»¼ä¼ä¼ä¼¹ä½ä¾ä¾ä¾ä¾ä¿åå¢ä¿¿ååå°ååå´åå"],["fa80","å¤åå¾å¬ååå¦ååååå¤å²åå²åï¨ååå©å¿ååå¥å¬ååï¨ï¨å¢å¢²å¤å¥å¥å¥å¥£å¦¤å¦ºå­å¯ç¯å¯å¯¬å°å²¦å²ºå³µå´§åµï¨åµåµ­å¶¸å¶¹å·å¼¡å¼´å½§å¾·å¿ææææææ æ²ææ·æ°æææ¦æµæ ææææææ»ææ®ææ¤æ¥ææï¨æ³ææ æ²æ¿æºæï¤©æ¦æ»æ¡ææ æ¡æ£ï¨æ¥¨ï¨æ¦æ§¢æ¨°æ©«æ©æ©³æ©¾æ«¢æ«¤æ¯æ°¿æ±æ²æ±¯æ³æ´æ¶æµ¯"],["fb40","æ¶æ¶¬æ·æ·¸æ·²æ·¼æ¸¹æ¹æ¸§æ¸¼æº¿æ¾æ¾µæ¿µççç¨çç«çççççï¨çç¾ç±ç¾ç¤ï¨ç·ç½ççç£çççµç¦çªç©ç®ç¢çççç¯ççççç¦ï¨çå¯ç ¡ç¡ç¡¤ç¡ºç¤°ï¨ï¨"],["fb80","ï¨ç¦ï¨ç¦ç«ç«§ï¨ç««ç®ï¨çµçµç¶·ç¶ ç·ç¹ç½ç¾¡ï¨èè¢è¿èè¶èè´èèè«ï¨è°ï¨ ï¨¡è è£µè¨è¨·è©¹èª§èª¾è«ï¨¢è«¶è­è­¿è³°è³´è´èµ¶ï¨£è»ï¨¤ï¨¥é§éï¨¦éé§éééé­é®é¤é¥ééééºéé¼éééé¹é§é§é·é¸é§éééï¨§éé éé¥é¡é»ï¨¨éé¿ééé°éé¤ééé¸é±éééï§ï¨©éé¯é³é»éééééé¡é¡¥ï¨ªï¨«é¤§ï¨¬é¦é©é«"],["fc40","é«é­µé­²é®é®±é®»é°éµ°éµ«ï¨­é¸é»"]]');
            }
          )
          /******/
        }, C = {};
        function B(c) {
          var d = C[c];
          if (d !== void 0)
            return d.exports;
          var t = C[c] = {
            /******/
            id: c,
            /******/
            loaded: !1,
            /******/
            exports: {}
            /******/
          };
          return x[c].call(t.exports, t, t.exports, B), t.loaded = !0, t.exports;
        }
        (function() {
          B.g = function() {
            if (typeof globalThis == "object")
              return globalThis;
            try {
              return this || new Function("return this")();
            } catch {
              if (typeof window == "object")
                return window;
            }
          }();
        })(), function() {
          B.nmd = function(c) {
            return c.paths = [], c.children || (c.children = []), c;
          };
        }();
        var O = B(26949);
        return O;
      }()
    );
  });
})(Dd);
/*! Buttons for DataTables 3.0.0
 * Â© SpryMedia Ltd - datatables.net/license
 */
let Ee = Va;
var Pd = 0, Od = 0, Vn = ge.ext.buttons, x0 = null;
function G0(s, g, x) {
  Ee.fn.animate ? s.stop().fadeIn(g, x) : (s.css("display", "block"), x && x.call(s));
}
function V0(s, g, x) {
  Ee.fn.animate ? s.stop().fadeOut(g, x) : (s.css("display", "none"), x && x.call(s));
}
var en = function(s, g) {
  if (!ge.versionCheck("2"))
    throw "Warning: Buttons requires DataTables 2 or newer";
  if (!(this instanceof en))
    return function(x) {
      return new en(x, s).container();
    };
  typeof g > "u" && (g = {}), g === !0 && (g = {}), Array.isArray(g) && (g = { buttons: g }), this.c = Ee.extend(!0, {}, en.defaults, g), g.buttons && (this.c.buttons = g.buttons), this.s = {
    dt: new ge.Api(s),
    buttons: [],
    listenKeys: "",
    namespace: "dtb" + Pd++
  }, this.dom = {
    container: Ee("<" + this.c.dom.container.tag + "/>").addClass(
      this.c.dom.container.className
    )
  }, this._constructor();
};
Ee.extend(en.prototype, {
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Public methods
   */
  /**
   * Get the action of a button
   * @param  {int|string} Button index
   * @return {function}
   */
  /**
  * Set the action of a button
  * @param  {node} node Button element
  * @param  {function} action Function to set
  * @return {Buttons} Self for chaining
  */
  action: function(s, g) {
    var x = this._nodeToButton(s);
    return g === void 0 ? x.conf.action : (x.conf.action = g, this);
  },
  /**
   * Add an active class to the button to make to look active or get current
   * active state.
   * @param  {node} node Button element
   * @param  {boolean} [flag] Enable / disable flag
   * @return {Buttons} Self for chaining or boolean for getter
   */
  active: function(s, g) {
    var x = this._nodeToButton(s), C = this.c.dom.button.active, B = Ee(x.node);
    return x.inCollection && this.c.dom.collection.button && this.c.dom.collection.button.active !== void 0 && (C = this.c.dom.collection.button.active), g === void 0 ? B.hasClass(C) : (B.toggleClass(C, g === void 0 ? !0 : g), this);
  },
  /**
   * Add a new button
   * @param {object} config Button configuration object, base string name or function
   * @param {int|string} [idx] Button index for where to insert the button
   * @param {boolean} [draw=true] Trigger a draw. Set a false when adding
   *   lots of buttons, until the last button.
   * @return {Buttons} Self for chaining
   */
  add: function(s, g, x) {
    var C = this.s.buttons;
    if (typeof g == "string") {
      for (var B = g.split("-"), O = this.s, c = 0, d = B.length - 1; c < d; c++)
        O = O.buttons[B[c] * 1];
      C = O.buttons, g = B[B.length - 1] * 1;
    }
    return this._expandButton(
      C,
      s,
      s !== void 0 ? s.split : void 0,
      (s === void 0 || s.split === void 0 || s.split.length === 0) && O !== void 0,
      !1,
      g
    ), (x === void 0 || x === !0) && this._draw(), this;
  },
  /**
   * Clear buttons from a collection and then insert new buttons
   */
  collectionRebuild: function(s, g) {
    var x = this._nodeToButton(s);
    if (g !== void 0) {
      var C;
      for (C = x.buttons.length - 1; C >= 0; C--)
        this.remove(x.buttons[C].node);
      for (x.conf.prefixButtons && g.unshift.apply(g, x.conf.prefixButtons), x.conf.postfixButtons && g.push.apply(g, x.conf.postfixButtons), C = 0; C < g.length; C++) {
        var B = g[C];
        this._expandButton(
          x.buttons,
          B,
          B !== void 0 && B.config !== void 0 && B.config.split !== void 0,
          !0,
          B.parentConf !== void 0 && B.parentConf.split !== void 0,
          null,
          B.parentConf
        );
      }
    }
    this._draw(x.collection, x.buttons);
  },
  /**
   * Get the container node for the buttons
   * @return {jQuery} Buttons node
   */
  container: function() {
    return this.dom.container;
  },
  /**
   * Disable a button
   * @param  {node} node Button node
   * @return {Buttons} Self for chaining
   */
  disable: function(s) {
    var g = this._nodeToButton(s);
    return Ee(g.node).addClass(this.c.dom.button.disabled).prop("disabled", !0), this;
  },
  /**
   * Destroy the instance, cleaning up event handlers and removing DOM
   * elements
   * @return {Buttons} Self for chaining
   */
  destroy: function() {
    Ee("body").off("keyup." + this.s.namespace);
    var s = this.s.buttons.slice(), g, x;
    for (g = 0, x = s.length; g < x; g++)
      this.remove(s[g].node);
    this.dom.container.remove();
    var C = this.s.dt.settings()[0];
    for (g = 0, x = C.length; g < x; g++)
      if (C.inst === this) {
        C.splice(g, 1);
        break;
      }
    return this;
  },
  /**
   * Enable / disable a button
   * @param  {node} node Button node
   * @param  {boolean} [flag=true] Enable / disable flag
   * @return {Buttons} Self for chaining
   */
  enable: function(s, g) {
    if (g === !1)
      return this.disable(s);
    var x = this._nodeToButton(s);
    return Ee(x.node).removeClass(this.c.dom.button.disabled).prop("disabled", !1), this;
  },
  /**
   * Get a button's index
   *
   * This is internally recursive
   * @param {element} node Button to get the index of
   * @return {string} Button index
   */
  index: function(s, g, x) {
    g || (g = "", x = this.s.buttons);
    for (var C = 0, B = x.length; C < B; C++) {
      var O = x[C].buttons;
      if (x[C].node === s)
        return g + C;
      if (O && O.length) {
        var c = this.index(s, C + "-", O);
        if (c !== null)
          return c;
      }
    }
    return null;
  },
  /**
   * Get the instance name for the button set selector
   * @return {string} Instance name
   */
  name: function() {
    return this.c.name;
  },
  /**
   * Get a button's node of the buttons container if no button is given
   * @param  {node} [node] Button node
   * @return {jQuery} Button element, or container
   */
  node: function(s) {
    if (!s)
      return this.dom.container;
    var g = this._nodeToButton(s);
    return Ee(g.node);
  },
  /**
   * Set / get a processing class on the selected button
   * @param {element} node Triggering button node
   * @param  {boolean} flag true to add, false to remove, undefined to get
   * @return {boolean|Buttons} Getter value or this if a setter.
   */
  processing: function(s, g) {
    var x = this.s.dt, C = this._nodeToButton(s);
    return g === void 0 ? Ee(C.node).hasClass("processing") : (Ee(C.node).toggleClass("processing", g), Ee(x.table().node()).triggerHandler("buttons-processing.dt", [
      g,
      x.button(s),
      x,
      Ee(s),
      C.conf
    ]), this);
  },
  /**
   * Remove a button.
   * @param  {node} node Button node
   * @return {Buttons} Self for chaining
   */
  remove: function(s) {
    var g = this._nodeToButton(s), x = this._nodeToHost(s), C = this.s.dt;
    if (g.buttons.length)
      for (var B = g.buttons.length - 1; B >= 0; B--)
        this.remove(g.buttons[B].node);
    g.conf.destroying = !0, g.conf.destroy && g.conf.destroy.call(C.button(s), C, Ee(s), g.conf), this._removeKey(g.conf), Ee(g.node).remove();
    var O = Ee.inArray(g, x);
    return x.splice(O, 1), this;
  },
  /**
   * Get the text for a button
   * @param  {int|string} node Button index
   * @return {string} Button text
   */
  /**
  * Set the text for a button
  * @param  {int|string|function} node Button index
  * @param  {string} label Text
  * @return {Buttons} Self for chaining
  */
  text: function(s, g) {
    var x = this._nodeToButton(s), C = x.textNode, B = this.s.dt, O = Ee(x.node), c = function(d) {
      return typeof d == "function" ? d(B, O, x.conf) : d;
    };
    return g === void 0 ? c(x.conf.text) : (x.conf.text = g, C.html(c(g)), this);
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Constructor
   */
  /**
   * Buttons constructor
   * @private
   */
  _constructor: function() {
    var s = this, g = this.s.dt, x = g.settings()[0], C = this.c.buttons;
    x._buttons || (x._buttons = []), x._buttons.push({
      inst: this,
      name: this.c.name
    });
    for (var B = 0, O = C.length; B < O; B++)
      this.add(C[B]);
    g.on("destroy", function(c, d) {
      d === x && s.destroy();
    }), Ee("body").on("keyup." + this.s.namespace, function(c) {
      if (!document.activeElement || document.activeElement === document.body) {
        var d = String.fromCharCode(c.keyCode).toLowerCase();
        s.s.listenKeys.toLowerCase().indexOf(d) !== -1 && s._keypress(d, c);
      }
    });
  },
  /* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
   * Private methods
   */
  /**
   * Add a new button to the key press listener
   * @param {object} conf Resolved button configuration object
   * @private
   */
  _addKey: function(s) {
    s.key && (this.s.listenKeys += Ee.isPlainObject(s.key) ? s.key.key : s.key);
  },
  /**
   * Insert the buttons into the container. Call without parameters!
   * @param  {node} [container] Recursive only - Insert point
   * @param  {array} [buttons] Recursive only - Buttons array
   * @private
   */
  _draw: function(s, g) {
    s || (s = this.dom.container, g = this.s.buttons), s.children().detach();
    for (var x = 0, C = g.length; x < C; x++)
      s.append(g[x].inserter), s.append(" "), g[x].buttons && g[x].buttons.length && this._draw(g[x].collection, g[x].buttons);
  },
  /**
   * Create buttons from an array of buttons
   * @param  {array} attachTo Buttons array to attach to
   * @param  {object} button Button definition
   * @param  {boolean} inCollection true if the button is in a collection
   * @private
   */
  _expandButton: function(s, g, x, C, B, O, c) {
    var d = this.s.dt, t = !1, o = this.c.dom.collection, r = Array.isArray(g) ? g : [g];
    g === void 0 && (r = Array.isArray(x) ? x : [x]);
    for (var n = 0, i = r.length; n < i; n++) {
      var f = this._resolveExtends(r[n]);
      if (f) {
        if (t = !!(f.config && f.config.split), Array.isArray(f)) {
          this._expandButton(
            s,
            f,
            l !== void 0 && l.conf !== void 0 ? l.conf.split : void 0,
            C,
            c !== void 0 && c.split !== void 0,
            O,
            c
          );
          continue;
        }
        var l = this._buildButton(
          f,
          C,
          f.split !== void 0 || f.config !== void 0 && f.config.split !== void 0,
          B
        );
        if (l) {
          if (O != null ? (s.splice(O, 0, l), O++) : s.push(l), l.conf.buttons && (l.collection = Ee(
            "<" + o.container.content.tag + "/>"
          ), l.conf._collection = l.collection, Ee(l.node).append(o.action.dropHtml), this._expandButton(
            l.buttons,
            l.conf.buttons,
            l.conf.split,
            !t,
            t,
            O,
            l.conf
          )), l.conf.split) {
            l.collection = Ee("<" + o.container.tag + "/>"), l.conf._collection = l.collection;
            for (var u = 0; u < l.conf.split.length; u++) {
              var h = l.conf.split[u];
              typeof h == "object" && (h.parent = c, h.collectionLayout === void 0 && (h.collectionLayout = l.conf.collectionLayout), h.dropup === void 0 && (h.dropup = l.conf.dropup), h.fade === void 0 && (h.fade = l.conf.fade));
            }
            this._expandButton(
              l.buttons,
              l.conf.buttons,
              l.conf.split,
              !t,
              t,
              O,
              l.conf
            );
          }
          l.conf.parent = c, f.init && f.init.call(d.button(l.node), d, Ee(l.node), f);
        }
      }
    }
  },
  /**
   * Create an individual button
   * @param  {object} config            Resolved button configuration
   * @param  {boolean} inCollection `true` if a collection button
   * @return {object} Completed button description object
   * @private
   */
  _buildButton: function(s, g, x, C) {
    var B = this, O = this.c.dom, c, d = this.s.dt, t = function(I) {
      return typeof I == "function" ? I(d, n, s) : I;
    }, o = Ee.extend(!0, {}, O.button);
    if (g && x && O.collection.split ? Ee.extend(!0, o, O.collection.split.action) : C || g ? Ee.extend(!0, o, O.collection.button) : x && Ee.extend(!0, o, O.split.button), s.spacer) {
      var r = Ee("<" + o.spacer.tag + "/>").addClass(
        "dt-button-spacer " + s.style + " " + o.spacer.className
      ).html(t(s.text));
      return {
        conf: s,
        node: r,
        inserter: r,
        buttons: [],
        inCollection: g,
        isSplit: x,
        collection: null,
        textNode: r
      };
    }
    if (s.available && !s.available(d, s) && !s.html)
      return !1;
    var n;
    if (s.html)
      n = Ee(s.html);
    else {
      var i = function(I, E, T, A, F) {
        A.action.call(E.button(T), I, E, T, A, F), Ee(E.table().node()).triggerHandler("buttons-action.dt", [
          E.button(T),
          E,
          T,
          A
        ]);
      }, f = function(I, E, T, A) {
        A.async ? (B.processing(T[0], !0), setTimeout(function() {
          i(I, E, T, A, function() {
            B.processing(T[0], !1);
          });
        }, A.async)) : i(I, E, T, A, function() {
        });
      }, l = s.tag || o.tag, u = s.clickBlurs === void 0 ? !0 : s.clickBlurs;
      if (n = Ee("<" + l + "/>").addClass(o.className).attr("tabindex", this.s.dt.settings()[0].iTabIndex).attr("aria-controls", this.s.dt.table().node().id).on("click.dtb", function(I) {
        I.preventDefault(), !n.hasClass(o.disabled) && s.action && f(I, d, n, s), u && n.trigger("blur");
      }).on("keypress.dtb", function(I) {
        I.keyCode === 13 && (I.preventDefault(), !n.hasClass(o.disabled) && s.action && f(I, d, n, s));
      }), l.toLowerCase() === "a" && n.attr("href", "#"), l.toLowerCase() === "button" && n.attr("type", "button"), o.liner.tag) {
        var h = Ee("<" + o.liner.tag + "/>").html(t(s.text)).addClass(o.liner.className);
        o.liner.tag.toLowerCase() === "a" && h.attr("href", "#"), n.append(h), c = h;
      } else
        n.html(t(s.text)), c = n;
      s.enabled === !1 && n.addClass(o.disabled), s.className && n.addClass(s.className), s.titleAttr && n.attr("title", t(s.titleAttr)), s.attr && n.attr(s.attr), s.namespace || (s.namespace = ".dt-button-" + Od++), s.config !== void 0 && s.config.split && (s.split = s.config.split);
    }
    var a = this.c.dom.buttonContainer, v;
    a && a.tag ? v = Ee("<" + a.tag + "/>").addClass(a.className).append(n) : v = n, this._addKey(s), this.c.buttonCreated && (v = this.c.buttonCreated(s, v));
    var y;
    if (x) {
      var p = g ? Ee.extend(!0, this.c.dom.split, this.c.dom.collection.split) : this.c.dom.split, e = p.wrapper;
      y = Ee("<" + e.tag + "/>").addClass(e.className).append(n);
      var m = Ee.extend(s, {
        align: p.dropdown.align,
        attr: {
          "aria-haspopup": "dialog",
          "aria-expanded": !1
        },
        className: p.dropdown.className,
        closeButton: !1,
        splitAlignClass: p.dropdown.splitAlignClass,
        text: p.dropdown.text
      });
      this._addKey(m);
      var w = function(I, E, T, A) {
        Vn.split.action.call(
          E.button(y),
          I,
          E,
          T,
          A
        ), Ee(E.table().node()).triggerHandler("buttons-action.dt", [
          E.button(T),
          E,
          T,
          A
        ]), T.attr("aria-expanded", !0);
      }, D = Ee(
        '<button class="' + p.dropdown.className + ' dt-button"></button>'
      ).html(p.dropdown.dropHtml).on("click.dtb", function(I) {
        I.preventDefault(), I.stopPropagation(), D.hasClass(o.disabled) || w(I, d, D, m), u && D.trigger("blur");
      }).on("keypress.dtb", function(I) {
        I.keyCode === 13 && (I.preventDefault(), D.hasClass(o.disabled) || w(I, d, D, m));
      });
      s.split.length === 0 && D.addClass("dtb-hide-drop"), y.append(D).attr(m.attr);
    }
    return {
      conf: s,
      node: x ? y.get(0) : n.get(0),
      inserter: x ? y : v,
      buttons: [],
      inCollection: g,
      isSplit: x,
      inSplit: C,
      collection: null,
      textNode: c
    };
  },
  /**
   * Get the button object from a node (recursive)
   * @param  {node} node Button node
   * @param  {array} [buttons] Button array, uses base if not defined
   * @return {object} Button object
   * @private
   */
  _nodeToButton: function(s, g) {
    g || (g = this.s.buttons);
    for (var x = 0, C = g.length; x < C; x++) {
      if (g[x].node === s)
        return g[x];
      if (g[x].buttons.length) {
        var B = this._nodeToButton(s, g[x].buttons);
        if (B)
          return B;
      }
    }
  },
  /**
   * Get container array for a button from a button node (recursive)
   * @param  {node} node Button node
   * @param  {array} [buttons] Button array, uses base if not defined
   * @return {array} Button's host array
   * @private
   */
  _nodeToHost: function(s, g) {
    g || (g = this.s.buttons);
    for (var x = 0, C = g.length; x < C; x++) {
      if (g[x].node === s)
        return g;
      if (g[x].buttons.length) {
        var B = this._nodeToHost(s, g[x].buttons);
        if (B)
          return B;
      }
    }
  },
  /**
   * Handle a key press - determine if any button's key configured matches
   * what was typed and trigger the action if so.
   * @param  {string} character The character pressed
   * @param  {object} e Key event that triggered this call
   * @private
   */
  _keypress: function(s, g) {
    if (!g._buttonsHandled) {
      var x = function(B, O) {
        if (B.key) {
          if (B.key === s)
            g._buttonsHandled = !0, Ee(O).click();
          else if (Ee.isPlainObject(B.key)) {
            if (B.key.key !== s || B.key.shiftKey && !g.shiftKey || B.key.altKey && !g.altKey || B.key.ctrlKey && !g.ctrlKey || B.key.metaKey && !g.metaKey)
              return;
            g._buttonsHandled = !0, Ee(O).click();
          }
        }
      }, C = function(B) {
        for (var O = 0, c = B.length; O < c; O++)
          x(B[O].conf, B[O].node), B[O].buttons.length && C(B[O].buttons);
      };
      C(this.s.buttons);
    }
  },
  /**
   * Remove a key from the key listener for this instance (to be used when a
   * button is removed)
   * @param  {object} conf Button configuration
   * @private
   */
  _removeKey: function(s) {
    if (s.key) {
      var g = Ee.isPlainObject(s.key) ? s.key.key : s.key, x = this.s.listenKeys.split(""), C = Ee.inArray(g, x);
      x.splice(C, 1), this.s.listenKeys = x.join("");
    }
  },
  /**
   * Resolve a button configuration
   * @param  {string|function|object} conf Button config to resolve
   * @return {object} Button configuration
   * @private
   */
  _resolveExtends: function(s) {
    var g = this, x = this.s.dt, C, B, O = function(r) {
      for (var n = 0; !Ee.isPlainObject(r) && !Array.isArray(r); ) {
        if (r === void 0)
          return;
        if (typeof r == "function") {
          if (r = r.call(g, x, s), !r)
            return !1;
        } else if (typeof r == "string") {
          if (!Vn[r])
            return { html: r };
          r = Vn[r];
        }
        if (n++, n > 30)
          throw "Buttons: Too many iterations";
      }
      return Array.isArray(r) ? r : Ee.extend({}, r);
    };
    for (s = O(s); s && s.extend; ) {
      if (!Vn[s.extend])
        throw "Cannot extend unknown button type: " + s.extend;
      var c = O(Vn[s.extend]);
      if (Array.isArray(c))
        return c;
      if (!c)
        return !1;
      var d = c.className;
      s.config !== void 0 && c.config !== void 0 && (s.config = Ee.extend({}, c.config, s.config)), s = Ee.extend({}, c, s), d && s.className !== d && (s.className = d + " " + s.className), s.extend = c.extend;
    }
    var t = s.postfixButtons;
    if (t)
      for (s.buttons || (s.buttons = []), C = 0, B = t.length; C < B; C++)
        s.buttons.push(t[C]);
    var o = s.prefixButtons;
    if (o)
      for (s.buttons || (s.buttons = []), C = 0, B = o.length; C < B; C++)
        s.buttons.splice(C, 0, o[C]);
    return s;
  },
  /**
   * Display (and replace if there is an existing one) a popover attached to a button
   * @param {string|node} content Content to show
   * @param {DataTable.Api} hostButton DT API instance of the button
   * @param {object} inOpts Options (see object below for all options)
   */
  _popover: function(s, g, x) {
    var C = g, B = this.c, O = !1, c = Ee.extend(
      {
        align: "button-left",
        // button-right, dt-container, split-left, split-right
        autoClose: !1,
        background: !0,
        backgroundClassName: "dt-button-background",
        closeButton: !0,
        containerClassName: B.dom.collection.container.className,
        contentClassName: B.dom.collection.container.content.className,
        collectionLayout: "",
        collectionTitle: "",
        dropup: !1,
        fade: 400,
        popoverTitle: "",
        rightAlignClassName: "dt-button-right",
        tag: B.dom.collection.container.tag
      },
      x
    ), d = c.tag + "." + c.containerClassName.replace(/ /g, "."), t = g.node(), o = function() {
      O = !0, V0(Ee(d), c.fade, function() {
        Ee(this).detach();
      }), Ee(
        C.buttons('[aria-haspopup="dialog"][aria-expanded="true"]').nodes()
      ).attr("aria-expanded", "false"), Ee("div.dt-button-background").off("click.dtb-collection"), en.background(
        !1,
        c.backgroundClassName,
        c.fade,
        t
      ), Ee(window).off("resize.resize.dtb-collection"), Ee("body").off(".dtb-collection"), C.off("buttons-action.b-internal"), C.off("destroy");
    };
    if (s === !1) {
      o();
      return;
    }
    var r = Ee(
      C.buttons('[aria-haspopup="dialog"][aria-expanded="true"]').nodes()
    );
    r.length && (t.closest(d).length && (t = r.eq(0)), o());
    var n = Ee(".dt-button", s).length, i = "";
    n === 3 ? i = "dtb-b3" : n === 2 ? i = "dtb-b2" : n === 1 && (i = "dtb-b1");
    var f = Ee("<" + c.tag + "/>").addClass(c.containerClassName).addClass(c.collectionLayout).addClass(c.splitAlignClass).addClass(i).css("display", "none").attr({
      "aria-modal": !0,
      role: "dialog"
    });
    s = Ee(s).addClass(c.contentClassName).attr("role", "menu").appendTo(f), t.attr("aria-expanded", "true"), t.parents("body")[0] !== document.body && (t = document.body.lastChild), c.popoverTitle ? f.prepend(
      '<div class="dt-button-collection-title">' + c.popoverTitle + "</div>"
    ) : c.collectionTitle && f.prepend(
      '<div class="dt-button-collection-title">' + c.collectionTitle + "</div>"
    ), c.closeButton && f.prepend('<div class="dtb-popover-close">&times;</div>').addClass("dtb-collection-closeable"), G0(f.insertAfter(t), c.fade);
    var l = Ee(g.table().container()), u = f.css("position");
    if ((c.span === "container" || c.align === "dt-container") && (t = t.parent(), f.css("width", l.width())), u === "absolute") {
      var h = Ee(t[0].offsetParent), a = t.position(), v = t.offset(), y = h.offset(), p = h.position(), e = window.getComputedStyle(h[0]);
      y.height = h.outerHeight(), y.width = h.width() + parseFloat(e.paddingLeft), y.right = y.left + y.width, y.bottom = y.top + y.height;
      var m = a.top + t.outerHeight(), w = a.left;
      f.css({
        top: m,
        left: w
      }), e = window.getComputedStyle(f[0]);
      var D = f.offset();
      D.height = f.outerHeight(), D.width = f.outerWidth(), D.right = D.left + D.width, D.bottom = D.top + D.height, D.marginTop = parseFloat(e.marginTop), D.marginBottom = parseFloat(e.marginBottom), c.dropup && (m = a.top - D.height - D.marginTop - D.marginBottom), (c.align === "button-right" || f.hasClass(c.rightAlignClassName)) && (w = a.left - D.width + t.outerWidth()), (c.align === "dt-container" || c.align === "container") && w < a.left && (w = -a.left), p.left + w + D.width > Ee(window).width() && (w = Ee(window).width() - D.width - p.left), v.left + w < 0 && (w = -v.left), p.top + m + D.height > Ee(window).height() + Ee(window).scrollTop() && (m = a.top - D.height - D.marginTop - D.marginBottom), p.top + m < Ee(window).scrollTop() && (m = a.top + t.outerHeight()), f.css({
        top: m,
        left: w
      });
    } else {
      var I = function() {
        var E = Ee(window).height() / 2, T = f.height() / 2;
        T > E && (T = E), f.css("marginTop", T * -1);
      };
      I(), Ee(window).on("resize.dtb-collection", function() {
        I();
      });
    }
    c.background && en.background(
      !0,
      c.backgroundClassName,
      c.fade,
      c.backgroundHost || t
    ), Ee("div.dt-button-background").on(
      "click.dtb-collection",
      function() {
      }
    ), c.autoClose && setTimeout(function() {
      C.on("buttons-action.b-internal", function(E, T, A, F) {
        F[0] !== t[0] && o();
      });
    }, 0), Ee(f).trigger("buttons-popover.dt"), C.on("destroy", o), setTimeout(function() {
      O = !1, Ee("body").on("click.dtb-collection", function(E) {
        if (!O) {
          var T = Ee.fn.addBack ? "addBack" : "andSelf", A = Ee(E.target).parent()[0];
          (!Ee(E.target).parents()[T]().filter(s).length && !Ee(A).hasClass("dt-buttons") || Ee(E.target).hasClass("dt-button-background")) && o();
        }
      }).on("keyup.dtb-collection", function(E) {
        E.keyCode === 27 && o();
      }).on("keydown.dtb-collection", function(E) {
        var T = Ee("a, button", s), A = document.activeElement;
        E.keyCode === 9 && (T.index(A) === -1 ? (T.first().focus(), E.preventDefault()) : E.shiftKey ? A === T[0] && (T.last().focus(), E.preventDefault()) : A === T.last()[0] && (T.first().focus(), E.preventDefault()));
      });
    }, 0);
  }
});
en.background = function(s, g, x, C) {
  x === void 0 && (x = 400), C || (C = document.body), s ? G0(
    Ee("<div/>").addClass(g).css("display", "none").insertAfter(C),
    x
  ) : V0(Ee("div." + g), x, function() {
    Ee(this).removeClass(g).remove();
  });
};
en.instanceSelector = function(s, g) {
  if (s == null)
    return Ee.map(g, function(O) {
      return O.inst;
    });
  var x = [], C = Ee.map(g, function(O) {
    return O.name;
  }), B = function(O) {
    if (Array.isArray(O)) {
      for (var c = 0, d = O.length; c < d; c++)
        B(O[c]);
      return;
    }
    if (typeof O == "string")
      if (O.indexOf(",") !== -1)
        B(O.split(","));
      else {
        var t = Ee.inArray(O.trim(), C);
        t !== -1 && x.push(g[t].inst);
      }
    else
      typeof O == "number" ? x.push(g[O].inst) : typeof O == "object" && x.push(O);
  };
  return B(s), x;
};
en.buttonSelector = function(s, g) {
  for (var x = [], C = function(t, o, r) {
    for (var n, i, f = 0, l = o.length; f < l; f++)
      n = o[f], n && (i = r !== void 0 ? r + f : f + "", t.push({
        node: n.node,
        name: n.conf.name,
        idx: i
      }), n.buttons && C(t, n.buttons, i + "-"));
  }, B = function(t, o) {
    var r, n, i = [];
    C(i, o.s.buttons);
    var f = Ee.map(i, function(v) {
      return v.node;
    });
    if (Array.isArray(t) || t instanceof Ee) {
      for (r = 0, n = t.length; r < n; r++)
        B(t[r], o);
      return;
    }
    if (t == null || t === "*")
      for (r = 0, n = i.length; r < n; r++)
        x.push({
          inst: o,
          node: i[r].node
        });
    else if (typeof t == "number")
      o.s.buttons[t] && x.push({
        inst: o,
        node: o.s.buttons[t].node
      });
    else if (typeof t == "string")
      if (t.indexOf(",") !== -1) {
        var l = t.split(",");
        for (r = 0, n = l.length; r < n; r++)
          B(l[r].trim(), o);
      } else if (t.match(/^\d+(\-\d+)*$/)) {
        var u = Ee.map(i, function(v) {
          return v.idx;
        });
        x.push({
          inst: o,
          node: i[Ee.inArray(t, u)].node
        });
      } else if (t.indexOf(":name") !== -1) {
        var h = t.replace(":name", "");
        for (r = 0, n = i.length; r < n; r++)
          i[r].name === h && x.push({
            inst: o,
            node: i[r].node
          });
      } else
        Ee(f).filter(t).each(function() {
          x.push({
            inst: o,
            node: this
          });
        });
    else if (typeof t == "object" && t.nodeName) {
      var a = Ee.inArray(t, f);
      a !== -1 && x.push({
        inst: o,
        node: f[a]
      });
    }
  }, O = 0, c = s.length; O < c; O++) {
    var d = s[O];
    B(g, d);
  }
  return x;
};
en.stripData = function(s, g) {
  return typeof s != "string" || (s = s.replace(
    /<script\b[^<]*(?:(?!<\/script>)<[^<]*)*<\/script>/gi,
    ""
  ), s = s.replace(/<!\-\-.*?\-\->/g, ""), (!g || g.stripHtml) && (s = s.replace(/<[^>]*>/g, "")), (!g || g.trim) && (s = s.replace(/^\s+|\s+$/g, "")), (!g || g.stripNewlines) && (s = s.replace(/\n/g, " ")), (!g || g.decodeEntities) && (x0 ? s = x0(s) : (ef.innerHTML = s, s = ef.value))), s;
};
en.entityDecoder = function(s) {
  x0 = s;
};
en.defaults = {
  buttons: ["copy", "excel", "csv", "pdf", "print"],
  name: "main",
  tabIndex: 0,
  dom: {
    container: {
      tag: "div",
      className: "dt-buttons"
    },
    collection: {
      action: {
        // action button
        dropHtml: '<span class="dt-button-down-arrow">&#x25BC;</span>'
      },
      container: {
        // The element used for the dropdown
        className: "dt-button-collection",
        content: {
          className: "",
          tag: "div"
        },
        tag: "div"
      }
      // optionally
      // , button: IButton - buttons inside the collection container
      // , split: ISplit - splits inside the collection container
    },
    button: {
      tag: "button",
      className: "dt-button",
      active: "dt-button-active",
      // class name
      disabled: "disabled",
      // class name
      spacer: {
        className: "dt-button-spacer",
        tag: "span"
      },
      liner: {
        tag: "span",
        className: ""
      }
    },
    split: {
      action: {
        // action button
        className: "dt-button-split-drop-button dt-button",
        tag: "button"
      },
      dropdown: {
        // button to trigger the dropdown
        align: "split-right",
        className: "dt-button-split-drop",
        dropHtml: '<span class="dt-button-down-arrow">&#x25BC;</span>',
        splitAlignClass: "dt-button-split-left",
        tag: "button"
      },
      wrapper: {
        // wrap around both
        className: "dt-button-split",
        tag: "div"
      }
    }
  }
};
en.version = "3.0.0";
Ee.extend(Vn, {
  collection: {
    text: function(s) {
      return s.i18n("buttons.collection", "Collection");
    },
    className: "buttons-collection",
    closeButton: !1,
    init: function(s, g) {
      g.attr("aria-expanded", !1);
    },
    action: function(s, g, x, C) {
      C._collection.parents("body").length ? this.popover(!1, C) : this.popover(C._collection, C), s.type === "keypress" && Ee("a, button", C._collection).eq(0).focus();
    },
    attr: {
      "aria-haspopup": "dialog"
    }
    // Also the popover options, defined in Buttons.popover
  },
  split: {
    text: function(s) {
      return s.i18n("buttons.split", "Split");
    },
    className: "buttons-split",
    closeButton: !1,
    init: function(s, g) {
      return g.attr("aria-expanded", !1);
    },
    action: function(s, g, x, C) {
      this.popover(C._collection, C);
    },
    attr: {
      "aria-haspopup": "dialog"
    }
    // Also the popover options, defined in Buttons.popover
  },
  copy: function() {
    if (Vn.copyHtml5)
      return "copyHtml5";
  },
  csv: function(s, g) {
    if (Vn.csvHtml5 && Vn.csvHtml5.available(s, g))
      return "csvHtml5";
  },
  excel: function(s, g) {
    if (Vn.excelHtml5 && Vn.excelHtml5.available(s, g))
      return "excelHtml5";
  },
  pdf: function(s, g) {
    if (Vn.pdfHtml5 && Vn.pdfHtml5.available(s, g))
      return "pdfHtml5";
  },
  pageLength: function(s) {
    var g = s.settings()[0].aLengthMenu, x = [], C = [], B = function(d) {
      return d.i18n(
        "buttons.pageLength",
        {
          "-1": "Show all rows",
          _: "Show %d rows"
        },
        d.page.len()
      );
    };
    if (Array.isArray(g[0]))
      x = g[0], C = g[1];
    else
      for (var O = 0; O < g.length; O++) {
        var c = g[O];
        Ee.isPlainObject(c) ? (x.push(c.value), C.push(c.label)) : (x.push(c), C.push(c));
      }
    return {
      extend: "collection",
      text: B,
      className: "buttons-page-length",
      autoClose: !0,
      buttons: Ee.map(x, function(d, t) {
        return {
          text: C[t],
          className: "button-page-length",
          action: function(o, r) {
            r.page.len(d).draw();
          },
          init: function(o, r, n) {
            var i = this, f = function() {
              i.active(o.page.len() === d);
            };
            o.on("length.dt" + n.namespace, f), f();
          },
          destroy: function(o, r, n) {
            o.off("length.dt" + n.namespace);
          }
        };
      }),
      init: function(d, t, o) {
        var r = this;
        d.on("length.dt" + o.namespace, function() {
          r.text(o.text);
        });
      },
      destroy: function(d, t, o) {
        d.off("length.dt" + o.namespace);
      }
    };
  },
  spacer: {
    style: "empty",
    spacer: !0,
    text: function(s) {
      return s.i18n("buttons.spacer", "");
    }
  }
});
ge.Api.register("buttons()", function(s, g) {
  g === void 0 && (g = s, s = void 0), this.selector.buttonGroup = s;
  var x = this.iterator(
    !0,
    "table",
    function(C) {
      if (C._buttons)
        return en.buttonSelector(
          en.instanceSelector(s, C._buttons),
          g
        );
    },
    !0
  );
  return x._groupSelector = s, x;
});
ge.Api.register("button()", function(s, g) {
  var x = this.buttons(s, g);
  return x.length > 1 && x.splice(1, x.length), x;
});
ge.Api.registerPlural(
  "buttons().active()",
  "button().active()",
  function(s) {
    return s === void 0 ? this.map(function(g) {
      return g.inst.active(g.node);
    }) : this.each(function(g) {
      g.inst.active(g.node, s);
    });
  }
);
ge.Api.registerPlural(
  "buttons().action()",
  "button().action()",
  function(s) {
    return s === void 0 ? this.map(function(g) {
      return g.inst.action(g.node);
    }) : this.each(function(g) {
      g.inst.action(g.node, s);
    });
  }
);
ge.Api.registerPlural(
  "buttons().collectionRebuild()",
  "button().collectionRebuild()",
  function(s) {
    return this.each(function(g) {
      for (var x = 0; x < s.length; x++)
        typeof s[x] == "object" && (s[x].parentConf = g);
      g.inst.collectionRebuild(g.node, s);
    });
  }
);
ge.Api.register(
  ["buttons().enable()", "button().enable()"],
  function(s) {
    return this.each(function(g) {
      g.inst.enable(g.node, s);
    });
  }
);
ge.Api.register(
  ["buttons().disable()", "button().disable()"],
  function() {
    return this.each(function(s) {
      s.inst.disable(s.node);
    });
  }
);
ge.Api.register("button().index()", function() {
  var s = null;
  return this.each(function(g) {
    var x = g.inst.index(g.node);
    x !== null && (s = x);
  }), s;
});
ge.Api.registerPlural(
  "buttons().nodes()",
  "button().node()",
  function() {
    var s = Ee();
    return Ee(
      this.each(function(g) {
        s = s.add(g.inst.node(g.node));
      })
    ), s;
  }
);
ge.Api.registerPlural(
  "buttons().processing()",
  "button().processing()",
  function(s) {
    return s === void 0 ? this.map(function(g) {
      return g.inst.processing(g.node);
    }) : this.each(function(g) {
      g.inst.processing(g.node, s);
    });
  }
);
ge.Api.registerPlural(
  "buttons().text()",
  "button().text()",
  function(s) {
    return s === void 0 ? this.map(function(g) {
      return g.inst.text(g.node);
    }) : this.each(function(g) {
      g.inst.text(g.node, s);
    });
  }
);
ge.Api.registerPlural(
  "buttons().trigger()",
  "button().trigger()",
  function() {
    return this.each(function(s) {
      s.inst.node(s.node).trigger("click");
    });
  }
);
ge.Api.register("button().popover()", function(s, g) {
  return this.map(function(x) {
    return x.inst._popover(s, this.button(this[0].node), g);
  });
});
ge.Api.register("buttons().containers()", function() {
  var s = Ee(), g = this._groupSelector;
  return this.iterator(!0, "table", function(x) {
    if (x._buttons)
      for (var C = en.instanceSelector(g, x._buttons), B = 0, O = C.length; B < O; B++)
        s = s.add(C[B].container());
  }), s;
});
ge.Api.register("buttons().container()", function() {
  return this.containers().eq(0);
});
ge.Api.register("button().add()", function(s, g, x) {
  var C = this.context;
  if (C.length) {
    var B = en.instanceSelector(
      this._groupSelector,
      C[0]._buttons
    );
    B.length && B[0].add(g, s, x);
  }
  return this.button(this._groupSelector, s);
});
ge.Api.register("buttons().destroy()", function() {
  return this.pluck("inst").unique().each(function(s) {
    s.destroy();
  }), this;
});
ge.Api.registerPlural(
  "buttons().remove()",
  "buttons().remove()",
  function() {
    return this.each(function(s) {
      s.inst.remove(s.node);
    }), this;
  }
);
var ki;
ge.Api.register("buttons.info()", function(s, g, x) {
  var C = this;
  return s === !1 ? (this.off("destroy.btn-info"), V0(Ee("#datatables_buttons_info"), 400, function() {
    Ee(this).remove();
  }), clearTimeout(ki), ki = null, this) : (ki && clearTimeout(ki), Ee("#datatables_buttons_info").length && Ee("#datatables_buttons_info").remove(), s = s ? "<h2>" + s + "</h2>" : "", G0(
    Ee('<div id="datatables_buttons_info" class="dt-button-info"/>').html(s).append(
      Ee("<div/>")[typeof g == "string" ? "html" : "append"](
        g
      )
    ).css("display", "none").appendTo("body")
  ), x !== void 0 && x !== 0 && (ki = setTimeout(function() {
    C.buttons.info(!1);
  }, x)), this.on("destroy.btn-info", function() {
    C.buttons.info(!1);
  }), this);
});
ge.Api.register("buttons.exportData()", function(s) {
  if (this.context.length)
    return Ld(new ge.Api(this.context[0]), s);
});
ge.Api.register("buttons.exportInfo()", function(s) {
  return s || (s = {}), {
    filename: Bd(s, this),
    title: Rd(s, this),
    messageTop: tf(this, s, s.message || s.messageTop, "top"),
    messageBottom: tf(this, s, s.messageBottom, "bottom")
  };
});
var Bd = function(s, g) {
  var x = s.filename === "*" && s.title !== "*" && s.title !== void 0 && s.title !== null && s.title !== "" ? s.title : s.filename;
  if (typeof x == "function" && (x = x(s, g)), x == null)
    return null;
  x.indexOf("*") !== -1 && (x = x.replace("*", Ee("head > title").text()).trim()), x = x.replace(/[^a-zA-Z0-9_\u00A1-\uFFFF\.,\-_ !\(\)]/g, "");
  var C = X0(s.extension, s, g);
  return C || (C = ""), x + C;
}, X0 = function(s, g, x) {
  return s == null ? null : typeof s == "function" ? s(g, x) : s;
}, Rd = function(s, g) {
  var x = X0(s.title, s, g);
  return x === null ? null : x.indexOf("*") !== -1 ? x.replace("*", Ee("head > title").text() || "Exported data") : x;
}, tf = function(s, g, x, C) {
  var B = X0(x, g, s);
  if (B === null)
    return null;
  var O = Ee("caption", s.table().container()).eq(0);
  if (B === "*") {
    var c = O.css("caption-side");
    return c !== C ? null : O.length ? O.text() : "";
  }
  return B;
}, ef = Ee("<textarea/>")[0], Ld = function(s, g) {
  var x = Ee.extend(
    !0,
    {},
    {
      rows: null,
      columns: "",
      modifier: {
        search: "applied",
        order: "applied"
      },
      orthogonal: "display",
      stripHtml: !0,
      stripNewlines: !0,
      decodeEntities: !0,
      trim: !0,
      format: {
        header: function(p) {
          return en.stripData(p, x);
        },
        footer: function(p) {
          return en.stripData(p, x);
        },
        body: function(p) {
          return en.stripData(p, x);
        }
      },
      customizeData: null
    },
    g
  ), C = s.columns(x.columns).indexes().map(function(p) {
    var e = s.column(p);
    return x.format.header(e.title(), p, e.header());
  }).toArray(), B = s.table().footer() ? s.columns(x.columns).indexes().map(function(p) {
    var e = s.column(p).footer();
    return x.format.footer(
      e ? Ee(".dt-column-title", e).html() : "",
      p,
      e
    );
  }).toArray() : null, O = Ee.extend({}, x.modifier);
  s.select && typeof s.select.info == "function" && O.selected === void 0 && s.rows(x.rows, Ee.extend({ selected: !0 }, O)).any() && Ee.extend(O, { selected: !0 });
  for (var c = s.rows(x.rows, O).indexes().toArray(), d = s.cells(c, x.columns, {
    order: O.order
  }), t = d.render(x.orthogonal).toArray(), o = d.nodes().toArray(), r = d.indexes().toArray(), n = C.length, i = n > 0 ? t.length / n : 0, f = [], l = 0, u = 0, h = i; u < h; u++) {
    for (var a = [n], v = 0; v < n; v++)
      a[v] = x.format.body(
        t[l],
        r[u + v].row,
        r[u + v].column,
        o[l]
      ), l++;
    f[u] = a;
  }
  var y = {
    header: C,
    headerStructure: s.table().header.structure(x.columns),
    footer: B,
    footerStructure: s.table().footer.structure(x.columns),
    body: f
  };
  return x.customizeData && x.customizeData(y), y;
};
Ee.fn.dataTable.Buttons = en;
Ee.fn.DataTable.Buttons = en;
Ee(document).on("init.dt plugin-init.dt", function(s, g) {
  if (s.namespace === "dt") {
    var x = g.oInit.buttons || ge.defaults.buttons;
    x && !g._buttons && new en(g, x).container();
  }
});
function Mf(s, g) {
  var x = new ge.Api(s), C = g || x.init().buttons || ge.defaults.buttons;
  return new en(x, C).container();
}
ge.ext.feature.push({
  fnInit: Mf,
  cFeature: "B"
});
ge.feature && ge.feature.register("buttons", Mf);
/*!
 * Column visibility buttons for Buttons and DataTables.
 * Â© SpryMedia Ltd - datatables.net/license
 */
let Nd = Va;
Nd.extend(ge.ext.buttons, {
  // A collection of column visibility buttons
  colvis: function(s, g) {
    var x = null, C = {
      extend: "collection",
      init: function(B, O) {
        x = O;
      },
      text: function(B) {
        return B.i18n("buttons.colvis", "Column visibility");
      },
      className: "buttons-colvis",
      closeButton: !1,
      buttons: [
        {
          extend: "columnsToggle",
          columns: g.columns,
          columnText: g.columnText
        }
      ]
    };
    return s.on("column-reorder.dt" + g.namespace, function() {
      s.button(null, s.button(null, x).node()).collectionRebuild([
        {
          extend: "columnsToggle",
          columns: g.columns,
          columnText: g.columnText
        }
      ]);
    }), C;
  },
  // Selected columns with individual buttons - toggle column visibility
  columnsToggle: function(s, g) {
    var x = s.columns(g.columns).indexes().map(function(C) {
      return {
        extend: "columnToggle",
        columns: C,
        columnText: g.columnText
      };
    }).toArray();
    return x;
  },
  // Single button to toggle column visibility
  columnToggle: function(s, g) {
    return {
      extend: "columnVisibility",
      columns: g.columns,
      columnText: g.columnText
    };
  },
  // Selected columns with individual buttons - set column visibility
  columnsVisibility: function(s, g) {
    var x = s.columns(g.columns).indexes().map(function(C) {
      return {
        extend: "columnVisibility",
        columns: C,
        visibility: g.visibility,
        columnText: g.columnText
      };
    }).toArray();
    return x;
  },
  // Single button to set column visibility
  columnVisibility: {
    columns: void 0,
    // column selector
    text: function(s, g, x) {
      return x._columnText(s, x);
    },
    className: "buttons-columnVisibility",
    action: function(s, g, x, C) {
      var B = g.columns(C.columns), O = B.visible();
      B.visible(
        C.visibility !== void 0 ? C.visibility : !(O.length && O[0])
      );
    },
    init: function(s, g, x) {
      var C = this;
      g.attr("data-cv-idx", x.columns), s.on("column-visibility.dt" + x.namespace, function(B, O) {
        !O.bDestroying && O.nTable == s.settings()[0].nTable && C.active(s.column(x.columns).visible());
      }).on("column-reorder.dt" + x.namespace, function() {
        x.destroying || s.columns(x.columns).count() === 1 && (C.text(x._columnText(s, x)), C.active(s.column(x.columns).visible()));
      }), this.active(s.column(x.columns).visible());
    },
    destroy: function(s, g, x) {
      s.off("column-visibility.dt" + x.namespace).off(
        "column-reorder.dt" + x.namespace
      );
    },
    _columnText: function(s, g) {
      if (typeof g.text == "string")
        return g.text;
      var x = s.column(g.columns).index(), C = s.settings()[0].aoColumns[x].sTitle;
      return C || (C = s.column(x).header().innerHTML), C = C.replace(/\n/g, " ").replace(/<br\s*\/?>/gi, " ").replace(/<select(.*?)<\/select>/g, "").replace(/<!\-\-.*?\-\->/g, "").replace(/<.*?>/g, "").replace(/^\s+|\s+$/g, ""), g.columnText ? g.columnText(s, x, C) : C;
    }
  },
  colvisRestore: {
    className: "buttons-colvisRestore",
    text: function(s) {
      return s.i18n("buttons.colvisRestore", "Restore visibility");
    },
    init: function(s, g, x) {
      s.columns().every(function() {
        var C = this.init();
        C.__visOriginal === void 0 && (C.__visOriginal = this.visible());
      });
    },
    action: function(s, g, x, C) {
      g.columns().every(function(B) {
        var O = this.init();
        this.visible(O.__visOriginal);
      });
    }
  },
  colvisGroup: {
    className: "buttons-colvisGroup",
    action: function(s, g, x, C) {
      g.columns(C.show).visible(!0, !1), g.columns(C.hide).visible(!1, !1), g.columns.adjust();
    },
    show: [],
    hide: []
  }
});
/*!
 * HTML5 export buttons for Buttons and DataTables.
 * Â© SpryMedia Ltd - datatables.net/license
 *
 * FileSaver.js (1.3.3) - MIT license
 * Copyright Â© 2016 Eli Grey - http://eligrey.com
 */
let pn = Va;
var kf, Uf;
function b0() {
  return kf || window.JSZip;
}
function w0() {
  return Uf || window.pdfMake;
}
ge.Buttons.pdfMake = function(s) {
  if (!s)
    return w0();
  Uf = s;
};
ge.Buttons.jszip = function(s) {
  if (!s)
    return b0();
  kf = s;
};
var Bo = function(s) {
  if (!(typeof s > "u" || typeof navigator < "u" && /MSIE [1-9]\./.test(navigator.userAgent))) {
    var g = s.document, x = function() {
      return s.URL || s.webkitURL || s;
    }, C = g.createElementNS("http://www.w3.org/1999/xhtml", "a"), B = "download" in C, O = function(a) {
      var v = new MouseEvent("click");
      a.dispatchEvent(v);
    }, c = /constructor/i.test(s.HTMLElement) || s.safari, d = /CriOS\/[\d]+/.test(navigator.userAgent), t = function(a) {
      (s.setImmediate || s.setTimeout)(function() {
        throw a;
      }, 0);
    }, o = "application/octet-stream", r = 1e3 * 40, n = function(a) {
      var v = function() {
        typeof a == "string" ? x().revokeObjectURL(a) : a.remove();
      };
      setTimeout(v, r);
    }, i = function(a, v, y) {
      v = [].concat(v);
      for (var p = v.length; p--; ) {
        var e = a["on" + v[p]];
        if (typeof e == "function")
          try {
            e.call(a, y || a);
          } catch (m) {
            t(m);
          }
      }
    }, f = function(a) {
      return /^\s*(?:text\/\S*|application\/xml|\S*\/\S*\+xml)\s*;.*charset\s*=\s*utf-8/i.test(
        a.type
      ) ? new Blob([String.fromCharCode(65279), a], {
        type: a.type
      }) : a;
    }, l = function(a, v, y) {
      y || (a = f(a));
      var p = this, e = a.type, m = e === o, w, D = function() {
        i(
          p,
          "writestart progress write writeend".split(" ")
        );
      }, I = function() {
        if ((d || m && c) && s.FileReader) {
          var E = new FileReader();
          E.onloadend = function() {
            var A = d ? E.result : E.result.replace(
              /^data:[^;]*;/,
              "data:attachment/file;"
            ), F = s.open(A, "_blank");
            F || (s.location.href = A), A = void 0, p.readyState = p.DONE, D();
          }, E.readAsDataURL(a), p.readyState = p.INIT;
          return;
        }
        if (w || (w = x().createObjectURL(a)), m)
          s.location.href = w;
        else {
          var T = s.open(w, "_blank");
          T || (s.location.href = w);
        }
        p.readyState = p.DONE, D(), n(w);
      };
      if (p.readyState = p.INIT, B) {
        w = x().createObjectURL(a), setTimeout(function() {
          C.href = w, C.download = v, O(C), D(), n(w), p.readyState = p.DONE;
        });
        return;
      }
      I();
    }, u = l.prototype, h = function(a, v, y) {
      return new l(
        a,
        v || a.name || "download",
        y
      );
    };
    return typeof navigator < "u" && navigator.msSaveOrOpenBlob ? function(a, v, y) {
      return v = v || a.name || "download", y || (a = f(a)), navigator.msSaveOrOpenBlob(a, v);
    } : (u.abort = function() {
    }, u.readyState = u.INIT = 0, u.WRITING = 1, u.DONE = 2, u.error = u.onwritestart = u.onprogress = u.onwrite = u.onabort = u.onerror = u.onwriteend = null, h);
  }
}(
  typeof self < "u" && self || typeof window < "u" && window || globalThis.content
);
ge.fileSave = Bo;
var rf = function(s) {
  var g = "Sheet1";
  return s.sheetName && (g = s.sheetName.replace(/[\[\]\*\/\\\?\:]/g, "")), g;
}, zf = function(s) {
  return s.newline ? s.newline : navigator.userAgent.match(/Windows/) ? `\r
` : `
`;
}, Wf = function(s, g) {
  var x = zf(g), C = s.buttons.exportData(g.exportOptions), B = g.fieldBoundary, O = g.fieldSeparator, c = new RegExp(B, "g"), d = g.escapeChar !== void 0 ? g.escapeChar : "\\", t = function(l) {
    for (var u = "", h = 0, a = l.length; h < a; h++)
      h > 0 && (u += O), u += B ? B + ("" + l[h]).replace(c, d + B) + B : l[h];
    return u;
  }, o = "", r = "", n = [];
  g.header && (o = C.headerStructure.map(function(l) {
    return t(
      l.map(function(u) {
        return u ? u.title : "";
      })
    );
  }).join(x) + x), g.footer && C.footer && (r = C.footerStructure.map(function(l) {
    return t(
      l.map(function(u) {
        return u ? u.title : "";
      })
    );
  }).join(x) + x);
  for (var i = 0, f = C.body.length; i < f; i++)
    n.push(t(C.body[i]));
  return {
    str: o + n.join(x) + r,
    rows: n.length
  };
}, Hf = function() {
  var s = navigator.userAgent.indexOf("Safari") !== -1 && navigator.userAgent.indexOf("Chrome") === -1 && navigator.userAgent.indexOf("Opera") === -1;
  if (!s)
    return !1;
  var g = navigator.userAgent.match(/AppleWebKit\/(\d+\.\d+)/);
  return !!(g && g.length > 1 && g[1] * 1 < 603.1);
};
function Hi(s) {
  for (var g = "A".charCodeAt(0), x = "Z".charCodeAt(0), C = x - g + 1, B = ""; s >= 0; )
    B = String.fromCharCode(s % C + g) + B, s = Math.floor(s / C) - 1;
  return B;
}
try {
  var S0 = new XMLSerializer(), Ao;
} catch {
}
function jf(s, g) {
  Ao === void 0 && (Ao = S0.serializeToString(
    new window.DOMParser().parseFromString(
      Gf["xl/worksheets/sheet1.xml"],
      "text/xml"
    )
  ).indexOf("xmlns:r") === -1), pn.each(g, function(x, C) {
    if (pn.isPlainObject(C)) {
      var B = s.folder(x);
      jf(B, C);
    } else {
      if (Ao) {
        var O = C.childNodes[0], c, d, t = [];
        for (c = O.attributes.length - 1; c >= 0; c--) {
          var o = O.attributes[c].nodeName, r = O.attributes[c].nodeValue;
          o.indexOf(":") !== -1 && (t.push({ name: o, value: r }), O.removeAttribute(o));
        }
        for (c = 0, d = t.length; c < d; c++) {
          var n = C.createAttribute(
            t[c].name.replace(":", "_dt_b_namespace_token_")
          );
          n.value = t[c].value, O.setAttributeNode(n);
        }
      }
      var i = S0.serializeToString(C);
      Ao && (i.indexOf("<?xml") === -1 && (i = '<?xml version="1.0" encoding="UTF-8" standalone="yes"?>' + i), i = i.replace(/_dt_b_namespace_token_/g, ":"), i = i.replace(/xmlns:NS[\d]+="" NS[\d]+:/g, "")), i = i.replace(/<([^<>]*?) xmlns=""([^<>]*?)>/g, "<$1 $2>"), s.file(x, i);
    }
  });
}
function Gn(s, g, x) {
  var C = s.createElement(g);
  return x && (x.attr && pn(C).attr(x.attr), x.children && pn.each(x.children, function(B, O) {
    C.appendChild(O);
  }), x.text !== null && x.text !== void 0 && C.appendChild(s.createTextNode(x.text))), C;
}
function Md(s, g) {
  var x = s.header[g].length, C, B, O;
  s.footer && s.footer[g].length > x && (x = s.footer[g].length);
  for (var c = 0, d = s.body.length; c < d; c++) {
    var t = s.body[c][g];
    if (O = t != null ? t.toString() : "", O.indexOf(`
`) !== -1 ? (B = O.split(`
`), B.sort(function(o, r) {
      return r.length - o.length;
    }), C = B[0].length) : C = O.length, C > x && (x = C), x > 40)
      return 54;
  }
  return x *= 1.35, x > 6 ? x : 6;
}
var Gf = {
  "_rels/.rels": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument" Target="xl/workbook.xml"/></Relationships>',
  "xl/_rels/workbook.xml.rels": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Relationships xmlns="http://schemas.openxmlformats.org/package/2006/relationships"><Relationship Id="rId1" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/worksheet" Target="worksheets/sheet1.xml"/><Relationship Id="rId2" Type="http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles" Target="styles.xml"/></Relationships>',
  "[Content_Types].xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><Types xmlns="http://schemas.openxmlformats.org/package/2006/content-types"><Default Extension="xml" ContentType="application/xml" /><Default Extension="rels" ContentType="application/vnd.openxmlformats-package.relationships+xml" /><Default Extension="jpeg" ContentType="image/jpeg" /><Override PartName="/xl/workbook.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.sheet.main+xml" /><Override PartName="/xl/worksheets/sheet1.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.worksheet+xml" /><Override PartName="/xl/styles.xml" ContentType="application/vnd.openxmlformats-officedocument.spreadsheetml.styles+xml" /></Types>',
  "xl/workbook.xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><workbook xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships"><fileVersion appName="xl" lastEdited="5" lowestEdited="5" rupBuild="24816"/><workbookPr showInkAnnotation="0" autoCompressPictures="0"/><bookViews><workbookView xWindow="0" yWindow="0" windowWidth="25600" windowHeight="19020" tabRatio="500"/></bookViews><sheets><sheet name="Sheet1" sheetId="1" r:id="rId1"/></sheets><definedNames/></workbook>',
  "xl/worksheets/sheet1.xml": '<?xml version="1.0" encoding="UTF-8" standalone="yes"?><worksheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:r="http://schemas.openxmlformats.org/officeDocument/2006/relationships" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><sheetData/><mergeCells count="0"/></worksheet>',
  "xl/styles.xml": '<?xml version="1.0" encoding="UTF-8"?><styleSheet xmlns="http://schemas.openxmlformats.org/spreadsheetml/2006/main" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="x14ac" xmlns:x14ac="http://schemas.microsoft.com/office/spreadsheetml/2009/9/ac"><numFmts count="6"><numFmt numFmtId="164" formatCode="[$$-409]#,##0.00;-[$$-409]#,##0.00"/><numFmt numFmtId="165" formatCode="&quot;Â£&quot;#,##0.00"/><numFmt numFmtId="166" formatCode="[$â¬-2] #,##0.00"/><numFmt numFmtId="167" formatCode="0.0%"/><numFmt numFmtId="168" formatCode="#,##0;(#,##0)"/><numFmt numFmtId="169" formatCode="#,##0.00;(#,##0.00)"/></numFmts><fonts count="5" x14ac:knownFonts="1"><font><sz val="11" /><name val="Calibri" /></font><font><sz val="11" /><name val="Calibri" /><color rgb="FFFFFFFF" /></font><font><sz val="11" /><name val="Calibri" /><b /></font><font><sz val="11" /><name val="Calibri" /><i /></font><font><sz val="11" /><name val="Calibri" /><u /></font></fonts><fills count="6"><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="none" /></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD9D9D9" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="FFD99795" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6efce" /><bgColor indexed="64" /></patternFill></fill><fill><patternFill patternType="solid"><fgColor rgb="ffc6cfef" /><bgColor indexed="64" /></patternFill></fill></fills><borders count="2"><border><left /><right /><top /><bottom /><diagonal /></border><border diagonalUp="false" diagonalDown="false"><left style="thin"><color auto="1" /></left><right style="thin"><color auto="1" /></right><top style="thin"><color auto="1" /></top><bottom style="thin"><color auto="1" /></bottom><diagonal /></border></borders><cellStyleXfs count="1"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" /></cellStyleXfs><cellXfs count="68"><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="0" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="0" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="2" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="3" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="4" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="1" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="2" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="3" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="4" fillId="5" borderId="1" applyFont="1" applyFill="1" applyBorder="1"/><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="left"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="center"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="right"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment horizontal="fill"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment textRotation="90"/></xf><xf numFmtId="0" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyAlignment="1"><alignment wrapText="1"/></xf><xf numFmtId="9"   fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="164" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="165" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="166" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="167" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="168" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="169" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="3" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="4" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="1" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="2" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/><xf numFmtId="14" fontId="0" fillId="0" borderId="0" applyFont="1" applyFill="1" applyBorder="1" xfId="0" applyNumberFormat="1"/></cellXfs><cellStyles count="1"><cellStyle name="Normal" xfId="0" builtinId="0" /></cellStyles><dxfs count="0" /><tableStyles count="0" defaultTableStyle="TableStyleMedium9" defaultPivotStyle="PivotStyleMedium4" /></styleSheet>'
}, nf = [
  {
    match: /^\-?\d+\.\d%$/,
    style: 60,
    fmt: function(s) {
      return s / 100;
    }
  },
  // Percent with d.p.
  {
    match: /^\-?\d+\.?\d*%$/,
    style: 56,
    fmt: function(s) {
      return s / 100;
    }
  },
  // Percent
  { match: /^\-?\$[\d,]+.?\d*$/, style: 57 },
  // Dollars
  { match: /^\-?Â£[\d,]+.?\d*$/, style: 58 },
  // Pounds
  { match: /^\-?â¬[\d,]+.?\d*$/, style: 59 },
  // Euros
  { match: /^\-?\d+$/, style: 65 },
  // Numbers without thousand separators
  { match: /^\-?\d+\.\d{2}$/, style: 66 },
  // Numbers 2 d.p. without thousands separators
  {
    match: /^\([\d,]+\)$/,
    style: 61,
    fmt: function(s) {
      return -1 * s.replace(/[\(\)]/g, "");
    }
  },
  // Negative numbers indicated by brackets
  {
    match: /^\([\d,]+\.\d{2}\)$/,
    style: 62,
    fmt: function(s) {
      return -1 * s.replace(/[\(\)]/g, "");
    }
  },
  // Negative numbers indicated by brackets - 2d.p.
  { match: /^\-?[\d,]+$/, style: 63 },
  // Numbers with thousand separators
  { match: /^\-?[\d,]+\.\d{2}$/, style: 64 },
  {
    match: /^[\d]{4}\-[01][\d]\-[0123][\d]$/,
    style: 67,
    fmt: function(s) {
      return Math.round(25569 + Date.parse(s) / (86400 * 1e3));
    }
  }
  //Date yyyy-mm-dd
], Co = function(s, g, x, C, B) {
  var O = pn("mergeCells", s);
  O[0].appendChild(
    Gn(s, "mergeCell", {
      attr: {
        ref: Hi(x) + g + ":" + Hi(x + B - 1) + (g + C - 1)
      }
    })
  ), O.attr("count", parseFloat(O.attr("count")) + 1);
};
ge.ext.buttons.copyHtml5 = {
  className: "buttons-copy buttons-html5",
  text: function(s) {
    return s.i18n("buttons.copy", "Copy");
  },
  action: function(s, g, x, C, B) {
    var O = Wf(g, C), c = g.buttons.exportInfo(C), d = zf(C), t = O.str, o = pn("<div/>").css({
      height: 1,
      width: 1,
      overflow: "hidden",
      position: "fixed",
      top: 0,
      left: 0
    });
    c.title && (t = c.title + d + d + t), c.messageTop && (t = c.messageTop + d + d + t), c.messageBottom && (t = t + d + d + c.messageBottom), C.customize && (t = C.customize(t, C, g));
    var r = pn("<textarea readonly/>").val(t).appendTo(o);
    if (document.queryCommandSupported("copy")) {
      o.appendTo(g.table().container()), r[0].focus(), r[0].select();
      try {
        var n = document.execCommand("copy");
        if (o.remove(), n) {
          g.buttons.info(
            g.i18n("buttons.copyTitle", "Copy to clipboard"),
            g.i18n(
              "buttons.copySuccess",
              {
                1: "Copied one row to clipboard",
                _: "Copied %d rows to clipboard"
              },
              O.rows
            ),
            2e3
          ), B();
          return;
        }
      } catch {
      }
    }
    var i = pn(
      "<span>" + g.i18n(
        "buttons.copyKeys",
        "Press <i>ctrl</i> or <i>â</i> + <i>C</i> to copy the table data<br>to your system clipboard.<br><br>To cancel, click this message or press escape."
      ) + "</span>"
    ).append(o);
    g.buttons.info(
      g.i18n("buttons.copyTitle", "Copy to clipboard"),
      i,
      0
    ), r[0].focus(), r[0].select();
    var f = pn(i).closest(".dt-button-info"), l = function() {
      f.off("click.buttons-copy"), pn(document).off(".buttons-copy"), g.buttons.info(!1);
    };
    f.on("click.buttons-copy", l), pn(document).on("keydown.buttons-copy", function(u) {
      u.keyCode === 27 && (l(), B());
    }).on("copy.buttons-copy cut.buttons-copy", function() {
      l(), B();
    });
  },
  async: 100,
  exportOptions: {},
  fieldSeparator: "	",
  fieldBoundary: "",
  header: !0,
  footer: !1,
  title: "*",
  messageTop: "*",
  messageBottom: "*"
};
ge.ext.buttons.csvHtml5 = {
  bom: !1,
  className: "buttons-csv buttons-html5",
  available: function() {
    return window.FileReader !== void 0 && window.Blob;
  },
  text: function(s) {
    return s.i18n("buttons.csv", "CSV");
  },
  action: function(s, g, x, C, B) {
    var O = Wf(g, C).str, c = g.buttons.exportInfo(C), d = C.charset;
    C.customize && (O = C.customize(O, C, g)), d !== !1 ? (d || (d = document.characterSet || document.charset), d && (d = ";charset=" + d)) : d = "", C.bom && (O = String.fromCharCode(65279) + O), Bo(
      new Blob([O], { type: "text/csv" + d }),
      c.filename,
      !0
    ), B();
  },
  async: 100,
  filename: "*",
  extension: ".csv",
  exportOptions: {},
  fieldSeparator: ",",
  fieldBoundary: '"',
  escapeChar: '"',
  charset: null,
  header: !0,
  footer: !1
};
ge.ext.buttons.excelHtml5 = {
  className: "buttons-excel buttons-html5",
  available: function() {
    return window.FileReader !== void 0 && b0() !== void 0 && !Hf() && S0;
  },
  text: function(s) {
    return s.i18n("buttons.excel", "Excel");
  },
  action: function(s, g, x, C, B) {
    var O = 0, c, d, t = function(A) {
      var F = Gf[A];
      return pn.parseXML(F);
    }, o = t("xl/worksheets/sheet1.xml"), r = o.getElementsByTagName("sheetData")[0], n = {
      _rels: {
        ".rels": t("_rels/.rels")
      },
      xl: {
        _rels: {
          "workbook.xml.rels": t("xl/_rels/workbook.xml.rels")
        },
        "workbook.xml": t("xl/workbook.xml"),
        "styles.xml": t("xl/styles.xml"),
        worksheets: {
          "sheet1.xml": o
        }
      },
      "[Content_Types].xml": t("[Content_Types].xml")
    }, i = g.buttons.exportData(C.exportOptions), f, l, u = function(A) {
      f = O + 1, l = Gn(o, "row", { attr: { r: f } });
      for (var F = 0, b = A.length; F < b; F++) {
        var R = Hi(F) + "" + f, N = null;
        if (A[F] === null || A[F] === void 0 || A[F] === "")
          if (C.createEmptyCells === !0)
            A[F] = "";
          else
            continue;
        var U = A[F];
        A[F] = typeof A[F].trim == "function" ? A[F].trim() : A[F];
        for (var W = 0, J = nf.length; W < J; W++) {
          var ht = nf[W];
          if (A[F].match && !A[F].match(/^0\d+/) && A[F].match(ht.match)) {
            var K = A[F].replace(/[^\d\.\-]/g, "");
            ht.fmt && (K = ht.fmt(K)), N = Gn(o, "c", {
              attr: {
                r: R,
                s: ht.style
              },
              children: [Gn(o, "v", { text: K })]
            });
            break;
          }
        }
        if (!N)
          if (typeof A[F] == "number" || A[F].match && A[F].match(/^-?\d+(\.\d+)?([eE]\-?\d+)?$/) && // Includes exponential format
          !A[F].match(/^0\d+/))
            N = Gn(o, "c", {
              attr: {
                t: "n",
                r: R
              },
              children: [Gn(o, "v", { text: A[F] })]
            });
          else {
            var nt = U.replace ? U.replace(
              /[\x00-\x09\x0B\x0C\x0E-\x1F\x7F-\x9F]/g,
              ""
            ) : U;
            N = Gn(o, "c", {
              attr: {
                t: "inlineStr",
                r: R
              },
              children: {
                row: Gn(o, "is", {
                  children: {
                    row: Gn(o, "t", {
                      text: nt,
                      attr: {
                        "xml:space": "preserve"
                      }
                    })
                  }
                })
              }
            });
          }
        l.appendChild(N);
      }
      r.appendChild(l), O++;
    }, h = function(A) {
      A.forEach(function(F) {
        u(
          F.map(function(b) {
            return b ? b.title : "";
          })
        ), pn("row:last c", o).attr("s", "2"), F.forEach(function(b, R) {
          b && (b.colSpan > 1 || b.rowSpan > 1) && Co(
            o,
            O,
            R,
            b.rowSpan,
            b.colSpan
          );
        });
      });
    };
    C.customizeData && C.customizeData(i);
    var a = g.buttons.exportInfo(C);
    a.title && (u([a.title]), Co(o, O, 0, 1, i.header.length), pn("row:last c", o).attr("s", "51")), a.messageTop && (u([a.messageTop]), Co(o, O, 0, 1, i.header.length)), C.header && h(i.headerStructure), c = O;
    for (var v = 0, y = i.body.length; v < y; v++)
      u(i.body[v]);
    d = O, C.footer && i.footer && h(i.footerStructure), a.messageBottom && (u([a.messageBottom]), Co(o, O, 0, 1, i.header.length));
    var p = Gn(o, "cols");
    pn("worksheet", o).prepend(p);
    for (var e = 0, m = i.header.length; e < m; e++)
      p.appendChild(
        Gn(o, "col", {
          attr: {
            min: e + 1,
            max: e + 1,
            width: Md(i, e),
            customWidth: 1
          }
        })
      );
    var w = n.xl["workbook.xml"];
    pn("sheets sheet", w).attr("name", rf(C)), C.autoFilter && (pn("mergeCells", o).before(
      Gn(o, "autoFilter", {
        attr: {
          ref: "A" + c + ":" + Hi(i.header.length - 1) + d
        }
      })
    ), pn("definedNames", w).append(
      Gn(w, "definedName", {
        attr: {
          name: "_xlnm._FilterDatabase",
          localSheetId: "0",
          hidden: 1
        },
        text: rf(C) + "!$A$" + c + ":" + Hi(i.header.length - 1) + d
      })
    )), C.customize && C.customize(n, C, g), pn("mergeCells", o).children().length === 0 && pn("mergeCells", o).remove();
    var D = b0(), I = new D(), E = {
      compression: "DEFLATE",
      type: "blob",
      mimeType: "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
    };
    jf(I, n);
    var T = a.filename;
    T > 175 && (T = T.substr(0, 175)), I.generateAsync ? I.generateAsync(E).then(function(A) {
      Bo(A, T), B();
    }) : (Bo(I.generate(E), T), B());
  },
  async: 100,
  filename: "*",
  extension: ".xlsx",
  exportOptions: {},
  header: !0,
  footer: !0,
  title: "*",
  messageTop: "*",
  messageBottom: "*",
  createEmptyCells: !1,
  autoFilter: !1,
  sheetName: ""
};
ge.ext.buttons.pdfHtml5 = {
  className: "buttons-pdf buttons-html5",
  available: function() {
    return window.FileReader !== void 0 && w0();
  },
  text: function(s) {
    return s.i18n("buttons.pdf", "PDF");
  },
  action: function(s, g, x, C, B) {
    var O = g.buttons.exportData(C.exportOptions), c = g.buttons.exportInfo(C), d = [];
    C.header && O.headerStructure.forEach(function(i) {
      d.push(
        i.map(function(f) {
          return f ? {
            text: f.title,
            colSpan: f.colspan,
            rowSpan: f.rowspan,
            style: "tableHeader"
          } : {};
        })
      );
    });
    for (var t = 0, o = O.body.length; t < o; t++)
      d.push(
        O.body[t].map(function(i) {
          return {
            text: i == null ? "" : typeof i == "string" ? i : i.toString()
          };
        })
      );
    C.footer && O.footerStructure.forEach(function(i) {
      d.push(
        i.map(function(f) {
          return f ? {
            text: f.title,
            colSpan: f.colspan,
            rowSpan: f.rowspan,
            style: "tableHeader"
          } : {};
        })
      );
    });
    var r = {
      pageSize: C.pageSize,
      pageOrientation: C.orientation,
      content: [
        {
          style: "table",
          table: {
            headerRows: O.headerStructure.length,
            footerRows: O.footerStructure.length,
            // Used for styling, doesn't do anything in pdfmake
            body: d
          },
          layout: {
            hLineWidth: function(i, f) {
              return i === 0 || i === f.table.body.length ? 0 : 0.5;
            },
            vLineWidth: function() {
              return 0;
            },
            hLineColor: function(i, f) {
              return i === f.table.headerRows || i === f.table.body.length - f.table.footerRows ? "#333" : "#ddd";
            },
            fillColor: function(i) {
              return i < O.headerStructure.length ? "#fff" : i % 2 === 0 ? "#f3f3f3" : null;
            },
            paddingTop: function() {
              return 5;
            },
            paddingBottom: function() {
              return 5;
            }
          }
        }
      ],
      styles: {
        tableHeader: {
          bold: !0,
          fontSize: 11,
          alignment: "center"
        },
        tableFooter: {
          bold: !0,
          fontSize: 11
        },
        table: {
          margin: [0, 5, 0, 5]
        },
        title: {
          alignment: "center",
          fontSize: 13
        },
        message: {}
      },
      defaultStyle: {
        fontSize: 10
      }
    };
    c.messageTop && r.content.unshift({
      text: c.messageTop,
      style: "message",
      margin: [0, 0, 0, 12]
    }), c.messageBottom && r.content.push({
      text: c.messageBottom,
      style: "message",
      margin: [0, 0, 0, 12]
    }), c.title && r.content.unshift({
      text: c.title,
      style: "title",
      margin: [0, 0, 0, 12]
    }), C.customize && C.customize(r, C, g);
    var n = w0().createPdf(r);
    C.download === "open" && !Hf() ? n.open() : n.download(c.filename), B();
  },
  async: 100,
  title: "*",
  filename: "*",
  extension: ".pdf",
  exportOptions: {},
  orientation: "portrait",
  // This isn't perfect, but it is close
  pageSize: navigator.language === "en-US" || navigator.language === "en-CA" ? "LETTER" : "A4",
  header: !0,
  footer: !0,
  messageTop: "*",
  messageBottom: "*",
  customize: null,
  download: "download"
};
/*!
 * Print button for Buttons and DataTables.
 * Â© SpryMedia Ltd - datatables.net/license
 */
let ii = Va;
var ni = document.createElement("a"), kd = function(s) {
  var g = ii(s).clone()[0];
  return g.nodeName.toLowerCase() === "link" && (g.href = Vf(g.href)), g.outerHTML;
}, Vf = function(s) {
  ni.href = s;
  var g = ni.host;
  return g.indexOf("/") === -1 && ni.pathname.indexOf("/") !== 0 && (g += "/"), ni.protocol + "//" + g + ni.pathname + ni.search;
};
ge.ext.buttons.print = {
  className: "buttons-print",
  text: function(s) {
    return s.i18n("buttons.print", "Print");
  },
  action: function(s, g, x, C, B) {
    var O = g.buttons.exportData(
      ii.extend({ decodeEntities: !1 }, C.exportOptions)
      // XSS protection
    ), c = g.buttons.exportInfo(C), d = g.columns(C.exportOptions.columns).nodes().map(function(a) {
      return a.className;
    }).toArray(), t = function(a, v) {
      for (var y = "<tr>", p = 0, e = a.length; p < e; p++) {
        var m = a[p] === null || a[p] === void 0 ? "" : a[p], w = d[p] ? 'class="' + d[p] + '"' : "";
        y += "<" + v + " " + w + ">" + m + "</" + v + ">";
      }
      return y + "</tr>";
    }, o = '<table class="' + g.table().node().className + '">';
    if (C.header) {
      var r = O.headerStructure.map(function(a) {
        return "<tr>" + a.map(function(v) {
          return v ? '<th colspan="' + v.colspan + '" rowspan="' + v.rowspan + '">' + v.title + "</th>" : "";
        }).join("") + "</tr>";
      });
      o += "<thead>" + r.join("") + "</thead>";
    }
    o += "<tbody>";
    for (var n = 0, i = O.body.length; n < i; n++)
      o += t(O.body[n], "td");
    if (o += "</tbody>", C.footer && O.footer) {
      var f = O.footerStructure.map(function(a) {
        return "<tr>" + a.map(function(v) {
          return v ? '<th colspan="' + v.colspan + '" rowspan="' + v.rowspan + '">' + v.title + "</th>" : "";
        }).join("") + "</tr>";
      });
      o += "<tfoot>" + f.join("") + "</tfoot>";
    }
    o += "</table>";
    var l = window.open("", "");
    if (!l) {
      g.buttons.info(
        g.i18n("buttons.printErrorTitle", "Unable to open print view"),
        g.i18n(
          "buttons.printErrorMsg",
          "Please allow popups in your browser for this site to be able to view the print view."
        ),
        5e3
      );
      return;
    }
    l.document.close();
    var u = "<title>" + c.title + "</title>";
    ii("style, link").each(function() {
      u += kd(this);
    });
    try {
      l.document.head.innerHTML = u;
    } catch {
      ii(l.document.head).html(u);
    }
    l.document.body.innerHTML = "<h1>" + c.title + "</h1><div>" + (c.messageTop || "") + "</div>" + o + "<div>" + (c.messageBottom || "") + "</div>", ii(l.document.body).addClass("dt-print-view"), ii("img", l.document.body).each(function(a, v) {
      v.setAttribute("src", Vf(v.getAttribute("src")));
    }), C.customize && C.customize(l, C, g);
    var h = function() {
      C.autoPrint && (l.print(), l.close());
    };
    l.setTimeout(h, 1e3), B();
  },
  async: 100,
  title: "*",
  messageTop: "*",
  messageBottom: "*",
  exportOptions: {},
  header: !0,
  footer: !1,
  autoPrint: !0,
  customize: null
};
class af extends Error {
  constructor(g) {
    super(`Configuration Error : ${g}`), this.name = "ConfigError", this.stack = new Error().stack;
  }
}
class Ud {
  instance;
  constructor() {
  }
  initEvent = (g) => new CustomEvent("datatable:init", {
    detail: g
  });
  validateConfig(g) {
    if (!g)
      throw new af("Object not found");
    if (!g.data && !g.lxConfig?.url)
      throw new af("You must provide data source or an URL");
    if (g.lxConfig && g.lxConfig.row_action) {
      if (!g.lxConfig.row_action.width)
        throw new Error("Param width is missing from row_action");
      if (!g.lxConfig.row_action.actions)
        throw new Error("Param actions is missing from row_action");
      if (!Array.isArray(g.lxConfig.row_action.actions))
        throw new TypeError("Param actions must be of type Array");
    }
    return g;
  }
  _splitConfig(g) {
    let x = null, C = null;
    return "lxConfig" in g && (x = g.lxConfig, delete g.lxConfig), C = g, { standardConfig: C, lxConfig: x };
  }
}
var Wi = /* @__PURE__ */ ((s) => (s.NONE = "NONE", s))(Wi || {});
class zd {
  config;
  headersGroup;
  cols;
  constructor(g) {
    this.config = g, this.headersGroup = [], this.cols = [];
  }
  setColsDef(g) {
    return this.config = g, this;
  }
  generate() {
    return !this.config || !this.config?.headers ? this : (this.headersGroup = this.generateHeadersGroup(this.config.headers), this);
  }
  generateHeadersGroup(g) {
    const x = /* @__PURE__ */ new Set();
    return g.map((C) => {
      C.headerGroup && x.add(C.headerGroup), C.columns.forEach((B) => this.cols.push(B));
    }), Array.from(x);
  }
  groupByHeadersGroup = (g) => {
    const x = {};
    for (let C = 0; C < g.length; C++) {
      const B = g[C], O = B.headerGroup ?? `NONE_${C}`;
      x[O] = B.columns;
    }
    return x;
  };
  getColumns = () => this.cols;
  getGroupHeaders = () => this.headersGroup;
  getConfig = () => this.config;
}
class Wd {
  #t;
  #e = [];
  constructor(g) {
    this.#t = g;
  }
  get value() {
    return this.#t;
  }
  set value(g) {
    this.#t = g;
  }
  getState(g) {
    return g != null ? this.#t[g] : this.#t;
  }
  setState(g) {
    return g instanceof Function ? this.#t = g(this.#t) : this.#t = g, this.#e.forEach((x) => x(this.#t)), this.#t;
  }
  subscribe(g) {
    return this.#e.push(g), () => {
      this.#e = this.#e.filter((x) => x !== g);
    };
  }
}
class Xf extends Error {
  constructor(g) {
    super(`Data Acquisition Error : ${g}`), this.name = "DaoError", this.stack = new Error().stack;
  }
}
class Hd {
  state;
  constructor() {
    this.state = new Wd({
      loading: !1,
      error: null,
      data: null
    });
  }
  async fetchData(g) {
    if (!g)
      throw new Xf("you must provide data or an URL");
    this.state.setState((x) => (x.loading = !1, x));
    try {
      if (!g)
        throw new Error("Error : Url is not defined");
      const x = await fetch(g);
      if (x.ok) {
        const C = await x.json();
        this.state.setState((B) => (B.data = C, B));
      } else
        this.state.setState((C) => (C.error = new Error(
          `Error during fetch => Status : ${x.status}`
        ), C));
    } catch (x) {
      process.env.NODE_ENV !== "test" && console.error(x), this.state.setState((C) => (C.error = x, C));
    } finally {
      return this.state.setState((C) => (C.loading = !1, C)), this.state.getState();
    }
  }
}
class jd {
  getDataFormatted(g, x) {
    return g.map((C) => {
      const B = {};
      return x.forEach((O) => {
        C[O.name] && (B[O.name] = C[O.name]);
      }), B;
    }).filter((C) => Object.keys(C).length > 0);
  }
}
class d0 {
  #t;
  constructor(g) {
    this.#t = g;
  }
  get colsDef() {
    return this.#t;
  }
  setColsDef(g) {
    return this.#t = g, this;
  }
  /**
   * @description set default value from columnsDefaultKey config key
   */
  static setDefaultKeyValue(g = null, x) {
    return g && x.forEach((C) => {
      Object.entries(g).map(([B, O]) => {
        B in C || (C[B] = O);
      });
    }), x;
  }
  static mergeColumns(g, x) {
    const C = {};
    for (let B = 0; B < g.length; B++) {
      const O = g[B];
      C[O.name] = O;
    }
    for (let B = 0; B < x.length; B++) {
      const O = x[B];
      C[O.name] ? C[O.name] = {
        ...C[O.name],
        ...O
      } : C[O.name] = O;
    }
    return Object.values(C);
  }
}
class Z0 {
  $element(g, {
    classList: x,
    attributes: C,
    content: B,
    children: O,
    html: c,
    style: d,
    onClick: t,
    onChange: o
  }) {
    const r = document.createElement(g);
    if (x && x.forEach((n) => r.classList.add(n)), B && (r.textContent = B), O && r.append(...O), c && (r.innerHTML = c), d)
      for (const [n, i] of Object.entries(d))
        r.style[n] = String(i);
    return C && Object.entries(C).forEach(([n, i]) => {
      typeof i == "boolean" ? r.toggleAttribute(n, i) : r.setAttribute(n, i);
    }), t && t.forEach((n) => n), o && o.forEach((n) => n), r;
  }
}
class Gd extends Error {
  constructor(g) {
    super(`DOM Error : ${g}`), this.name = "DomError", this.stack = new Error().stack;
  }
}
class Vd extends Z0 {
  tableRef;
  headerRef = null;
  config;
  headers;
  MAIN_HEADER_ID = "main_header";
  GROUP_HEADER_ID = "group_header";
  constructor(g, { headers: x, config: C }) {
    super(), this.tableRef = g, this.headers = x, this.config = C, this.appendTableHeader(), this.getHeaderElement();
  }
  appendTableHeader = () => this.tableRef?.append(this.$element("thead", {}));
  getHeaderElement = () => (this.headerRef = this.tableRef?.querySelector("thead") ?? null, this.headerRef);
  $headerWrapper = (g, x, C) => this.$element("tr", {
    attributes: { class: x, id: g },
    children: C
  });
  async build() {
    if (!this.headerRef)
      throw new Gd("Cannot select the dom header ref");
    if (!this.headers.getConfig())
      return this.headerRef;
    const g = this.headers.groupByHeadersGroup(
      this.config.headers ?? []
    );
    if (!Object.keys(g).length)
      return this.headerRef;
    if (Object.keys(g).length === 1 && Object.keys(g).some((x) => x.startsWith(Wi.NONE))) {
      const x = this.$mainRowHeader(g), C = this.$headerWrapper(
        this.MAIN_HEADER_ID,
        "main_header",
        x
      );
      this.headerRef?.append(C);
    } else {
      const [x, C] = await Promise.all([
        this.$groupHeaders(g),
        this.$mainHeader(g)
      ]), B = this.$headerWrapper(
        this.GROUP_HEADER_ID,
        "group_header",
        x
      ), O = this.$headerWrapper(
        this.MAIN_HEADER_ID,
        "main_header",
        C
      );
      this.headerRef?.append(B, O);
    }
    return this.headerRef;
  }
  /**
   * Build main headers columns
   */
  async $mainHeader(g) {
    const x = [];
    for (const [C, B] of Object.entries(g))
      if (!C.startsWith(Wi.NONE))
        for (let O = 0; O < B.length; O++)
          x.push(
            this.$element("th", {
              classList: ["colspan-border"],
              attributes: {
                rowspan: "1",
                colspan: "1"
              },
              content: B[O].title,
              style: B[O].style
            })
          );
    return x;
  }
  $mainRowHeader(g) {
    const x = [];
    for (const [C, B] of Object.entries(g))
      for (let O = 0; O < B.length; O++)
        C.startsWith(Wi.NONE) && x.push(
          this.$element("th", {
            classList: ["colspan-border"],
            attributes: {
              rowspan: "1",
              colspan: "1"
            },
            content: B[O].title,
            style: B[O].style
          })
        );
    return x;
  }
  /**
   * Build Group headers
   */
  async $groupHeaders(g) {
    const x = [];
    for (const [C, B] of Object.entries(g))
      if (!C.startsWith(Wi.NONE))
        x.push(
          this.$element("th", {
            classList: ["colspan-border"],
            attributes: {
              rowspan: "1",
              colspan: String(B.length)
            },
            content: C
          })
        );
      else
        for (let O = 0; O < B.length; O++)
          x.push(
            this.$element("th", {
              classList: ["colspan-border"],
              attributes: {
                rowspan: "2",
                colspan: "1"
              },
              content: B[O].title,
              style: B[O].style
            })
          );
    return x;
  }
}
class Xd {
  transformers;
  constructor() {
    this.transformers = [];
  }
  /**
   * Add transformer to the data submitted
   */
  add = (g) => this.transformers.push(g);
  /**
   * Execute each transformer
   */
  exec = (g) => (this.transformers.forEach((x) => {
    g = x(g);
  }), g);
}
class ai extends Error {
  constructor(g) {
    super(`Action plugin Error : ${g}`), this.name = "ActionError", this.stack = new Error().stack;
  }
}
class Zd extends Z0 {
  constructor() {
    super();
  }
  $actionButton({
    name: g,
    label: x,
    iconTitle: C,
    icon: B,
    style: O,
    effect: c
  }) {
    const d = {
      padding: "4px"
    };
    let t;
    return C && (t = this.$element("i", {
      classList: ["fa", C]
    })), B && (t = B.cloneNode(!0)), this.$element("button", {
      classList: ["btn"],
      children: [t],
      attributes: {
        name: g,
        "aria-label": x ?? g
      },
      style: { ...d, ...O },
      onClick: Array.isArray(c) ? c : [c]
    });
  }
  defineDefaultCellStyle(g) {
    g.style.display = "flex", g.style.justifyContent = "center", g.style.alignItems = "center", g.style.gap = "6px";
  }
}
class Yd {
  static async fetchUrl(g) {
    try {
      return await (await fetch(g)).json();
    } catch (x) {
      throw x;
    }
  }
}
class Kd {
  customActions;
  constructor(g, x) {
    this.customActions = [
      {
        name: "SURVEA_EDIT",
        effect: async (C) => {
          if (!g.url)
            throw new Error("URL is not defined");
          try {
            const B = x(g.url, C), O = await Yd.fetchUrl(B);
            O.url || window.open(O.url, g.blank ? "_blank" : "_self");
          } catch (B) {
            throw B;
          }
        }
      }
    ];
  }
  retrieve = () => this.customActions;
}
class Jd {
  actions;
  customActions;
  #t;
  #e;
  #r;
  #n;
  constructor({ width: g, className: x, actions: C }) {
    this.actions = [], this.#t = g, this.#r = x, this.#e = C, this.#n = new Zd();
  }
  async generateColDefConfig() {
    return {
      data: null,
      defaultContent: "",
      targets: -1,
      width: this.#t,
      createdCell: async (g, x) => {
        for (const C of this.#e)
          if (C.effect)
            this.#a(g, x, C);
          else if (C.customAction) {
            if (!C.url || C.url === "")
              throw new Error("Cannnot open URL, URL is missing");
            new Kd(C, this.parseUrlString.bind(this)).retrieve().map((B) => {
              B.name === C.customAction && (C.effect = B.effect, this.#a(
                g,
                x,
                C
              ));
            });
          } else
            C.effect = (B) => {
              if (!C.url || C.url === "")
                throw new Error("Cannnot open URL, URL is missing");
              const O = this.parseUrlString(C.url, B);
              window.open(O, C.blank ? "_blank" : "_self");
            }, this.#a(g, x, C);
      }
    };
  }
  #a(g, x, C) {
    const B = this.#n.$actionButton(C);
    B.addEventListener("click", async () => {
      try {
        await C.effect(x), C.onComplete && C.onComplete(x);
      } catch (O) {
        C.onError && C.onError(O, x);
      }
    }), this.#n.defineDefaultCellStyle(g), this.#r && g.classList.add(this.#r), g.appendChild(B);
  }
  _getUrlParams(g) {
    const x = Array.from(g.matchAll(/\{(.+?)\}/g)), C = Array.from(x).filter((B) => B[1] !== "}{").map((B) => B[1]);
    return Array.from(new Set(C));
  }
  parseUrlString(g, x) {
    const C = this._getUrlParams(g);
    return C.length && C.forEach((B) => {
      g.includes(`{${B}}`) && x[B] && (g = g.replaceAll(`{${B}}`, x[B]));
    }), g;
  }
  /**
   * @throws ActionError if an error occured
   */
  validateConfig() {
    return this.#e.map((g) => {
      if (!g.icon && !g.iconTitle)
        throw new ai("You must provide an icon name or an icon title");
      if (g.icon && !(g.icon instanceof HTMLElement))
        throw new ai("Icon must be of type HTMLElement");
      if (!g.name)
        throw new ai("Name is not set");
      if (!g.effect && !g.url)
        throw new ai("You must provide an URL or an Effect function");
      if (g.url && g.url === "")
        throw new ai("Invalid URL");
      if (g.effect && !(g.effect instanceof Function))
        throw new ai("Effect must be a function");
    }), this;
  }
}
class Qd {
  getDefaults() {
    return [
      "copyHtml5",
      "excelHtml5",
      "csvHtml5",
      {
        text: "JSON",
        action: function(g, x) {
          var C = x.buttons.exportData({ orthogonal: "export_json" });
          Va.fn.dataTable.fileSave(
            new Blob([JSON.stringify(C)]),
            "Exported_data.json"
          );
        }
      },
      "colvis"
    ];
  }
  parse(g) {
    return Array.isArray(g) && g.forEach((x) => {
    }), g;
  }
}
class $d extends Z0 {
  #t;
  constructor(g) {
    super(), this.#t = g;
  }
  generate(g, x, C) {
    const B = this.$headerGroup();
    for (let O = 0; O < g; O++) {
      const c = this.$filterInputs(), d = this.$filterIcon(), t = this.$element("div", {
        style: {
          position: "relative",
          width: "100%"
        },
        children: [c, d]
      });
      c.dataset.index = String(O), c.addEventListener("keyup", C.bind(x));
      const o = this.$element("th", {
        children: [t]
      });
      B.appendChild(o);
    }
    return this.#t.appendChild(B), this.#t;
  }
  $headerGroup() {
    return this.$element("tr", {
      classList: ["header_search"]
    });
  }
  $filterInputs() {
    return this.$element("input", {
      classList: ["colum_search"],
      style: {
        height: "22px",
        padding: "0 8px",
        lineHeight: " 20px",
        fontStyle: "italic",
        textAlign: "left",
        fontWeight: " normal",
        color: " #999",
        width: "100%",
        position: "relative",
        borderRadius: "3px",
        paddingRight: "18px"
      }
    });
  }
  $filterIcon() {
    return this.$element("i", {
      classList: ["fa", "fa-search"],
      style: {
        position: "absolute",
        top: "6px",
        right: "5px"
      }
    });
  }
}
class qd {
  #t;
  #e;
  #r;
  constructor(g, x) {
    this.#e = this.#n(g), this.#r = x;
  }
  #n(g) {
    let x = 0;
    return g.columns && (x += g.columns.length), g.lxConfig && g.lxConfig.headers && g.lxConfig.headers.forEach((C) => {
      x += C.columns.length;
    }), x;
  }
  init(g) {
    if (g) {
      if (!this.#r)
        throw new Error("Instance is not defined");
      return this.#t = new $d(g), this.#t.generate(
        this.#e,
        this.#r,
        this._filterEvent
      );
    }
  }
  _filterEvent(g) {
    const x = g.target;
    this.column(x.dataset.index).search(x.value).draw();
  }
}
window.JSZip = Id;
class t1 extends Ud {
  config;
  _ref;
  refElement;
  dao;
  dto;
  tranformer;
  #t;
  #e;
  #r;
  #n;
  constructor(g, x) {
    super(), this._ref = g, this.refElement = document.querySelector(g), this.config = x, this.dao = new Hd(), this.dto = new jd(), this.tranformer = new Xd();
  }
  /**
   * Get the default datatable config if not set
   */
  setDefaults(g) {
    return !g.dom && !g.layout && (g.dom = '<"top"Bf>rt<"bottom"lip><"clear">'), g.scrollX || (g.scrollX = g.scrollX ?? !0), g.fixedHeader || (g.fixedHeader = g.fixedHeader ?? !0), g.paging || (g.paging = g.paging ?? !0), g.lxConfig && (g.lxConfig.filters = g.lxConfig.filters ?? !0, g.lxConfig.handleBootrapTabChange = g.lxConfig.handleBootrapTabChange ?? !0), g;
  }
  /**
   * Main function of datatable
   *
   * Instantiating the lx datatable
   * Generate cols, create dom content etc...
   */
  async init() {
    try {
      this.config = this.validateConfig(this.config);
    } catch (O) {
      return console.error(O.message), this;
    }
    this.setDefaults(this.config);
    let g = [], x = [];
    if (!this.refElement)
      throw new DOMException("Error: element selected doesn't exist");
    const { standardConfig: C, lxConfig: B } = this._splitConfig(this.config);
    if (this.#t = new d0(), this.#e = new zd(), this.#r = new Qd(), C && (g = this.#t.setColsDef(C.columns).colsDef ?? []), B) {
      const O = this.#e.setColsDef(B).generate();
      x = O.getColumns();
      const c = new Vd(this.refElement, {
        headers: O,
        config: B
      });
      if (this.#n = await c.build(), !this.config.data)
        try {
          const { data: d, error: t } = await this.dao.fetchData(B.url);
          if (t)
            throw new Xf(t.message);
          this.config.data = d ?? [];
        } catch (d) {
          return console.error(d.message), this;
        }
    }
    if (this.config.columns = d0.setDefaultKeyValue(
      this.#e.getConfig()?.columnsDefaultKey,
      x
    ), this.config.columns = d0.mergeColumns(
      g,
      x
    ), !this.config.data)
      throw new Error("Error : no data provided");
    if (this.config.data = this.tranformer.exec(this.config.data), B?.row_action && B.row_action.actions.length) {
      const O = new Jd(B.row_action);
      try {
        const c = await O.validateConfig().generateColDefConfig();
        this.config.columnDefs ? this.config.columnDefs = [...this.config.columnDefs, c] : this.config.columnDefs = Array(c);
      } catch (c) {
        console.error(c.message);
      }
    }
    return this.config.buttons || (this.config.buttons = this.#r.getDefaults()), this.#r.parse(this.config.buttons), window.lxConfig = this.config, this.instance = new ge(`${this._ref}`, this.config), this.refElement.dispatchEvent(this.initEvent(this.instance)), B && B.handleBootrapTabChange && this.handleBootrapTabChange(this.instance), B && B.filters && (this.#n = new qd(this.config, this.instance).init(
      this.#n
    )), this;
  }
  __filterDataWithKey() {
  }
  handleBootrapTabChange(g) {
    document.querySelectorAll('button[data-bs-toggle="tab"]').forEach((x) => {
      x.addEventListener("shown.bs.tab", () => {
        g.draw();
      });
    });
  }
}
export {
  t1 as default
};
